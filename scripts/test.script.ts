import { ethers } from "ethers";

import FCTData from "../fct.json";
import { BatchMultiSigCall } from "../src";
import { transactionValidator } from "../src/utils";

const createRandomAddress = () => ethers.Wallet.createRandom().address;

const calldata =
  "0x9b2542b3010201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003fd3bbbd05a244a83a9c8f54fcd118fa803dda20e338ed4f21f5b931411de3656adbb6828f8b207d3265f8415b9e8ec81b2e10083f5565000102010000000000000064d2accf0064c8c61100000000000000002cf41ad051fb56ed68686fda16fde3f9e4e51449a430e0b95f72636251d16683d7c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000007400000000000000000000000000000000000000000000000000000000000000760000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000007a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000200273b5eeaae46b88572bb918232608afd70d4635b8d5daac5e8f8071920855e7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470bf92857c73a4c8e4580e94407ab70cb653c22529713df135ee214365b3b90256000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100047d4a1100000000000000000000000055b32c0f71054ea1a14bbed1e1ae5e607ebbc4b10000000000000000000000007d2768de32b0b80b7a3454c06bdac94a69ddc7a90000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000007a16ff8270133f063aab6c9977183d9e72835428000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005236bf897f22146dca59ce9e6f6961f34a7820121b9fc9c03c7a4f17f2748de4c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470d4528dbded473986a3ab7543fa28ba2bc659694c18dd873597301fb3a517fa330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000020002000177ec1100000000000000000000000055b32c0f71054ea1a14bbed1e1ae5e607ebbc4b1000000000000000000000000421ac2a90550942abb532e06d1d4d5220c09577700000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000fd0000000000000000000000000000000005000100000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000360bb7ddd5494c93494333da0681571e2753f525cff3e9a1c8811b806e17a747f13c7cc5cfc065078d54c8ab318d976049d41e50616a20023b01b91e1c70feae2000000000000000000000000000000000000000000000000000000000000001cbdaf8e2c0b8d9b2e4a3ca4ceaa21a6f2b58a50635e531bb186ea69853c64b151681a26a873b67d84b7c4ae331b00e41827d0e0920873a18a21da3c5bdadad889000000000000000000000000000000000000000000000000000000000000001cf78a617cfc7cd40ebf8117881a5e19064f53dab4b8f24bd8db6cd770cefa528b441d536ad2980485486f3f07fbb232a1bc5be055f303da9caa261c46ac5ce9b4000000000000000000000000000000000000000000000000000000000000001b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

async function main() {
  const FCT = BatchMultiSigCall.from(FCTData);

  const notifFCT = FCT.exportNotificationFCT();
  console.log(JSON.stringify(notifFCT, null, 2));

  const callData = FCT.utils.getCalldataForActuator({
    signatures: FCTData.signatures,
    purgedFCT: ethers.constants.HashZero,
    investor: ethers.constants.AddressZero,
    activator: "0x3Fd3BbBD05a244a83A9C8F54FcD118fa803dda20",
  });
  const rpcUrl = "https://mainnet.infura.io/v3/e031fc56b4484a17a084a285326f319a";

  const valid = await transactionValidator({
    rpcUrl,
    callData,
    actuatorPrivateKey: "a3bdf9e20987deeebb7042d757caa4bfb37292b04736f509687d6d566c31665d",
    actuatorContractAddress: "0x1332e1A702DaC73523708F95827E6b706DAE5fD9",
    activateForFree: false,
    gasPrice: {
      maxFeePerGas: "20",
      maxPriorityFeePerGas: "20",
    },
  });

  console.log(valid);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exitCode = 1;
  });
