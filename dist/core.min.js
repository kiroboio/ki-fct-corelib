import{id as id$3,getCreate2Address as getCreate2Address$1,getAddress as getAddress$2,Interface as Interface$1,defaultAbiCoder as defaultAbiCoder$1,hexlify as hexlify$1}from"ethers/lib/utils";import IUniswapV3PoolJson from"@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json";import INonfungiblePositionManager from"@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json";import{config as config$1}from"dotenv";import IUniswapV2Router02Json from"@uniswap/v2-periphery/build/IUniswapV2Router02.json";import BigDecimal from"js-big-decimal";import JSBI from"jsbi";import{v4}from"uuid";import utils$2 from"web3-utils";import _Decimal from"decimal.js-light";import toFormat from"toformat";import"isomorphic-unfetch";import{SushiswapPair,SushiswapPairSettings,WETH}from"simple-sushiswap-sdk";import"setimmediate";import{Trade,Protocol,ZERO as ZERO$3,MixedRouteSDK,SwapRouter as SwapRouter$1,partitionMixedRouteByProtocol,encodeMixedRouteToPath}from"@uniswap/router-sdk";import ISwapRouter from"@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json";import _,{sample}from"lodash";import uniqid from"uniqid";import aes from"aes-js";import scrypt from"scrypt-js";import{TypedDataUtils,signTypedData,SignTypedDataVersion,recoverTypedSignature}from"@metamask/eth-sig-util";import{Graph}from"graphlib";import NodeCache from"node-cache";import _Big from"big.js";import sha3 from"js-sha3";import BN$1 from"bn.js";import axios from"axios";import hash$2 from"hash.js";import IMulticall from"@uniswap/v3-periphery/artifacts/contracts/interfaces/IMulticall.sol/IMulticall.json";import ISelfPermit from"@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json";import IPeripheryPaymentsWithFee from"@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryPaymentsWithFee.sol/IPeripheryPaymentsWithFee.json";import IQuoter from"@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json";import IQuoterV2 from"@uniswap/swap-router-contracts/artifacts/contracts/lens/QuoterV2.sol/QuoterV2.json";import IUniswapV3Staker from"@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json";import bech32 from"bech32";import DEFAULT_TOKEN_LIST from"@uniswap/default-token-list";import retry from"async-retry";import brotli from"brotli";import{SwapRouter,UNIVERSAL_ROUTER_ADDRESS}from"@uniswap/universal-router-sdk";import{estimateL1Gas,estimateL1GasCost}from"@eth-optimism/sdk";import"ethers/lib/ethers";import stats from"stats-lite";import"http";import"https";import Timeout from"await-timeout";import"graphql-request";import FixedReverseHeap from"mnemonist/fixed-reverse-heap";import Queue from"mnemonist/queue";var cometList=[{chainId:1,address:"0xc3d688B66703497DAA19211EEdff47f25384cdc3",name:"Compound USDC",symbol:"cUSDCv3",decimals:6},{chainId:5,address:"0x3EE77595A8459e93C2888b13aDB354017B198188",name:"Compound USDC",symbol:"cUSDCv3",decimals:6},{chainId:42161,address:"0xA5EDBDD9646f8dFF606d7448e414884C7d905dCA",name:"Compound USDC",symbol:"cUSDCv3",decimals:6},{chainId:421613,address:"0x1d573274E19174260c5aCE3f2251598959d24456",name:"Compound USDC",symbol:"cUSDCv3",decimals:6}];var SUSHISWAP_ROUTER_ADDRESS={1:"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F",5:"0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",42161:"0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",421613:"0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",11155111:""};var ROUTER_ADDRESSES=[{address:SUSHISWAP_ROUTER_ADDRESS["1"],chainId:1},{address:SUSHISWAP_ROUTER_ADDRESS["5"],chainId:5},{address:SUSHISWAP_ROUTER_ADDRESS["42161"],chainId:42161},{address:SUSHISWAP_ROUTER_ADDRESS["421613"],chainId:421613},{address:SUSHISWAP_ROUTER_ADDRESS["11155111"],chainId:11155111}];var ROUTER_V2="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D";var ROUTER_V2_ADDRESS={1:ROUTER_V2,5:ROUTER_V2,42161:ROUTER_V2,421613:ROUTER_V2,11155111:"0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008"};var ROUTER_V2_ADDRESSES=[{address:ROUTER_V2,chainId:1},{address:ROUTER_V2,chainId:5},{address:ROUTER_V2,chainId:42161},{address:ROUTER_V2,chainId:421613},{address:"0xC532a74256D3Db42D0Bf7a0400fEFDbad7694008",chainId:11155111}];var aaveGoerliErc20=[{chainId:"5",address:"0x65E2fe35C30eC218b46266F89847c63c2eDa7Dc7",symbol:"USDT",decimals:6,name:"USDT",index:15,logoURI:"https://assets.coingecko.com/coins/images/325/thumb/Tether-logo.png?1598003707"},{chainId:"5",address:"0xCCa7d1416518D095E729904aAeA087dBA749A4dC",symbol:"WETH",decimals:18,name:"Wrapped Ether",index:17,logoURI:"https://assets.coingecko.com/coins/images/2518/thumb/weth.png?1628852295"},{chainId:"5",address:"0xf4423F4152966eBb106261740da907662A3569C5",symbol:"WBTC",decimals:8,name:"WBTC",index:16,logoURI:"https://assets.coingecko.com/coins/images/7598/thumb/wrapped_bitcoin_wbtc.png?1548822744"},{chainId:"5",address:"0x6c260F702B6Bb9AC989DA4B0fcbE7fddF8f749c4",symbol:"YFI",decimals:18,name:"YFI",index:18,logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{chainId:"5",address:"0x515614aA3d8f09152b1289848383A260c7D053Ff",symbol:"BAT",decimals:18,name:"BAT",index:1,logoURI:"https://assets.coingecko.com/coins/images/677/thumb/basic-attention-token.png?1547034427"},{chainId:"5",address:"0x3160F3f3B55eF85d0D27f04A2d74d426c32de842",symbol:"REN",decimals:18,name:"REN",index:9,logoURI:"https://assets.coingecko.com/coins/images/3139/thumb/REN.png?1589985807"},{chainId:"5",address:"0xFc1Ab0379db4B6ad8Bf5Bc1382e108a341E2EaBb",symbol:"SNX",decimals:18,name:"SNX",index:10,logoURI:"https://assets.coingecko.com/coins/images/3406/thumb/SNX.png?1598631139"},{chainId:"5",address:"0x45E18E77b15A02a31507e948A546a509A50a2376",symbol:"xSUSHI",decimals:18,name:"xSUSHI",index:20},{chainId:"5",address:"0x4e62eB262948671590b8D967BDE048557bdd03eD",symbol:"SUSD",decimals:18,name:"SUSD",index:11,logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{chainId:"5",address:"0xc048C1b6ac47393F073dA2b3d5D1cc43b94891Fd",symbol:"TUSD",decimals:18,name:"TUSD",index:12,logoURI:"https://assets.coingecko.com/coins/images/3449/thumb/tusd.png?1618395665"},{chainId:"5",address:"0x1057DCaa0b66dFBcEc5241fD51F4326C210f201F",symbol:"ENJ",decimals:18,name:"ENJ",index:4,logoURI:"https://assets.coingecko.com/coins/images/1102/thumb/enjin-coin-logo.png?1547035078"},{chainId:"5",address:"0x75Ab5AB1Eef154C0352Fc31D2428Cef80C7F8B33",symbol:"DAI",decimals:18,name:"DAI",index:3,logoURI:"https://assets.coingecko.com/coins/images/9956/thumb/4943.png?1636636734"},{chainId:"5",address:"0x54Bc1D59873A5ABde98cf76B6EcF4075ff65d685",symbol:"KNC",decimals:18,name:"KNC",index:"5",logoURI:"https://assets.coingecko.com/coins/images/14899/thumb/RwdVsGcw_400x400.jpg?1618923851"},{chainId:"5",address:"0x9FD21bE27A2B059a288229361E2fA632D8D2d074",symbol:"USDC",decimals:6,name:"USDC",index:14,logoURI:"https://assets.coingecko.com/coins/images/6319/thumb/USD_Coin_icon.png?1547042389"},{chainId:"5",address:"0xAcFd03DdF9C68015E1943FB02b60c5df56C4CB9e",symbol:"ZRX",decimals:18,name:"ZRX",index:19,logoURI:"https://assets.coingecko.com/coins/images/863/thumb/0x.png?1547034672"},{chainId:"5",address:"0x7337e7FF9abc45c0e43f130C136a072F4794d40b",symbol:"LINK",decimals:18,name:"LINK",index:6,logoURI:"https://assets.coingecko.com/coins/images/877/thumb/chainlink-new-logo.png?1547034700"},{chainId:"5",address:"0xa7c3Bf25FFeA8605B516Cf878B7435fe1768c89b",symbol:"BUSD",decimals:18,name:"BUSD",index:2,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:"5",address:"0x8d9EAc6f25470EFfD68f0AD22993CB2813c0c9B9",symbol:"MANA",decimals:18,name:"MANA",index:7,logoURI:"https://assets.coingecko.com/coins/images/878/thumb/decentraland-mana.png?1550108745"},{chainId:"5",address:"0x981D8AcaF6af3a46785e7741d22fBE81B25Ebf1e",symbol:"UNI",decimals:18,name:"UNI",index:13,logoURI:"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png?1600306604"},{chainId:"5",address:"0x0B7a69d978DdA361Db5356D4Bd0206496aFbDD96",symbol:"AAVE",decimals:18,name:"AAVE",index:0,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:"5",address:"0x90be02599452FBC1a3D47E9EB62895330cfA05Ed",symbol:"MKR",decimals:18,name:"MKR",index:8,logoURI:"https://assets.coingecko.com/coins/images/1364/thumb/Mark_Maker.png?1585191826"}];var aaveMainnetErc20=[{chainId:"1",address:"0x0D8775F648430679A709E98d2b0Cb6250d2887EF",symbol:"BAT",decimals:18,name:"Basic Attention Token",index:7,logoURI:"https://assets.coingecko.com/coins/images/677/thumb/basic-attention-token.png?1547034427"},{chainId:"1",address:"0x4Fabb145d64652a948d72533023f6E7A623C7C53",symbol:"BUSD",decimals:18,name:"Binance USD",index:8,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:"1",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",symbol:"WETH",decimals:18,name:"Wrapped Ether",index:2,logoURI:"https://assets.coingecko.com/coins/images/2518/thumb/weth.png?1628852295"},{chainId:"1",address:"0x408e41876cCCDC0F92210600ef50372656052a38",symbol:"REN",decimals:18,name:"Republic Token",index:15,logoURI:"https://assets.coingecko.com/coins/images/3139/thumb/REN.png?1589985807"},{chainId:"1",address:"0xE41d2489571d322189246DaFA5ebDe1F4699F498",symbol:"ZRX",decimals:18,name:"0x Protocol Token",index:4,logoURI:"https://assets.coingecko.com/coins/images/863/thumb/0x.png?1547034672"},{chainId:"1",address:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",symbol:"AAVE",decimals:18,name:"Aave Token",index:6,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:"1",address:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",symbol:"UNI",decimals:18,name:"Uniswap",index:5,logoURI:"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png?1600306604"},{chainId:"1",address:"0x514910771AF9Ca656af840dff83E8264EcF986CA",symbol:"LINK",decimals:18,name:"ChainLink Token",index:12,logoURI:"https://assets.coingecko.com/coins/images/877/thumb/chainlink-new-logo.png?1547034700"},{chainId:"1",address:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",symbol:"YFI",decimals:18,name:"yearn.finance",index:3,logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{chainId:"1",address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",symbol:"USDT",decimals:6,name:"Tether USD",index:0,logoURI:"https://assets.coingecko.com/coins/images/325/thumb/Tether-logo.png?1598003707"},{chainId:"1",address:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",symbol:"RAI",decimals:18,name:"Rai Reflex Index",index:25,logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{chainId:"1",address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",symbol:"sUSD",decimals:18,name:"Synth sUSD",index:17},{chainId:"1",address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",symbol:"DAI",decimals:18,name:"Dai Stablecoin",index:9,logoURI:"https://assets.coingecko.com/coins/images/9956/thumb/4943.png?1636636734"},{chainId:"1",address:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",symbol:"SNX",decimals:18,name:"Synthetix Network Token",index:16,logoURI:"https://assets.coingecko.com/coins/images/3406/thumb/SNX.png?1598631139"},{chainId:"1",address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",symbol:"USDC",decimals:6,name:"USD Coin",index:19,logoURI:"https://assets.coingecko.com/coins/images/6319/thumb/USD_Coin_icon.png?1547042389"},{chainId:"1",address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",symbol:"WBTC",decimals:8,name:"Wrapped BTC",index:"1",logoURI:"https://assets.coingecko.com/coins/images/7598/thumb/wrapped_bitcoin_wbtc.png?1548822744"},{chainId:"1",address:"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c",symbol:"ENJ",decimals:18,name:"Enjin Coin",index:10,logoURI:"https://assets.coingecko.com/coins/images/1102/thumb/enjin-coin-logo.png?1547035078"},{chainId:"1",address:"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942",symbol:"MANA",decimals:18,name:"Decentraland MANA",index:13,logoURI:"https://assets.coingecko.com/coins/images/878/thumb/decentraland-mana.png?1550108745"},{chainId:"1",address:"0xba100000625a3754423978a60c9317c58a424e3D",symbol:"BAL",decimals:18,name:"Balancer",index:22,logoURI:"https://assets.coingecko.com/coins/images/11683/thumb/Balancer.png?1592792958"},{chainId:"1",address:"0xdd974D5C2e2928deA5F71b9825b8b646686BD200",symbol:"KNC",decimals:18,name:"Kyber Network Crystal",index:11,logoURI:"https://assets.coingecko.com/coins/images/14899/thumb/RwdVsGcw_400x400.jpg?1618923851"},{chainId:"1",address:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",symbol:"GUSD",decimals:2,name:"Gemini dollar",index:21,logoURI:"https://assets.coingecko.com/coins/images/5992/thumb/gemini-dollar-gusd.png?1536745278"},{chainId:"1",address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",symbol:"FRAX",decimals:18,name:"Frax",index:29,logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{chainId:"1",address:"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2",symbol:"MKR",decimals:18,name:"",index:14,logoURI:"https://assets.coingecko.com/coins/images/1364/thumb/Mark_Maker.png?1585191826"},{chainId:"1",address:"0x8E870D67F660D95d5be530380D0eC0bd388289E1",symbol:"USDP",decimals:18,name:"Pax Dollar",index:27,logoURI:"https://assets.coingecko.com/coins/images/6013/thumb/Pax_Dollar.png?1629877204"},{chainId:"1",address:"0x0000000000085d4780B73119b644AE5ecd22b376",symbol:"TUSD",decimals:18,name:"TrueUSD",index:18,logoURI:"https://assets.coingecko.com/coins/images/3449/thumb/tusd.png?1618395665"},{chainId:"1",address:"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",symbol:"stETH",decimals:18,name:"Liquid staked Ether 2.0",index:31},{chainId:"1",address:"0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B",symbol:"CVX",decimals:18,name:"Convex Token",index:34,logoURI:"https://assets.coingecko.com/coins/images/15585/thumb/convex.png?1621256328"},{chainId:"1",address:"0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272",symbol:"xSUSHI",decimals:18,name:"SushiBar",index:23},{chainId:"1",address:"0xD46bA6D942050d489DBd938a2C909A5d5039A161",symbol:"AMPL",decimals:9,name:"Ampleforth",index:26,logoURI:"https://assets.coingecko.com/coins/images/4708/thumb/Ampleforth.png?1561684250"},{chainId:"1",address:"0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5",symbol:"renFIL",decimals:18,name:"renFIL",index:24},{chainId:"1",address:"0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b",symbol:"DPI",decimals:18,name:"DefiPulse Index",index:28,logoURI:"https://assets.coingecko.com/coins/images/12465/thumb/defi_pulse_index_set.png?1600051053"},{chainId:"1",address:"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72",symbol:"ENS",decimals:18,name:"Ethereum Name Service",index:32,logoURI:"https://assets.coingecko.com/coins/images/19785/thumb/acatxTm8_400x400.jpg?1635850140"},{chainId:"1",address:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",symbol:"LUSD",decimals:18,name:"LUSD Stablecoin",index:36,logoURI:"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png?1617631327"},{chainId:"1",address:"0x956F47F50A910163D8BF957Cf5846D573E7f87CA",symbol:"FEI",decimals:18,name:"Fei USD",index:30,logoURI:"https://assets.coingecko.com/coins/images/14570/thumb/ZqsF51Re_400x400.png?1617082206"},{chainId:"1",address:"0x111111111117dC0aa78b770fA6A738034120C302",symbol:"1INCH",decimals:18,name:"1INCH Token",index:35,logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{chainId:"1",address:"0xD533a949740bb3306d119CC777fa900bA034cd52",symbol:"CRV",decimals:18,name:"Curve DAO Token",index:20,logoURI:"https://assets.coingecko.com/coins/images/12124/thumb/Curve.png?1597369484"},{chainId:"1",address:"0xa693B19d2931d498c5B318dF961919BB4aee87a5",symbol:"UST",decimals:6,name:"UST",index:33,logoURI:"https://assets.coingecko.com/coins/images/21150/thumb/UST_wh_small.png?1644223065"}];var aaveV3ArbitrumErc20$1=[{chainId:"42161",address:"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",symbol:"DAI",decimals:18,name:"Dai Stablecoin",logoURI:""},{chainId:"42161",address:"0xf97f4df75117a78c1A5a0DBb814Af92458539FB4",symbol:"LINK",decimals:18,name:"ChainLink Token",logoURI:""},{chainId:"42161",address:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",symbol:"USDC",decimals:6,name:"USD Coin (Arb1)",logoURI:""},{chainId:"42161",address:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",symbol:"WBTC",decimals:8,name:"Wrapped BTC",logoURI:""},{chainId:"42161",address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",symbol:"WETH",decimals:18,name:"Wrapped Ether",logoURI:""},{chainId:"42161",address:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",symbol:"USDT",decimals:6,name:"Tether USD",logoURI:""},{chainId:"42161",address:"0xba5DdD1f9d7F570dc94a51479a000E3BCE967196",symbol:"AAVE",decimals:18,name:"Aave Token",logoURI:""},{chainId:"42161",address:"0xD22a58f79e9481D1a88e00c343885A588b34b68B",symbol:"EURS",decimals:2,name:"STASIS EURS Token",logoURI:""},{chainId:"42161",address:"0x5979D7b546E38E414F7E9822514be443A4800529",symbol:"wstETH",decimals:18,name:"Wrapped liquid staked Ether 2.0",logoURI:""},{chainId:"42161",address:"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d",symbol:"MAI",decimals:18,name:"Mai Stablecoin",logoURI:""}];var aaveV3MainnetErc20$1=[{chainId:"1",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",symbol:"WETH",decimals:18,name:"Wrapped Ether",logoURI:""},{chainId:"1",address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",symbol:"wstETH",decimals:18,name:"Wrapped liquid staked Ether 2.0",logoURI:""},{chainId:"1",address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",symbol:"WBTC",decimals:8,name:"Wrapped BTC",logoURI:""},{chainId:"1",address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",symbol:"USDC",decimals:6,name:"USD Coin",logoURI:""},{chainId:"1",address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",symbol:"DAI",decimals:18,name:"Dai Stablecoin",logoURI:""},{chainId:"1",address:"0x514910771AF9Ca656af840dff83E8264EcF986CA",symbol:"LINK",decimals:18,name:"ChainLink Token",logoURI:""},{chainId:"1",address:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",symbol:"AAVE",decimals:18,name:"Aave Token",logoURI:""},{chainId:"1",address:"0xBe9895146f7AF43049ca1c1AE358B0541Ea49704",symbol:"cbETH",decimals:18,name:"Coinbase Wrapped Staked ETH",logoURI:""},{chainId:"1",address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",symbol:"USDT",decimals:6,name:"Tether USD",logoURI:""},{chainId:"1",address:"0xae78736Cd615f374D3085123A210448E74Fc6393",symbol:"rETH",decimals:18,name:"Rocket Pool ETH",logoURI:""},{chainId:"1",address:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",symbol:"LUSD",decimals:18,name:"LUSD Stablecoin",logoURI:""},{chainId:"1",address:"0xD533a949740bb3306d119CC777fa900bA034cd52",symbol:"CRV",decimals:18,name:"Curve DAO Token",logoURI:""},{chainId:"1",address:"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2",symbol:"MKR",decimals:18,name:"Maker DAO",logoURI:""},{chainId:"1",address:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",symbol:"SNX",decimals:18,name:"Synthetix Network Token",logoURI:""},{chainId:"1",address:"0xba100000625a3754423978a60c9317c58a424e3D",symbol:"BAL",decimals:18,name:"Balancer",logoURI:""},{chainId:"1",address:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",symbol:"UNI",decimals:18,name:"Uniswap",logoURI:""},{chainId:"1",address:"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",symbol:"LDO",decimals:18,name:"Lido DAO Token",logoURI:""}];var cTokens=[{chainId:1,address:"0x39AA39c021dfbaE8faC545936693aC917d5E7563",name:"Compound USD Coin",symbol:"cUSDC",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_usdc.svg",assetAddress:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},{chainId:1,address:"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643",name:"Compound Dai",symbol:"cDAI",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_dai.svg",assetAddress:"0x6b175474e89094c44da98b954eedeac495271d0f"},{chainId:1,address:"0x70e36f6BF80a52b3B46b3aF8e106CC0ed743E8e4",name:"Compound Collateral",symbol:"cCOMP",decimals:8,assetAddress:"0xc00e94cb662c3520282e6f5717214004a7f26888"},{chainId:1,address:"0xf650C3d88D12dB855b8bf7D11Be6C55A4e07dCC9",name:"Compound USDT",symbol:"cUSDT",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_usdt.svg",assetAddress:"0xdac17f958d2ee523a2206206994597c13d831ec7"},{chainId:1,address:"0x6C8c6b02E7b2BE14d4fA6022Dfd6d75921D90E4E",name:"Compound Basic Attention Token",symbol:"cBAT",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_bat.svg",assetAddress:"0x0d8775f648430679a709e98d2b0cb6250d2887ef"},{chainId:1,address:"0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5",name:"Compound Ether",symbol:"cETH",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_eth.svg"},{chainId:1,address:"0xF5DCe57282A584D2746FaF1593d3121Fcac444dC",name:"Compound Sai",symbol:"cSAI",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_sai.svg",assetAddress:"0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359"},{chainId:1,address:"0x158079Ee67Fce2f58472A96584A73C7Ab9AC95c1",name:"Compound Augur",symbol:"cREP",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_rep.svg",assetAddress:"0x1985365e9f78359a9B6AD760e32412f4a445E862"},{chainId:1,address:"0xB3319f5D18Bc0D84dD1b4825Dcde5d5f7266d407",name:"Compound 0x",symbol:"cZRX",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_zrx.svg",assetAddress:"0xE41d2489571d322189246DaFA5ebDe1F4699F498"},{chainId:1,address:"0xC11b1268C1A384e55C48c2391d8d480264A3A7F4",name:"Compound Wrapped BTC",symbol:"cWBTC",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_wbtc.svg",assetAddress:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599"},{chainId:1,address:"0xFAce851a4921ce59e912d19329929CE6da6EB0c7",name:"Compound ChainLink",symbol:"cLINK",decimals:8,assetAddress:"0x514910771af9ca656af840dff83e8264ecf986ca"},{chainId:1,address:"0x35A18000230DA775CAc24873d00Ff85BccdeD550",name:"Compound Uniswap",symbol:"cUNI",decimals:8,assetAddress:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"},{chainId:1,address:"0x12392F67bdf24faE0AF363c24aC620a2f67DAd86",name:"Compound TrueUSD",symbol:"cTUSD",decimals:8,assetAddress:"0x0000000000085d4780B73119b644AE5ecd22b376"},{chainId:5,address:"0x0fF50a12759b081Bb657ADaCf712C52bb015F1Cd",name:"Compound Collateral",symbol:"cCOMP",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_comp.svg",assetAddress:"0x3587b2F7E0E2D6166d6C14230e7Fe160252B0ba4"},{chainId:5,address:"0x73506770799Eb04befb5AaE4734e58C2C624F493",name:"Compound USD Coin",symbol:"cUSDC",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_usdc.svg",assetAddress:"0x07865c6E87B9F70255377e024ace6630C1Eaa37F"},{chainId:5,address:"0x0545a8eaF7ff6bB6F708CbB544EA55DBc2ad7b2a",name:"Compound Dai",symbol:"cDAI",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_dai.svg",assetAddress:"0x2899a03ffDab5C90BADc5920b4f53B0884EB13cC"},{chainId:5,address:"0x20572e4c090f15667cF7378e16FaD2eA0e2f3EfF",name:"Compound Ether",symbol:"cETH",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_eth.svg"},{chainId:5,address:"0xDa6F609F3636062E06fFB5a1701Df3c5F1ab3C8f",name:"Compound Wrapped BTC",symbol:"cWBTC",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_wbtc.svg",assetAddress:"0xAAD4992D949f9214458594dF92B44165Fb84dC19"},{chainId:5,address:"0x2073d38198511F5Ed8d893AB43A03bFDEae0b1A5",name:"Compound Uniswap",symbol:"cUNI",decimals:8,logoURI:"https://raw.githubusercontent.com/compound-finance/token-list/master/assets/ctoken_uni.svg",assetAddress:"0x208F73527727bcB2D9ca9bA047E3979559EB08cC"}];var curveGaugeTokens=[{chainId:1,address:"0xbfcf63294ad7105dea65aa58f8ae5be2d9d0952a",symbol:"Curve Gauge 3Crv",decimals:18,name:"Curve Gauge Curve.fi DAI/USDC/USDT",index:0},{chainId:1,address:"0xd662908ada2ea1916b3318327a97eb18ad588b5d",symbol:"Curve Gauge a3CRV",decimals:18,name:"Curve Gauge Curve.fi aDAI/aUSDC/aUSDT",index:1},{chainId:1,address:"0x6d10ed2cf043e6fcf51a0e7b4c2af3fa06695707",symbol:"Curve Gauge ankrCRV",decimals:18,name:"Curve Gauge Curve.fi ETH/aETH",index:2},{chainId:1,address:"0x69fb7c45726cfe2badee8317005d3f94be838840",symbol:"Curve Gauge yDAI+yUSDC+yUSDT+yBUSD",decimals:18,name:"Curve Gauge Curve.fi yDAI/yUSDC/yUSDT/yBUSD",index:3},{chainId:1,address:"0x7ca5b0a2910b33e9759dc7ddb0413949071d7575",symbol:"Curve Gauge cDAI+cUSDC",decimals:18,name:"Curve Gauge Curve.fi cDAI/cUSDC",index:4},{chainId:1,address:"0x90bb609649e0451e5ad952683d64bd2d1f245840",symbol:"Curve Gauge eursCRV",decimals:18,name:"Curve Gauge Curve.fi EURS/sEUR",index:5},{chainId:1,address:"0x4c18e409dc8619bfb6a1cb56d114c3f592e0ae79",symbol:"Curve Gauge hCRV",decimals:18,name:"Curve Gauge Curve.fi hBTC/wBTC",index:6},{chainId:1,address:"0xf5194c3325202f456c95c1cf0ca36f8475c1949f",symbol:"Curve Gauge ib3CRV",decimals:18,name:"Curve Gauge Curve.fi cyDAI/cyUSDC/cyUSDT",index:7},{chainId:1,address:"0xfd4d8a17df4c27c1dd245d153ccf4499e806c87d",symbol:"Curve Gauge linkCRV",decimals:18,name:"Curve Gauge Curve.fi LINK/sLINK",index:8},{chainId:1,address:"0x64e3c23bfc40722d3b649844055f1d51c1ac041d",symbol:"Curve Gauge ypaxCrv",decimals:18,name:"Curve Gauge Curve.fi DAI/USDC/USDT/PAX",index:9},{chainId:1,address:"0xb1f2cdec61db658f091671f5f199635aef202cac",symbol:"Curve Gauge crvRenWBTC",decimals:18,name:"Curve Gauge Curve.fi renBTC/wBTC",index:10},{chainId:1,address:"0x462253b8f74b72304c145db0e4eebd326b22ca39",symbol:"Curve Gauge saCRV",decimals:18,name:"Curve Gauge Curve.fi aDAI/aSUSD",index:11},{chainId:1,address:"0x705350c4bcd35c9441419ddd5d2f097d7a55410f",symbol:"Curve Gauge crvRenWSBTC",decimals:18,name:"Curve Gauge Curve.fi renBTC/wBTC/sBTC",index:12},{chainId:1,address:"0x3c0ffff15ea30c35d7a85b85c0782d6c94e1d238",symbol:"Curve Gauge eCRV",decimals:18,name:"Curve Gauge Curve.fi ETH/sETH",index:13},{chainId:1,address:"0x182b723a58739a9c974cfdb385ceadb237453c28",symbol:"Curve Gauge steCRV",decimals:18,name:"Curve Gauge Curve.fi ETH/stETH",index:14},{chainId:1,address:"0xa90996896660decc6e997655e065b23788857849",symbol:"Curve Gauge crvPlain3andSUSD",decimals:18,name:"Curve Gauge Curve.fi DAI/USDC/USDT/sUSD",index:15},{chainId:1,address:"0xbc89cd85491d81c6ad2954e6d0362ee29fca8f53",symbol:"Curve Gauge cDAI+cUSDC+USDT",decimals:18,name:"Curve Gauge Curve.fi cDAI/cUSDC/USDT",index:16},{chainId:1,address:"0xfa712ee4788c042e2b7bb55e6cb8ec569c4530c1",symbol:"Curve Gauge yDAI+yUSDC+yUSDT+yTUSD",decimals:18,name:"Curve Gauge Curve.fi yDAI/yUSDC/yUSDT/yTUSD",index:17},{chainId:1,address:"0xaea6c312f4b3e04d752946d329693f7293bc2e6d",symbol:"Curve Gauge dusd3CRV",decimals:18,name:"Curve Gauge Curve.fi DUSD/3Crv",index:18},{chainId:1,address:"0xc5cfada84e902ad92dd40194f0883ad49639b023",symbol:"Curve Gauge gusd3CRV",decimals:18,name:"Curve Gauge Curve.fi GUSD/3Crv",index:19},{chainId:1,address:"0x2db0e83599a91b508ac268a6197b8b14f5e72840",symbol:"Curve Gauge husd3CRV",decimals:18,name:"Curve Gauge Curve.fi HUSD/3Crv",index:20},{chainId:1,address:"0x5f626c30ec1215f4edcc9982265e8b1f411d1352",symbol:"Curve Gauge musd3CRV",decimals:18,name:"Curve Gauge Curve.fi MUSD/3Crv",index:22},{chainId:1,address:"0x4dc4a289a8e33600d8bd4cf5f6313e43a37adec7",symbol:"Curve Gauge rsv3CRV",decimals:18,name:"Curve Gauge Curve.fi RSV/3Crv",index:23},{chainId:1,address:"0xc2b1df84112619d190193e48148000e3990bf627",symbol:"Curve Gauge usdk3CRV",decimals:18,name:"Curve Gauge Curve.fi USDK/3Crv",index:24},{chainId:1,address:"0xf98450b5602fa59cc66e1379dffb6fddc724cfc4",symbol:"Curve Gauge usdn3CRV",decimals:18,name:"Curve Gauge Curve.fi USDN/3Crv",index:25},{chainId:1,address:"0x055be5ddb7a925bfef3417fc157f53ca77ca7222",symbol:"Curve Gauge usdp3CRV",decimals:18,name:"Curve Gauge Curve.fi USDP/3Crv",index:26},{chainId:1,address:"0x3b7020743bc2a4ca9eaf9d0722d42e20d6935855",symbol:"Curve Gauge ust3CRV",decimals:18,name:"Curve Gauge Curve.fi UST/3Crv",index:27},{chainId:1,address:"0xdfc7adfa664b08767b735de28f9e84cd30492aee",symbol:"Curve Gauge bBTC/sbtcCRV",decimals:18,name:"Curve Gauge Curve.fi bBTC/sbtcCRV",index:28},{chainId:1,address:"0x11137b10c210b579405c21a07489e28f3c040ab1",symbol:"Curve Gauge oBTC/sbtcCRV",decimals:18,name:"Curve Gauge Curve.fi oBTC/sbtcCRV",index:29},{chainId:1,address:"0xd7d147c6bb90a718c3de8c0568f9b560c79fa416",symbol:"Curve Gauge pBTC/sbtcCRV",decimals:18,name:"Curve Gauge Curve.fi pBTC/sbtcCRV",index:30},{chainId:1,address:"0x6828bcf74279ee32f2723ec536c22c51eed383c6",symbol:"Curve Gauge tbtc/sbtcCrv",decimals:18,name:"Curve Gauge Curve.fi tBTC/sbtcCrv",index:31},{chainId:1,address:"0x359fd5d6417ae3d8d6497d9b2e7a890798262ba4",symbol:"Curve Gauge TUSD/3Crv",decimals:18,name:"Curve Gauge TUSD/3Crv",index:32},{chainId:1,address:"0x9b8519a9a00100720ccdc8a120fbed319ca47a14",symbol:"Curve Gauge LUSD/3Crv",decimals:18,name:"Curve Gauge LUSD/3Crv",index:33},{chainId:1,address:"0x72e158d38dbd50a483501c24f792bdaaa3e7d55c",symbol:"Curve Gauge FRAX/3Crv",decimals:18,name:"Curve Gauge FRAX/3Crv",index:34},{chainId:1,address:"0xd4b22fedca85e684919955061fdf353b9d38389b",symbol:"Curve Gauge BUSD/3Crv",decimals:18,name:"Curve Gauge BUSD/3Crv",index:35},{chainId:1,address:"0x824f13f1a2f29cfeea81154b46c0fc820677a637",symbol:"Curve Gauge rCRV",decimals:18,name:"Curve Gauge Curve.fi ETH/rETH",index:36},{chainId:1,address:"0x9582c4adacb3bce56fea3e590f05c3ca2fb9c477",symbol:"Curve Gauge alUSD/3Crv",decimals:18,name:"Curve Gauge alUSD/3Crv",index:37},{chainId:1,address:"0x6955a55416a06839309018a8b0cb72c4ddc11f15",symbol:"Curve Gauge crvTricrypto",decimals:18,name:"Curve Gauge Curve.fi USD-BTC-ETH",index:38},{chainId:1,address:"0x66ec719045bbd62db5ebb11184c18237d3cc2e62",symbol:"Curve Gauge RAI3CRV",decimals:18,name:"Curve Gauge RAI3CRV",index:39},{chainId:1,address:"0xd8b712d29381748db89c36bca0138d7c75866ddf",symbol:"Curve Gauge MIM/3Crv",decimals:18,name:"Curve Gauge MIM/3Crv",index:40},{chainId:1,address:"0xe8060ad8971450e624d5289a10017dd30f5da85f",symbol:"Curve Gauge EURT/sEUR",decimals:18,name:"Curve Gauge EURT/sEUR",index:41},{chainId:1,address:"0x34883134a39b206a451c2d3b0e7cac44be4d9181",symbol:"Curve Gauge USDC/USDT/UST/FRAX",decimals:18,name:"Curve Gauge USDC/USDT/UST/FRAX",index:42},{chainId:1,address:"0x9f330db38caaae5b61b410e2f0aad63fff2109d8",symbol:"Curve Gauge USDC/USDT",decimals:18,name:"Curve Gauge USDC/USDT",index:43},{chainId:1,address:"0xcfc25170633581bf896cb6cdee170e3e3aa59503",symbol:"Curve Gauge crvFRAX",decimals:18,name:"Curve Gauge Curve.fi FRAX/USDC",index:44},{chainId:1,address:"0x2932a86df44fe8d2a706d8e9c5d51c24883423f5",symbol:"Curve Gauge frxETHCRV",decimals:18,name:"Curve Gauge Curve.fi ETH/frxETH",index:45},{chainId:1,address:"0x95f00391cb5eebcd190eb58728b4ce23dbfa6ac1",symbol:"Curve Gauge crvUSDUSDC-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/USDC",index:46},{chainId:1,address:"0x4e6bb6b7447b7b2aa268c16ab87f4bb48bf57939",symbol:"Curve Gauge crvUSDUSDT-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/USDT",index:47},{chainId:1,address:"0x5c07440a172805d566faf7ebaf16ef068ac05f43",symbol:"Curve Gauge crvUSDUSDP-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/USDP",index:48},{chainId:1,address:"0xfcaf4ec80a94a5409141af16a1dca950a6973a39",symbol:"Curve Gauge crvUSDTUSD-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/TUSD",index:49},{chainId:1,address:"0x96424e6b5eaafe0c3b36ca82068d574d44be4e3c",symbol:"Curve Gauge crvUSDFRAX-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/Frax",index:50},{chainId:1,address:"0x42144499fd4d017723b3a723953b229e64eb1ffd",symbol:"Curve Gauge crvUSDDAI-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/DAI",index:51},{chainId:1,address:"0x533b5aee744647c20e33653f03676c471bb8e67b",symbol:"Curve Gauge crvUSDMIM-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/MIM",index:52},{chainId:1,address:"0x512a68dd5433563bad526c8c2838c39debc9a756",symbol:"Curve Gauge crvUSDSUSD-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/SUSD",index:53},{chainId:1,address:"0xfc58c946a2d541cfa29ad8c16fc2994323e34458",symbol:"Curve Gauge crvUSDGHO-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/GHO",index:54},{chainId:1,address:"0x71873000399db5fddcd8d953e0e6570a0cb4c50c",symbol:"Curve Gauge crvUSDMAI-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/MAI",index:55},{chainId:1,address:"0x9dc22ca10bb8210c8788827204da091eb6ca04a5",symbol:"Curve Gauge crvUSDXAI-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/XAI",index:56},{chainId:1,address:"0xe39c817fe25ac1a8bd343a74037e3c90b09beeef",symbol:"Curve Gauge crvUSDUZD-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/UZD",index:57},{chainId:1,address:"0xecad6745058377744c09747b2715c0170b5699e5",symbol:"Curve Gauge crvUSDDOLA-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/DOLA",index:58},{chainId:1,address:"0xde14d2b848a7a1373e155cc4db9b649f4be24296",symbol:"Curve Gauge crvUSDGUSD-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD/GUSD",index:59},{chainId:1,address:"0x4e21418095d32d15c6e2b96a9910772613a50d50",symbol:"Curve Gauge frxeth-ng-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: frxETH/WETH",index:61},{chainId:1,address:"0x5010263ac1978297f56048c7d2b02316a3435404",symbol:"Curve Gauge 2BTC-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: tBTC/WBTC",index:62},{chainId:1,address:"0x0e5bdb5afe132d1c6a6c67f6d8eb6133dd607e36",symbol:"Curve Gauge mkcrvUSD-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: mkUSD/crvUSD",index:63},{chainId:1,address:"0x731d19d122d6187cd64c44708dd8665fe8126fa8",symbol:"Curve Gauge crvsDAI-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD-sDAI",index:66},{chainId:1,address:"0x188a85362cc5e245a377294aa270c7758a203918",symbol:"Curve Gauge crvstUSDT-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD-stUSDT",index:67},{chainId:1,address:"0xd32f4be8f777ac27c6aad544457de6d4f17a1bfa",symbol:"Curve Gauge crvSTBT-f",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: crvUSD-STBT",index:68},{chainId:1,address:"0x85d44861d024cb7603ba906f2dc9569fc02083f6",symbol:"Curve Gauge crvUSDCWBTCWETH",decimals:18,name:"Curve Gauge TricryptoUSDC",index:69},{chainId:1,address:"0xf29fff074f5cf755b55fbb3eb10a29203ac91ea2",symbol:"Curve Gauge crvUSDTWBTCWETH",decimals:18,name:"Curve Gauge TricryptoUSDT",index:70},{chainId:1,address:"0x60d3d7ebbc44dc810a743703184f062d00e6db7e",symbol:"Curve Gauge crvCRVUSDTBTCWSTETH",decimals:18,name:"Curve Gauge TricryptoLLAMA",index:71},{chainId:1,address:"0x4fc86cd0f9b650280fa783e3116258e0e0496a2c",symbol:"Curve Gauge crvUSDCWETHINV",decimals:18,name:"Curve Gauge TricryptoINV",index:72},{chainId:1,address:"0x8d867bef70c6733ff25cc0d1caa8aa6c38b24817",symbol:"Curve Gauge crvUSDETHCRV",decimals:18,name:"Curve Gauge TriCRV",index:73},{chainId:1,address:"0x5832c01c465e7c51b22ecb4f02d63081dbed2b28",symbol:"Curve Gauge 3SPool",decimals:18,name:"Curve Gauge sUSD/snxUSD/wUSDA",index:74},{chainId:1,address:"0xfb3fd2825fe128c3aa7576a2b87be19880015cae",symbol:"Curve Gauge AMPHDUP",decimals:18,name:"Curve Gauge WETH/AMPH/wUSDA",index:75},{chainId:1,address:"0xfbb82a8df175ab3ee94eae2fec1c43467d6cf222",symbol:"Curve Gauge AMPHDUP",decimals:18,name:"Curve Gauge AMPH/WETH/wUSDA",index:76},{chainId:1,address:"0x23376482abc1403e24306d6d09da10df7f9c570f",symbol:"Curve Gauge AMPHDUP",decimals:18,name:"Curve Gauge AMPH/wUSDA/WETH",index:77},{chainId:1,address:"0xa6aae326b8901a610db0d25e863b2a1b2f10cd4e",symbol:"Curve Gauge AMPHDUP",decimals:18,name:"Curve Gauge AMPH/wUSDA/WETH",index:78},{chainId:1,address:"0xbb091d9a2ea48f35360420e5bee935663042bbc3",symbol:"Curve Gauge AMPHDUP",decimals:18,name:"Curve Gauge AMPH/wUSDA/WETH",index:79},{chainId:1,address:"0xb901a92f2c385afa0a019e8a307a59a570239ca4",symbol:"Curve Gauge crvUSDETHSILO",decimals:18,name:"Curve Gauge TriSILO",index:80},{chainId:1,address:"0x2b7822e663c856153ea1a36acead03dd3b7c6561",symbol:"Curve Gauge 3AMPH",decimals:18,name:"Curve Gauge 3AMPH",index:81},{chainId:1,address:"0x8c94e9a3b68316fba06ba6666acdfc2dc7b7f623",symbol:"Curve Gauge OSAKETHcrvUSD",decimals:18,name:"Curve Gauge TriOSAK",index:82},{chainId:1,address:"0xea012f5b25fa0d8e46123b85f585d0a5075e96b5",symbol:"Curve Gauge TryLSD",decimals:18,name:"Curve Gauge TryLSD",index:83},{chainId:1,address:"0x33dc66f2808d8df2798e9e02ce15f8658ac6d0f8",symbol:"Curve Gauge triSDT",decimals:18,name:"Curve Gauge triSDT",index:84},{chainId:1,address:"0x2dd2b7e07dd433b758b98a3889a63cbf48ef0d99",symbol:"Curve Gauge triSDT",decimals:18,name:"Curve Gauge triSDT",index:85},{chainId:1,address:"0x5ccde4bec0f4006c3826b51edf0d227d12ea33fa",symbol:"Curve Gauge crvDBRINV",decimals:18,name:"Curve Gauge TriDBR",index:87},{chainId:1,address:"0xab79226e4fbd6d299316c0964be9f417c8f920c9",symbol:"Curve Gauge crvUSDETHLDO",decimals:18,name:"Curve Gauge TriLDO",index:88}];var curveGaugeTokensArbitrum=[{chainId:42161,address:"0xce5f24b7a95e9cba7df4b54e911b4a3dc8cdaf6f",symbol:"Curve Gauge USDC.e/USDT",decimals:18,name:"Curve Gauge Curve.fi USDC/USDT",index:0},{chainId:42161,address:"0xc2b1df84112619d190193e48148000e3990bf627",symbol:"Curve Gauge WBTC/renBTC",decimals:18,name:"Curve Gauge Curve.fi WBTC/renBTC",index:1},{chainId:42161,address:"0x555766f3da968ecbefa690ffd49a2ac02f47aa5f",symbol:"Curve Gauge crv3crypto",decimals:18,name:"Curve Gauge Curve.fi USD-BTC-ETH",index:2},{chainId:42161,address:"0x95285ea6ff14f80a2fd3989a6bab993bd6b5fa13",symbol:"Curve Gauge FRAX/USDC.e",decimals:18,name:"Curve Gauge Curve.fi Factory Plain Pool: FRAXBP",index:4},{chainId:42161,address:"0x098ef55011b6b8c99845128114a9d9159777d697",symbol:"Curve Gauge wstETHCRV",decimals:18,name:"Curve Gauge Curve.fi ETH/wstETH",index:5},{chainId:42161,address:"0x555766f3da968ecbefa690ffd49a2ac02f47aa5f",symbol:"Curve Gauge crv3crypto",decimals:18,name:"Curve Gauge Curve.fi USD-BTC-ETH",index:6},{chainId:42161,address:"0x6339ef8df0c2d3d3e7ee697e241666a916b81587",symbol:"Curve Gauge crvEURSUSD",decimals:18,name:"Curve Gauge Curve EURS-2Crv",index:7}];var curveLPTokens=[{chainId:1,address:"0x6c3f90f043a72fa612cbac8115ee7e52bde6e490",symbol:"Curve LP 3Crv",decimals:18,name:"Curve LP Curve.fi DAI/USDC/USDT",index:0},{chainId:1,address:"0xFd2a8fA60Abd58Efe3EeE34dd494cD491dC14900",symbol:"Curve LP a3CRV",decimals:18,name:"Curve LP Curve.fi aDAI/aUSDC/aUSDT",index:1},{chainId:1,address:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf",symbol:"Curve LP ankrCRV",decimals:18,name:"Curve LP Curve.fi ETH/aETH",index:2},{chainId:1,address:"0x3b3ac5386837dc563660fb6a0937dfaa5924333b",symbol:"Curve LP yDAI+yUSDC+yUSDT+yBUSD",decimals:18,name:"Curve LP Curve.fi yDAI/yUSDC/yUSDT/yBUSD",index:3},{chainId:1,address:"0x845838df265dcd2c412a1dc9e959c7d08537f8a2",symbol:"Curve LP cDAI+cUSDC",decimals:18,name:"Curve LP Curve.fi cDAI/cUSDC",index:4},{chainId:1,address:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1",symbol:"Curve LP eursCRV",decimals:18,name:"Curve LP Curve.fi EURS/sEUR",index:5},{chainId:1,address:"0xb19059ebb43466c323583928285a49f558e572fd",symbol:"Curve LP hCRV",decimals:18,name:"Curve LP Curve.fi hBTC/wBTC",index:6},{chainId:1,address:"0x5282a4eF67D9C33135340fB3289cc1711c13638C",symbol:"Curve LP ib3CRV",decimals:18,name:"Curve LP Curve.fi cyDAI/cyUSDC/cyUSDT",index:7},{chainId:1,address:"0xcee60cFa923170e4f8204AE08B4fA6A3F5656F3a",symbol:"Curve LP linkCRV",decimals:18,name:"Curve LP Curve.fi LINK/sLINK",index:8},{chainId:1,address:"0xd905e2eaebe188fc92179b6350807d8bd91db0d8",symbol:"Curve LP ypaxCrv",decimals:18,name:"Curve LP Curve.fi DAI/USDC/USDT/PAX",index:9},{chainId:1,address:"0x49849c98ae39fff122806c06791fa73784fb3675",symbol:"Curve LP crvRenWBTC",decimals:18,name:"Curve LP Curve.fi renBTC/wBTC",index:10},{chainId:1,address:"0x02d341CcB60fAaf662bC0554d13778015d1b285C",symbol:"Curve LP saCRV",decimals:18,name:"Curve LP Curve.fi aDAI/aSUSD",index:11},{chainId:1,address:"0x075b1bb99792c9e1041ba13afef80c91a1e70fb3",symbol:"Curve LP crvRenWSBTC",decimals:18,name:"Curve LP Curve.fi renBTC/wBTC/sBTC",index:12},{chainId:1,address:"0xa3d87fffce63b53e0d54faa1cc983b7eb0b74a9c",symbol:"Curve LP eCRV",decimals:18,name:"Curve LP Curve.fi ETH/sETH",index:13},{chainId:1,address:"0x06325440D014e39736583c165C2963BA99fAf14E",symbol:"Curve LP steCRV",decimals:18,name:"Curve LP Curve.fi ETH/stETH",index:14},{chainId:1,address:"0xc25a3a3b969415c80451098fa907ec722572917f",symbol:"Curve LP crvPlain3andSUSD",decimals:18,name:"Curve LP Curve.fi DAI/USDC/USDT/sUSD",index:15},{chainId:1,address:"0x9fc689ccada600b6df723d9e47d84d76664a1f23",symbol:"Curve LP cDAI+cUSDC+USDT",decimals:18,name:"Curve LP Curve.fi cDAI/cUSDC/USDT",index:16},{chainId:1,address:"0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8",symbol:"Curve LP yDAI+yUSDC+yUSDT+yTUSD",decimals:18,name:"Curve LP Curve.fi yDAI/yUSDC/yUSDT/yTUSD",index:17},{chainId:1,address:"0x3a664ab939fd8482048609f652f9a0b0677337b9",symbol:"Curve LP dusd3CRV",decimals:18,name:"Curve LP Curve.fi DUSD/3Crv",index:18},{chainId:1,address:"0xd2967f45c4f384deea880f807be904762a3dea07",symbol:"Curve LP gusd3CRV",decimals:18,name:"Curve LP Curve.fi GUSD/3Crv",index:19},{chainId:1,address:"0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858",symbol:"Curve LP husd3CRV",decimals:18,name:"Curve LP Curve.fi HUSD/3Crv",index:20},{chainId:1,address:"0x6d65b498cb23deaba52db31c93da9bffb340fb8f",symbol:"Curve LP LinkUSD3CRV",decimals:18,name:"Curve LP Curve.fi LinkUSD/3Crv",index:21},{chainId:1,address:"0x1aef73d49dedc4b1778d0706583995958dc862e6",symbol:"Curve LP musd3CRV",decimals:18,name:"Curve LP Curve.fi MUSD/3Crv",index:22},{chainId:1,address:"0xc2ee6b0334c261ed60c72f6054450b61b8f18e35",symbol:"Curve LP rsv3CRV",decimals:18,name:"Curve LP Curve.fi RSV/3Crv",index:23},{chainId:1,address:"0x97e2768e8e73511ca874545dc5ff8067eb19b787",symbol:"Curve LP usdk3CRV",decimals:18,name:"Curve LP Curve.fi USDK/3Crv",index:24},{chainId:1,address:"0x4f3e8f405cf5afc05d68142f3783bdfe13811522",symbol:"Curve LP usdn3CRV",decimals:18,name:"Curve LP Curve.fi USDN/3Crv",index:25},{chainId:1,address:"0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6",symbol:"Curve LP usdp3CRV",decimals:18,name:"Curve LP Curve.fi USDP/3Crv",index:26},{chainId:1,address:"0x94e131324b6054c0D789b190b2dAC504e4361b53",symbol:"Curve LP ust3CRV",decimals:18,name:"Curve LP Curve.fi UST/3Crv",index:27},{chainId:1,address:"0x410e3E86ef427e30B9235497143881f717d93c2A",symbol:"Curve LP bBTC/sbtcCRV",decimals:18,name:"Curve LP Curve.fi bBTC/sbtcCRV",index:28},{chainId:1,address:"0x2fE94ea3d5d4a175184081439753DE15AeF9d614",symbol:"Curve LP oBTC/sbtcCRV",decimals:18,name:"Curve LP Curve.fi oBTC/sbtcCRV",index:29},{chainId:1,address:"0xDE5331AC4B3630f94853Ff322B66407e0D6331E8",symbol:"Curve LP pBTC/sbtcCRV",decimals:18,name:"Curve LP Curve.fi pBTC/sbtcCRV",index:30},{chainId:1,address:"0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd",symbol:"Curve LP tbtc/sbtcCrv",decimals:18,name:"Curve LP Curve.fi tBTC/sbtcCrv",index:31},{chainId:1,address:"0x53a901d48795C58f485cBB38df08FA96a24669D5",symbol:"Curve LP rCRV",decimals:18,name:"Curve LP Curve.fi ETH/rETH",index:36},{chainId:1,address:"0xcA3d75aC011BF5aD07a98d02f18225F9bD9A6BDF",symbol:"Curve LP crvTricrypto",decimals:18,name:"Curve LP Curve.fi USD-BTC-ETH",index:38},{chainId:1,address:"0x6BA5b4e438FA0aAf7C1bD179285aF65d13bD3D90",symbol:"Curve LP RAI3CRV",decimals:18,name:"Curve LP RAI3CRV",index:39},{chainId:1,address:"0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC",symbol:"Curve LP crvFRAX",decimals:18,name:"Curve LP Curve.fi FRAX/USDC",index:44},{chainId:1,address:"0xf43211935C781D5ca1a41d2041F397B8A7366C7A",symbol:"Curve LP frxETHCRV",decimals:18,name:"Curve LP Curve.fi ETH/frxETH",index:45},{chainId:1,address:"0x4DEcE678ceceb27446b35C672dC7d61F30bAD69E",symbol:"Curve LP crvUSDUSDC-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/USDC",index:46},{chainId:1,address:"0x390f3595bCa2Df7d23783dFd126427CCeb997BF4",symbol:"Curve LP crvUSDUSDT-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/USDT",index:47},{chainId:1,address:"0xCa978A0528116DDA3cbA9ACD3e68bc6191CA53D0",symbol:"Curve LP crvUSDUSDP-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/USDP",index:48},{chainId:1,address:"0x34D655069F4cAc1547E4C8cA284FfFF5ad4A8db0",symbol:"Curve LP crvUSDTUSD-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/TUSD",index:49},{chainId:1,address:"0x0CD6f267b2086bea681E922E19D40512511BE538",symbol:"Curve LP crvUSDFRAX-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/Frax",index:50},{chainId:1,address:"0x58B94400bdAd7b9ac8d5335E12eF96E8B4966b4a",symbol:"Curve LP crvUSDDAI-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/DAI",index:51},{chainId:1,address:"0xBe426b0f37c112dd20d5866769c8034171567b31",symbol:"Curve LP crvUSDMIM-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/MIM",index:52},{chainId:1,address:"0x94cC50e4521bD271C1a997a3A4Dc815C2F920b41",symbol:"Curve LP crvUSDSUSD-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/SUSD",index:53},{chainId:1,address:"0x86152dF0a0E321Afb3B0B9C4deb813184F365ADa",symbol:"Curve LP crvUSDGHO-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/GHO",index:54},{chainId:1,address:"0x1982Fe483f4bff067A2183c98fA231423d41E92B",symbol:"Curve LP crvUSDMAI-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/MAI",index:55},{chainId:1,address:"0xA8a02c7D9ada50444F8c658F43Dc440675B21797",symbol:"Curve LP crvUSDXAI-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/XAI",index:56},{chainId:1,address:"0xfC636D819d1a98433402eC9dEC633d864014F28C",symbol:"Curve LP crvUSDUZD-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/UZD",index:57},{chainId:1,address:"0x8272E1A3dBef607C04AA6e5BD3a1A134c8ac063B",symbol:"Curve LP crvUSDDOLA-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/DOLA",index:58},{chainId:1,address:"0xeCDd0cE505da71cd9dE855CD6804BA1e8C7bdB07",symbol:"Curve LP crvUSDGUSD-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/GUSD",index:59},{chainId:1,address:"0xAe9e8c9A548505c9ad22a412354186151363c09e",symbol:"Curve LP crvUSDeUSD-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD/eUSD",index:60},{chainId:1,address:"0x9c3B46C0Ceb5B9e304FCd6D88Fc50f7DD24B31Bc",symbol:"Curve LP frxeth-ng-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: frxETH/WETH",index:61},{chainId:1,address:"0xB7ECB2AA52AA64a717180E030241bC75Cd946726",symbol:"Curve LP 2BTC-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: tBTC/WBTC",index:62},{chainId:1,address:"0x3de254A0f838a844F727fee81040e0FA7884B935",symbol:"Curve LP mkcrvUSD-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: mkUSD/crvUSD",index:63},{chainId:1,address:"0x143B33AF57172E2FBF67F30B3A4d49e7f0199EeC",symbol:"Curve LP crvsDAI-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD<>sDAI",index:64},{chainId:1,address:"0xb7be2211430D8b59BFCBcA029c2f3a2577369A19",symbol:"Curve LP crvstUSDT-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD<>stUSDT",index:65},{chainId:1,address:"0xAcfFeB3DD13Ca770976deB3deaD62D4Eb5cf0ac4",symbol:"Curve LP crvsDAI-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD-sDAI",index:66},{chainId:1,address:"0xB9eC78Bd89d3Ef17537f130CC72750FD4DE85f82",symbol:"Curve LP crvstUSDT-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD-stUSDT",index:67},{chainId:1,address:"0x707EAe1CcFee0B8fef07D3F18EAFD1246762d587",symbol:"Curve LP crvSTBT-f",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: crvUSD-STBT",index:68},{chainId:1,address:"0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B",symbol:"Curve LP crvUSDCWBTCWETH",decimals:18,name:"Curve LP TricryptoUSDC",index:69},{chainId:1,address:"0xf5f5B97624542D72A9E06f04804Bf81baA15e2B4",symbol:"Curve LP crvUSDTWBTCWETH",decimals:18,name:"Curve LP TricryptoUSDT",index:70},{chainId:1,address:"0x2889302a794dA87fBF1D6Db415C1492194663D13",symbol:"Curve LP crvCRVUSDTBTCWSTETH",decimals:18,name:"Curve LP TricryptoLLAMA",index:71},{chainId:1,address:"0x5426178799ee0a0181A89b4f57eFddfAb49941Ec",symbol:"Curve LP crvUSDCWETHINV",decimals:18,name:"Curve LP TricryptoINV",index:72},{chainId:1,address:"0x4eBdF703948ddCEA3B11f675B4D1Fba9d2414A14",symbol:"Curve LP crvUSDETHCRV",decimals:18,name:"Curve LP TriCRV",index:73},{chainId:1,address:"0x9847a74fB7C3c4362220f616E15b83A58527F7E4",symbol:"Curve LP 3SPool",decimals:18,name:"Curve LP sUSD/snxUSD/wUSDA",index:74},{chainId:1,address:"0xdcafD1914afDBC5788B701F47283CaeEAa5FBAed",symbol:"Curve LP AMPHDUP",decimals:18,name:"Curve LP WETH/AMPH/wUSDA",index:75},{chainId:1,address:"0x05CA1ff6fF45e55906c86Ad0d3FB2EbFaE9E0891",symbol:"Curve LP AMPHDUP",decimals:18,name:"Curve LP AMPH/WETH/wUSDA",index:76},{chainId:1,address:"0x037164C912f9733A0973B18EE339FBeF66cfd2C2",symbol:"Curve LP AMPHDUP",decimals:18,name:"Curve LP AMPH/wUSDA/WETH",index:77},{chainId:1,address:"0x3921e2cb3Ac3bC009Fa4ec5Ea1ee0bc7FA4Be4C1",symbol:"Curve LP AMPHDUP",decimals:18,name:"Curve LP AMPH/wUSDA/WETH",index:78},{chainId:1,address:"0x38AB39c82BE45f660AFa4A74E85dAd4b4aDd0492",symbol:"Curve LP AMPHDUP",decimals:18,name:"Curve LP AMPH/wUSDA/WETH",index:79},{chainId:1,address:"0x86bF09aCB47AB31686bE413d614E9ded3666a1d3",symbol:"Curve LP crvUSDETHSILO",decimals:18,name:"Curve LP TriSILO",index:80},{chainId:1,address:"0x50120e3348287C6d001E455f5b00FeA07A875541",symbol:"Curve LP 3AMPH",decimals:18,name:"Curve LP 3AMPH",index:81},{chainId:1,address:"0x6A62EE3e5c4b412Cd9167D3aFd5E481e1E30715a",symbol:"Curve LP OSAKETHcrvUSD",decimals:18,name:"Curve LP TriOSAK",index:82},{chainId:1,address:"0x2570f1bD5D2735314FC102eb12Fc1aFe9e6E7193",symbol:"Curve LP TryLSD",decimals:18,name:"Curve LP TryLSD",index:83},{chainId:1,address:"0x56aEFfd9935ACabF21543701212d67aD529F7f2e",symbol:"Curve LP triSDT",decimals:18,name:"Curve LP triSDT",index:84},{chainId:1,address:"0x954313005C56b555bdC41B84D6c63B69049d7847",symbol:"Curve LP triSDT",decimals:18,name:"Curve LP triSDT",index:85},{chainId:1,address:"0x1Ac76b6e2926ff475969d22a2258449a4600E006",symbol:"Curve LP AMPHDUP",decimals:18,name:"Curve LP AMPH/WETH/wUSDA",index:86},{chainId:1,address:"0xC7DE47b9Ca2Fc753D6a2F167D8b3e19c6D18b19a",symbol:"Curve LP crvDBRINV",decimals:18,name:"Curve LP TriDBR",index:87},{chainId:1,address:"0x5b3BA844b3859f56524e99Ae54857b36c8Ae3eFE",symbol:"Curve LP crvUSDETHLDO",decimals:18,name:"Curve LP TriLDO",index:88},{chainId:1,address:"0x8e2b641271544300e59d14E27520DEA204056D66",symbol:"Curve LP crvRSReUSD",decimals:18,name:"Curve LP TriRSR",index:89},{chainId:1,address:"0xDB6925eA42897ca786a045B252D95aA7370f44b4",symbol:"Curve LP crvRSReUSDETH+",decimals:18,name:"Curve LP TriRSR",index:90}];var curveLPTokensArbitrum=[{chainId:42161,address:"0x7f90122BF0700F9E7e1F688fe926940E8839F353",symbol:"Curve LP USDC.e/USDT",decimals:18,name:"Curve LP Curve.fi USDC/USDT",index:0},{chainId:42161,address:"0x3E01dD8a5E1fb3481F0F589056b428Fc308AF0Fb",symbol:"Curve LP WBTC/renBTC",decimals:18,name:"Curve LP Curve.fi WBTC/renBTC",index:1},{chainId:42161,address:"0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2",symbol:"Curve LP crv3crypto",decimals:18,name:"Curve LP Curve.fi USD-BTC-ETH",index:2},{chainId:42161,address:"0x30dF229cefa463e991e29D42DB0bae2e122B2AC7",symbol:"Curve LP MIM/2CRV",decimals:18,name:"Curve LP Curve.fi Factory USD Metapool: MIM",index:3},{chainId:42161,address:"0xC9B8a3FDECB9D5b218d02555a8Baf332E5B740d5",symbol:"Curve LP FRAX/USDC.e",decimals:18,name:"Curve LP Curve.fi Factory Plain Pool: FRAXBP",index:4},{chainId:42161,address:"0xDbcD16e622c95AcB2650b38eC799f76BFC557a0b",symbol:"Curve LP wstETHCRV",decimals:18,name:"Curve LP Curve.fi ETH/wstETH",index:5},{chainId:42161,address:"0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2",symbol:"Curve LP crv3crypto",decimals:18,name:"Curve LP Curve.fi USD-BTC-ETH",index:6},{chainId:42161,address:"0x3dFe1324A0ee9d86337d06aEB829dEb4528DB9CA",symbol:"Curve LP crvEURSUSD",decimals:18,name:"Curve LP Curve EURS-2Crv",index:7}];var ETHAddresses=[{name:"Ether",address:"0x0000000000000000000000000000000000000000",symbol:"ETH",decimals:18,chainId:1,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{name:"Ether",address:"0x0000000000000000000000000000000000000000",symbol:"ETH",decimals:18,chainId:5,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{name:"Ether",address:"0x0000000000000000000000000000000000000000",symbol:"ETH",decimals:18,chainId:11155111,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"}];var RadiantV2RTokens=[{symbol:"rWBTC",address:"0x727354712BDFcd8596a3852Fd2065b3C34F4F770",decimals:8,underlying:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",chainId:42161},{symbol:"rUSDT",address:"0xd69D402D1bDB9A2b8c3d88D98b9CEaf9e4Cd72d9",decimals:8,underlying:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",chainId:42161},{symbol:"rUSDC",address:"0x48a29E756CC1C097388f3B2f3b570ED270423b3d",decimals:8,underlying:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",chainId:42161},{symbol:"rDAI",address:"0x0D914606f3424804FA1BbBE56CCC3416733acEC6",decimals:8,underlying:"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",chainId:42161},{symbol:"rWETH",address:"0x0dF5dfd95966753f01cb80E76dc20EA958238C46",decimals:8,underlying:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",chainId:42161},{symbol:"rWSTETH",address:"0x42C248D137512907048021B30d9dA17f48B5b7B2",decimals:8,underlying:"0x5979D7b546E38E414F7E9822514be443A4800529",chainId:42161},{symbol:"rARB",address:"0x2dADe5b7df9DA3a7e1c9748d169Cd6dFf77e3d01",decimals:8,underlying:"0x912CE59144191C1204E64559FE8253a0e49E6548",chainId:42161}];var uniswapDefaultErc20=[{chainId:1,address:"0x111111111117dC0aa78b770fA6A738034120C302",name:"1inch",symbol:"1INCH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{chainId:1,address:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",name:"Aave",symbol:"AAVE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:1,address:"0xB98d4C97425d9908E66E53A6fDf673ACcA0BE986",name:"Arcblock",symbol:"ABT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2341/thumb/arcblock.png?1547036543"},{chainId:1,address:"0xEd04915c23f00A313a544955524EB7DBD823143d",name:"Alchemy Pay",symbol:"ACH",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/12390/thumb/ACH_%281%29.png?1599691266"},{chainId:1,address:"0xADE00C28244d5CE17D72E40330B1c318cD12B7c3",name:"Ambire AdEx",symbol:"ADX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/847/thumb/Ambire_AdEx_Symbol_color.png?1655432540"},{chainId:1,address:"0x91Af0fBB28ABA7E31403Cb457106Ce79397FD4E6",name:"Aergo",symbol:"AERGO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4490/thumb/aergo.png?1647696770"},{chainId:1,address:"0x32353A6C91143bfd6C7d363B546e62a9A2489A20",name:"Adventure Gold",symbol:"AGLD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18125/thumb/lpgblc4h_400x400.jpg?1630570955"},{chainId:1,address:"0x626E8036dEB333b408Be468F951bdB42433cBF18",name:"AIOZ Network",symbol:"AIOZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14631/thumb/aioz_logo.png?1617413126"},{chainId:1,address:"0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF",name:"Alchemix",symbol:"ALCX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14113/thumb/Alchemix.png?1614409874"},{chainId:1,address:"0x27702a26126e0B3702af63Ee09aC4d1A084EF628",name:"Aleph im",symbol:"ALEPH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11676/thumb/Monochram-aleph.png?1608483725"},{chainId:1,address:"0x6B0b3a982b4634aC68dD83a4DBF02311cE324181",name:"Alethea Artificial Liquid Intelligence",symbol:"ALI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22062/thumb/alethea-logo-transparent-colored.png?1642748848"},{chainId:1,address:"0xAC51066d7bEC65Dc4589368da368b212745d63E8",name:"My Neighbor Alice",symbol:"ALICE",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/14375/thumb/alice_logo.jpg?1615782968"},{chainId:1,address:"0xa1faa113cbE53436Df28FF0aEe54275c13B40975",name:"Alpha Venture DAO",symbol:"ALPHA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12738/thumb/AlphaToken_256x256.png?1617160876"},{chainId:1,address:"0xfF20817765cB7f73d4bde2e66e067E58D11095C2",name:"Amp",symbol:"AMP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12409/thumb/amp-200x200.png?1599625397"},{chainId:1,address:"0x8290333ceF9e6D528dD5618Fb97a76f268f3EDD4",name:"Ankr",symbol:"ANKR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4324/thumb/U85xTl2.png?1608111978"},{chainId:1,address:"0xa117000000f279D81A1D3cc75430fAA017FA5A2e",name:"Aragon",symbol:"ANT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/681/thumb/JelZ58cv_400x400.png?1601449653"},{chainId:1,address:"0x4d224452801ACEd8B2F0aebE155379bb5D594381",name:"ApeCoin",symbol:"APE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24383/small/apecoin.jpg?1647476455"},{chainId:1,address:"0x0b38210ea11411557c13457D4dA7dC6ea731B88a",name:"API3",symbol:"API3",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13256/thumb/api3.jpg?1606751424"},{chainId:1,address:"0xBA50933C268F567BDC86E1aC131BE072C6B0b71a",name:"ARPA Chain",symbol:"ARPA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8506/thumb/9u0a23XY_400x400.jpg?1559027357"},{chainId:1,address:"0x64D91f12Ece7362F91A6f8E7940Cd55F05060b92",name:"ASH",symbol:"ASH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15714/thumb/omnPqaTY.png?1622820503"},{chainId:1,address:"0x2565ae0385659badCada1031DB704442E1b69982",name:"Assemble Protocol",symbol:"ASM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11605/thumb/gpvrlkSq_400x400_%281%29.jpg?1591775789"},{chainId:1,address:"0x27054b13b1B798B345b591a4d22e6562d47eA75a",name:"AirSwap",symbol:"AST",decimals:4,logoURI:"https://assets.coingecko.com/coins/images/1019/thumb/Airswap.png?1630903484"},{chainId:1,address:"0xA2120b9e674d3fC3875f415A7DF52e382F141225",name:"Automata",symbol:"ATA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15985/thumb/ATA.jpg?1622535745"},{chainId:1,address:"0xA9B1Eb5908CfC3cdf91F9B8B3a74108598009096",name:"Bounce",symbol:"AUCTION",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13860/thumb/1_KtgpRIJzuwfHe0Rl0avP_g.jpeg?1612412025"},{chainId:1,address:"0x18aAA7115705e8be94bfFEBDE57Af9BFc265B998",name:"Audius",symbol:"AUDIO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12913/thumb/AudiusCoinLogo_2x.png?1603425727"},{chainId:1,address:"0x845576c64f9754CF09d87e45B720E82F3EeF522C",name:"Artverse Token",symbol:"AVT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19727/thumb/ewnektoB_400x400.png?1635767094"},{chainId:1,address:"0xBB0E17EF65F82Ab018d8EDd776e8DD940327B28b",name:"Axie Infinity",symbol:"AXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13029/thumb/axie_infinity_logo.png?1604471082"},{chainId:1,address:"0x3472A5A71965499acd81997a54BBA8D852C6E53d",name:"Badger DAO",symbol:"BADGER",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13287/thumb/badger_dao_logo.jpg?1607054976"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3D",name:"Balancer",symbol:"BAL",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xba100000625a3754423978a60c9317c58a424e3D/logo.png"},{chainId:1,address:"0xBA11D00c5f74255f56a5E366F4F77f5A186d7f55",name:"Band Protocol",symbol:"BAND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9545/thumb/band-protocol.png?1568730326"},{chainId:1,address:"0x0D8775F648430679A709E98d2b0Cb6250d2887EF",name:"Basic Attention Token",symbol:"BAT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/677/thumb/basic-attention-token.png?1547034427"},{chainId:1,address:"0xF17e65822b568B3903685a7c9F496CF7656Cc6C2",name:"Biconomy",symbol:"BICO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/21061/thumb/biconomy_logo.jpg?1638269749"},{chainId:1,address:"0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5",name:"BitDAO",symbol:"BIT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17627/thumb/rI_YptK8.png?1653983088"},{chainId:1,address:"0x5732046A883704404F284Ce41FfADd5b007FD668",name:"Bluzelle",symbol:"BLZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2848/thumb/ColorIcon_3x.png?1622516510"},{chainId:1,address:"0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C",name:"Bancor Network Token",symbol:"BNT",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C/logo.png"},{chainId:1,address:"0x42bBFa2e77757C645eeaAd1655E0911a7553Efbc",name:"Boba Network",symbol:"BOBA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/20285/thumb/BOBA.png?1636811576"},{chainId:1,address:"0x0391D2021f89DC339F60Fff84546EA23E337750f",name:"BarnBridge",symbol:"BOND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12811/thumb/barnbridge.jpg?1602728853"},{chainId:1,address:"0x799ebfABE77a6E34311eeEe9825190B9ECe32824",name:"Braintrust",symbol:"BTRST",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18100/thumb/braintrust.PNG?1630475394"},{chainId:1,address:"0x4Fabb145d64652a948d72533023f6E7A623C7C53",name:"Binance USD",symbol:"BUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:1,address:"0xAE12C5930881c53715B369ceC7606B70d8EB229f",name:"Coin98",symbol:"C98",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17117/thumb/logo.png?1626412904"},{chainId:1,address:"0x4F9254C83EB525f9FCf346490bbb3ed28a81C667",name:"Celer Network",symbol:"CELR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4379/thumb/Celr.png?1554705437"},{chainId:1,address:"0x8A2279d4A90B6fe1C4B30fa660cC9f926797bAA2",name:"Chromia",symbol:"CHR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/5000/thumb/Chromia.png?1559038018"},{chainId:1,address:"0x3506424F91fD33084466F402d5D97f05F8e3b4AF",name:"Chiliz",symbol:"CHZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8834/thumb/Chiliz.png?1561970540"},{chainId:1,address:"0x80C62FE4487E1351b47Ba49809EBD60ED085bf52",name:"Clover Finance",symbol:"CLV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15278/thumb/clover.png?1645084454"},{chainId:1,address:"0xc00e94Cb662C3520282E6f5717214004A7f26888",name:"Compound",symbol:"COMP",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{chainId:1,address:"0xDDB3422497E61e13543BeA06989C0789117555c5",name:"COTI",symbol:"COTI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2962/thumb/Coti.png?1559653863"},{chainId:1,address:"0x3D658390460295FB963f54dC0899cfb1c30776Df",name:"Circuits of Value",symbol:"COVAL",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/588/thumb/coval-logo.png?1599493950"},{chainId:1,address:"0xD417144312DbF50465b1C641d016962017Ef6240",name:"Covalent",symbol:"CQT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14168/thumb/covalent-cqt.png?1624545218"},{chainId:1,address:"0xA0b73E1Ff0B80914AB6fe0444E65848C4C34450b",name:"Cronos",symbol:"CRO",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/7310/thumb/oCw2s3GI_400x400.jpeg?1645172042"},{chainId:1,address:"0x08389495D7456E1951ddF7c3a1314A4bfb646d8B",name:"Crypterium",symbol:"CRPT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1901/thumb/crypt.png?1547036205"},{chainId:1,address:"0xD533a949740bb3306d119CC777fa900bA034cd52",name:"Curve DAO Token",symbol:"CRV",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xD533a949740bb3306d119CC777fa900bA034cd52/logo.png"},{chainId:1,address:"0x491604c0FDF08347Dd1fa4Ee062a822A5DD06B5D",name:"Cartesi",symbol:"CTSI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11038/thumb/cartesi.png?1592288021"},{chainId:1,address:"0x321C2fE4446C7c963dc41Dd58879AF648838f98D",name:"Cryptex Finance",symbol:"CTX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14932/thumb/glossy_icon_-_C200px.png?1619073171"},{chainId:1,address:"0xDf801468a808a32656D2eD2D2d80B72A129739f4",name:"Somnium Space CUBEs",symbol:"CUBE",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/10687/thumb/CUBE_icon.png?1617026861"},{chainId:1,address:"0x41e5560054824eA6B0732E656E3Ad64E20e94E45",name:"Civic",symbol:"CVC",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/788/thumb/civic.png?1547034556"},{chainId:1,address:"0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B",name:"Convex Finance",symbol:"CVX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15585/thumb/convex.png?1621256328"},{chainId:1,address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",name:"Dai Stablecoin",symbol:"DAI",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"},{chainId:1,address:"0x081131434f93063751813C619Ecca9C4dC7862a3",name:"Mines of Dalarnia",symbol:"DAR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/19837/thumb/dar.png?1636014223"},{chainId:1,address:"0x3A880652F47bFaa771908C07Dd8673A787dAEd3A",name:"DerivaDAO",symbol:"DDX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13453/thumb/ddx_logo.png?1608741641"},{chainId:1,address:"0x3597bfD533a99c9aa083587B074434E61Eb0A258",name:"Dent",symbol:"DENT",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/1152/thumb/gLCEA2G.png?1604543239"},{chainId:1,address:"0xfB7B4564402E5500dB5bB6d63Ae671302777C75a",name:"DexTools",symbol:"DEXT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11603/thumb/dext.png?1605790188"},{chainId:1,address:"0x84cA8bc7997272c7CfB4D0Cd3D55cd942B3c9419",name:"DIA",symbol:"DIA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11955/thumb/image.png?1646041751"},{chainId:1,address:"0x0AbdAce70D3790235af448C88547603b945604ea",name:"district0x",symbol:"DNT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/849/thumb/district0x.png?1547223762"},{chainId:1,address:"0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b",name:"DeFi Pulse Index",symbol:"DPI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12465/thumb/defi_pulse_index_set.png?1600051053"},{chainId:1,address:"0x3Ab6Ed69Ef663bd986Ee59205CCaD8A20F98b4c2",name:"Drep",symbol:"DREP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14578/thumb/KotgsCgS_400x400.jpg?1617094445"},{chainId:1,address:"0x92D6C1e31e14520e676a687F0a93788B716BEff5",name:"dYdX",symbol:"DYDX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17500/thumb/hjnIm9bV.jpg?1628009360"},{chainId:1,address:"0x961C8c0B1aaD0c0b10a51FeF6a867E3091BCef17",name:"DeFi Yield Protocol",symbol:"DYP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13480/thumb/DYP_Logo_Symbol-8.png?1655809066"},{chainId:1,address:"0xe6fd75ff38Adca4B97FBCD938c86b98772431867",name:"Elastos",symbol:"ELA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2780/thumb/Elastos.png?1597048112"},{chainId:1,address:"0x761D38e5ddf6ccf6Cf7c55759d5210750B5D60F3",name:"Dogelon Mars",symbol:"ELON",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14962/thumb/6GxcPRo3_400x400.jpg?1619157413"},{chainId:1,address:"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c",name:"Enjin Coin",symbol:"ENJ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1102/thumb/enjin-coin-logo.png?1547035078"},{chainId:1,address:"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72",name:"Ethereum Name Service",symbol:"ENS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19785/thumb/acatxTm8_400x400.jpg?1635850140"},{chainId:1,address:"0xBBc2AE13b23d715c30720F079fcd9B4a74093505",name:"Ethernity Chain",symbol:"ERN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14238/thumb/LOGO_HIGH_QUALITY.png?1647831402"},{chainId:1,address:"0xd9Fcd98c322942075A5C3860693e9f4f03AAE07b",name:"Euler",symbol:"EUL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/26149/thumb/YCvKDfl8_400x400.jpeg?1656041509"},{chainId:1,address:"0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",name:"Euro Coin",symbol:"EUROC",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/26045/thumb/euro-coin.png?1655394420"},{chainId:1,address:"0xa0246c9032bC3A600820415aE600c6388619A14D",name:"Harvest Finance",symbol:"FARM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12304/thumb/Harvest.png?1613016180"},{chainId:1,address:"0xaea46A60368A7bD060eec7DF8CBa43b7EF41Ad85",name:"Fetch ai",symbol:"FET",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/5681/thumb/Fetch.jpg?1572098136"},{chainId:1,address:"0xef3A930e1FfFFAcd2fc13434aC81bD278B0ecC8d",name:"Stafi",symbol:"FIS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12423/thumb/stafi_logo.jpg?1599730991"},{chainId:1,address:"0x41545f8b9472D758bB669ed8EaEEEcD7a9C4Ec29",name:"Forta",symbol:"FORT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/25060/thumb/Forta_lgo_%281%29.png?1655353696"},{chainId:1,address:"0x77FbA179C79De5B7653F68b5039Af940AdA60ce0",name:"Ampleforth Governance Token",symbol:"FORTH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14917/thumb/photo_2021-04-22_00.00.03.jpeg?1619020835"},{chainId:1,address:"0xc770EEfAd204B5180dF6a14Ee197D99d808ee52d",name:"ShapeShift FOX Token",symbol:"FOX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9988/thumb/FOX.png?1574330622"},{chainId:1,address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",name:"Frax",symbol:"FRAX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{chainId:1,address:"0x4E15361FD6b4BB609Fa63C81A2be19d873717870",name:"Fantom",symbol:"FTM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4001/thumb/Fantom.png?1558015016"},{chainId:1,address:"0x8c15Ef5b4B21951d50E53E4fbdA8298FFAD25057",name:"Function X",symbol:"FX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8186/thumb/47271330_590071468072434_707260356350705664_n.jpg?1556096683"},{chainId:1,address:"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",name:"Frax Share",symbol:"FXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13423/thumb/frax_share.png?1608478989"},{chainId:1,address:"0x5fAa989Af96Af85384b8a938c2EdE4A7378D9875",name:"Project Galaxy",symbol:"GAL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24530/thumb/GAL-Token-Icon.png?1651483533"},{chainId:1,address:"0x15D4c048F83bd7e37d49eA4C83a07267Ec4203dA",name:"Gala",symbol:"GALA",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/12493/thumb/GALA-COINGECKO.png?1600233435"},{chainId:1,address:"0xdab396cCF3d84Cf2D07C4454e10C8A6F5b008D2b",name:"Goldfinch",symbol:"GFI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19081/thumb/GOLDFINCH.png?1634369662"},{chainId:1,address:"0x3F382DbD960E3a9bbCeaE22651E88158d2791550",name:"Aavegotchi",symbol:"GHST",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12467/thumb/ghst_200.png?1600750321"},{chainId:1,address:"0x7DD9c5Cba05E151C895FDe1CF355C9A1D5DA6429",name:"Golem",symbol:"GLM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/542/thumb/Golem_Submark_Positive_RGB.png?1606392013"},{chainId:1,address:"0x6810e776880C02933D47DB1b9fc05908e5386b96",name:"Gnosis Token",symbol:"GNO",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6810e776880C02933D47DB1b9fc05908e5386b96/logo.png"},{chainId:1,address:"0xccC8cb5229B0ac8069C51fd58367Fd1e622aFD97",name:"Gods Unchained",symbol:"GODS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17139/thumb/10631.png?1635718182"},{chainId:1,address:"0xc944E90C64B2c07662A292be6244BDf05Cda44a7",name:"The Graph",symbol:"GRT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13397/thumb/Graph_Token.png?1608145566"},{chainId:1,address:"0xDe30da39c46104798bB5aA3fe8B9e0e1F348163F",name:"Gitcoin",symbol:"GTC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15810/thumb/gitcoin.png?1621992929"},{chainId:1,address:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",name:"Gemini Dollar",symbol:"GUSD",decimals:2,logoURI:"https://assets.coingecko.com/coins/images/5992/thumb/gemini-dollar-gusd.png?1536745278"},{chainId:1,address:"0xC08512927D12348F6620a698105e1BAac6EcD911",name:"GYEN",symbol:"GYEN",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/14191/thumb/icon_gyen_200_200.png?1614843343"},{chainId:1,address:"0x71Ab77b7dbB4fa7e017BC15090b2163221420282",name:"Highstreet",symbol:"HIGH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18973/thumb/logosq200200Coingecko.png?1634090470"},{chainId:1,address:"0xF5581dFeFD8Fb0e4aeC526bE659CFaB1f8c781dA",name:"HOPR",symbol:"HOPR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14061/thumb/Shared_HOPR_logo_512px.png?1614073468"},{chainId:1,address:"0xB705268213D593B8FD88d3FDEFF93AFF5CbDcfAE",name:"IDEX",symbol:"IDEX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2565/thumb/logomark-purple-286x286.png?1638362736"},{chainId:1,address:"0xF57e7e7C23978C3cAEC3C3548E3D615c346e79fF",name:"Immutable X",symbol:"IMX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17233/thumb/imx.png?1636691817"},{chainId:1,address:"0x0954906da0Bf32d5479e25f46056d22f08464cab",name:"Index Cooperative",symbol:"INDEX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12729/thumb/index.png?1634894321"},{chainId:1,address:"0xe28b3B32B6c345A34Ff64674606124Dd5Aceca30",name:"Injective",symbol:"INJ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12882/thumb/Secondary_Symbol.png?1628233237"},{chainId:1,address:"0x41D5D79431A913C4aE7d69a668ecdfE5fF9DFB68",name:"Inverse Finance",symbol:"INV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14205/thumb/inverse_finance.jpg?1614921871"},{chainId:1,address:"0x6fB3e0A217407EFFf7Ca062D46c26E5d60a14d69",name:"IoTeX",symbol:"IOTX",decimals:18,logoURI:"https://s2.coinmarketcap.com/static/img/coins/64x64/2777.png"},{chainId:1,address:"0x23894DC9da6c94ECb439911cAF7d337746575A72",name:"Geojam",symbol:"JAM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24648/thumb/ey40AzBN_400x400.jpg?1648507272"},{chainId:1,address:"0x7420B4b9a0110cdC71fB720908340C03F9Bc03EC",name:"JasmyCoin",symbol:"JASMY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13876/thumb/JASMY200x200.jpg?1612473259"},{chainId:1,address:"0x4B1E80cAC91e2216EEb63e29B957eB91Ae9C2Be8",name:"Jupiter",symbol:"JUP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/10351/thumb/logo512.png?1632480932"},{chainId:1,address:"0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC",name:"Keep Network",symbol:"KEEP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3373/thumb/IuNzUb5b_400x400.jpg?1589526336"},{chainId:1,address:"0x4CC19356f2D37338b9802aa8E8fc58B0373296E7",name:"SelfKey",symbol:"KEY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2034/thumb/selfkey.png?1548608934"},{chainId:1,address:"0xdd974D5C2e2928deA5F71b9825b8b646686BD200",name:"Kyber Network Crystal",symbol:"KNC",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdd974D5C2e2928deA5F71b9825b8b646686BD200/logo.png"},{chainId:1,address:"0x1cEB5cB57C4D4E2b2433641b95Dd330A33185A44",name:"Keep3rV1",symbol:"KP3R",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12966/thumb/kp3r_logo.jpg?1607057458"},{chainId:1,address:"0x464eBE77c293E473B48cFe96dDCf88fcF7bFDAC0",name:"KRYLL",symbol:"KRL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2807/thumb/krl.png?1547036979"},{chainId:1,address:"0x037A54AaB062628C9Bbae1FDB1583c195585fe41",name:"LCX",symbol:"LCX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9985/thumb/zRPSu_0o_400x400.jpg?1574327008"},{chainId:1,address:"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",name:"Lido DAO",symbol:"LDO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13573/thumb/Lido_DAO.png?1609873644"},{chainId:1,address:"0x514910771AF9Ca656af840dff83E8264EcF986CA",name:"ChainLink Token",symbol:"LINK",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{chainId:1,address:"0x61E90A50137E1F645c9eF4a0d3A4f01477738406",name:"League of Kingdoms",symbol:"LOKA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22572/thumb/loka_64pix.png?1642643271"},{chainId:1,address:"0xA4e8C3Ec456107eA67d3075bF9e3DF3A75823DB0",name:"Loom Network",symbol:"LOOM",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA4e8C3Ec456107eA67d3075bF9e3DF3A75823DB0/logo.png"},{chainId:1,address:"0x58b6A8A3302369DAEc383334672404Ee733aB239",name:"Livepeer",symbol:"LPT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/7137/thumb/logo-circle-green.png?1619593365"},{chainId:1,address:"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D",name:"Liquity",symbol:"LQTY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14665/thumb/200-lqty-icon.png?1617631180"},{chainId:1,address:"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD",name:"LoopringCoin V2",symbol:"LRC",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD/logo.png"},{chainId:1,address:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",name:"Liquity USD",symbol:"LUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png?1617631327"},{chainId:1,address:"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942",name:"Decentraland",symbol:"MANA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/878/thumb/decentraland-mana.png?1550108745"},{chainId:1,address:"0x69af81e73A73B40adF4f3d4223Cd9b1ECE623074",name:"Mask Network",symbol:"MASK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14051/thumb/Mask_Network.jpg?1614050316"},{chainId:1,address:"0x08d967bb0134F2d07f7cfb6E246680c53927DD30",name:"MATH",symbol:"MATH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11335/thumb/2020-05-19-token-200.png?1589940590"},{chainId:1,address:"0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0",name:"Polygon",symbol:"MATIC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4713/thumb/matic-token-icon.png?1624446912"},{chainId:1,address:"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6",name:"Merit Circle",symbol:"MC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19304/thumb/Db4XqML.png?1634972154"},{chainId:1,address:"0xfC98e825A2264D890F9a1e68ed50E1526abCcacD",name:"Moss Carbon Credit",symbol:"MCO2",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14414/thumb/ENtxnThA_400x400.jpg?1615948522"},{chainId:1,address:"0x814e0908b12A99FeCf5BC101bB5d0b8B5cDf7d26",name:"Measurable Data Token",symbol:"MDT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2441/thumb/mdt_logo.png?1569813574"},{chainId:1,address:"0x9E32b13ce7f2E80A01932B42553652E053D6ed8e",name:"Metis",symbol:"METIS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15595/thumb/metis.jpeg?1660285312"},{chainId:1,address:"0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",name:"Magic Internet Money",symbol:"MIM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/16786/thumb/mimlogopng.png?1624979612"},{chainId:1,address:"0x09a3EcAFa817268f77BE1283176B946C4ff2E608",name:"Mirror Protocol",symbol:"MIR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13295/thumb/mirror_logo_transparent.png?1611554658"},{chainId:1,address:"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2",name:"Maker",symbol:"MKR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2/logo.png"},{chainId:1,address:"0xec67005c4E498Ec7f55E092bd1d35cbC47C91892",name:"Melon",symbol:"MLN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/605/thumb/melon.png?1547034295"},{chainId:1,address:"0x275f5Ad03be0Fa221B4C6649B8AeE09a42D9412A",name:"Monavale",symbol:"MONA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13298/thumb/monavale_logo.jpg?1607232721"},{chainId:1,address:"0x33349B282065b0284d756F0577FB39c158F935e6",name:"Maple",symbol:"MPL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14097/thumb/photo_2021-05-03_14.20.41.jpeg?1620022863"},{chainId:1,address:"0xF433089366899D83a9f26A773D59ec7eCF30355e",name:"Metal",symbol:"MTL",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/763/thumb/Metal.png?1592195010"},{chainId:1,address:"0x65Ef703f5594D2573eb71Aaf55BC0CB548492df4",name:"Multichain",symbol:"MULTI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22087/thumb/1_Wyot-SDGZuxbjdkaOeT2-A.png?1640764238"},{chainId:1,address:"0xe2f2a5C287993345a840Db3B0845fbC70f5935a5",name:"mStable USD",symbol:"MUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11576/thumb/mStable_USD.png?1595591803"},{chainId:1,address:"0xB6Ca7399B4F9CA56FC27cBfF44F4d2e4Eef1fc81",name:"Muse DAO",symbol:"MUSE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13230/thumb/muse_logo.png?1606460453"},{chainId:1,address:"0xAE788F80F2756A86aa2F410C651F2aF83639B95b",name:"GensoKishi Metaverse",symbol:"MV",decimals:18,logoURI:"https://s2.coinmarketcap.com/static/img/coins/64x64/17704.png"},{chainId:1,address:"0x5Ca381bBfb58f0092df149bD3D243b08B9a8386e",name:"MXC",symbol:"MXC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4604/thumb/mxc.png?1655534336"},{chainId:1,address:"0x9E46A38F5DaaBe8683E10793b06749EEF7D733d1",name:"PolySwarm",symbol:"NCT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2843/thumb/ImcYCVfX_400x400.jpg?1628519767"},{chainId:1,address:"0x04abEdA201850aC0124161F037Efd70c74ddC74C",name:"Nest Protocol",symbol:"NEST",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11284/thumb/52954052.png?1589868539"},{chainId:1,address:"0x5Cf04716BA20127F1E2297AdDCf4B5035000c9eb",name:"NKN",symbol:"NKN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3375/thumb/nkn.png?1548329212"},{chainId:1,address:"0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671",name:"Numeraire",symbol:"NMR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671/logo.png"},{chainId:1,address:"0x4fE83213D56308330EC302a8BD641f1d0113A4Cc",name:"NuCypher",symbol:"NU",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3318/thumb/photo1198982838879365035.jpg?1547037916"},{chainId:1,address:"0x967da4048cD07aB37855c090aAF366e4ce1b9F48",name:"Ocean Protocol",symbol:"OCEAN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3687/thumb/ocean-protocol-logo.jpg?1547038686"},{chainId:1,address:"0x8207c1FfC5B6804F6024322CcF34F29c3541Ae26",name:"Origin Protocol",symbol:"OGN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3296/thumb/op.jpg?1547037878"},{chainId:1,address:"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07",name:"OMG Network",symbol:"OMG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/776/thumb/OMG_Network.jpg?1591167168"},{chainId:1,address:"0x6F59e0461Ae5E2799F1fB3847f05a63B16d0DbF8",name:"ORCA Alliance",symbol:"ORCA",decimals:18,logoURI:"https://s2.coinmarketcap.com/static/img/coins/64x64/5183.png"},{chainId:1,address:"0x0258F474786DdFd37ABCE6df6BBb1Dd5dfC4434a",name:"Orion Protocol",symbol:"ORN",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/11841/thumb/orion_logo.png?1594943318"},{chainId:1,address:"0x4575f41308EC1483f3d399aa9a2826d74Da13Deb",name:"Orchid",symbol:"OXT",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4575f41308EC1483f3d399aa9a2826d74Da13Deb/logo.png"},{chainId:1,address:"0xc1D204d77861dEf49b6E769347a883B15EC397Ff",name:"PayperEx",symbol:"PAX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1601/thumb/pax.png?1547035800"},{chainId:1,address:"0x45804880De22913dAFE09f4980848ECE6EcbAf78",name:"PAX Gold",symbol:"PAXG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9519/thumb/paxg.PNG?1568542565"},{chainId:1,address:"0xbC396689893D065F41bc2C6EcbeE5e0085233447",name:"Perpetual Protocol",symbol:"PERP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12381/thumb/60d18e06844a844ad75901a9_mark_only_03.png?1628674771"},{chainId:1,address:"0x3a4f40631a4f906c2BaD353Ed06De7A5D3fCb430",name:"PlayDapp",symbol:"PLA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14316/thumb/54023228.png?1615366911"},{chainId:1,address:"0xD8912C10681D8B21Fd3742244f44658dBA12264E",name:"Pluton",symbol:"PLU",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1241/thumb/pluton.png?1548331624"},{chainId:1,address:"0x83e6f1E41cdd28eAcEB20Cb649155049Fac3D5Aa",name:"Polkastarter",symbol:"POLS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12648/thumb/polkastarter.png?1609813702"},{chainId:1,address:"0x9992eC3cF6A55b00978cdDF2b27BC6882d88D1eC",name:"Polymath",symbol:"POLY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2784/thumb/inKkF01.png?1605007034"},{chainId:1,address:"0x57B946008913B82E4dF85f501cbAeD910e58D26C",name:"Marlin",symbol:"POND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8903/thumb/POND_200x200.png?1622515451"},{chainId:1,address:"0x595832F8FC6BF59c85C527fEC3740A1b7a361269",name:"Power Ledger",symbol:"POWR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/1104/thumb/power-ledger.png?1547035082"},{chainId:1,address:"0x226bb599a12C826476e3A771454697EA52E9E220",name:"Propy",symbol:"PRO",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/869/thumb/propy.png?1548332100"},{chainId:1,address:"0x362bc847A3a9637d3af6624EeC853618a43ed7D2",name:"PARSIQ",symbol:"PRQ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11973/thumb/DsNgK0O.png?1596590280"},{chainId:1,address:"0xfB5c6815cA3AC72Ce9F5006869AE67f18bF77006",name:"pSTAKE Finance",symbol:"PSTAKE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/23931/thumb/PSTAKE_Dark.png?1645709930"},{chainId:1,address:"0x4a220E6096B25EADb88358cb44068A3248254675",name:"Quant",symbol:"QNT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3370/thumb/5ZOu7brX_400x400.jpg?1612437252"},{chainId:1,address:"0x4123a133ae3c521FD134D7b13A2dEC35b56c2463",name:"Qredo",symbol:"QRDO",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/17541/thumb/qrdo.png?1630637735"},{chainId:1,address:"0x99ea4dB9EE77ACD40B119BD1dC4E33e1C070b80d",name:"Quantstamp",symbol:"QSP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1219/thumb/0_E0kZjb4dG4hUnoDD_.png?1604815917"},{chainId:1,address:"0x6c28AeF8977c9B773996d0e8376d2EE379446F2f",name:"Quickswap",symbol:"QUICK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13970/thumb/1_pOU6pBMEmiL-ZJVb0CYRjQ.png?1613386659"},{chainId:1,address:"0x31c8EAcBFFdD875c74b94b077895Bd78CF1E64A3",name:"Radicle",symbol:"RAD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14013/thumb/radicle.png?1614402918"},{chainId:1,address:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",name:"Rai Reflex Index",symbol:"RAI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{chainId:1,address:"0xba5BDe662c17e2aDFF1075610382B9B691296350",name:"SuperRare",symbol:"RARE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17753/thumb/RARE.jpg?1629220534"},{chainId:1,address:"0xFca59Cd816aB1eaD66534D82bc21E7515cE441CF",name:"Rarible",symbol:"RARI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11845/thumb/Rari.png?1594946953"},{chainId:1,address:"0xA4EED63db85311E22dF4473f87CcfC3DaDCFA3E3",name:"Rubic",symbol:"RBC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12629/thumb/200x200.png?1607952509"},{chainId:1,address:"0x6123B0049F904d730dB3C36a31167D9d4121fA6B",name:"Ribbon Finance",symbol:"RBN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15823/thumb/RBN_64x64.png?1633529723"},{chainId:1,address:"0x408e41876cCCDC0F92210600ef50372656052a38",name:"Republic Token",symbol:"REN",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x408e41876cCCDC0F92210600ef50372656052a38/logo.png"},{chainId:1,address:"0x1985365e9f78359a9B6AD760e32412f4a445E862",name:"Reputation Augur v1",symbol:"REP",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1985365e9f78359a9B6AD760e32412f4a445E862/logo.png"},{chainId:1,address:"0x221657776846890989a759BA2973e427DfF5C9bB",name:"Reputation Augur v2",symbol:"REPv2",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x221657776846890989a759BA2973e427DfF5C9bB/logo.png"},{chainId:1,address:"0x8f8221aFbB33998d8584A2B05749bA73c37a938a",name:"Request",symbol:"REQ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1031/thumb/Request_icon_green.png?1643250951"},{chainId:1,address:"0x557B933a7C2c45672B610F8954A3deB39a51A8Ca",name:"REVV",symbol:"REVV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12373/thumb/REVV_TOKEN_Refined_2021_%281%29.png?1627652390"},{chainId:1,address:"0xD291E7a03283640FDc51b121aC401383A46cC623",name:"Rari Governance Token",symbol:"RGT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12900/thumb/Rari_Logo_Transparent.png?1613978014"},{chainId:1,address:"0x607F4C5BB672230e8672085532f7e901544a7375",name:"iExec RLC",symbol:"RLC",decimals:9,logoURI:"https://assets.coingecko.com/coins/images/646/thumb/pL1VuXm.png?1604543202"},{chainId:1,address:"0xf1f955016EcbCd7321c7266BccFB96c68ea5E49b",name:"Rally",symbol:"RLY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12843/thumb/image.png?1611212077"},{chainId:1,address:"0x6De037ef9aD2725EB40118Bb1702EBb27e4Aeb24",name:"Render Token",symbol:"RNDR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11636/thumb/rndr.png?1638840934"},{chainId:1,address:"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a",name:"Rook",symbol:"ROOK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13005/thumb/keeper_dao_logo.jpg?1604316506"},{chainId:1,address:"0x3845badAde8e6dFF049820680d1F14bD3903a5d0",name:"The Sandbox",symbol:"SAND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12129/thumb/sandbox_logo.jpg?1597397942"},{chainId:1,address:"0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE",name:"Shiba Inu",symbol:"SHIB",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11939/thumb/shiba.png?1622619446"},{chainId:1,address:"0x7C84e62859D0715eb77d1b1C4154Ecd6aBB21BEC",name:"Shping",symbol:"SHPING",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2588/thumb/r_yabKKi_400x400.jpg?1639470164"},{chainId:1,address:"0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7",name:"SKALE",symbol:"SKL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13245/thumb/SKALE_token_300x300.png?1606789574"},{chainId:1,address:"0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25",name:"Smooth Love Potion",symbol:"SLP",decimals:0,logoURI:"https://assets.coingecko.com/coins/images/10366/thumb/SLP.png?1578640057"},{chainId:1,address:"0x744d70FDBE2Ba4CF95131626614a1763DF805B9E",name:"Status",symbol:"SNT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/779/thumb/status.png?1548610778"},{chainId:1,address:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",name:"Synthetix Network Token",symbol:"SNX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{chainId:1,address:"0x23B608675a2B2fB1890d3ABBd85c5775c51691d5",name:"Unisocks",symbol:"SOCKS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/10717/thumb/qFrcoiM.png?1582525244"},{chainId:1,address:"0xD31a59c85aE9D8edEFeC411D448f90841571b89c",name:"SOL Wormhole ",symbol:"SOL",decimals:9,logoURI:"https://assets.coingecko.com/coins/images/22876/thumb/SOL_wh_small.png?1644224316"},{chainId:1,address:"0x090185f2135308BaD17527004364eBcC2D37e5F6",name:"Spell Token",symbol:"SPELL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15861/thumb/abracadabra-3.png?1622544862"},{chainId:1,address:"0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6",name:"Stargate Finance",symbol:"STG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24413/thumb/STG_LOGO.png?1647654518"},{chainId:1,address:"0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC",name:"Storj Token",symbol:"STORJ",decimals:8,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC/logo.png"},{chainId:1,address:"0x006BeA43Baa3f7A6f765F14f10A1a1b08334EF45",name:"Stox",symbol:"STX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1230/thumb/stox-token.png?1547035256"},{chainId:1,address:"0x0763fdCCF1aE541A5961815C0872A8c5Bc6DE4d7",name:"SUKU",symbol:"SUKU",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11969/thumb/UmfW5S6f_400x400.jpg?1596602238"},{chainId:1,address:"0xe53EC727dbDEB9E2d5456c3be40cFF031AB40A55",name:"SuperFarm",symbol:"SUPER",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14040/thumb/6YPdWn6.png?1613975899"},{chainId:1,address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",name:"Synth sUSD",symbol:"sUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{chainId:1,address:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",name:"Sushi",symbol:"SUSHI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{chainId:1,address:"0x0bb217E40F8a5Cb79Adf04E1aAb60E5abd0dfC1e",name:"SWFTCOIN",symbol:"SWFTC",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/2346/thumb/SWFTCoin.jpg?1618392022"},{chainId:1,address:"0x8CE9137d39326AD0cD6491fb5CC0CbA0e089b6A9",name:"Swipe",symbol:"SXP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9368/thumb/swipe.png?1566792311"},{chainId:1,address:"0xf293d23BF2CDc05411Ca0edDD588eb1977e8dcd4",name:"Sylo",symbol:"SYLO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/6430/thumb/SYLO.svg?1589527756"},{chainId:1,address:"0x0f2D719407FdBeFF09D87557AbB7232601FD9F29",name:"Synapse",symbol:"SYN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18024/thumb/syn.png?1635002049"},{chainId:1,address:"0xCdF7028ceAB81fA0C6971208e83fa7872994beE5",name:"Threshold Network",symbol:"T",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22228/thumb/nFPNiSbL_400x400.jpg?1641220340"},{chainId:1,address:"0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa",name:"tBTC",symbol:"TBTC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11224/thumb/tBTC.png?1589620754"},{chainId:1,address:"0x485d17A6f1B8780392d53D64751824253011A260",name:"ChronoTech",symbol:"TIME",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/604/thumb/time-32x32.png?1627130666"},{chainId:1,address:"0x888888848B652B3E3a0f34c96E00EEC0F3a23F72",name:"Alien Worlds",symbol:"TLM",decimals:4,logoURI:"https://assets.coingecko.com/coins/images/14676/thumb/kY-C4o7RThfWrDQsLCAG4q4clZhBDDfJQVhWUEKxXAzyQYMj4Jmq1zmFwpRqxhAJFPOa0AsW_PTSshoPuMnXNwq3rU7Imp15QimXTjlXMx0nC088mt1rIwRs75GnLLugWjSllxgzvQ9YrP4tBgclK4_rb17hjnusGj_c0u2fx0AvVokjSNB-v2poTj0xT9BZRCbzRE3-lF1.jpg?1617700061"},{chainId:1,address:"0x2e9d63788249371f1DFC918a52f8d799F4a38C94",name:"Tokemak",symbol:"TOKE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17495/thumb/tokemak-avatar-200px-black.png?1628131614"},{chainId:1,address:"0x2Ab6Bb8408ca3199B8Fa6C92d5b455F820Af03c4",name:"TE FOOD",symbol:"TONE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2325/thumb/tec.png?1547036538"},{chainId:1,address:"0xaA7a9CA87d3694B5755f213B5D04094b8d0F0A6F",name:"OriginTrail",symbol:"TRAC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1877/thumb/TRAC.jpg?1635134367"},{chainId:1,address:"0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0",name:"Tellor",symbol:"TRB",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9644/thumb/Blk_icon_current.png?1584980686"},{chainId:1,address:"0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B",name:"Tribe",symbol:"TRIBE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14575/thumb/tribe.PNG?1617487954"},{chainId:1,address:"0x4C19596f5aAfF459fA38B0f7eD92F11AE6543784",name:"TrueFi",symbol:"TRU",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/13180/thumb/truefi_glyph_color.png?1617610941"},{chainId:1,address:"0xd084B83C305daFD76AE3E1b4E1F1fe2eCcCb3988",name:"The Virtua Kolect",symbol:"TVK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13330/thumb/virtua_original.png?1656043619"},{chainId:1,address:"0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828",name:"UMA Voting Token v1",symbol:"UMA",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828/logo.png"},{chainId:1,address:"0x441761326490cACF7aF299725B6292597EE822c2",name:"Unifi Protocol DAO",symbol:"UNFI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13152/thumb/logo-2.png?1605748967"},{address:"0x1757f2E7BEE5abE1A79532000d05e32D90dD79fF",chainId:421613,name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{address:"0x179522635726710Dd7D2035a81d856de4Aa7836c",chainId:421613,name:"USD//C",symbol:"USDC",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{chainId:1,address:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",name:"Uniswap",symbol:"UNI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png?1600306604"},{chainId:1,address:"0x70D2b7C19352bB76e4409858FF5746e500f2B67c",name:"Pawtocol",symbol:"UPI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12186/thumb/pawtocol.jpg?1597962008"},{chainId:1,address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",name:"USDCoin",symbol:"USDC",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{chainId:1,address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",name:"Tether USD",symbol:"USDT",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{chainId:1,address:"0x3C4B6E6e1eA3D4863700D7F76b36B7f3D3f13E3d",name:"Voyager Token",symbol:"VGX",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/794/thumb/Voyager-vgx.png?1575693595"},{chainId:1,address:"0xEDB171C18cE90B633DB442f2A6F72874093b49Ef",name:"Wrapped Ampleforth",symbol:"WAMPL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/20825/thumb/photo_2021-11-25_02-05-11.jpg?1637811951"},{chainId:1,address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",name:"Wrapped BTC",symbol:"WBTC",decimals:8,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{chainId:1,address:"0xc221b7E65FfC80DE234bbB6667aBDd46593D34F0",name:"Wrapped Centrifuge",symbol:"WCFG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17106/thumb/WCFG.jpg?1626266462"},{chainId:1,address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{chainId:1,address:"0x4691937a7508860F876c9c0a2a617E7d9E945D4B",name:"WOO Network",symbol:"WOO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12921/thumb/w2UiemF__400x400.jpg?1603670367"},{chainId:1,address:"0xA2cd3D43c775978A96BdBf12d733D5A1ED94fb18",name:"Chain",symbol:"XCN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24210/thumb/Chain_icon_200x200.png?1646895054"},{chainId:1,address:"0x55296f69f40Ea6d20E478533C15A6B08B654E758",name:"XYO Network",symbol:"XYO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4519/thumb/XYO_Network-logo.png?1547039819"},{chainId:1,address:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",name:"yearn finance",symbol:"YFI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{chainId:1,address:"0xa1d0E215a23d7030842FC67cE582a6aFa3CCaB83",name:"DFI money",symbol:"YFII",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11902/thumb/YFII-logo.78631676.png?1598677348"},{chainId:1,address:"0x25f8087EAD173b73D6e8B84329989A8eEA16CF73",name:"Yield Guild Games",symbol:"YGG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17358/thumb/le1nzlO6_400x400.jpg?1632465691"},{chainId:1,address:"0xE41d2489571d322189246DaFA5ebDe1F4699F498",name:"0x Protocol Token",symbol:"ZRX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xE41d2489571d322189246DaFA5ebDe1F4699F498/logo.png"},{chainId:1,address:"0xb1191f691a355b43542bea9b8847bc73e7abb137",name:"Kirobo",symbol:"KIRO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12688/thumb/QmScxyKBwqbGJZmp38EwaoRpXbzPkq3tvuMjeuJE1YLZeG.png?1601672684"},{chainId:5,address:"0xba232b47a7dDFCCc221916cf08Da03a4973D3A1D",name:"Kirobo",symbol:"KIRO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12688/thumb/QmScxyKBwqbGJZmp38EwaoRpXbzPkq3tvuMjeuJE1YLZeG.png?1601672684"},{chainId:5,address:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",name:"Uniswap",symbol:"UNI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png?1600306604"},{chainId:5,address:"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{chainId:10,address:"0x76FB31fb4af56892A25e32cFC43De717950c9278",name:"Aave",symbol:"AAVE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:10,address:"0x3e7eF8f50246f725885102E8238CBba33F276747",name:"BarnBridge",symbol:"BOND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12811/thumb/barnbridge.jpg?1602728853"},{chainId:10,address:"0x9C9e5fD8bbc25984B178FdCE6117Defa39d2db39",name:"Binance USD",symbol:"BUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:10,address:"0x0994206dfE8De6Ec6920FF4D779B0d950605Fb53",name:"Curve DAO Token",symbol:"CRV",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xD533a949740bb3306d119CC777fa900bA034cd52/logo.png"},{chainId:10,address:"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",name:"Dai Stablecoin",symbol:"DAI",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"},{chainId:10,address:"0x65559aA14915a70190438eF90104769e5E890A00",name:"Ethereum Name Service",symbol:"ENS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19785/thumb/acatxTm8_400x400.jpg?1635850140"},{chainId:10,address:"0x350a791Bfc2C21F9Ed5d10980Dad2e2638ffa7f6",name:"ChainLink Token",symbol:"LINK",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{chainId:10,address:"0xFEaA9194F9F8c1B65429E31341a103071464907E",name:"LoopringCoin V2",symbol:"LRC",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD/logo.png"},{chainId:10,address:"0xc40F949F8a4e094D1b49a23ea9241D289B7b2819",name:"Liquity USD",symbol:"LUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png?1617631327"},{chainId:10,address:"0x3390108E913824B8eaD638444cc52B9aBdF63798",name:"Mask Network",symbol:"MASK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14051/thumb/Mask_Network.jpg?1614050316"},{chainId:10,address:"0xab7bAdEF82E9Fe11f6f33f87BC9bC2AA27F2fCB5",name:"Maker",symbol:"MKR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2/logo.png"},{chainId:10,address:"0x4200000000000000000000000000000000000042",name:"Optimism",symbol:"OP",decimals:18,logoURI:"https://ethereum-optimism.github.io/data/OP/logo.png"},{chainId:10,address:"0x9e1028F5F1D5eDE59748FFceE5532509976840E0",name:"Perpetual Protocol",symbol:"PERP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12381/thumb/60d18e06844a844ad75901a9_mark_only_03.png?1628674771"},{chainId:10,address:"0x7FB688CCf682d58f86D7e38e03f9D22e7705448B",name:"Rai Reflex Index",symbol:"RAI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{chainId:10,address:"0xB548f63D4405466B36C0c0aC3318a22fDcec711a",name:"Rari Governance Token",symbol:"RGT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12900/thumb/Rari_Logo_Transparent.png?1613978014"},{chainId:10,address:"0x8700dAec35aF8Ff88c16BdF0418774CB3D7599B4",name:"Synthetix Network Token",symbol:"SNX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{chainId:10,address:"0xE7798f023fC62146e8Aa1b36Da45fb70855a77Ea",name:"UMA Voting Token v1",symbol:"UMA",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828/logo.png"},{chainId:10,address:"0x6fd9d7AD17242c41f7131d257212c54A0e816691",name:"Uniswap",symbol:"UNI",decimals:18,logoURI:"ipfs://QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg"},{chainId:10,address:"0x7F5c764cBc14f9669B88837ca1490cCa17c31607",name:"USDCoin",symbol:"USDC",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{chainId:10,address:"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58",name:"Tether USD",symbol:"USDT",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{chainId:10,address:"0x68f180fcCe6836688e9084f035309E29Bf0A2095",name:"Wrapped BTC",symbol:"WBTC",decimals:8,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{chainId:10,address:"0x4200000000000000000000000000000000000006",name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{chainId:56,address:"0x111111111117dC0aa78b770fA6A738034120C302",name:"1inch",symbol:"1INCH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{chainId:56,address:"0xfb6115445Bff7b52FeB98650C87f44907E58f802",name:"Aave",symbol:"AAVE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:56,address:"0xBc7d6B50616989655AfD682fb42743507003056D",name:"Alchemy Pay",symbol:"ACH",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/12390/thumb/ACH_%281%29.png?1599691266"},{chainId:56,address:"0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819",name:"Ambire AdEx",symbol:"ADX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/847/thumb/Ambire_AdEx_Symbol_color.png?1655432540"},{chainId:56,address:"0x33d08D8C7a168333a85285a68C0042b39fC3741D",name:"AIOZ Network",symbol:"AIOZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14631/thumb/aioz_logo.png?1617413126"},{chainId:56,address:"0x82D2f8E02Afb160Dd5A480a617692e62de9038C4",name:"Aleph im",symbol:"ALEPH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11676/thumb/Monochram-aleph.png?1608483725"},{chainId:56,address:"0xAC51066d7bEC65Dc4589368da368b212745d63E8",name:"My Neighbor Alice",symbol:"ALICE",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/14375/thumb/alice_logo.jpg?1615782968"},{chainId:56,address:"0xa1faa113cbE53436Df28FF0aEe54275c13B40975",name:"Alpha Venture DAO",symbol:"ALPHA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12738/thumb/AlphaToken_256x256.png?1617160876"},{chainId:56,address:"0xf307910A4c7bbc79691fD374889b36d8531B08e3",name:"Ankr",symbol:"ANKR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4324/thumb/U85xTl2.png?1608111978"},{chainId:56,address:"0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e",name:"ARPA Chain",symbol:"ARPA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8506/thumb/9u0a23XY_400x400.jpg?1559027357"},{chainId:56,address:"0xA2120b9e674d3fC3875f415A7DF52e382F141225",name:"Automata",symbol:"ATA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15985/thumb/ATA.jpg?1622535745"},{chainId:56,address:"0x8b1f4432F943c465A973FeDC6d7aa50Fc96f1f65",name:"Axelar",symbol:"AXL",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/27277/large/V-65_xQ1_400x400.jpeg"},{chainId:56,address:"0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0",name:"Axie Infinity",symbol:"AXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13029/thumb/axie_infinity_logo.png?1604471082"},{chainId:56,address:"0x935a544Bf5816E3A7C13DB2EFe3009Ffda0aCdA2",name:"Bluzelle",symbol:"BLZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2848/thumb/ColorIcon_3x.png?1622516510"},{chainId:56,address:"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",name:"Binance USD",symbol:"BUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:56,address:"0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6",name:"Coin98",symbol:"C98",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17117/thumb/logo.png?1626412904"},{chainId:56,address:"0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE",name:"Chromia",symbol:"CHR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/5000/thumb/Chromia.png?1559038018"},{chainId:56,address:"0x09E889BB4D5b474f561db0491C38702F367A4e4d",name:"Clover Finance",symbol:"CLV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15278/thumb/clover.png?1645084454"},{chainId:56,address:"0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8",name:"Compound",symbol:"COMP",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{chainId:56,address:"0xd15CeE1DEaFBad6C0B3Fd7489677Cc102B141464",name:"Circuits of Value",symbol:"COVAL",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/588/thumb/coval-logo.png?1599493950"},{chainId:56,address:"0x8dA443F84fEA710266C8eB6bC34B71702d033EF2",name:"Cartesi",symbol:"CTSI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11038/thumb/cartesi.png?1592288021"},{chainId:56,address:"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3",name:"Dai Stablecoin",symbol:"DAI",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"},{chainId:56,address:"0x23CE9e926048273eF83be0A3A8Ba9Cb6D45cd978",name:"Mines of Dalarnia",symbol:"DAR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/19837/thumb/dar.png?1636014223"},{chainId:56,address:"0xe91a8D2c584Ca93C7405F15c22CdFE53C29896E3",name:"DexTools",symbol:"DEXT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11603/thumb/dext.png?1605790188"},{chainId:56,address:"0x99956D38059cf7bEDA96Ec91Aa7BB2477E0901DD",name:"DIA",symbol:"DIA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11955/thumb/image.png?1646041751"},{chainId:56,address:"0xEC583f25A049CC145dA9A256CDbE9B6201a705Ff",name:"Drep",symbol:"DREP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14578/thumb/KotgsCgS_400x400.jpg?1617094445"},{chainId:56,address:"0x961C8c0B1aaD0c0b10a51FeF6a867E3091BCef17",name:"DeFi Yield Protocol",symbol:"DYP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13480/thumb/DYP_Logo_Symbol-8.png?1655809066"},{chainId:56,address:"0x7bd6FaBD64813c48545C9c0e312A0099d9be2540",name:"Dogelon Mars",symbol:"ELON",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14962/thumb/6GxcPRo3_400x400.jpg?1619157413"},{chainId:56,address:"0x4B5C23cac08a567ecf0c1fFcA8372A45a5D33743",name:"Harvest Finance",symbol:"FARM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12304/thumb/Harvest.png?1613016180"},{chainId:56,address:"0x031b41e504677879370e9DBcF937283A8691Fa7f",name:"Fetch ai",symbol:"FET",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/5681/thumb/Fetch.jpg?1572098136"},{chainId:56,address:"0x90C97F71E18723b0Cf0dfa30ee176Ab653E89F40",name:"Frax",symbol:"FRAX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{chainId:56,address:"0xAD29AbB318791D579433D831ed122aFeAf29dcfe",name:"Fantom",symbol:"FTM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4001/thumb/Fantom.png?1558015016"},{chainId:56,address:"0xe48A3d7d0Bc88d552f730B62c006bC925eadB9eE",name:"Frax Share",symbol:"FXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13423/thumb/frax_share.png?1608478989"},{chainId:56,address:"0xe4Cc45Bb5DBDA06dB6183E8bf016569f40497Aa5",name:"Project Galaxy",symbol:"GAL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24530/thumb/GAL-Token-Icon.png?1651483533"},{chainId:56,address:"0x44Ec807ce2F4a6F2737A92e985f318d035883e47",name:"Hashflow",symbol:"HFT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/26136/large/hashflow-icon-cmc.png"},{chainId:56,address:"0x5f4Bde007Dc06b867f86EBFE4802e34A1fFEEd63",name:"Highstreet",symbol:"HIGH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18973/thumb/logosq200200Coingecko.png?1634090470"},{chainId:56,address:"0xa2B726B1145A4773F68593CF171187d8EBe4d495",name:"Injective",symbol:"INJ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12882/thumb/Secondary_Symbol.png?1628233237"},{chainId:56,address:"0x0231f91e02DebD20345Ae8AB7D71A41f8E140cE7",name:"Jupiter",symbol:"JUP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/10351/thumb/logo512.png?1632480932"},{chainId:56,address:"0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD",name:"ChainLink Token",symbol:"LINK",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{chainId:56,address:"0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3",name:"Mask Network",symbol:"MASK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14051/thumb/Mask_Network.jpg?1614050316"},{chainId:56,address:"0xF218184Af829Cf2b0019F8E6F0b2423498a36983",name:"MATH",symbol:"MATH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11335/thumb/2020-05-19-token-200.png?1589940590"},{chainId:56,address:"0xCC42724C6683B7E57334c4E856f4c9965ED682bD",name:"Polygon",symbol:"MATIC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4713/thumb/matic-token-icon.png?1624446912"},{chainId:56,address:"0x949D48EcA67b17269629c7194F4b727d4Ef9E5d6",name:"Merit Circle",symbol:"MC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19304/thumb/Db4XqML.png?1634972154"},{chainId:56,address:"0xe552Fb52a4F19e44ef5A967632DBc320B0820639",name:"Metis",symbol:"METIS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15595/thumb/metis.jpeg?1660285312"},{chainId:56,address:"0xfE19F0B51438fd612f6FD59C1dbB3eA319f433Ba",name:"Magic Internet Money",symbol:"MIM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/16786/thumb/mimlogopng.png?1624979612"},{chainId:56,address:"0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9",name:"Mirror Protocol",symbol:"MIR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13295/thumb/mirror_logo_transparent.png?1611554658"},{chainId:56,address:"0x9Fb9a33956351cf4fa040f65A13b835A3C8764E3",name:"Multichain",symbol:"MULTI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22087/thumb/1_Wyot-SDGZuxbjdkaOeT2-A.png?1640764238"},{chainId:56,address:"0x98f8669F6481EbB341B522fCD3663f79A3d1A6A7",name:"Nest Protocol",symbol:"NEST",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11284/thumb/52954052.png?1589868539"},{chainId:56,address:"0x4e7f408be2d4E9D60F49A64B89Bb619c84C7c6F5",name:"Perpetual Protocol",symbol:"PERP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12381/thumb/60d18e06844a844ad75901a9_mark_only_03.png?1628674771"},{chainId:56,address:"0x7e624FA0E1c4AbFD309cC15719b7E2580887f570",name:"Polkastarter",symbol:"POLS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12648/thumb/polkastarter.png?1609813702"},{chainId:56,address:"0xd21d29B38374528675C34936bf7d5Dd693D2a577",name:"PARSIQ",symbol:"PRQ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11973/thumb/DsNgK0O.png?1596590280"},{chainId:56,address:"0x4C882ec256823eE773B25b414d36F92ef58a7c0C",name:"pSTAKE Finance",symbol:"PSTAKE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/23931/thumb/PSTAKE_Dark.png?1645709930"},{chainId:56,address:"0x833F307aC507D47309fD8CDD1F835BeF8D702a93",name:"REVV",symbol:"REVV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12373/thumb/REVV_TOKEN_Refined_2021_%281%29.png?1627652390"},{chainId:56,address:"0xfA54fF1a158B5189Ebba6ae130CEd6bbd3aEA76e",name:"SOL Wormhole ",symbol:"SOL",decimals:9,logoURI:"https://assets.coingecko.com/coins/images/22876/thumb/SOL_wh_small.png?1644224316"},{chainId:56,address:"0xB0D502E938ed5f4df2E681fE6E419ff29631d62b",name:"Stargate Finance",symbol:"STG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24413/thumb/STG_LOGO.png?1647654518"},{chainId:56,address:"0x51BA0b044d96C3aBfcA52B64D733603CCC4F0d4D",name:"SuperFarm",symbol:"SUPER",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14040/thumb/6YPdWn6.png?1613975899"},{chainId:56,address:"0x947950BcC74888a40Ffa2593C5798F11Fc9124C4",name:"Sushi",symbol:"SUSHI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{chainId:56,address:"0xE64E30276C2F826FEbd3784958d6Da7B55DfbaD3",name:"SWFTCOIN",symbol:"SWFTC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2346/thumb/SWFTCoin.jpg?1618392022"},{chainId:56,address:"0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A",name:"Swipe",symbol:"SXP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9368/thumb/swipe.png?1566792311"},{chainId:56,address:"0xa4080f1778e69467E905B8d6F72f6e441f9e9484",name:"Synapse",symbol:"SYN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18024/thumb/syn.png?1635002049"},{chainId:56,address:"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68",name:"ChronoTech",symbol:"TIME",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/604/thumb/time-32x32.png?1627130666"},{chainId:56,address:"0x2222227E22102Fe3322098e4CBfE18cFebD57c95",name:"Alien Worlds",symbol:"TLM",decimals:4,logoURI:"https://assets.coingecko.com/coins/images/14676/thumb/kY-C4o7RThfWrDQsLCAG4q4clZhBDDfJQVhWUEKxXAzyQYMj4Jmq1zmFwpRqxhAJFPOa0AsW_PTSshoPuMnXNwq3rU7Imp15QimXTjlXMx0nC088mt1rIwRs75GnLLugWjSllxgzvQ9YrP4tBgclK4_rb17hjnusGj_c0u2fx0AvVokjSNB-v2poTj0xT9BZRCbzRE3-lF1.jpg?1617700061"},{chainId:56,address:"0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B",name:"Unifi Protocol DAO",symbol:"UNFI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13152/thumb/logo-2.png?1605748967"},{chainId:56,address:"0xBf5140A22578168FD562DCcF235E5D43A02ce9B1",name:"Uniswap",symbol:"UNI",decimals:18,logoURI:"ipfs://QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg"},{chainId:56,address:"0x0D35A2B85c5A63188d566D104bEbf7C694334Ee4",name:"Pawtocol",symbol:"UPI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12186/thumb/pawtocol.jpg?1597962008"},{chainId:56,address:"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",name:"USDCoin",symbol:"USDC",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{chainId:56,address:"0x55d398326f99059fF775485246999027B3197955",name:"Tether USD",symbol:"USDT",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{chainId:56,address:"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",name:"Wrapped BNB",symbol:"WBNB",decimals:18,logoURI:"https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/smartchain/assets/0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c/logo.png"},{chainId:56,address:"0x2170Ed0880ac9A755fd29B2688956BD959F933F8",name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{chainId:56,address:"0x4691937a7508860F876c9c0a2a617E7d9E945D4B",name:"WOO Network",symbol:"WOO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12921/thumb/w2UiemF__400x400.jpg?1603670367"},{chainId:56,address:"0x7324c7C0d95CEBC73eEa7E85CbAac0dBdf88a05b",name:"Chain",symbol:"XCN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24210/thumb/Chain_icon_200x200.png?1646895054"},{chainId:137,address:"0x9c2C5fd7b07E95EE044DDeba0E97a665F142394f",name:"1inch",symbol:"1INCH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{chainId:137,address:"0xD6DF932A45C0f255f85145f286eA0b292B21C90B",name:"Aave",symbol:"AAVE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:137,address:"0xdDa7b23D2D72746663E7939743f929a3d85FC975",name:"Ambire AdEx",symbol:"ADX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/847/thumb/Ambire_AdEx_Symbol_color.png?1655432540"},{chainId:137,address:"0x6a6bD53d677F8632631662C48bD47b1D4D6524ee",name:"Adventure Gold",symbol:"AGLD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18125/thumb/lpgblc4h_400x400.jpg?1630570955"},{chainId:137,address:"0xe2341718c6C0CbFa8e6686102DD8FbF4047a9e9B",name:"AIOZ Network",symbol:"AIOZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14631/thumb/aioz_logo.png?1617413126"},{chainId:137,address:"0x95c300e7740D2A88a44124B424bFC1cB2F9c3b89",name:"Alchemix",symbol:"ALCX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14113/thumb/Alchemix.png?1614409874"},{chainId:137,address:"0x82dCf1Df86AdA26b2dCd9ba6334CeDb8c2448e9e",name:"Aleph im",symbol:"ALEPH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11676/thumb/Monochram-aleph.png?1608483725"},{chainId:137,address:"0xbFc70507384047Aa74c29Cdc8c5Cb88D0f7213AC",name:"Alethea Artificial Liquid Intelligence",symbol:"ALI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22062/thumb/alethea-logo-transparent-colored.png?1642748848"},{chainId:137,address:"0x50858d870FAF55da2fD90FB6DF7c34b5648305C6",name:"My Neighbor Alice",symbol:"ALICE",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/14375/thumb/alice_logo.jpg?1615782968"},{chainId:137,address:"0x3AE490db48d74B1bC626400135d4616377D0109f",name:"Alpha Venture DAO",symbol:"ALPHA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12738/thumb/AlphaToken_256x256.png?1617160876"},{chainId:137,address:"0x0621d647cecbFb64b79E44302c1933cB4f27054d",name:"Amp",symbol:"AMP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12409/thumb/amp-200x200.png?1599625397"},{chainId:137,address:"0x101A023270368c0D50BFfb62780F4aFd4ea79C35",name:"Ankr",symbol:"ANKR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4324/thumb/U85xTl2.png?1608111978"},{chainId:137,address:"0x2b8504ab5eFc246d0eC5Ec7E74565683227497de",name:"Aragon",symbol:"ANT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/681/thumb/JelZ58cv_400x400.png?1601449653"},{chainId:137,address:"0xB7b31a6BC18e48888545CE79e83E06003bE70930",name:"ApeCoin",symbol:"APE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24383/small/apecoin.jpg?1647476455"},{chainId:137,address:"0x45C27821E80F8789b60Fd8B600C73815d34DDa6C",name:"API3",symbol:"API3",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13256/thumb/api3.jpg?1606751424"},{chainId:137,address:"0xEE800B277A96B0f490a1A732e1D6395FAD960A26",name:"ARPA Chain",symbol:"ARPA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8506/thumb/9u0a23XY_400x400.jpg?1559027357"},{chainId:137,address:"0x04bEa9FCE76943E90520489cCAb84E84C0198E29",name:"AirSwap",symbol:"AST",decimals:4,logoURI:"https://assets.coingecko.com/coins/images/1019/thumb/Airswap.png?1630903484"},{chainId:137,address:"0x0df0f72EE0e5c9B7ca761ECec42754992B2Da5BF",name:"Automata",symbol:"ATA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15985/thumb/ATA.jpg?1622535745"},{chainId:137,address:"0x5eB8D998371971D01954205c7AFE90A7AF6a95AC",name:"Audius",symbol:"AUDIO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12913/thumb/AudiusCoinLogo_2x.png?1603425727"},{chainId:137,address:"0x61BDD9C7d4dF4Bf47A4508c0c8245505F2Af5b7b",name:"Axie Infinity",symbol:"AXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13029/thumb/axie_infinity_logo.png?1604471082"},{chainId:137,address:"0x1FcbE5937B0cc2adf69772D228fA4205aCF4D9b2",name:"Badger DAO",symbol:"BADGER",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13287/thumb/badger_dao_logo.jpg?1607054976"},{chainId:137,address:"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3",name:"Balancer",symbol:"BAL",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xba100000625a3754423978a60c9317c58a424e3D/logo.png"},{chainId:137,address:"0xA8b1E0764f85f53dfe21760e8AfE5446D82606ac",name:"Band Protocol",symbol:"BAND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9545/thumb/band-protocol.png?1568730326"},{chainId:137,address:"0x3Cef98bb43d732E2F285eE605a8158cDE967D219",name:"Basic Attention Token",symbol:"BAT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/677/thumb/basic-attention-token.png?1547034427"},{chainId:137,address:"0x91c89A94567980f0e9723b487b0beD586eE96aa7",name:"Biconomy",symbol:"BICO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/21061/thumb/biconomy_logo.jpg?1638269749"},{chainId:137,address:"0x438B28C5AA5F00a817b7Def7cE2Fb3d5d1970974",name:"Bluzelle",symbol:"BLZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2848/thumb/ColorIcon_3x.png?1622516510"},{chainId:137,address:"0xc26D47d5c33aC71AC5CF9F776D63Ba292a4F7842",name:"Bancor Network Token",symbol:"BNT",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C/logo.png"},{chainId:137,address:"0xa4B2B20b2C73c7046ED19AC6bfF5E5285c58F20a",name:"Boba Network",symbol:"BOBA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/20285/thumb/BOBA.png?1636811576"},{chainId:137,address:"0xA041544fe2BE56CCe31Ebb69102B965E06aacE80",name:"BarnBridge",symbol:"BOND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12811/thumb/barnbridge.jpg?1602728853"},{chainId:137,address:"0xdAb529f40E671A1D4bF91361c21bf9f0C9712ab7",name:"Binance USD",symbol:"BUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:137,address:"0x91a4635F620766145C099E15889Bd2766906A559",name:"Celer Network",symbol:"CELR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4379/thumb/Celr.png?1554705437"},{chainId:137,address:"0x594C984E3318e91313f881B021A0C4203fF5E59F",name:"Chromia",symbol:"CHR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/5000/thumb/Chromia.png?1559038018"},{chainId:137,address:"0xf1938Ce12400f9a761084E7A80d37e732a4dA056",name:"Chiliz",symbol:"CHZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8834/thumb/Chiliz.png?1561970540"},{chainId:137,address:"0x8505b9d2254A7Ae468c0E9dd10Ccea3A837aef5c",name:"Compound",symbol:"COMP",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{chainId:137,address:"0x93B0fF1C8828F6eB039D345Ff681eD735086d925",name:"Covalent",symbol:"CQT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14168/thumb/covalent-cqt.png?1624545218"},{chainId:137,address:"0xAdA58DF0F643D959C2A47c9D4d4c1a4deFe3F11C",name:"Cronos",symbol:"CRO",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/7310/thumb/oCw2s3GI_400x400.jpeg?1645172042"},{chainId:137,address:"0x172370d5Cd63279eFa6d502DAB29171933a610AF",name:"Curve DAO Token",symbol:"CRV",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xD533a949740bb3306d119CC777fa900bA034cd52/logo.png"},{chainId:137,address:"0x2727Ab1c2D22170ABc9b595177B2D5C6E1Ab7B7B",name:"Cartesi",symbol:"CTSI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11038/thumb/cartesi.png?1592288021"},{chainId:137,address:"0x8c208BC2A808a088a78398fed8f2640cab0b6EDb",name:"Cryptex Finance",symbol:"CTX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14932/thumb/glossy_icon_-_C200px.png?1619073171"},{chainId:137,address:"0x276C9cbaa4BDf57d7109a41e67BD09699536FA3d",name:"Somnium Space CUBEs",symbol:"CUBE",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/10687/thumb/CUBE_icon.png?1617026861"},{chainId:137,address:"0x66Dc5A08091d1968e08C16aA5b27BAC8398b02Be",name:"Civic",symbol:"CVC",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/788/thumb/civic.png?1547034556"},{chainId:137,address:"0x4257EA7637c355F81616050CbB6a9b709fd72683",name:"Convex Finance",symbol:"CVX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15585/thumb/convex.png?1621256328"},{chainId:137,address:"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063",name:"Dai Stablecoin",symbol:"DAI",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"},{chainId:137,address:"0x26f5FB1e6C8a65b3A873fF0a213FA16EFF5a7828",name:"DerivaDAO",symbol:"DDX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13453/thumb/ddx_logo.png?1608741641"},{chainId:137,address:"0xff835562C761205659939B64583dd381a6AA4D92",name:"DexTools",symbol:"DEXT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11603/thumb/dext.png?1605790188"},{chainId:137,address:"0x993f2CafE9dbE525243f4A78BeBC69DAc8D36000",name:"DIA",symbol:"DIA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11955/thumb/image.png?1646041751"},{chainId:137,address:"0x85955046DF4668e1DD369D2DE9f3AEB98DD2A369",name:"DeFi Pulse Index",symbol:"DPI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12465/thumb/defi_pulse_index_set.png?1600051053"},{chainId:137,address:"0x4C3bF0a3DE9524aF68327d1D2558a3B70d17D42a",name:"dYdX",symbol:"DYDX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17500/thumb/hjnIm9bV.jpg?1628009360"},{chainId:137,address:"0xE0339c80fFDE91F3e20494Df88d4206D86024cdF",name:"Dogelon Mars",symbol:"ELON",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14962/thumb/6GxcPRo3_400x400.jpg?1619157413"},{chainId:137,address:"0x7eC26842F195c852Fa843bB9f6D8B583a274a157",name:"Enjin Coin",symbol:"ENJ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1102/thumb/enjin-coin-logo.png?1547035078"},{chainId:137,address:"0xbD7A5Cf51d22930B8B3Df6d834F9BCEf90EE7c4f",name:"Ethereum Name Service",symbol:"ENS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19785/thumb/acatxTm8_400x400.jpg?1635850140"},{chainId:137,address:"0x0E50BEA95Fe001A370A4F1C220C49AEdCB982DeC",name:"Ethernity Chain",symbol:"ERN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14238/thumb/LOGO_HIGH_QUALITY.png?1647831402"},{chainId:137,address:"0x8a037dbcA8134FFc72C362e394e35E0Cad618F85",name:"Euro Coin",symbol:"EUROC",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/26045/thumb/euro-coin.png?1655394420"},{chainId:137,address:"0x176f5AB638cf4Ff3B6239Ba609C3fadAA46ef5B0",name:"Harvest Finance",symbol:"FARM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12304/thumb/Harvest.png?1613016180"},{chainId:137,address:"0x7583FEDDbceFA813dc18259940F76a02710A8905",name:"Fetch ai",symbol:"FET",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/5681/thumb/Fetch.jpg?1572098136"},{chainId:137,address:"0x7A7B94F18EF6AD056CDa648588181CDA84800f94",name:"Stafi",symbol:"FIS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12423/thumb/stafi_logo.jpg?1599730991"},{chainId:137,address:"0x9ff62d1FC52A907B6DCbA8077c2DDCA6E6a9d3e1",name:"Forta",symbol:"FORT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/25060/thumb/Forta_lgo_%281%29.png?1655353696"},{chainId:137,address:"0x5eCbA59DAcc1ADc5bDEA35f38A732823fc3dE977",name:"Ampleforth Governance Token",symbol:"FORTH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14917/thumb/photo_2021-04-22_00.00.03.jpeg?1619020835"},{chainId:137,address:"0x65A05DB8322701724c197AF82C9CaE41195B0aA8",name:"ShapeShift FOX Token",symbol:"FOX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9988/thumb/FOX.png?1574330622"},{chainId:137,address:"0x104592a158490a9228070E0A8e5343B499e125D0",name:"Frax",symbol:"FRAX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{chainId:137,address:"0xC9c1c1c20B3658F8787CC2FD702267791f224Ce1",name:"Fantom",symbol:"FTM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4001/thumb/Fantom.png?1558015016"},{chainId:137,address:"0x3e121107F6F22DA4911079845a470757aF4e1A1b",name:"Frax Share",symbol:"FXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13423/thumb/frax_share.png?1608478989"},{chainId:137,address:"0x09E1943Dd2A4e82032773594f50CF54453000b97",name:"Gala",symbol:"GALA",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/12493/thumb/GALA-COINGECKO.png?1600233435"},{chainId:137,address:"0x385Eeac5cB85A38A9a07A70c73e0a3271CfB54A7",name:"Aavegotchi",symbol:"GHST",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12467/thumb/ghst_200.png?1600750321"},{chainId:137,address:"0x0B220b82F3eA3B7F6d9A1D8ab58930C064A2b5Bf",name:"Golem",symbol:"GLM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/542/thumb/Golem_Submark_Positive_RGB.png?1606392013"},{chainId:137,address:"0x5FFD62D3C3eE2E81C00A7b9079FB248e7dF024A8",name:"Gnosis Token",symbol:"GNO",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6810e776880C02933D47DB1b9fc05908e5386b96/logo.png"},{chainId:137,address:"0xF88fc6b493eda7650E4bcf7A290E8d108F677CfE",name:"Gods Unchained",symbol:"GODS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17139/thumb/10631.png?1635718182"},{chainId:137,address:"0x5fe2B58c013d7601147DcdD68C143A77499f5531",name:"The Graph",symbol:"GRT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13397/thumb/Graph_Token.png?1608145566"},{chainId:137,address:"0xdb95f9188479575F3F718a245EcA1B3BF74567EC",name:"Gitcoin",symbol:"GTC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15810/thumb/gitcoin.png?1621992929"},{chainId:137,address:"0xC8A94a3d3D2dabC3C1CaffFFDcA6A7543c3e3e65",name:"Gemini Dollar",symbol:"GUSD",decimals:2,logoURI:"https://assets.coingecko.com/coins/images/5992/thumb/gemini-dollar-gusd.png?1536745278"},{chainId:137,address:"0x482bc619eE7662759CDc0685B4E78f464Da39C73",name:"GYEN",symbol:"GYEN",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/14191/thumb/icon_gyen_200_200.png?1614843343"},{chainId:137,address:"0x6cCBF3627b2C83AFEF05bf2F035E7f7B210Fe30D",name:"HOPR",symbol:"HOPR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14061/thumb/Shared_HOPR_logo_512px.png?1614073468"},{chainId:137,address:"0x9Cb74C8032b007466865f060ad2c46145d45553D",name:"IDEX",symbol:"IDEX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2565/thumb/logomark-purple-286x286.png?1638362736"},{chainId:137,address:"0xFA46dAf9909e116DBc40Fe1cC95fC0Bb1f452aBE",name:"Illuvium",symbol:"ILV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14468/large/ILV.JPG"},{chainId:137,address:"0x183070C90B34A63292cC908Ce1b263Cb56D49A7F",name:"Immutable X",symbol:"IMX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17233/thumb/imx.png?1636691817"},{chainId:137,address:"0xfBd8A3b908e764dBcD51e27992464B4432A1132b",name:"Index Cooperative",symbol:"INDEX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12729/thumb/index.png?1634894321"},{chainId:137,address:"0x4E8dc2149EaC3f3dEf36b1c281EA466338249371",name:"Injective",symbol:"INJ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12882/thumb/Secondary_Symbol.png?1628233237"},{chainId:137,address:"0xF18Ac368001b0DdC80aA6a8374deb49e868EFDb8",name:"Inverse Finance",symbol:"INV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14205/thumb/inverse_finance.jpg?1614921871"},{chainId:137,address:"0xf6372cDb9c1d3674E83842e3800F2A62aC9F3C66",name:"IoTeX",symbol:"IOTX",decimals:18,logoURI:"https://s2.coinmarketcap.com/static/img/coins/64x64/2777.png"},{chainId:137,address:"0xb87f5c1E81077FfcfE821dA240fd20C99c533aF1",name:"JasmyCoin",symbol:"JASMY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13876/thumb/JASMY200x200.jpg?1612473259"},{chainId:137,address:"0x42f37A1296b2981F7C3cAcEd84c5096b2Eb0C72C",name:"Keep Network",symbol:"KEEP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3373/thumb/IuNzUb5b_400x400.jpg?1589526336"},{chainId:137,address:"0x324b28d6565f784d596422B0F2E5aB6e9CFA1Dc7",name:"Kyber Network Crystal",symbol:"KNC",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdd974D5C2e2928deA5F71b9825b8b646686BD200/logo.png"},{chainId:137,address:"0x53AEc293212E3B792563Bc16f1be26956adb12e9",name:"Keep3rV1",symbol:"KP3R",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12966/thumb/kp3r_logo.jpg?1607057458"},{chainId:137,address:"0xE8A51D0dD1b4525189ddA2187F90ddF0932b5482",name:"LCX",symbol:"LCX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9985/thumb/zRPSu_0o_400x400.jpg?1574327008"},{chainId:137,address:"0xC3C7d422809852031b44ab29EEC9F1EfF2A58756",name:"Lido DAO",symbol:"LDO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13573/thumb/Lido_DAO.png?1609873644"},{chainId:137,address:"0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39",name:"ChainLink Token",symbol:"LINK",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{chainId:137,address:"0x465b67CB20A7E8bC4c51b4C7DA591C1945b41427",name:"League of Kingdoms",symbol:"LOKA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22572/thumb/loka_64pix.png?1642643271"},{chainId:137,address:"0x66EfB7cC647e0efab02eBA4316a2d2941193F6b3",name:"Loom Network",symbol:"LOOM",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA4e8C3Ec456107eA67d3075bF9e3DF3A75823DB0/logo.png"},{chainId:137,address:"0x3962F4A0A0051DccE0be73A7e09cEf5756736712",name:"Livepeer",symbol:"LPT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/7137/thumb/logo-circle-green.png?1619593365"},{chainId:137,address:"0x8Ab2Fec94d17ae69FB90E7c773f2C85Ed1802c01",name:"Liquity",symbol:"LQTY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14665/thumb/200-lqty-icon.png?1617631180"},{chainId:137,address:"0x84e1670F61347CDaeD56dcc736FB990fBB47ddC1",name:"LoopringCoin V2",symbol:"LRC",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD/logo.png"},{chainId:137,address:"0x23001f892c0C82b79303EDC9B9033cD190BB21c7",name:"Liquity USD",symbol:"LUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png?1617631327"},{chainId:137,address:"0xA1c57f48F0Deb89f569dFbE6E2B7f46D33606fD4",name:"Decentraland",symbol:"MANA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/878/thumb/decentraland-mana.png?1550108745"},{chainId:137,address:"0x2B9E7ccDF0F4e5B24757c1E1a80e311E34Cb10c7",name:"Mask Network",symbol:"MASK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14051/thumb/Mask_Network.jpg?1614050316"},{chainId:137,address:"0x347ACCAFdA7F8c5BdeC57fa34a5b663CBd1aeca7",name:"MATH",symbol:"MATH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11335/thumb/2020-05-19-token-200.png?1589940590"},{chainId:137,address:"0x0000000000000000000000000000000000001010",name:"Polygon",symbol:"MATIC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4713/thumb/matic-token-icon.png?1624446912"},{chainId:137,address:"0xAa7DbD1598251f856C12f63557A4C4397c253Cea",name:"Moss Carbon Credit",symbol:"MCO2",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14414/thumb/ENtxnThA_400x400.jpg?1615948522"},{chainId:137,address:"0x1B9D40715E757Bdb9bdEC3215B898E46d8a3b71a",name:"Metis",symbol:"METIS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15595/thumb/metis.jpeg?1660285312"},{chainId:137,address:"0x01288e04435bFcd4718FF203D6eD18146C17Cd4b",name:"Magic Internet Money",symbol:"MIM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/16786/thumb/mimlogopng.png?1624979612"},{chainId:137,address:"0x1C5cccA2CB59145A4B25F452660cbA6436DDce9b",name:"Mirror Protocol",symbol:"MIR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13295/thumb/mirror_logo_transparent.png?1611554658"},{chainId:137,address:"0x6f7C932e7684666C9fd1d44527765433e01fF61d",name:"Maker",symbol:"MKR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2/logo.png"},{chainId:137,address:"0xa9f37D84c856fDa3812ad0519Dad44FA0a3Fe207",name:"Melon",symbol:"MLN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/605/thumb/melon.png?1547034295"},{chainId:137,address:"0x6968105460f67c3BF751bE7C15f92F5286Fd0CE5",name:"Monavale",symbol:"MONA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13298/thumb/monavale_logo.jpg?1607232721"},{chainId:137,address:"0xA3c322Ad15218fBFAEd26bA7f616249f7705D945",name:"GensoKishi Metaverse",symbol:"MV",decimals:18,logoURI:"https://s2.coinmarketcap.com/static/img/coins/64x64/17704.png"},{chainId:137,address:"0x4985E0B13554fB521840e893574D3848C10Fcc6f",name:"PolySwarm",symbol:"NCT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2843/thumb/ImcYCVfX_400x400.jpg?1628519767"},{chainId:137,address:"0x0Bf519071b02F22C17E7Ed5F4002ee1911f46729",name:"Numeraire",symbol:"NMR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671/logo.png"},{chainId:137,address:"0x282d8efCe846A88B159800bd4130ad77443Fa1A1",name:"Ocean Protocol",symbol:"OCEAN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3687/thumb/ocean-protocol-logo.jpg?1547038686"},{chainId:137,address:"0xa63Beffd33AB3a2EfD92a39A7D2361CEE14cEbA8",name:"Origin Protocol",symbol:"OGN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3296/thumb/op.jpg?1547037878"},{chainId:137,address:"0x62414D03084EeB269E18C970a21f45D2967F0170",name:"OMG Network",symbol:"OMG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/776/thumb/OMG_Network.jpg?1591167168"},{chainId:137,address:"0x0EE392bA5ef1354c9bd75a98044667d307C0e773",name:"Orion Protocol",symbol:"ORN",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/11841/thumb/orion_logo.png?1594943318"},{chainId:137,address:"0x9880e3dDA13c8e7D4804691A45160102d31F6060",name:"Orchid",symbol:"OXT",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4575f41308EC1483f3d399aa9a2826d74Da13Deb/logo.png"},{chainId:137,address:"0x553d3D295e0f695B9228246232eDF400ed3560B5",name:"PAX Gold",symbol:"PAXG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9519/thumb/paxg.PNG?1568542565"},{chainId:137,address:"0x263534a4Fe3cb249dF46810718B7B612a30ebbff",name:"Perpetual Protocol",symbol:"PERP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12381/thumb/60d18e06844a844ad75901a9_mark_only_03.png?1628674771"},{chainId:137,address:"0x8765f05ADce126d70bcdF1b0a48Db573316662eB",name:"PlayDapp",symbol:"PLA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14316/thumb/54023228.png?1615366911"},{chainId:137,address:"0x7dc0cb65EC6019330a6841e9c274f2EE57A6CA6C",name:"Pluton",symbol:"PLU",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1241/thumb/pluton.png?1548331624"},{chainId:137,address:"0x8dc302e2141DA59c934d900886DbF1518Fd92cd4",name:"Polkastarter",symbol:"POLS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12648/thumb/polkastarter.png?1609813702"},{chainId:137,address:"0xcB059C5573646047D6d88dDdb87B745C18161d3b",name:"Polymath",symbol:"POLY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2784/thumb/inKkF01.png?1605007034"},{chainId:137,address:"0x73580A2416A57f1C4b6391DBA688A9e4f7DBECE0",name:"Marlin",symbol:"POND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8903/thumb/POND_200x200.png?1622515451"},{chainId:137,address:"0x0AaB8DC887D34f00D50E19aee48371a941390d14",name:"Power Ledger",symbol:"POWR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/1104/thumb/power-ledger.png?1547035082"},{chainId:137,address:"0x82FFdFD1d8699E8886a4e77CeFA9dd9710a7FefD",name:"Propy",symbol:"PRO",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/869/thumb/propy.png?1548332100"},{chainId:137,address:"0x9377Eeb7419486FD4D485671d50baa4BF77c2222",name:"PARSIQ",symbol:"PRQ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11973/thumb/DsNgK0O.png?1596590280"},{chainId:137,address:"0x36B77a184bE8ee56f5E81C56727B20647A42e28E",name:"Quant",symbol:"QNT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3370/thumb/5ZOu7brX_400x400.jpg?1612437252"},{chainId:137,address:"0x831753DD7087CaC61aB5644b308642cc1c33Dc13",name:"Quickswap",symbol:"QUICK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13970/thumb/1_pOU6pBMEmiL-ZJVb0CYRjQ.png?1613386659"},{chainId:137,address:"0x2f81e176471CC57fDC76f7d332FB4511bF2bebDD",name:"Radicle",symbol:"RAD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14013/thumb/radicle.png?1614402918"},{chainId:137,address:"0x00e5646f60AC6Fb446f621d146B6E1886f002905",name:"Rai Reflex Index",symbol:"RAI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{chainId:137,address:"0x780053837cE2CeEaD2A90D9151aA21FC89eD49c2",name:"Rarible",symbol:"RARI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11845/thumb/Rari.png?1594946953"},{chainId:137,address:"0xc3cFFDAf8F3fdF07da6D5e3A89B8723D5E385ff8",name:"Rubic",symbol:"RBC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12629/thumb/200x200.png?1607952509"},{chainId:137,address:"0x19782D3Dc4701cEeeDcD90f0993f0A9126ed89d0",name:"Republic Token",symbol:"REN",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x408e41876cCCDC0F92210600ef50372656052a38/logo.png"},{chainId:137,address:"0x6563c1244820CfBd6Ca8820FBdf0f2847363F733",name:"Reputation Augur v2",symbol:"REPv2",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x221657776846890989a759BA2973e427DfF5C9bB/logo.png"},{chainId:137,address:"0xAdf2F2Ed91755eA3f4bcC9107a494879f633ae7C",name:"Request",symbol:"REQ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1031/thumb/Request_icon_green.png?1643250951"},{chainId:137,address:"0x70c006878a5A50Ed185ac4C87d837633923De296",name:"REVV",symbol:"REVV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12373/thumb/REVV_TOKEN_Refined_2021_%281%29.png?1627652390"},{chainId:137,address:"0x3b9dB434F08003A89554CDB43b3e0b1f8734BdE7",name:"Rari Governance Token",symbol:"RGT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12900/thumb/Rari_Logo_Transparent.png?1613978014"},{chainId:137,address:"0xbe662058e00849C3Eef2AC9664f37fEfdF2cdbFE",name:"iExec RLC",symbol:"RLC",decimals:9,logoURI:"https://assets.coingecko.com/coins/images/646/thumb/pL1VuXm.png?1604543202"},{chainId:137,address:"0x76b8D57e5ac6afAc5D415a054453d1DD2c3C0094",name:"Rally",symbol:"RLY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12843/thumb/image.png?1611212077"},{chainId:137,address:"0x61299774020dA444Af134c82fa83E3810b309991",name:"Render Token",symbol:"RNDR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11636/thumb/rndr.png?1638840934"},{chainId:137,address:"0xF92501c8213da1D6C74A76372CCc720Dc8818407",name:"Rook",symbol:"ROOK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13005/thumb/keeper_dao_logo.jpg?1604316506"},{chainId:137,address:"0xBbba073C31bF03b8ACf7c28EF0738DeCF3695683",name:"The Sandbox",symbol:"SAND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12129/thumb/sandbox_logo.jpg?1597397942"},{chainId:137,address:"0x6f8a06447Ff6FcF75d803135a7de15CE88C1d4ec",name:"Shiba Inu",symbol:"SHIB",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11939/thumb/shiba.png?1622619446"},{chainId:137,address:"0x0C7304fBAf2A320a1c50c46FE03752722F729946",name:"Smooth Love Potion",symbol:"SLP",decimals:0,logoURI:"https://assets.coingecko.com/coins/images/10366/thumb/SLP.png?1578640057"},{chainId:137,address:"0x50B728D8D964fd00C2d0AAD81718b71311feF68a",name:"Synthetix Network Token",symbol:"SNX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{chainId:137,address:"0xcdB3C70CD25FD15307D84C4F9D37d5C043B33Fb2",name:"Spell Token",symbol:"SPELL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15861/thumb/abracadabra-3.png?1622544862"},{chainId:137,address:"0xd72357dAcA2cF11A5F155b9FF7880E595A3F5792",name:"Storj Token",symbol:"STORJ",decimals:8,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC/logo.png"},{chainId:137,address:"0xB36e3391B22a970d31A9b620Ae1A414C6c256d2a",name:"Stox",symbol:"STX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1230/thumb/stox-token.png?1547035256"},{chainId:137,address:"0x60Ea918FC64360269Da4efBDA11d8fC6514617C6",name:"SUKU",symbol:"SUKU",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11969/thumb/UmfW5S6f_400x400.jpg?1596602238"},{chainId:137,address:"0xa1428174F516F527fafdD146b883bB4428682737",name:"SuperFarm",symbol:"SUPER",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14040/thumb/6YPdWn6.png?1613975899"},{chainId:137,address:"0xF81b4Bec6Ca8f9fe7bE01CA734F55B2b6e03A7a0",name:"Synth sUSD",symbol:"sUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{chainId:137,address:"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a",name:"Sushi",symbol:"SUSHI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{chainId:137,address:"0x6aBB753C1893194DE4a83c6e8B4EadFc105Fd5f5",name:"Swipe",symbol:"SXP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9368/thumb/swipe.png?1566792311"},{chainId:137,address:"0xe1708AbDE4847B4929b70547E5197F1Ba1db2250",name:"Tokemak",symbol:"TOKE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17495/thumb/tokemak-avatar-200px-black.png?1628131614"},{chainId:137,address:"0xA7b98d63a137bF402b4570799ac4caD0BB1c4B1c",name:"OriginTrail",symbol:"TRAC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1877/thumb/TRAC.jpg?1635134367"},{chainId:137,address:"0xE3322702BEdaaEd36CdDAb233360B939775ae5f1",name:"Tellor",symbol:"TRB",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9644/thumb/Blk_icon_current.png?1584980686"},{chainId:137,address:"0x8676815789211E799a6DC86d02748ADF9cF86836",name:"Tribe",symbol:"TRIBE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14575/thumb/tribe.PNG?1617487954"},{chainId:137,address:"0x5b77bCA482bd3E7958b1103d123888EfCCDaF803",name:"TrueFi",symbol:"TRU",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/13180/thumb/truefi_glyph_color.png?1617610941"},{chainId:137,address:"0x5667dcC0ab74D1b1355C3b2061893399331B57e2",name:"The Virtua Kolect",symbol:"TVK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13330/thumb/virtua_original.png?1656043619"},{chainId:137,address:"0x3066818837c5e6eD6601bd5a91B0762877A6B731",name:"UMA Voting Token v1",symbol:"UMA",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828/logo.png"},{chainId:137,address:"0xb33EaAd8d922B1083446DC23f610c2567fB5180f",name:"Uniswap",symbol:"UNI",decimals:18,logoURI:"ipfs://QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg"},{chainId:137,address:"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",name:"USDCoin",symbol:"USDC",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{chainId:137,address:"0xc2132D05D31c914a87C6611C10748AEb04B58e8F",name:"Tether USD",symbol:"USDT",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{chainId:137,address:"0xd0258a3fD00f38aa8090dfee343f10A9D4d30D3F",name:"Voxies",symbol:"VOXEL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/21260/large/voxies.png"},{chainId:137,address:"0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6",name:"Wrapped BTC",symbol:"WBTC",decimals:8,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{chainId:137,address:"0x90bb6fEB70A9a43CfAaA615F856BA309FD759A90",name:"Wrapped Centrifuge",symbol:"WCFG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17106/thumb/WCFG.jpg?1626266462"},{chainId:137,address:"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619",name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{chainId:137,address:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",name:"Wrapped Matic",symbol:"WMATIC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4713/thumb/matic-token-icon.png?1624446912"},{chainId:137,address:"0x1B815d120B3eF02039Ee11dC2d33DE7aA4a8C603",name:"WOO Network",symbol:"WOO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12921/thumb/w2UiemF__400x400.jpg?1603670367"},{chainId:137,address:"0xd2507e7b5794179380673870d88B22F94da6abe0",name:"XYO Network",symbol:"XYO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4519/thumb/XYO_Network-logo.png?1547039819"},{chainId:137,address:"0xDA537104D6A5edd53c6fBba9A898708E465260b6",name:"yearn finance",symbol:"YFI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{chainId:137,address:"0xb8cb8a7F4C2885C03e57E973C74827909Fdc2032",name:"DFI money",symbol:"YFII",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11902/thumb/YFII-logo.78631676.png?1598677348"},{chainId:137,address:"0x82617aA52dddf5Ed9Bb7B370ED777b3182A30fd1",name:"Yield Guild Games",symbol:"YGG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17358/thumb/le1nzlO6_400x400.jpg?1632465691"},{chainId:137,address:"0x5559Edb74751A0edE9DeA4DC23aeE72cCA6bE3D5",name:"0x Protocol Token",symbol:"ZRX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xE41d2489571d322189246DaFA5ebDe1F4699F498/logo.png"},{chainId:42161,address:"0x6314C31A7a1652cE482cffe247E9CB7c3f4BB9aF",name:"1inch",symbol:"1INCH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{chainId:42161,address:"0xba5DdD1f9d7F570dc94a51479a000E3BCE967196",name:"Aave",symbol:"AAVE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:42161,address:"0xb7910E8b16e63EFD51d5D1a093d56280012A3B9C",name:"Adventure Gold",symbol:"AGLD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18125/thumb/lpgblc4h_400x400.jpg?1630570955"},{chainId:42161,address:"0xeC76E8fe6e2242e6c2117caA244B9e2DE1569923",name:"AIOZ Network",symbol:"AIOZ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14631/thumb/aioz_logo.png?1617413126"},{chainId:42161,address:"0xe7dcD50836d0A28c959c72D72122fEDB8E245A6C",name:"Aleph im",symbol:"ALEPH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11676/thumb/Monochram-aleph.png?1608483725"},{chainId:42161,address:"0xeF6124368c0B56556667e0de77eA008DfC0a71d1",name:"Alethea Artificial Liquid Intelligence",symbol:"ALI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22062/thumb/alethea-logo-transparent-colored.png?1642748848"},{chainId:42161,address:"0xC9CBf102c73fb77Ec14f8B4C8bd88e050a6b2646",name:"Alpha Venture DAO",symbol:"ALPHA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12738/thumb/AlphaToken_256x256.png?1617160876"},{chainId:42161,address:"0x1bfc5d35bf0f7B9e15dc24c78b8C02dbC1e95447",name:"Ankr",symbol:"ANKR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4324/thumb/U85xTl2.png?1608111978"},{chainId:42161,address:"0x74885b4D524d497261259B38900f54e6dbAd2210",name:"ApeCoin",symbol:"APE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24383/small/apecoin.jpg?1647476455"},{chainId:42161,address:"0xF01dB12F50D0CDF5Fe360ae005b9c52F92CA7811",name:"API3",symbol:"API3",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13256/thumb/api3.jpg?1606751424"},{chainId:42161,address:"0x912CE59144191C1204E64559FE8253a0e49E6548",name:"Arbitrum",symbol:"ARB",decimals:18,logoURI:"https://arbitrum.foundation/logo.png"},{chainId:42161,address:"0xAC9Ac2C17cdFED4AbC80A53c5553388575714d03",name:"Automata",symbol:"ATA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15985/thumb/ATA.jpg?1622535745"},{chainId:42161,address:"0x23ee2343B892b1BB63503a4FAbc840E0e2C6810f",name:"Axelar",symbol:"AXL",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/27277/large/V-65_xQ1_400x400.jpeg"},{chainId:42161,address:"0xe88998Fb579266628aF6a03e3821d5983e5D0089",name:"Axie Infinity",symbol:"AXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13029/thumb/axie_infinity_logo.png?1604471082"},{chainId:42161,address:"0xBfa641051Ba0a0Ad1b0AcF549a89536A0D76472E",name:"Badger DAO",symbol:"BADGER",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13287/thumb/badger_dao_logo.jpg?1607054976"},{chainId:42161,address:"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8",name:"Balancer",symbol:"BAL",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xba100000625a3754423978a60c9317c58a424e3D/logo.png"},{chainId:42161,address:"0x3450687EF141dCd6110b77c2DC44B008616AeE75",name:"Basic Attention Token",symbol:"BAT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/677/thumb/basic-attention-token.png?1547034427"},{chainId:42161,address:"0xa68Ec98D7ca870cF1Dd0b00EBbb7c4bF60A8e74d",name:"Biconomy",symbol:"BICO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/21061/thumb/biconomy_logo.jpg?1638269749"},{chainId:42161,address:"0x406C8dB506653D882295875F633bEC0bEb921C2A",name:"BitDAO",symbol:"BIT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17627/thumb/rI_YptK8.png?1653983088"},{chainId:42161,address:"0xEf171a5BA71348eff16616fd692855c2Fe606EB2",name:"Blur",symbol:"BLUR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/28453/large/blur.png?1670745921"},{chainId:42161,address:"0x0D81E50bC677fa67341c44D7eaA9228DEE64A4e1",name:"BarnBridge",symbol:"BOND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12811/thumb/barnbridge.jpg?1602728853"},{chainId:42161,address:"0x31190254504622cEFdFA55a7d3d272e6462629a2",name:"Binance USD",symbol:"BUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:42161,address:"0x1DEBd73E752bEaF79865Fd6446b0c970EaE7732f",name:"Coinbase Wrapped Staked ETH",symbol:"cbETH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/27008/large/cbeth.png"},{chainId:42161,address:"0x3a8B787f78D775AECFEEa15706D4221B40F345AB",name:"Celer Network",symbol:"CELR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4379/thumb/Celr.png?1554705437"},{chainId:42161,address:"0x354A6dA3fcde098F8389cad84b0182725c6C91dE",name:"Compound",symbol:"COMP",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{chainId:42161,address:"0x6FE14d3CC2f7bDdffBa5CdB3BBE7467dd81ea101",name:"COTI",symbol:"COTI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2962/thumb/Coti.png?1559653863"},{chainId:42161,address:"0x8ea3156f834A0dfC78F1A5304fAC2CdA676F354C",name:"Cronos",symbol:"CRO",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/7310/thumb/oCw2s3GI_400x400.jpeg?1645172042"},{chainId:42161,address:"0x11cDb42B0EB46D95f990BeDD4695A6e3fA034978",name:"Curve DAO Token",symbol:"CRV",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xD533a949740bb3306d119CC777fa900bA034cd52/logo.png"},{chainId:42161,address:"0x319f865b287fCC10b30d8cE6144e8b6D1b476999",name:"Cartesi",symbol:"CTSI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11038/thumb/cartesi.png?1592288021"},{chainId:42161,address:"0x84F5c2cFba754E76DD5aE4fB369CfC920425E12b",name:"Cryptex Finance",symbol:"CTX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14932/thumb/glossy_icon_-_C200px.png?1619073171"},{chainId:42161,address:"0x9DfFB23CAd3322440bCcFF7aB1C58E781dDBF144",name:"Civic",symbol:"CVC",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/788/thumb/civic.png?1547034556"},{chainId:42161,address:"0xaAFcFD42c9954C6689ef1901e03db742520829c5",name:"Convex Finance",symbol:"CVX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15585/thumb/convex.png?1621256328"},{chainId:42161,address:"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",name:"Dai Stablecoin",symbol:"DAI",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"},{chainId:42161,address:"0x3Be7cB2e9413Ef8F42b4A202a0114EB59b64e227",name:"DexTools",symbol:"DEXT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11603/thumb/dext.png?1605790188"},{chainId:42161,address:"0xca642467C6Ebe58c13cB4A7091317f34E17ac05e",name:"DIA",symbol:"DIA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11955/thumb/image.png?1646041751"},{chainId:42161,address:"0xE3696a02b2C9557639E29d829E9C45EFa49aD47A",name:"district0x",symbol:"DNT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/849/thumb/district0x.png?1547223762"},{chainId:42161,address:"0x4667cf53C4eDF659E402B733BEA42B18B68dd74c",name:"DeFi Pulse Index",symbol:"DPI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12465/thumb/defi_pulse_index_set.png?1600051053"},{chainId:42161,address:"0x51863cB90Ce5d6dA9663106F292fA27c8CC90c5a",name:"dYdX",symbol:"DYDX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17500/thumb/hjnIm9bV.jpg?1628009360"},{chainId:42161,address:"0x3e4Cff6E50F37F731284A92d44AE943e17077fD4",name:"Dogelon Mars",symbol:"ELON",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14962/thumb/6GxcPRo3_400x400.jpg?1619157413"},{chainId:42161,address:"0x7fa9549791EFc9030e1Ed3F25D18014163806758",name:"Enjin Coin",symbol:"ENJ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/1102/thumb/enjin-coin-logo.png?1547035078"},{chainId:42161,address:"0xfeA31d704DEb0975dA8e77Bf13E04239e70d7c28",name:"Ethereum Name Service",symbol:"ENS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/19785/thumb/acatxTm8_400x400.jpg?1635850140"},{chainId:42161,address:"0x2354c8e9Ea898c751F1A15Addeb048714D667f96",name:"Ethernity Chain",symbol:"ERN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14238/thumb/LOGO_HIGH_QUALITY.png?1647831402"},{chainId:42161,address:"0x863708032B5c328e11aBcbC0DF9D79C71Fc52a48",name:"Euro Coin",symbol:"EUROC",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/26045/thumb/euro-coin.png?1655394420"},{chainId:42161,address:"0x8553d254Cb6934b16F87D2e486b64BbD24C83C70",name:"Harvest Finance",symbol:"FARM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12304/thumb/Harvest.png?1613016180"},{chainId:42161,address:"0x4BE87C766A7CE11D5Cc864b6C3Abb7457dCC4cC9",name:"Fetch ai",symbol:"FET",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/5681/thumb/Fetch.jpg?1572098136"},{chainId:42161,address:"0x849B40AB2469309117Ed1038c5A99894767C7282",name:"Stafi",symbol:"FIS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12423/thumb/stafi_logo.jpg?1599730991"},{chainId:42161,address:"0x3A1429d50E0cBBc45c997aF600541Fe1cc3D2923",name:"Forta",symbol:"FORT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/25060/thumb/Forta_lgo_%281%29.png?1655353696"},{chainId:42161,address:"0xf929de51D91C77E42f5090069E0AD7A09e513c73",name:"ShapeShift FOX Token",symbol:"FOX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9988/thumb/FOX.png?1574330622"},{chainId:42161,address:"0x7468a5d8E02245B00E8C0217fCE021C70Bc51305",name:"Frax",symbol:"FRAX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{chainId:42161,address:"0xd42785D323e608B9E99fa542bd8b1000D4c2Df37",name:"Fantom",symbol:"FTM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4001/thumb/Fantom.png?1558015016"},{chainId:42161,address:"0xd9f9d2Ee2d3EFE420699079f16D9e924affFdEA4",name:"Frax Share",symbol:"FXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13423/thumb/frax_share.png?1608478989"},{chainId:42161,address:"0x2Ed5C8fA0D7Ad71025638aFe5fd72E4fbc5A2667",name:"Gala",symbol:"GALA",decimals:8,logoURI:"https://assets.coingecko.com/coins/images/12493/thumb/GALA-COINGECKO.png?1600233435"},{chainId:42161,address:"0xa0b862F60edEf4452F25B4160F177db44DeB6Cf1",name:"Gnosis Token",symbol:"GNO",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6810e776880C02933D47DB1b9fc05908e5386b96/logo.png"},{chainId:42161,address:"0x9623063377AD1B27544C965cCd7342f7EA7e88C7",name:"The Graph",symbol:"GRT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13397/thumb/Graph_Token.png?1608145566"},{chainId:42161,address:"0x7f9a7DB853Ca816B9A138AEe3380Ef34c437dEe0",name:"Gitcoin",symbol:"GTC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15810/thumb/gitcoin.png?1621992929"},{chainId:42161,address:"0x589d35656641d6aB57A545F08cf473eCD9B6D5F7",name:"GYEN",symbol:"GYEN",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/14191/thumb/icon_gyen_200_200.png?1614843343"},{chainId:42161,address:"0xd12Eeb0142D4Efe7Af82e4f29E5Af382615bcEeA",name:"Highstreet",symbol:"HIGH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18973/thumb/logosq200200Coingecko.png?1634090470"},{chainId:42161,address:"0x177F394A3eD18FAa85c1462Ae626438a70294EF7",name:"HOPR",symbol:"HOPR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14061/thumb/Shared_HOPR_logo_512px.png?1614073468"},{chainId:42161,address:"0x61cA9D186f6b9a793BC08F6C79fd35f205488673",name:"Illuvium",symbol:"ILV",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14468/large/ILV.JPG"},{chainId:42161,address:"0x3cFD99593a7F035F717142095a3898e3Fca7783e",name:"Immutable X",symbol:"IMX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/17233/thumb/imx.png?1636691817"},{chainId:42161,address:"0x2A2053cb633CAD465B4A8975eD3d7f09DF608F80",name:"Injective",symbol:"INJ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12882/thumb/Secondary_Symbol.png?1628233237"},{chainId:42161,address:"0x13Ad51ed4F1B7e9Dc168d8a00cB3f4dDD85EfA60",name:"Lido DAO",symbol:"LDO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13573/thumb/Lido_DAO.png?1609873644"},{chainId:42161,address:"0xf97f4df75117a78c1A5a0DBb814Af92458539FB4",name:"ChainLink Token",symbol:"LINK",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{chainId:42161,address:"0x289ba1701C2F088cf0faf8B3705246331cB8A839",name:"Livepeer",symbol:"LPT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/7137/thumb/logo-circle-green.png?1619593365"},{chainId:42161,address:"0xfb9E5D956D889D91a82737B9bFCDaC1DCE3e1449",name:"Liquity",symbol:"LQTY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14665/thumb/200-lqty-icon.png?1617631180"},{chainId:42161,address:"0x46d0cE7de6247b0A95f67b43B589b4041BaE7fbE",name:"LoopringCoin V2",symbol:"LRC",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD/logo.png"},{chainId:42161,address:"0x93b346b6BC2548dA6A1E7d98E9a421B42541425b",name:"Liquity USD",symbol:"LUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png?1617631327"},{chainId:42161,address:"0x442d24578A564EF628A65e6a7E3e7be2a165E231",name:"Decentraland",symbol:"MANA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/878/thumb/decentraland-mana.png?1550108745"},{chainId:42161,address:"0x533A7B414CD1236815a5e09F1E97FC7d5c313739",name:"Mask Network",symbol:"MASK",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14051/thumb/Mask_Network.jpg?1614050316"},{chainId:42161,address:"0x99F40b01BA9C469193B360f72740E416B17Ac332",name:"MATH",symbol:"MATH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11335/thumb/2020-05-19-token-200.png?1589940590"},{chainId:42161,address:"0x561877b6b3DD7651313794e5F2894B2F18bE0766",name:"Polygon",symbol:"MATIC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4713/thumb/matic-token-icon.png?1624446912"},{chainId:42161,address:"0x7F728F3595db17B0B359f4FC47aE80FAd2e33769",name:"Metis",symbol:"METIS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15595/thumb/metis.jpeg?1660285312"},{chainId:42161,address:"0xB20A02dfFb172C474BC4bDa3fD6f4eE70C04daf2",name:"Magic Internet Money",symbol:"MIM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/16786/thumb/mimlogopng.png?1624979612"},{chainId:42161,address:"0x2e9a6Df78E42a30712c10a9Dc4b1C8656f8F2879",name:"Maker",symbol:"MKR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2/logo.png"},{chainId:42161,address:"0x8f5c1A99b1df736Ad685006Cb6ADCA7B7Ae4b514",name:"Melon",symbol:"MLN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/605/thumb/melon.png?1547034295"},{chainId:42161,address:"0x29024832eC3baBF5074D4F46102aA988097f0Ca0",name:"Maple",symbol:"MPL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14097/thumb/photo_2021-05-03_14.20.41.jpeg?1620022863"},{chainId:42161,address:"0x91b468Fe3dce581D7a6cFE34189F1314b6862eD6",name:"MXC",symbol:"MXC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4604/thumb/mxc.png?1655534336"},{chainId:42161,address:"0x53236015A675fcB937485F1AE58040e4Fb920d5b",name:"PolySwarm",symbol:"NCT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2843/thumb/ImcYCVfX_400x400.jpg?1628519767"},{chainId:42161,address:"0xBE06ca305A5Cb49ABf6B1840da7c42690406177b",name:"NKN",symbol:"NKN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3375/thumb/nkn.png?1548329212"},{chainId:42161,address:"0x597701b32553b9fa473e21362D480b3a6B569711",name:"Numeraire",symbol:"NMR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671/logo.png"},{chainId:42161,address:"0x933d31561e470478079FEB9A6Dd2691fAD8234DF",name:"Ocean Protocol",symbol:"OCEAN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3687/thumb/ocean-protocol-logo.jpg?1547038686"},{chainId:42161,address:"0x6FEb262FEb0f775B5312D2e009923f7f58AE423E",name:"Origin Protocol",symbol:"OGN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3296/thumb/op.jpg?1547037878"},{chainId:42161,address:"0xfEb4DfC8C4Cf7Ed305bb08065D08eC6ee6728429",name:"PAX Gold",symbol:"PAXG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9519/thumb/paxg.PNG?1568542565"},{chainId:42161,address:"0x35E6A59F786d9266c7961eA28c7b768B33959cbB",name:"Pepe",symbol:"PEPE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/29850/large/pepe-token.jpeg?1682922725"},{chainId:42161,address:"0x753D224bCf9AAFaCD81558c32341416df61D3DAC",name:"Perpetual Protocol",symbol:"PERP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12381/thumb/60d18e06844a844ad75901a9_mark_only_03.png?1628674771"},{chainId:42161,address:"0xeeeB5EaC2dB7A7Fc28134aA3248580d48b016b64",name:"Polkastarter",symbol:"POLS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12648/thumb/polkastarter.png?1609813702"},{chainId:42161,address:"0xE12F29704F635F4A6E7Ae154838d21F9B33809e9",name:"Polymath",symbol:"POLY",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/2784/thumb/inKkF01.png?1605007034"},{chainId:42161,address:"0xdA0a57B710768ae17941a9Fa33f8B720c8bD9ddD",name:"Marlin",symbol:"POND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/8903/thumb/POND_200x200.png?1622515451"},{chainId:42161,address:"0x4e91F2AF1ee0F84B529478f19794F5AFD423e4A6",name:"Power Ledger",symbol:"POWR",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/1104/thumb/power-ledger.png?1547035082"},{chainId:42161,address:"0x8d8e1b6ffc6832E8D2eF0DE8a3d957cAE7ac5067",name:"Prime",symbol:"PRIME",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/29053/large/PRIMELOGOOO.png?1676976222"},{chainId:42161,address:"0x82164a8B646401a8776F9dC5c8Cba35DcAf60Cd2",name:"PARSIQ",symbol:"PRQ",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11973/thumb/DsNgK0O.png?1596590280"},{chainId:42161,address:"0xC7557C73e0eCa2E1BF7348bB6874Aee63C7eFF85",name:"Quant",symbol:"QNT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/3370/thumb/5ZOu7brX_400x400.jpg?1612437252"},{chainId:42161,address:"0xaeF5bbcbFa438519a5ea80B4c7181B4E78d419f2",name:"Rai Reflex Index",symbol:"RAI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{chainId:42161,address:"0xCF8600347Dc375C5f2FdD6Dab9BB66e0b6773cd7",name:"Rarible",symbol:"RARI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11845/thumb/Rari.png?1594946953"},{chainId:42161,address:"0x2E9AE8f178d5Ea81970C7799A377B3985cbC335F",name:"Rubic",symbol:"RBC",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12629/thumb/200x200.png?1607952509"},{chainId:42161,address:"0x9fA891e1dB0a6D1eEAC4B929b5AAE1011C79a204",name:"Republic Token",symbol:"REN",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x408e41876cCCDC0F92210600ef50372656052a38/logo.png"},{chainId:42161,address:"0xef888bcA6AB6B1d26dbeC977C455388ecd794794",name:"Rari Governance Token",symbol:"RGT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12900/thumb/Rari_Logo_Transparent.png?1613978014"},{chainId:42161,address:"0xC8a4EeA31E9B6b61c406DF013DD4FEc76f21E279",name:"Render Token",symbol:"RNDR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11636/thumb/rndr.png?1638840934"},{chainId:1,address:"0xae78736Cd615f374D3085123A210448E74Fc6393",name:"Rocket Pool ETH",symbol:"rETH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/20764/standard/reth.png?1696520159"},{chainId:42161,address:"0xd1318eb19DBF2647743c720ed35174efd64e3DAC",name:"The Sandbox",symbol:"SAND",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12129/thumb/sandbox_logo.jpg?1597397942"},{chainId:42161,address:"0x5033833c9fe8B9d3E09EEd2f73d2aaF7E3872fd1",name:"Shiba Inu",symbol:"SHIB",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11939/thumb/shiba.png?1622619446"},{chainId:42161,address:"0x4F9b7DEDD8865871dF65c5D26B1c2dD537267878",name:"SKALE",symbol:"SKL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13245/thumb/SKALE_token_300x300.png?1606789574"},{chainId:42161,address:"0x707F635951193dDaFBB40971a0fCAAb8A6415160",name:"Status",symbol:"SNT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/779/thumb/status.png?1548610778"},{chainId:42161,address:"0xcBA56Cd8216FCBBF3fA6DF6137F3147cBcA37D60",name:"Synthetix Network Token",symbol:"SNX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{chainId:42161,address:"0xb2BE52744a804Cc732d606817C2572C5A3B264e7",name:"Unisocks",symbol:"SOCKS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/10717/thumb/qFrcoiM.png?1582525244"},{chainId:42161,address:"0xb74Da9FE2F96B9E0a5f4A3cf0b92dd2bEC617124",name:"SOL Wormhole ",symbol:"SOL",decimals:9,logoURI:"https://assets.coingecko.com/coins/images/22876/thumb/SOL_wh_small.png?1644224316"},{chainId:42161,address:"0x3E6648C5a70A150A88bCE65F4aD4d506Fe15d2AF",name:"Spell Token",symbol:"SPELL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15861/thumb/abracadabra-3.png?1622544862"},{chainId:42161,address:"0xe018C7a3d175Fb0fE15D70Da2c874d3CA16313EC",name:"Stargate Finance",symbol:"STG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24413/thumb/STG_LOGO.png?1647654518"},{chainId:42161,address:"0x7f9cf5a2630a0d58567122217dF7609c26498956",name:"SuperFarm",symbol:"SUPER",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14040/thumb/6YPdWn6.png?1613975899"},{chainId:42161,address:"0xA970AF1a584579B618be4d69aD6F73459D112F95",name:"Synth sUSD",symbol:"sUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{chainId:42161,address:"0xd4d42F0b6DEF4CE0383636770eF773390d85c61A",name:"Sushi",symbol:"SUSHI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{chainId:42161,address:"0x1bCfc0B4eE1471674cd6A9F6B363A034375eAD84",name:"Synapse",symbol:"SYN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18024/thumb/syn.png?1635002049"},{chainId:42161,address:"0x0945Cae3ae47cb384b2d47BC448Dc6A9dEC21F55",name:"Threshold Network",symbol:"T",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22228/thumb/nFPNiSbL_400x400.jpg?1641220340"},{chainId:42161,address:"0x7E2a1eDeE171C5B19E6c54D73752396C0A572594",name:"tBTC",symbol:"tBTC",decimals:18,logoURI:"https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/0x18084fbA666a33d37592fA2633fD49a74DD93a88/logo.png"},{chainId:42161,address:"0xd58D345Fd9c82262E087d2D0607624B410D88242",name:"Tellor",symbol:"TRB",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9644/thumb/Blk_icon_current.png?1584980686"},{chainId:42161,address:"0xBfAE6fecD8124ba33cbB2180aAb0Fe4c03914A5A",name:"Tribe",symbol:"TRIBE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14575/thumb/tribe.PNG?1617487954"},{chainId:42161,address:"0xd693Ec944A85eeca4247eC1c3b130DCa9B0C3b22",name:"UMA Voting Token v1",symbol:"UMA",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828/logo.png"},{chainId:42161,address:"0xFa7F8980b0f1E64A2062791cc3b0871572f1F7f0",name:"Uniswap",symbol:"UNI",decimals:18,logoURI:"ipfs://QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg"},{chainId:42161,address:"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",name:"USDCoin",symbol:"USDC",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{chainId:42161,address:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",name:"Bridged USDC",symbol:"USDC.e",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{chainId:42161,address:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",name:"Tether USD",symbol:"USDT",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{chainId:42161,address:"0x1c8Ec4DE3c2BFD3050695D89853EC6d78AE650bb",name:"Wrapped Ampleforth",symbol:"WAMPL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/20825/thumb/photo_2021-11-25_02-05-11.jpg?1637811951"},{chainId:42161,address:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",name:"Wrapped BTC",symbol:"WBTC",decimals:8,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{chainId:42161,address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{chainId:42161,address:"0xcAFcD85D8ca7Ad1e1C6F82F651fA15E33AEfD07b",name:"WOO Network",symbol:"WOO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12921/thumb/w2UiemF__400x400.jpg?1603670367"},{chainId:42161,address:"0x58BbC087e36Db40a84b22c1B93a042294deEAFEd",name:"Chain",symbol:"XCN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24210/thumb/Chain_icon_200x200.png?1646895054"},{chainId:42161,address:"0x82e3A8F066a6989666b031d916c43672085b1582",name:"yearn finance",symbol:"YFI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{chainId:42161,address:"0xBD591Bd4DdB64b77B5f76Eab8f03d02519235Ae2",name:"0x Protocol Token",symbol:"ZRX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xE41d2489571d322189246DaFA5ebDe1F4699F498/logo.png"},{chainId:43114,address:"0xd501281565bf7789224523144Fe5D98e8B28f267",name:"1inch",symbol:"1INCH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{chainId:43114,address:"0x63a72806098Bd3D9520cC43356dD78afe5D386D9",name:"Aave",symbol:"AAVE",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{chainId:43114,address:"0x2147EFFF675e4A4eE1C2f918d181cDBd7a8E208f",name:"Alpha Venture DAO",symbol:"ALPHA",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12738/thumb/AlphaToken_256x256.png?1617160876"},{chainId:43114,address:"0x20CF1b6E9d856321ed4686877CF4538F2C84B4dE",name:"Ankr",symbol:"ANKR",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/4324/thumb/U85xTl2.png?1608111978"},{chainId:43114,address:"0x44c784266cf024a60e8acF2427b9857Ace194C5d",name:"Axelar",symbol:"AXL",decimals:6,logoURI:"https://assets.coingecko.com/coins/images/27277/large/V-65_xQ1_400x400.jpeg"},{chainId:43114,address:"0x98443B96EA4b0858FDF3219Cd13e98C7A4690588",name:"Basic Attention Token",symbol:"BAT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/677/thumb/basic-attention-token.png?1547034427"},{chainId:43114,address:"0x9C9e5fD8bbc25984B178FdCE6117Defa39d2db39",name:"Binance USD",symbol:"BUSD",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/9576/thumb/BUSD.png?1568947766"},{chainId:43114,address:"0xc3048E19E76CB9a3Aa9d77D8C03c29Fc906e2437",name:"Compound",symbol:"COMP",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{chainId:43114,address:"0x6b289CCeAA8639e3831095D75A3e43520faBf552",name:"Cartesi",symbol:"CTSI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11038/thumb/cartesi.png?1592288021"},{chainId:43114,address:"0xd586E7F844cEa2F87f50152665BCbc2C279D8d70",name:"DAI.e Token",symbol:"DAI.e",decimals:18,logoURI:"https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/avalanchec/assets/0xd586E7F844cEa2F87f50152665BCbc2C279D8d70/logo.png"},{chainId:43114,address:"0x961C8c0B1aaD0c0b10a51FeF6a867E3091BCef17",name:"DeFi Yield Protocol",symbol:"DYP",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13480/thumb/DYP_Logo_Symbol-8.png?1655809066"},{chainId:43114,address:"0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64",name:"Frax",symbol:"FRAX",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{chainId:43114,address:"0x214DB107654fF987AD859F34125307783fC8e387",name:"Frax Share",symbol:"FXS",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13423/thumb/frax_share.png?1608478989"},{chainId:43114,address:"0x8a0cAc13c7da965a312f08ea4229c37869e85cB9",name:"The Graph",symbol:"GRT",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/13397/thumb/Graph_Token.png?1608145566"},{chainId:43114,address:"0x5947BB275c521040051D82396192181b413227A3",name:"ChainLink Token",symbol:"LINK",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{chainId:43114,address:"0x130966628846BFd36ff31a822705796e8cb8C18D",name:"Magic Internet Money",symbol:"MIM",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/16786/thumb/mimlogopng.png?1624979612"},{chainId:43114,address:"0x88128fd4b259552A9A1D457f435a6527AAb72d42",name:"Maker",symbol:"MKR",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2/logo.png"},{chainId:43114,address:"0x9Fb9a33956351cf4fa040f65A13b835A3C8764E3",name:"Multichain",symbol:"MULTI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/22087/thumb/1_Wyot-SDGZuxbjdkaOeT2-A.png?1640764238"},{chainId:43114,address:"0x97Cd1CFE2ed5712660bb6c14053C0EcB031Bff7d",name:"Rai Reflex Index",symbol:"RAI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{chainId:43114,address:"0xBeC243C995409E6520D7C41E404da5dEba4b209B",name:"Synthetix Network Token",symbol:"SNX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{chainId:43114,address:"0xFE6B19286885a4F7F55AdAD09C3Cd1f906D2478F",name:"SOL Wormhole ",symbol:"SOL",decimals:9,logoURI:"https://assets.coingecko.com/coins/images/22876/thumb/SOL_wh_small.png?1644224316"},{chainId:43114,address:"0xCE1bFFBD5374Dac86a2893119683F4911a2F7814",name:"Spell Token",symbol:"SPELL",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/15861/thumb/abracadabra-3.png?1622544862"},{chainId:43114,address:"0x2F6F07CDcf3588944Bf4C42aC74ff24bF56e7590",name:"Stargate Finance",symbol:"STG",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/24413/thumb/STG_LOGO.png?1647654518"},{chainId:43114,address:"0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76",name:"Sushi",symbol:"SUSHI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{chainId:43114,address:"0x1f1E7c893855525b303f99bDF5c3c05Be09ca251",name:"Synapse",symbol:"SYN",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/18024/thumb/syn.png?1635002049"},{chainId:43114,address:"0x3Bd2B1c7ED8D396dbb98DED3aEbb41350a5b2339",name:"UMA Voting Token v1",symbol:"UMA",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828/logo.png"},{chainId:43114,address:"0x8eBAf22B6F053dFFeaf46f4Dd9eFA95D89ba8580",name:"UNI.e Token",symbol:"UNI.e",decimals:18,logoURI:"https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/avalanchec/assets/0x8eBAf22B6F053dFFeaf46f4Dd9eFA95D89ba8580/logo.png"},{chainId:43114,address:"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",name:"USDC Token",symbol:"USDC",decimals:6,logoURI:"https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/avalanchec/assets/0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E/logo.png"},{chainId:43114,address:"0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7",name:"Tether USD",symbol:"USDT",decimals:6,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{chainId:43114,address:"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",name:"Wrapped AVAX",symbol:"WAVAX",decimals:18,logoURI:"https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/avalanchec/assets/0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7/logo.png"},{chainId:43114,address:"0x50b7545627a5162F82A992c33b87aDc75187B218",name:"Wrapped BTC",symbol:"WBTC",decimals:8,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{chainId:43114,address:"0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB",name:"Wrapped Ether",symbol:"WETH",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{chainId:43114,address:"0xaBC9547B534519fF73921b1FBA6E672b5f58D083",name:"WOO Network",symbol:"WOO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12921/thumb/w2UiemF__400x400.jpg?1603670367"},{chainId:43114,address:"0x9eAaC1B23d935365bD7b542Fe22cEEe2922f52dc",name:"yearn finance",symbol:"YFI",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{chainId:43114,address:"0x596fA47043f99A4e0F122243B841E55375cdE0d2",name:"0x Protocol Token",symbol:"ZRX",decimals:18,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xE41d2489571d322189246DaFA5ebDe1F4699F498/logo.png"},{chainId:11155111,address:"0x85a39f55778D98e81237e917d1f7fb4b74Bdc2Af",name:"Kirobo",symbol:"KIRO",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/12688/thumb/QmScxyKBwqbGJZmp38EwaoRpXbzPkq3tvuMjeuJE1YLZeG.png?1601672684"}];var yTokensArbitrum=[{decimals:18,symbol:"MIM3CRV-f",name:"Curve.fi Factory USD Metapool: MIM",chainId:42161,address:"0x30dF229cefa463e991e29D42DB0bae2e122B2AC7",value:"0x30dF229cefa463e991e29D42DB0bae2e122B2AC7"},{decimals:18,symbol:"crv3crypto",name:"Curve.fi USD-BTC-ETH",chainId:42161,address:"0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2",value:"0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2"},{decimals:18,symbol:"2CRV",name:"Curve.fi USDC/USDT",chainId:42161,address:"0x7f90122BF0700F9E7e1F688fe926940E8839F353",value:"0x7f90122BF0700F9E7e1F688fe926940E8839F353"},{decimals:18,symbol:"VSTFRAX-f",name:"Curve.fi Factory Plain Pool: VST+FRAX",chainId:42161,address:"0x59bF0545FCa0E5Ad48E13DA269faCD2E8C886Ba4",value:"0x59bF0545FCa0E5Ad48E13DA269faCD2E8C886Ba4"},{decimals:18,symbol:"PHP",name:"Philippine Peso",chainId:42161,address:"0xFa247d0D55a324ca19985577a2cDcFC383D87953",value:"0xFa247d0D55a324ca19985577a2cDcFC383D87953"}];var yTokensMainnet=[{decimals:18,symbol:"XAIFRAXBP3CRV-f",name:"Curve.fi Factory USD Metapool: XAI/FRAXBP",chainId:1,address:"0x326290A1B0004eeE78fa6ED4F1d8f4b2523ab669",value:"0x326290A1B0004eeE78fa6ED4F1d8f4b2523ab669"},{decimals:18,symbol:"crvTETH",name:"Curve T-ETH",chainId:1,address:"0xCb08717451aaE9EF950a2524E33B6DCaBA60147B",value:"0xCb08717451aaE9EF950a2524E33B6DCaBA60147B"},{decimals:18,symbol:"pUSDFRAXBP3CRV-f",name:"Curve.fi Factory USD Metapool: pUSDFRAXBP-A100",chainId:1,address:"0xE60986759872393a8360A4a7abEAb3A6e0BA7848",value:"0xE60986759872393a8360A4a7abEAb3A6e0BA7848"},{decimals:18,symbol:"st-frxETH-f",name:"Curve.fi Factory Plain Pool: stETH/frxETH",chainId:1,address:"0x4d9f9D15101EEC665F77210cB999639f760F831E",value:"0x4d9f9D15101EEC665F77210cB999639f760F831E"},{decimals:18,symbol:"TBTCSBTC23CRV-f",name:"Curve.fi Factory USD Metapool: tBTC/wBTC/sBTC",chainId:1,address:"0xF95AAa7EBB1620e46221B73588502960Ef63dBa0",value:"0xF95AAa7EBB1620e46221B73588502960Ef63dBa0"},{decimals:18,symbol:"crvGEARETH-f",name:"Curve.fi Factory Crypto Pool: Curve GEAR/ETH",chainId:1,address:"0x5Be6C45e2d074fAa20700C49aDA3E88a1cc0025d",value:"0x5Be6C45e2d074fAa20700C49aDA3E88a1cc0025d"},{decimals:18,symbol:"UST_whv23CRV-f",name:"Curve.fi Factory USD Metapool: wormhole v2 UST-3Pool",chainId:1,address:"0xCEAF7747579696A2F0bb206a14210e3c9e6fB269",value:"0xCEAF7747579696A2F0bb206a14210e3c9e6fB269"},{decimals:18,symbol:"husd3CRV",name:"Curve.fi HUSD/3Crv",chainId:1,address:"0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858",value:"0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858"},{decimals:18,symbol:"LQTY",name:"LQTY",chainId:1,address:"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D",value:"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D",logoURI:"https://assets.coingecko.com/coins/images/14665/thumb/200-lqty-icon.png?1617631180"},{decimals:18,symbol:"HBTC",name:"Huobi BTC",chainId:1,address:"0x0316EB71485b0Ab14103307bf65a021042c6d380",value:"0x0316EB71485b0Ab14103307bf65a021042c6d380"},{decimals:18,symbol:"EURT-f",name:"Curve.fi Factory Plain Pool: Euro Tether",chainId:1,address:"0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890",value:"0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890"},{decimals:18,symbol:"eCRV",name:"Curve.fi ETH/sETH",chainId:1,address:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c",value:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{decimals:8,symbol:"WBTC",name:"Wrapped BTC",chainId:1,address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",value:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{decimals:18,symbol:"yDAI+yUSDC+yUSDT+yTUSD",name:"Curve.fi yDAI/yUSDC/yUSDT/yTUSD",chainId:1,address:"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8",value:"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"},{decimals:18,symbol:"ibAUDUSDC-f",name:"Curve.fi Factory Crypto Pool: ibAUD/USDC",chainId:1,address:"0x54c8Ecf46A81496eEB0608BD3353388b5D7a2a33",value:"0x54c8Ecf46A81496eEB0608BD3353388b5D7a2a33"},{decimals:18,symbol:"OCEAN",name:"Ocean Token",chainId:1,address:"0x967da4048cD07aB37855c090aAF366e4ce1b9F48",value:"0x967da4048cD07aB37855c090aAF366e4ce1b9F48",logoURI:"https://assets.coingecko.com/coins/images/3687/thumb/ocean-protocol-logo.jpg?1547038686"},{decimals:18,symbol:"ankrCRV",name:"Curve.fi ETH/aETH",chainId:1,address:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf",value:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf"},{decimals:18,symbol:"multibtc3CRV-f",name:"Curve.fi Factory USD Metapool: multiBTC+WBTC/sBTC",chainId:1,address:"0x2863a328A0B7fC6040f11614FA0728587DB8e353",value:"0x2863a328A0B7fC6040f11614FA0728587DB8e353"},{decimals:18,symbol:"alfrxETH-f",name:"Curve.fi Factory Plain Pool: alETHfrxETH",chainId:1,address:"0xB657B895B265C38c53FFF00166cF7F6A3C70587d",value:"0xB657B895B265C38c53FFF00166cF7F6A3C70587d"},{decimals:18,symbol:"crvCVXETH",name:"Curve CVX-ETH",chainId:1,address:"0x3A283D9c08E8b55966afb64C515f5143cf907611",value:"0x3A283D9c08E8b55966afb64C515f5143cf907611"},{decimals:18,symbol:"D3-f",name:"Curve.fi Factory Plain Pool: d3pool",chainId:1,address:"0xBaaa1F5DbA42C3389bDbc2c9D2dE134F5cD0Dc89",value:"0xBaaa1F5DbA42C3389bDbc2c9D2dE134F5cD0Dc89"},{decimals:18,symbol:"ALCX",name:"Alchemix",chainId:1,address:"0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF",value:"0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF",logoURI:"https://assets.coingecko.com/coins/images/14113/thumb/Alchemix.png?1614409874"},{decimals:18,symbol:"crvFRAX",name:"Curve.fi FRAX/USDC",chainId:1,address:"0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC",value:"0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC"},{decimals:18,symbol:"ust3CRV",name:"Curve.fi UST/3Crv",chainId:1,address:"0x94e131324b6054c0D789b190b2dAC504e4361b53",value:"0x94e131324b6054c0D789b190b2dAC504e4361b53"},{decimals:18,symbol:"PALETH-f",name:"Curve.fi Factory Crypto Pool: PAL/ETH",chainId:1,address:"0xbE4f3AD6C9458b901C81b734CB22D9eaE9Ad8b50",value:"0xbE4f3AD6C9458b901C81b734CB22D9eaE9Ad8b50"},{decimals:18,symbol:"FEI3CRV3CRV-f",name:"Curve.fi Factory USD Metapool: FEI Metapool",chainId:1,address:"0x06cb22615BA53E60D67Bf6C341a0fD5E718E1655",value:"0x06cb22615BA53E60D67Bf6C341a0fD5E718E1655"},{decimals:18,symbol:"ibAUD+sAUD-f",name:"Curve.fi Factory Plain Pool: ibAUD/sAUD",chainId:1,address:"0x3F1B0278A9ee595635B61817630cC19DE792f506",value:"0x3F1B0278A9ee595635B61817630cC19DE792f506"},{decimals:6,symbol:"USDT",name:"Tether USD",chainId:1,address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",value:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{decimals:18,symbol:"B-auraBAL-STABLE",name:"Balancer auraBAL Stable Pool",chainId:1,address:"0x3dd0843A028C86e0b760b1A76929d1C5Ef93a2dd",value:"0x3dd0843A028C86e0b760b1A76929d1C5Ef93a2dd"},{decimals:18,symbol:"WETH",name:"Wrapped Ether",chainId:1,address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",value:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{decimals:18,symbol:"tbtc/sbtcCrv",name:"Curve.fi tBTC/sbtcCrv",chainId:1,address:"0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd",value:"0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd"},{decimals:18,symbol:"crvUSDUSDT-f",name:"Curve.fi Factory Plain Pool: crvUSD/USDT",chainId:1,address:"0x390f3595bCa2Df7d23783dFd126427CCeb997BF4",value:"0x390f3595bCa2Df7d23783dFd126427CCeb997BF4"},{decimals:18,symbol:"eursCRV",name:"Curve.fi EURS/sEUR",chainId:1,address:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1",value:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1"},{decimals:18,symbol:"yCRV",name:"Yearn CRV",chainId:1,address:"0xFCc5c47bE19d06BF83eB04298b026F81069ff65b",value:"0xFCc5c47bE19d06BF83eB04298b026F81069ff65b"},{decimals:18,symbol:"ib3CRV",name:"Curve.fi cyDAI/cyUSDC/cyUSDT",chainId:1,address:"0x5282a4eF67D9C33135340fB3289cc1711c13638C",value:"0x5282a4eF67D9C33135340fB3289cc1711c13638C"},{decimals:18,symbol:"MIM",name:"Magic Internet Money",chainId:1,address:"0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",value:"0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",logoURI:"https://assets.coingecko.com/coins/images/16786/thumb/mimlogopng.png?1624979612"},{decimals:18,symbol:"cDAI+cUSDC+USDT",name:"Curve.fi cDAI/cUSDC/USDT",chainId:1,address:"0x9fC689CCaDa600B6DF723D9E47D84d76664a1F23",value:"0x9fC689CCaDa600B6DF723D9E47D84d76664a1F23"},{decimals:18,symbol:"CTRETH-f",name:"Curve.fi Factory Crypto Pool: Concentrator CTR/ETH",chainId:1,address:"0x3f0e7916681452D23Cd36B1281457DA721F2E5dF",value:"0x3f0e7916681452D23Cd36B1281457DA721F2E5dF"},{decimals:18,symbol:"bLUSDLUSD3-f",name:"Curve.fi Factory Crypto Pool: bLUSD_LUSD3CRV",chainId:1,address:"0x5ca0313D44551e32e0d7a298EC024321c4BC59B4",value:"0x5ca0313D44551e32e0d7a298EC024321c4BC59B4"},{decimals:18,symbol:"RAI3CRV",name:"RAI3CRV",chainId:1,address:"0x6BA5b4e438FA0aAf7C1bD179285aF65d13bD3D90",value:"0x6BA5b4e438FA0aAf7C1bD179285aF65d13bD3D90"},{decimals:18,symbol:"MIM-3LP3CRV-f",name:"Curve.fi Factory USD Metapool: Magic Internet Money 3Pool",chainId:1,address:"0x5a6A4D54456819380173272A5E8E9B9904BdF41B",value:"0x5a6A4D54456819380173272A5E8E9B9904BdF41B"},{decimals:18,symbol:"hCRV",name:"Curve.fi hBTC/wBTC",chainId:1,address:"0xb19059ebb43466C323583928285a49f558E572Fd",value:"0xb19059ebb43466C323583928285a49f558E572Fd"},{decimals:18,symbol:"yvecrv-f",name:"Curve.fi Factory Plain Pool: yveCRV",chainId:1,address:"0x7E46fd8a30869aa9ed55af031067Df666EfE87da",value:"0x7E46fd8a30869aa9ed55af031067Df666EfE87da"},{decimals:18,symbol:"gusd3CRV",name:"Curve.fi GUSD/3Crv",chainId:1,address:"0xD2967f45c4f384DEEa880F807Be904762a3DeA07",value:"0xD2967f45c4f384DEEa880F807Be904762a3DeA07"},{decimals:18,symbol:"BUSD3CRV-f",name:"Curve.fi Factory USD Metapool: Binance USD",chainId:1,address:"0x4807862AA8b2bF68830e4C8dc86D0e9A998e085a",value:"0x4807862AA8b2bF68830e4C8dc86D0e9A998e085a"},{decimals:18,symbol:"ibCHFUSDC-f",name:"Curve.fi Factory Crypto Pool: ibCHF/USDC",chainId:1,address:"0x08ceA8E5B4551722dEB97113C139Dd83C26c5398",value:"0x08ceA8E5B4551722dEB97113C139Dd83C26c5398"},{decimals:18,symbol:"JPEGpETH-f",name:"Curve.fi Factory Crypto Pool: JPEG/pETH",chainId:1,address:"0x23E7817bC73645063FB2fa85c1d098EfFE84bE90",value:"0x23E7817bC73645063FB2fa85c1d098EfFE84bE90"},{decimals:18,symbol:"JPEGpETH-f",name:"Curve.fi Factory Crypto Pool: JPEG/pETH",chainId:1,address:"0xDA68f66fC0f10Ee61048E70106Df4BDB26bAF595",value:"0xDA68f66fC0f10Ee61048E70106Df4BDB26bAF595"},{decimals:18,symbol:"dusd3CRV",name:"Curve.fi DUSD/3Crv",chainId:1,address:"0x3a664Ab939FD8482048609f652f9a0B0677337B9",value:"0x3a664Ab939FD8482048609f652f9a0B0677337B9"},{decimals:18,symbol:"crvRenWBTC",name:"Curve.fi renBTC/wBTC",chainId:1,address:"0x49849C98ae39Fff122806C06791Fa73784FB3675",value:"0x49849C98ae39Fff122806C06791Fa73784FB3675"},{decimals:18,symbol:"agEUREUROC-f",name:"Curve.fi Factory Plain Pool: agEUR/EUROC",chainId:1,address:"0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73",value:"0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73"},{decimals:18,symbol:"BTRFLYETH-f",name:"Curve.fi Factory Crypto Pool: BTRFLY/ETH",chainId:1,address:"0x7483Dd57f6488b0e194A151C57Df6Ec85C00aCE9",value:"0x7483Dd57f6488b0e194A151C57Df6Ec85C00aCE9"},{decimals:18,symbol:"saCRV",name:"Curve.fi aDAI/aSUSD",chainId:1,address:"0x02d341CcB60fAaf662bC0554d13778015d1b285C",value:"0x02d341CcB60fAaf662bC0554d13778015d1b285C"},{decimals:8,symbol:"renBTC",name:"renBTC",chainId:1,address:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",value:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D"},{decimals:18,symbol:"STGUSDC-f",name:"Curve.fi Factory Crypto Pool: STG/USDC",chainId:1,address:"0xdf55670e27bE5cDE7228dD0A6849181891c9ebA1",value:"0xdf55670e27bE5cDE7228dD0A6849181891c9ebA1"},{decimals:18,symbol:"sUSD",name:"Synth sUSD",chainId:1,address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",value:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{decimals:18,symbol:"LUSD",name:"LUSD Stablecoin",chainId:1,address:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",value:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",logoURI:"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png?1617631327"},{decimals:18,symbol:"a3CRV",name:"Curve.fi aDAI/aUSDC/aUSDT",chainId:1,address:"0xFd2a8fA60Abd58Efe3EeE34dd494cD491dC14900",value:"0xFd2a8fA60Abd58Efe3EeE34dd494cD491dC14900"},{decimals:6,symbol:"USDT",name:"Tether USD",chainId:1,address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",value:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{decimals:18,symbol:"usdn3CRV",name:"Curve.fi USDN/3Crv",chainId:1,address:"0x4f3E8F405CF5aFC05D68142F3783bDfE13811522",value:"0x4f3E8F405CF5aFC05D68142F3783bDfE13811522"},{decimals:18,symbol:"LOOKS",name:"LooksRare Token",chainId:1,address:"0xf4d2888d29D722226FafA5d9B24F9164c092421E",value:"0xf4d2888d29D722226FafA5d9B24F9164c092421E"},{decimals:18,symbol:"usdk3CRV",name:"Curve.fi USDK/3Crv",chainId:1,address:"0x97E2768e8E73511cA874545DC5Ff8067eB19B787",value:"0x97E2768e8E73511cA874545DC5Ff8067eB19B787"},{decimals:18,symbol:"crvTricrypto",name:"Curve.fi USD-BTC-ETH",chainId:1,address:"0xcA3d75aC011BF5aD07a98d02f18225F9bD9A6BDF",value:"0xcA3d75aC011BF5aD07a98d02f18225F9bD9A6BDF"},{decimals:18,symbol:"CLEVETH-f",name:"Curve.fi Factory Crypto Pool: CLEV/ETH",chainId:1,address:"0x6C280dB098dB673d30d5B34eC04B6387185D3620",value:"0x6C280dB098dB673d30d5B34eC04B6387185D3620"},{decimals:18,symbol:"pBTC/sbtcCRV",name:"Curve.fi pBTC/sbtcCRV",chainId:1,address:"0xDE5331AC4B3630f94853Ff322B66407e0D6331E8",value:"0xDE5331AC4B3630f94853Ff322B66407e0D6331E8"},{decimals:18,symbol:"agEUR-VEUR-f",name:"Curve.fi Factory Plain Pool: agEUR/VEUR",chainId:1,address:"0xF05CFb8b4382c69f3B451C5FB55210B232E0edFA",value:"0xF05CFb8b4382c69f3B451C5FB55210B232E0edFA"},{decimals:18,symbol:"crvUSDETHCRV",name:"TriCRV",chainId:1,address:"0x4eBdF703948ddCEA3B11f675B4D1Fba9d2414A14",value:"0x4eBdF703948ddCEA3B11f675B4D1Fba9d2414A14"},{decimals:18,symbol:"bb-a-USD",name:"Balancer Aave Boosted StablePool (USD)",chainId:1,address:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2",value:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"},{decimals:18,symbol:"sdCRVCRV-f",name:"Curve.fi Factory Plain Pool: sdCRV",chainId:1,address:"0xf7b55C3732aD8b2c2dA7c24f30A69f55c54FB717",value:"0xf7b55C3732aD8b2c2dA7c24f30A69f55c54FB717"},{decimals:18,symbol:"crvUSDTUSD-f",name:"Curve.fi Factory Plain Pool: crvUSD/TUSD",chainId:1,address:"0x34D655069F4cAc1547E4C8cA284FfFF5ad4A8db0",value:"0x34D655069F4cAc1547E4C8cA284FfFF5ad4A8db0"},{decimals:18,symbol:"cvxcrv-f",name:"Curve.fi Factory Plain Pool: cvxCRV",chainId:1,address:"0x9D0464996170c6B9e75eED71c68B99dDEDf279e8",value:"0x9D0464996170c6B9e75eED71c68B99dDEDf279e8"},{decimals:18,symbol:"RAI",name:"Rai Reflex Index",chainId:1,address:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",value:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{decimals:18,symbol:"ibCHF+sCHF-f",name:"Curve.fi Factory Plain Pool: ibCHF/sCHF",chainId:1,address:"0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c",value:"0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c"},{decimals:18,symbol:"sUSD",name:"Synth sUSD",chainId:1,address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",value:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{decimals:18,symbol:"SUSHI",name:"SushiToken",chainId:1,address:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",value:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{decimals:18,symbol:"TUSD",name:"TrueUSD",chainId:1,address:"0x0000000000085d4780B73119b644AE5ecd22b376",value:"0x0000000000085d4780B73119b644AE5ecd22b376"},{decimals:18,symbol:"COMP",name:"Compound",chainId:1,address:"0xc00e94Cb662C3520282E6f5717214004A7f26888",value:"0xc00e94Cb662C3520282E6f5717214004A7f26888",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{decimals:18,symbol:"yDAI+yUSDC+yUSDT+yTUSD",name:"Curve.fi yDAI/yUSDC/yUSDT/yTUSD",chainId:1,address:"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8",value:"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"},{decimals:18,symbol:"EURT-f",name:"Curve.fi Factory Plain Pool: Euro Tether",chainId:1,address:"0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890",value:"0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890"},{decimals:18,symbol:"alUSD3CRV-f",name:"Curve.fi Factory USD Metapool: Alchemix USD",chainId:1,address:"0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c",value:"0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c"},{decimals:2,symbol:"GUSD",name:"Gemini dollar",chainId:1,address:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",value:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",logoURI:"https://assets.coingecko.com/coins/images/5992/thumb/gemini-dollar-gusd.png?1536745278"},{decimals:18,symbol:"GHO/bb-a-USD",name:"Balancer GHO/bb-a-USD Stable Pool",chainId:1,address:"0xc2B021133D1b0cF07dba696fd5DD89338428225B",value:"0xc2B021133D1b0cF07dba696fd5DD89338428225B"},{decimals:18,symbol:"alUSDFRAXB3CRV-f",name:"Curve.fi Factory USD Metapool: alUSDFRAXBP",chainId:1,address:"0xB30dA2376F63De30b42dC055C93fa474F31330A5",value:"0xB30dA2376F63De30b42dC055C93fa474F31330A5"},{decimals:18,symbol:"ibKRW+sKRW-f",name:"Curve.fi Factory Plain Pool: ibKRW/sKRW",chainId:1,address:"0x8461A004b50d321CB22B7d034969cE6803911899",value:"0x8461A004b50d321CB22B7d034969cE6803911899"},{decimals:18,symbol:"sdYFIYFI-f",name:"Curve.fi Factory Plain Pool: sdYFI",chainId:1,address:"0x79E281BC69A03DaBCcD66858c65EF6724e50aebe",value:"0x79E281BC69A03DaBCcD66858c65EF6724e50aebe"},{decimals:18,symbol:"ibKRW+sKRW-f",name:"Curve.fi Factory Plain Pool: ibKRW/sKRW",chainId:1,address:"0x8461A004b50d321CB22B7d034969cE6803911899",value:"0x8461A004b50d321CB22B7d034969cE6803911899"},{decimals:18,symbol:"USDC+LP-f",name:"Curve.fi Factory Crypto Pool: USDC+",chainId:1,address:"0xfed2B54453F75634bcdaEA5e5b11a3f99b9C28Fa",value:"0xfed2B54453F75634bcdaEA5e5b11a3f99b9C28Fa"},{decimals:18,symbol:"ALCX",name:"Alchemix",chainId:1,address:"0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF",value:"0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF",logoURI:"https://assets.coingecko.com/coins/images/14113/thumb/Alchemix.png?1614409874"},{decimals:18,symbol:"crvWSBTC",name:"Curve.fi wBTC/sBTC",chainId:1,address:"0x051d7e5609917Bd9b73f04BAc0DED8Dd46a74301",value:"0x051d7e5609917Bd9b73f04BAc0DED8Dd46a74301"},{decimals:18,symbol:"eCRV",name:"Curve.fi ETH/sETH",chainId:1,address:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c",value:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{decimals:18,symbol:"yETH-f",name:"Curve.fi Factory Plain Pool: yETH",chainId:1,address:"0x69ACcb968B19a53790f43e57558F5E443A91aF22",value:"0x69ACcb968B19a53790f43e57558F5E443A91aF22"},{decimals:18,symbol:"ibJPY+sJPY-f",name:"Curve.fi Factory Plain Pool: ibJPY/sJPY",chainId:1,address:"0x8818a9bb44Fbf33502bE7c15c500d0C783B73067",value:"0x8818a9bb44Fbf33502bE7c15c500d0C783B73067"},{decimals:18,symbol:"ibGBP+sGBP-f",name:"Curve.fi Factory Plain Pool: ibGBP/sGBP",chainId:1,address:"0xD6Ac1CB9019137a896343Da59dDE6d097F710538",value:"0xD6Ac1CB9019137a896343Da59dDE6d097F710538"},{decimals:18,symbol:"3EURpool-f",name:"Curve.fi Factory Plain Pool: 3EURpool",chainId:1,address:"0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571",value:"0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571"},{decimals:18,symbol:"COMP",name:"Compound",chainId:1,address:"0xc00e94Cb662C3520282E6f5717214004A7f26888",value:"0xc00e94Cb662C3520282E6f5717214004A7f26888",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{decimals:18,symbol:"steCRV",name:"Curve.fi ETH/stETH",chainId:1,address:"0x06325440D014e39736583c165C2963BA99fAf14E",value:"0x06325440D014e39736583c165C2963BA99fAf14E"},{decimals:18,symbol:"pETH-ETH-f",name:"Curve.fi Factory Pool: pETH",chainId:1,address:"0x9848482da3Ee3076165ce6497eDA906E66bB85C5",value:"0x9848482da3Ee3076165ce6497eDA906E66bB85C5"},{decimals:18,symbol:"stETH-ng-f",name:"Curve.fi Factory Pool: stETH-ng",chainId:1,address:"0x21E27a5E5513D6e65C4f830167390997aA84843a",value:"0x21E27a5E5513D6e65C4f830167390997aA84843a"},{decimals:18,symbol:"crvPlain3andSUSD",name:"Curve.fi DAI/USDC/USDT/sUSD",chainId:1,address:"0xC25a3A3b969415c80451098fa907EC722572917F",value:"0xC25a3A3b969415c80451098fa907EC722572917F"},{decimals:18,symbol:"eCRV",name:"Curve.fi ETH/sETH",chainId:1,address:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c",value:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{decimals:18,symbol:"crvPlain3andSUSD",name:"Curve.fi DAI/USDC/USDT/sUSD",chainId:1,address:"0xC25a3A3b969415c80451098fa907EC722572917F",value:"0xC25a3A3b969415c80451098fa907EC722572917F"},{decimals:18,symbol:"rETHwstETH-f",name:"Curve.fi Factory Plain Pool: rETH/wstETH",chainId:1,address:"0x447Ddd4960d9fdBF6af9a790560d0AF76795CB08",value:"0x447Ddd4960d9fdBF6af9a790560d0AF76795CB08"},{decimals:18,symbol:"ibbtc/sbtcCRV-f",name:"Curve.fi Factory BTC Metapool: ibBTC",chainId:1,address:"0xFbdCA68601f835b27790D98bbb8eC7f05FDEaA9B",value:"0xFbdCA68601f835b27790D98bbb8eC7f05FDEaA9B"},{decimals:18,symbol:"LUSD3CRV-f",name:"Curve.fi Factory USD Metapool: Liquity",chainId:1,address:"0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA",value:"0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA"},{decimals:18,symbol:"STETHETH_C-f",name:"Curve.fi Factory Plain Pool: stETH concentrated",chainId:1,address:"0x828b154032950C8ff7CF8085D841723Db2696056",value:"0x828b154032950C8ff7CF8085D841723Db2696056"},{decimals:18,symbol:"yCRV-f",name:"Curve.fi Factory Plain Pool: yCRV",chainId:1,address:"0x0309A528bBa0394dC4A2Ce59123C52E317A54604",value:"0x0309A528bBa0394dC4A2Ce59123C52E317A54604"},{decimals:18,symbol:"hCRV",name:"Curve.fi hBTC/wBTC",chainId:1,address:"0xb19059ebb43466C323583928285a49f558E572Fd",value:"0xb19059ebb43466C323583928285a49f558E572Fd"},{decimals:18,symbol:"gusd3CRV",name:"Curve.fi GUSD/3Crv",chainId:1,address:"0xD2967f45c4f384DEEa880F807Be904762a3DeA07",value:"0xD2967f45c4f384DEEa880F807Be904762a3DeA07"},{decimals:18,symbol:"ETH MATIC-f",name:"Curve.fi Factory Crypto Pool: PAIR_ETH_MATIC",chainId:1,address:"0xD8eb58D76aF99547333cfEeb6a0f9bd1A63b6492",value:"0xD8eb58D76aF99547333cfEeb6a0f9bd1A63b6492"},{decimals:18,symbol:"dusd3CRV",name:"Curve.fi DUSD/3Crv",chainId:1,address:"0x3a664Ab939FD8482048609f652f9a0B0677337B9",value:"0x3a664Ab939FD8482048609f652f9a0B0677337B9"},{decimals:18,symbol:"LINK",name:"ChainLink Token",chainId:1,address:"0x514910771AF9Ca656af840dff83E8264EcF986CA",value:"0x514910771AF9Ca656af840dff83E8264EcF986CA",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{decimals:18,symbol:"DOLA3POOL3CRV-f",name:"Curve.fi Factory USD Metapool: DOLA-3pool Curve LP",chainId:1,address:"0xAA5A67c256e27A5d80712c51971408db3370927D",value:"0xAA5A67c256e27A5d80712c51971408db3370927D"},{decimals:18,symbol:"ibEUR+sEUR-f",name:"Curve.fi Factory Plain Pool: ibEUR/sEUR",chainId:1,address:"0x19b080FE1ffA0553469D20Ca36219F17Fcf03859",value:"0x19b080FE1ffA0553469D20Ca36219F17Fcf03859"},{decimals:18,symbol:"crvUSDCWETHINV",name:"TricryptoINV",chainId:1,address:"0x5426178799ee0a0181A89b4f57eFddfAb49941Ec",value:"0x5426178799ee0a0181A89b4f57eFddfAb49941Ec"},{decimals:18,symbol:"crvCRVETH",name:"Curve CRV-ETH",chainId:1,address:"0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d",value:"0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d"},{decimals:18,symbol:"YFIETH-f",name:"Curve.fi Factory Crypto Pool: YFI/ETH",chainId:1,address:"0x29059568bB40344487d62f7450E78b8E6C74e0e5",value:"0x29059568bB40344487d62f7450E78b8E6C74e0e5"},{decimals:18,symbol:"ibGBPUSDC-f",name:"Curve.fi Factory Crypto Pool: ibGBP/USDC",chainId:1,address:"0x22CF19EB64226e0E1A79c69b345b31466fD273A7",value:"0x22CF19EB64226e0E1A79c69b345b31466fD273A7"},{decimals:18,symbol:"yDAI+yUSDC+yUSDT+yBUSD",name:"Curve.fi yDAI/yUSDC/yUSDT/yBUSD",chainId:1,address:"0x3B3Ac5386837Dc563660FB6a0937DFAa5924333B",value:"0x3B3Ac5386837Dc563660FB6a0937DFAa5924333B"},{decimals:18,symbol:"yCRV-f",name:"Curve.fi Factory Plain Pool: yCRV",chainId:1,address:"0x99f5aCc8EC2Da2BC0771c32814EFF52b712de1E5",value:"0x99f5aCc8EC2Da2BC0771c32814EFF52b712de1E5"},{decimals:18,symbol:"USDM3CRV-f",name:"Curve.fi Factory USD Metapool: USDM",chainId:1,address:"0x5B3b5DF2BF2B6543f78e053bD91C4Bdd820929f1",value:"0x5B3b5DF2BF2B6543f78e053bD91C4Bdd820929f1"},{decimals:18,symbol:"hyUSDeUSD-f",name:"Curve.fi Factory Crypto Pool: hyUSD/eUSD",chainId:1,address:"0xc794C6A95f30d0ebF7B3Bbe85e8a0A95C9e411c1",value:"0xc794C6A95f30d0ebF7B3Bbe85e8a0A95C9e411c1"},{decimals:18,symbol:"cbETHfrxET-f",name:"Curve.fi Factory Crypto Pool: cbETH/frxETH",chainId:1,address:"0x548E063CE6F3BaC31457E4f5b4e2345286274257",value:"0x548E063CE6F3BaC31457E4f5b4e2345286274257"},{decimals:18,symbol:"SUSHI",name:"SushiToken",chainId:1,address:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",value:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{decimals:18,symbol:"crvCRVETH",name:"Curve CRV-ETH",chainId:1,address:"0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d",value:"0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d"},{decimals:18,symbol:"crvRenWBTC",name:"Curve.fi renBTC/wBTC",chainId:1,address:"0x49849C98ae39Fff122806C06791Fa73784FB3675",value:"0x49849C98ae39Fff122806C06791Fa73784FB3675"},{decimals:18,symbol:"LDOETH-f",name:"Curve.fi Factory Crypto Pool: LDO/ETH",chainId:1,address:"0xb79565c01b7Ae53618d9B847b9443aAf4f9011e7",value:"0xb79565c01b7Ae53618d9B847b9443aAf4f9011e7"},{decimals:18,symbol:"alETH+ETH-f",name:"Curve.fi Factory Pool: alETH",chainId:1,address:"0xC4C319E2D4d66CcA4464C0c2B32c9Bd23ebe784e",value:"0xC4C319E2D4d66CcA4464C0c2B32c9Bd23ebe784e"},{decimals:18,symbol:"ibCHF+sCHF-f",name:"Curve.fi Factory Plain Pool: ibCHF/sCHF",chainId:1,address:"0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c",value:"0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c"},{decimals:18,symbol:"SNX",name:"Synthetix Network Token",chainId:1,address:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",value:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{decimals:18,symbol:"TUSD",name:"TrueUSD",chainId:1,address:"0x0000000000085d4780B73119b644AE5ecd22b376",value:"0x0000000000085d4780B73119b644AE5ecd22b376"},{decimals:18,symbol:"crvCVXETH",name:"Curve CVX-ETH",chainId:1,address:"0x3A283D9c08E8b55966afb64C515f5143cf907611",value:"0x3A283D9c08E8b55966afb64C515f5143cf907611"},{decimals:18,symbol:"ankrCRV",name:"Curve.fi ETH/aETH",chainId:1,address:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf",value:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf"},{decimals:18,symbol:"OHMFRAXBP-f",name:"Curve.fi Factory Crypto Pool: OHM/FRAXBP",chainId:1,address:"0x5271045F7B73c17825A7A7aee6917eE46b0B7520",value:"0x5271045F7B73c17825A7A7aee6917eE46b0B7520"},{decimals:18,symbol:"rCRV",name:"Curve.fi ETH/rETH",chainId:1,address:"0x53a901d48795C58f485cBB38df08FA96a24669D5",value:"0x53a901d48795C58f485cBB38df08FA96a24669D5"},{decimals:18,symbol:"crvUSDTWBTCWETH",name:"TricryptoUSDT",chainId:1,address:"0xf5f5B97624542D72A9E06f04804Bf81baA15e2B4",value:"0xf5f5B97624542D72A9E06f04804Bf81baA15e2B4"},{decimals:18,symbol:"YFIETH-f",name:"Curve.fi Factory Crypto Pool: YFI/ETH",chainId:1,address:"0x29059568bB40344487d62f7450E78b8E6C74e0e5",value:"0x29059568bB40344487d62f7450E78b8E6C74e0e5"},{decimals:18,symbol:"OETHCRV-f",name:"Curve.fi Factory Pool: OETH",chainId:1,address:"0x94B17476A93b3262d87B9a326965D1E91f9c13E7",value:"0x94B17476A93b3262d87B9a326965D1E91f9c13E7"},{decimals:18,symbol:"agEUREUROC-f",name:"Curve.fi Factory Plain Pool: agEUR/EUROC",chainId:1,address:"0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73",value:"0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73"},{decimals:18,symbol:"sUSD",name:"Synth sUSD",chainId:1,address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",value:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{decimals:18,symbol:"crvUSDUSDC-f",name:"Curve.fi Factory Plain Pool: crvUSD/USDC",chainId:1,address:"0x4DEcE678ceceb27446b35C672dC7d61F30bAD69E",value:"0x4DEcE678ceceb27446b35C672dC7d61F30bAD69E"},{decimals:18,symbol:"sdFXSFXS-f",name:"Curve.fi Factory Plain Pool: sdFXS",chainId:1,address:"0x8c524635d52bd7b1Bd55E062303177a7d916C046",value:"0x8c524635d52bd7b1Bd55E062303177a7d916C046"},{decimals:18,symbol:"crvEURSUSDC",name:"Curve EURS-USDC",chainId:1,address:"0x3D229E1B4faab62F621eF2F6A610961f7BD7b23B",value:"0x3D229E1B4faab62F621eF2F6A610961f7BD7b23B"},{decimals:18,symbol:"rETHfrxETH-f",name:"Curve.fi Factory Crypto Pool: rETH/frxETH",chainId:1,address:"0xbA6c373992AD8ec1f7520E5878E5540Eb36DeBf1",value:"0xbA6c373992AD8ec1f7520E5878E5540Eb36DeBf1"},{decimals:18,symbol:"crv3crypto",name:"Curve.fi USD-BTC-ETH",chainId:1,address:"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff",value:"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"},{decimals:18,symbol:"ypaxCrv",name:"Curve.fi DAI/USDC/USDT/PAX",chainId:1,address:"0xD905e2eaeBe188fc92179b6350807D8bd91Db0D8",value:"0xD905e2eaeBe188fc92179b6350807D8bd91Db0D8"},{decimals:18,symbol:"crvUSDFRAX-f",name:"Curve.fi Factory Plain Pool: crvUSD/Frax",chainId:1,address:"0x0CD6f267b2086bea681E922E19D40512511BE538",value:"0x0CD6f267b2086bea681E922E19D40512511BE538"},{decimals:18,symbol:"3EURpool-f",name:"Curve.fi Factory Plain Pool: 3EURpool",chainId:1,address:"0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571",value:"0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571"},{decimals:6,symbol:"USDT",name:"Tether USD",chainId:1,address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",value:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{decimals:18,symbol:"crvRenWSBTC",name:"Curve.fi renBTC/wBTC/sBTC",chainId:1,address:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3",value:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3"},{decimals:18,symbol:"sBTC",name:"Synth sBTC",chainId:1,address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",value:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6"},{decimals:18,symbol:"ETH+ETH-f",name:"Curve.fi Factory Crypto Pool: ETH+/ETH",chainId:1,address:"0xe8a5677171c87fCB65b76957f2852515B404C7b1",value:"0xe8a5677171c87fCB65b76957f2852515B404C7b1"},{decimals:18,symbol:"3Crv",name:"Curve.fi DAI/USDC/USDT",chainId:1,address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",value:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},{decimals:18,symbol:"RAI",name:"Rai Reflex Index",chainId:1,address:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",value:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{decimals:18,symbol:"bb-a-USD",name:"Balancer Aave v3 Boosted StablePool",chainId:1,address:"0xfeBb0bbf162E64fb9D0dfe186E517d84C395f016",value:"0xfeBb0bbf162E64fb9D0dfe186E517d84C395f016"},{decimals:18,symbol:"RSRcrvFRAX-f",name:"Curve.fi Factory Crypto Pool: RSR+FRAX/USDC (FRAXBP)",chainId:1,address:"0x3F436954afb722F5D14D868762a23faB6b0DAbF0",value:"0x3F436954afb722F5D14D868762a23faB6b0DAbF0"},{decimals:18,symbol:"USDP",name:"USDP Stablecoin",chainId:1,address:"0x1456688345527bE1f37E9e627DA0837D6f08C925",value:"0x1456688345527bE1f37E9e627DA0837D6f08C925"},{decimals:18,symbol:"yCRV",name:"Yearn CRV",chainId:1,address:"0x4c1317326fD8EFDeBdBE5e1cd052010D97723bd6",value:"0x4c1317326fD8EFDeBdBE5e1cd052010D97723bd6"},{decimals:18,symbol:"EURN/EURT-f",name:"Curve.fi Factory Plain Pool: Neutrino EUR",chainId:1,address:"0x3Fb78e61784C9c637D560eDE23Ad57CA1294c14a",value:"0x3Fb78e61784C9c637D560eDE23Ad57CA1294c14a"},{decimals:18,symbol:"musd3CRV",name:"Curve.fi MUSD/3Crv",chainId:1,address:"0x1AEf73d49Dedc4b1778d0706583995958Dc862e6",value:"0x1AEf73d49Dedc4b1778d0706583995958Dc862e6"},{decimals:18,symbol:"usdn3CRV",name:"Curve.fi USDN/3Crv",chainId:1,address:"0x4f3E8F405CF5aFC05D68142F3783bDfE13811522",value:"0x4f3E8F405CF5aFC05D68142F3783bDfE13811522"},{decimals:18,symbol:"bBTC/sbtcCRV",name:"Curve.fi bBTC/sbtcCRV",chainId:1,address:"0x410e3E86ef427e30B9235497143881f717d93c2A",value:"0x410e3E86ef427e30B9235497143881f717d93c2A"},{decimals:18,symbol:"pax-usdp3CRV-f",name:"Curve.fi Factory USD Metapool: Paxos Dollar (USDP)",chainId:1,address:"0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad",value:"0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad"},{decimals:18,symbol:"sdYFIpool-f",name:"Curve.fi Factory Plain Pool: sdYFI/YFI",chainId:1,address:"0x852b90239C5034b5bb7a5e54eF1bEF3Ce3359CC8",value:"0x852b90239C5034b5bb7a5e54eF1bEF3Ce3359CC8"},{decimals:18,symbol:"musd3CRV",name:"Curve.fi MUSD/3Crv",chainId:1,address:"0x1AEf73d49Dedc4b1778d0706583995958Dc862e6",value:"0x1AEf73d49Dedc4b1778d0706583995958Dc862e6"},{decimals:6,symbol:"USDC",name:"USD Coin",chainId:1,address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",value:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{decimals:18,symbol:"eCRV",name:"Curve.fi ETH/sETH",chainId:1,address:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c",value:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{decimals:18,symbol:"wstETH-rETH-sfrxETH-BPT",name:"wstETH-rETH-sfrxETH StablePool",chainId:1,address:"0x5aEe1e99fE86960377DE9f88689616916D5DcaBe",value:"0x5aEe1e99fE86960377DE9f88689616916D5DcaBe"},{decimals:18,symbol:"STG/FRAXBP-f",name:"Curve.fi Factory Crypto Pool: STG/FRAX-USDC",chainId:1,address:"0x9de1c3D446237ab9BaFF74127eb4F303802a2683",value:"0x9de1c3D446237ab9BaFF74127eb4F303802a2683"},{decimals:18,symbol:"ibJPYUSDC-f",name:"Curve.fi Factory Crypto Pool: ibJPY/USDC",chainId:1,address:"0x127091edE112aEd7Bae281747771b3150Bb047bB",value:"0x127091edE112aEd7Bae281747771b3150Bb047bB"},{decimals:18,symbol:"sdAGAG-f",name:"Curve.fi Factory Plain Pool: sdANGLE",chainId:1,address:"0x48fF31bBbD8Ab553Ebe7cBD84e1eA3dBa8f54957",value:"0x48fF31bBbD8Ab553Ebe7cBD84e1eA3dBa8f54957"},{decimals:18,symbol:"ibEURUSDC-f",name:"Curve.fi Factory Crypto Pool: ibEUR/USDC",chainId:1,address:"0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF",value:"0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF"},{decimals:8,symbol:"WBTC",name:"Wrapped BTC",chainId:1,address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",value:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{decimals:18,symbol:"alUSD3CRV-f",name:"Curve.fi Factory USD Metapool: Alchemix USD",chainId:1,address:"0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c",value:"0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c"},{decimals:18,symbol:"FUD",name:"FIAT-USDC-DAI Stable Pool",chainId:1,address:"0x178E029173417b1F9C8bC16DCeC6f697bC323746",value:"0x178E029173417b1F9C8bC16DCeC6f697bC323746"},{decimals:18,symbol:"B-staFiETH-WETH-Stable",name:"Balancer staFiETH-WETH Stable Pool",chainId:1,address:"0xB08885e6026bab4333A80024Ec25a1a3e1FF2b8A",value:"0xB08885e6026bab4333A80024Ec25a1a3e1FF2b8A"},{decimals:18,symbol:"msETHWETH-f",name:"Curve.fi Factory Plain Pool: msETH/WETH",chainId:1,address:"0xa4c567c662349BeC3D0fB94C4e7f85bA95E208e4",value:"0xa4c567c662349BeC3D0fB94C4e7f85bA95E208e4"},{decimals:18,symbol:"cDAI+cUSDC",name:"Curve.fi cDAI/cUSDC",chainId:1,address:"0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2",value:"0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2"},{decimals:18,symbol:"3Crv",name:"Curve.fi DAI/USDC/USDT",chainId:1,address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",value:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},{decimals:18,symbol:"LUSD3CRV-f",name:"Curve.fi Factory USD Metapool: Liquity",chainId:1,address:"0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA",value:"0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA"},{decimals:18,symbol:"FRAX",name:"Frax",chainId:1,address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",value:"0x853d955aCEf822Db058eb8505911ED77F175b99e",logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{decimals:18,symbol:"FRAX3CRV-f",name:"Curve.fi Factory USD Metapool: Frax",chainId:1,address:"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B",value:"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},{decimals:18,symbol:"crvUSDSUSD-f",name:"Curve.fi Factory Plain Pool: crvUSD/SUSD",chainId:1,address:"0x94cC50e4521bD271C1a997a3A4Dc815C2F920b41",value:"0x94cC50e4521bD271C1a997a3A4Dc815C2F920b41"},{decimals:18,symbol:"eCRV",name:"Curve.fi ETH/sETH",chainId:1,address:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c",value:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{decimals:18,symbol:"1INCH",name:"1INCH Token",chainId:1,address:"0x111111111117dC0aa78b770fA6A738034120C302",value:"0x111111111117dC0aa78b770fA6A738034120C302",logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{decimals:18,symbol:"crvEURTUSD",name:"Curve EURT-3Crv",chainId:1,address:"0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833",value:"0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833"},{decimals:18,symbol:"HBTC",name:"Huobi BTC",chainId:1,address:"0x0316EB71485b0Ab14103307bf65a021042c6d380",value:"0x0316EB71485b0Ab14103307bf65a021042c6d380"},{decimals:18,symbol:"rCRV",name:"Curve.fi ETH/rETH",chainId:1,address:"0x53a901d48795C58f485cBB38df08FA96a24669D5",value:"0x53a901d48795C58f485cBB38df08FA96a24669D5"},{decimals:18,symbol:"rsv3CRV",name:"Curve.fi RSV/3Crv",chainId:1,address:"0xC2Ee6b0334C261ED60C72f6054450b61B8f18E35",value:"0xC2Ee6b0334C261ED60C72f6054450b61B8f18E35"},{decimals:18,symbol:"wstETH",name:"Wrapped liquid staked Ether 2.0",chainId:1,address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",value:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{decimals:18,symbol:"crvUSDMIM-f",name:"Curve.fi Factory Plain Pool: crvUSD/MIM",chainId:1,address:"0xBe426b0f37c112dd20d5866769c8034171567b31",value:"0xBe426b0f37c112dd20d5866769c8034171567b31"},{decimals:18,symbol:"usdp3CRV",name:"Curve.fi USDP/3Crv",chainId:1,address:"0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6",value:"0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6"},{decimals:18,symbol:"B-stETH-STABLE",name:"Balancer stETH Stable Pool",chainId:1,address:"0x32296969Ef14EB0c6d29669C550D4a0449130230",value:"0x32296969Ef14EB0c6d29669C550D4a0449130230"},{decimals:18,symbol:"APEUSDBP3CRV-f",name:"Curve.fi Factory USD Metapool: apeUSDFRAXBP",chainId:1,address:"0x04b727C7e246CA70d496ecF52E6b6280f3c8077D",value:"0x04b727C7e246CA70d496ecF52E6b6280f3c8077D"},{decimals:18,symbol:"crvEURTUSD",name:"Curve EURT-3Crv",chainId:1,address:"0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833",value:"0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833"},{decimals:18,symbol:"SUSHI",name:"SushiToken",chainId:1,address:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",value:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{decimals:18,symbol:"ICE",name:"IceToken",chainId:1,address:"0xf16e81dce15B08F326220742020379B855B87DF9",value:"0xf16e81dce15B08F326220742020379B855B87DF9"},{decimals:18,symbol:"ibEUR+sEUR-f",name:"Curve.fi Factory Plain Pool: ibEUR/sEUR",chainId:1,address:"0x19b080FE1ffA0553469D20Ca36219F17Fcf03859",value:"0x19b080FE1ffA0553469D20Ca36219F17Fcf03859"},{decimals:18,symbol:"DOLA",name:"Dola USD Stablecoin",chainId:1,address:"0x865377367054516e17014CcdED1e7d814EDC9ce4",value:"0x865377367054516e17014CcdED1e7d814EDC9ce4"},{decimals:18,symbol:"crvSPELLETH",name:"Curve SPELL-ETH",chainId:1,address:"0x8282BD15dcA2EA2bDf24163E8f2781B30C43A2ef",value:"0x8282BD15dcA2EA2bDf24163E8f2781B30C43A2ef"},{decimals:18,symbol:"eursCRV",name:"Curve.fi EURS/sEUR",chainId:1,address:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1",value:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1"},{decimals:18,symbol:"cDAI+cUSDC",name:"Curve.fi cDAI/cUSDC",chainId:1,address:"0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2",value:"0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2"},{decimals:18,symbol:"B-yBAL-STABLE",name:"Balancer yBAL Stable Pool",chainId:1,address:"0xD61e198e139369a40818FE05F5d5e6e045Cd6eaF",value:"0xD61e198e139369a40818FE05F5d5e6e045Cd6eaF"},{decimals:18,symbol:"msUSDFRAX3CRV-f",name:"Curve.fi Factory USD Metapool: msUSD/FRAXBP",chainId:1,address:"0xc3b19502F8c02be75F3f77fd673503520DEB51dD",value:"0xc3b19502F8c02be75F3f77fd673503520DEB51dD"},{decimals:18,symbol:"crvRenWSBTC",name:"Curve.fi renBTC/wBTC/sBTC",chainId:1,address:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3",value:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3"},{decimals:18,symbol:"YFI",name:"yearn.finance",chainId:1,address:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",value:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{decimals:18,symbol:"bb-a-USD",name:"Balancer Aave Boosted StablePool (USD)",chainId:1,address:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2",value:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"},{decimals:18,symbol:"crvCRVUSDTBTCWSTETH",name:"TricryptoLLAMA",chainId:1,address:"0x2889302a794dA87fBF1D6Db415C1492194663D13",value:"0x2889302a794dA87fBF1D6Db415C1492194663D13"},{decimals:18,symbol:"OHMETH-f",name:"Curve.fi Factory Crypto Pool: OHM/ETH",chainId:1,address:"0x3660BD168494d61ffDac21E403d0F6356cF90fD7",value:"0x3660BD168494d61ffDac21E403d0F6356cF90fD7"},{decimals:18,symbol:"crv3crypto",name:"Curve.fi USD-BTC-ETH",chainId:1,address:"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff",value:"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"},{decimals:18,symbol:"ibEURUSDC-f",name:"Curve.fi Factory Crypto Pool: ibEUR/USDC",chainId:1,address:"0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF",value:"0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF"},{decimals:6,symbol:"USDT",name:"Tether USD",chainId:1,address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",value:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{decimals:18,symbol:"FXSETH-f",name:"Curve.fi Factory Crypto Pool: FXS/ETH",chainId:1,address:"0x90244F43D548a4f8dFecfAD91a193465B1fad6F7",value:"0x90244F43D548a4f8dFecfAD91a193465B1fad6F7"},{decimals:18,symbol:"SNX",name:"Synthetix Network Token",chainId:1,address:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",value:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{decimals:18,symbol:"crvUSDUSDP-f",name:"Curve.fi Factory Plain Pool: crvUSD/USDP",chainId:1,address:"0xCa978A0528116DDA3cbA9ACD3e68bc6191CA53D0",value:"0xCa978A0528116DDA3cbA9ACD3e68bc6191CA53D0"},{decimals:18,symbol:"OUSD3CRV-f",name:"Curve.fi Factory USD Metapool: Origin Dollar",chainId:1,address:"0x87650D7bbfC3A9F10587d7778206671719d9910D",value:"0x87650D7bbfC3A9F10587d7778206671719d9910D"},{decimals:18,symbol:"crvUSDGUSD-f",name:"Curve.fi Factory Plain Pool: crvUSD/GUSD",chainId:1,address:"0xeCDd0cE505da71cd9dE855CD6804BA1e8C7bdB07",value:"0xeCDd0cE505da71cd9dE855CD6804BA1e8C7bdB07"},{decimals:18,symbol:"cbETH/ETH-f",name:"Curve.fi Factory Crypto Pool: cbETH/ETH",chainId:1,address:"0x5b6C539b224014A09B3388e51CaAA8e354c959C8",value:"0x5b6C539b224014A09B3388e51CaAA8e354c959C8"},{decimals:18,symbol:"ibKRWUSDC-f",name:"Curve.fi Factory Crypto Pool: ibKRW/USDC",chainId:1,address:"0x80CAcCdBD3f07BbdB558DB4a9e146D099933D677",value:"0x80CAcCdBD3f07BbdB558DB4a9e146D099933D677"},{decimals:18,symbol:"UNI",name:"Uniswap",chainId:1,address:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",value:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",logoURI:"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png?1600306604"},{decimals:18,symbol:"TUSD",name:"TrueUSD",chainId:1,address:"0x0000000000085d4780B73119b644AE5ecd22b376",value:"0x0000000000085d4780B73119b644AE5ecd22b376"},{decimals:18,symbol:"WETH",name:"Wrapped Ether",chainId:1,address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",value:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{decimals:6,symbol:"USDC",name:"USD Coin",chainId:1,address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",value:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{decimals:18,symbol:"MIM-3LP3CRV-f",name:"Curve.fi Factory USD Metapool: Magic Internet Money 3Pool",chainId:1,address:"0x5a6A4D54456819380173272A5E8E9B9904BdF41B",value:"0x5a6A4D54456819380173272A5E8E9B9904BdF41B"},{decimals:18,symbol:"sUSD",name:"Synth sUSD",chainId:1,address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",value:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{decimals:18,symbol:"sdCRVlp-f",name:"Curve.fi Factory Plain Pool: sdCRV/CRV",chainId:1,address:"0xCA0253A98D16e9C1e3614caFDA19318EE69772D0",value:"0xCA0253A98D16e9C1e3614caFDA19318EE69772D0"},{decimals:18,symbol:"ib3CRV",name:"Curve.fi cyDAI/cyUSDC/cyUSDT",chainId:1,address:"0x5282a4eF67D9C33135340fB3289cc1711c13638C",value:"0x5282a4eF67D9C33135340fB3289cc1711c13638C"},{decimals:18,symbol:"cvxcrv-crv-f",name:"Curve.fi Factory Plain Pool: cvxCrv/Crv",chainId:1,address:"0x971add32Ea87f10bD192671630be3BE8A11b8623",value:"0x971add32Ea87f10bD192671630be3BE8A11b8623"},{decimals:18,symbol:"crvUSDCWBTCWETH",name:"TricryptoUSDC",chainId:1,address:"0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B",value:"0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B"},{decimals:18,symbol:"KP3RETH-f",name:"Curve.fi Factory Crypto Pool: KP3R/ETH",chainId:1,address:"0x4647B6D835f3B393C7A955df51EEfcf0db961606",value:"0x4647B6D835f3B393C7A955df51EEfcf0db961606"},{decimals:18,symbol:"SUSHI",name:"SushiToken",chainId:1,address:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",value:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{decimals:18,symbol:"FRAX3CRV-f",name:"Curve.fi Factory USD Metapool: Frax",chainId:1,address:"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B",value:"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},{decimals:18,symbol:"saCRV",name:"Curve.fi aDAI/aSUSD",chainId:1,address:"0x02d341CcB60fAaf662bC0554d13778015d1b285C",value:"0x02d341CcB60fAaf662bC0554d13778015d1b285C"},{decimals:18,symbol:"COMP",name:"Compound",chainId:1,address:"0xc00e94Cb662C3520282E6f5717214004A7f26888",value:"0xc00e94Cb662C3520282E6f5717214004A7f26888",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{decimals:18,symbol:"ibGBP+sGBP-f",name:"Curve.fi Factory Plain Pool: ibGBP/sGBP",chainId:1,address:"0xD6Ac1CB9019137a896343Da59dDE6d097F710538",value:"0xD6Ac1CB9019137a896343Da59dDE6d097F710538"},{decimals:18,symbol:"crvRenWBTC",name:"Curve.fi renBTC/wBTC",chainId:1,address:"0x49849C98ae39Fff122806C06791Fa73784FB3675",value:"0x49849C98ae39Fff122806C06791Fa73784FB3675"},{decimals:18,symbol:"ETHxWETH-f",name:"Curve.fi Factory Plain Pool: ETHx/WETH",chainId:1,address:"0xd82C2eB10F4895CABED6EDa6eeee234bd1A9838B",value:"0xd82C2eB10F4895CABED6EDa6eeee234bd1A9838B"},{decimals:18,symbol:"yBAL",name:"Yearn BAL",chainId:1,address:"0x98E86Ed5b0E48734430BfBe92101156C75418cad",value:"0x98E86Ed5b0E48734430BfBe92101156C75418cad"},{decimals:18,symbol:"B-cbETH-wstETH-Stable",name:"Balancer cbETH-wstETH Stable Pool",chainId:1,address:"0x9c6d47Ff73e0F5E51BE5FD53236e3F595C5793F2",value:"0x9c6d47Ff73e0F5E51BE5FD53236e3F595C5793F2"},{decimals:18,symbol:"bb-a-USD",name:"Balancer Aave Boosted StablePool",chainId:1,address:"0xA13a9247ea42D743238089903570127DdA72fE44",value:"0xA13a9247ea42D743238089903570127DdA72fE44"},{decimals:18,symbol:"clevCVX-f",name:"Curve.fi Factory Plain Pool: Clever clevCVX/CVX",chainId:1,address:"0xF9078Fb962A7D13F55d40d49C8AA6472aBD1A5a6",value:"0xF9078Fb962A7D13F55d40d49C8AA6472aBD1A5a6"},{decimals:18,symbol:"yCRV-f",name:"Curve.fi Factory Plain Pool: yCRV",chainId:1,address:"0x453D92C7d4263201C69aACfaf589Ed14202d83a4",value:"0x453D92C7d4263201C69aACfaf589Ed14202d83a4"},{decimals:18,symbol:"pax-usdp3CRV-f",name:"Curve.fi Factory USD Metapool: Paxos Dollar (USDP)",chainId:1,address:"0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad",value:"0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad"},{decimals:18,symbol:"sUSD",name:"Synth sUSD",chainId:1,address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",value:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{decimals:18,symbol:"B-rETH-STABLE",name:"Balancer rETH Stable Pool",chainId:1,address:"0x1E19CF2D73a72Ef1332C882F20534B6519Be0276",value:"0x1E19CF2D73a72Ef1332C882F20534B6519Be0276"},{decimals:18,symbol:"DYDXETH-f",name:"Curve.fi Factory Crypto Pool: DYDX/ETH",chainId:1,address:"0x4aCc1BF7D6a591016641325aA6664A1Cd178F002",value:"0x4aCc1BF7D6a591016641325aA6664A1Cd178F002"},{decimals:18,symbol:"dETHfrxETH-f",name:"Curve.fi Factory Plain Pool: Stakehouse dETH / frxETH",chainId:1,address:"0x7C0d189E1FecB124487226dCbA3748bD758F98E4",value:"0x7C0d189E1FecB124487226dCbA3748bD758F98E4"},{decimals:18,symbol:"xETHETH-f",name:"Curve.fi Factory Crypto Pool: xETH/ETH",chainId:1,address:"0x16eAd9a10b1A77007E6E329B076aD1Fe97a6F7C0",value:"0x16eAd9a10b1A77007E6E329B076aD1Fe97a6F7C0"},{decimals:18,symbol:"DOLAFRAXBP3CRV-f",name:"Curve.fi Factory USD Metapool: DOLA/FRAXBP",chainId:1,address:"0xE57180685E3348589E9521aa53Af0BCD497E884d",value:"0xE57180685E3348589E9521aa53Af0BCD497E884d"},{decimals:18,symbol:"ETHwBETHCRV",name:"Curve.fi ETH/wBETH",chainId:1,address:"0xBfAb6FA95E0091ed66058ad493189D2cB29385E6",value:"0xBfAb6FA95E0091ed66058ad493189D2cB29385E6"},{decimals:18,symbol:"DOLA-USDC BSP",name:"DOLA USDC Stable Pool",chainId:1,address:"0xFf4ce5AAAb5a627bf82f4A571AB1cE94Aa365eA6",value:"0xFf4ce5AAAb5a627bf82f4A571AB1cE94Aa365eA6"},{decimals:18,symbol:"crvTETH",name:"Curve T-ETH",chainId:1,address:"0xCb08717451aaE9EF950a2524E33B6DCaBA60147B",value:"0xCb08717451aaE9EF950a2524E33B6DCaBA60147B"},{decimals:18,symbol:"DOLA3POOL3CRV-f",name:"Curve.fi Factory USD Metapool: DOLA-3pool Curve LP",chainId:1,address:"0xAA5A67c256e27A5d80712c51971408db3370927D",value:"0xAA5A67c256e27A5d80712c51971408db3370927D"},{decimals:18,symbol:"MIM-UST-f",name:"Curve.fi Factory Plain Pool: MIM-UST",chainId:1,address:"0x55A8a39bc9694714E2874c1ce77aa1E599461E18",value:"0x55A8a39bc9694714E2874c1ce77aa1E599461E18"},{decimals:18,symbol:"AAVE",name:"Aave Token",chainId:1,address:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",value:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{decimals:18,symbol:"DAI",name:"Dai Stablecoin",chainId:1,address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",value:"0x6B175474E89094C44Da98b954EedeAC495271d0F",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"},{decimals:18,symbol:"frxETHCRV",name:"Curve.fi ETH/frxETH",chainId:1,address:"0xf43211935C781D5ca1a41d2041F397B8A7366C7A",value:"0xf43211935C781D5ca1a41d2041F397B8A7366C7A"},{decimals:18,symbol:"steCRV",name:"Curve.fi ETH/stETH",chainId:1,address:"0x06325440D014e39736583c165C2963BA99fAf14E",value:"0x06325440D014e39736583c165C2963BA99fAf14E"},{decimals:18,symbol:"YFI",name:"yearn.finance",chainId:1,address:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",value:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{decimals:18,symbol:"HEGIC",name:"Hegic",chainId:1,address:"0x584bC13c7D411c00c01A62e8019472dE68768430",value:"0x584bC13c7D411c00c01A62e8019472dE68768430"},{decimals:18,symbol:"TRYB3POOL-f",name:"Curve.fi Factory Crypto Pool: TRYB/USD (3crv)",chainId:1,address:"0x6E0e681441BE6cB1d8405752462488BD4D691E3A",value:"0x6E0e681441BE6cB1d8405752462488BD4D691E3A"},{decimals:18,symbol:"LUSDcrvUSD-f",name:"Curve.fi Factory Plain Pool: LUSD/crvUSD",chainId:1,address:"0x9978c6B08d28d3B74437c917c5dD7C026df9d55C",value:"0x9978c6B08d28d3B74437c917c5dD7C026df9d55C"},{decimals:18,symbol:"DOLAFRAXBP3CRV-f",name:"Curve.fi Factory USD Metapool: DOLA/FRAXBP",chainId:1,address:"0xE57180685E3348589E9521aa53Af0BCD497E884d",value:"0xE57180685E3348589E9521aa53Af0BCD497E884d"},{decimals:18,symbol:"cvxFXSFXS-f",name:"Curve.fi Factory Crypto Pool: cvxFxs/Fxs",chainId:1,address:"0xF3A43307DcAFa93275993862Aae628fCB50dC768",value:"0xF3A43307DcAFa93275993862Aae628fCB50dC768"},{decimals:18,symbol:"STBT3CRV-f",name:"Curve.fi Factory USD Metapool: STBT/3CRV",chainId:1,address:"0x892D701d94a43bDBCB5eA28891DaCA2Fa22A690b",value:"0x892D701d94a43bDBCB5eA28891DaCA2Fa22A690b"},{decimals:18,symbol:"xFraxTplLP-f",name:"Curve.fi Factory Plain Pool: Stax Frax/Temple xLP + LP",chainId:1,address:"0xdaDfD00A2bBEb1abc4936b1644a3033e1B653228",value:"0xdaDfD00A2bBEb1abc4936b1644a3033e1B653228"},{decimals:18,symbol:"oBTC/sbtcCRV",name:"Curve.fi oBTC/sbtcCRV",chainId:1,address:"0x2fE94ea3d5d4a175184081439753DE15AeF9d614",value:"0x2fE94ea3d5d4a175184081439753DE15AeF9d614"},{decimals:18,symbol:"linkCRV",name:"Curve.fi LINK/sLINK",chainId:1,address:"0xcee60cFa923170e4f8204AE08B4fA6A3F5656F3a",value:"0xcee60cFa923170e4f8204AE08B4fA6A3F5656F3a"},{decimals:18,symbol:"sUSD",name:"Synth sUSD",chainId:1,address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",value:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{decimals:18,symbol:"TUSD3CRV-f",name:"Curve.fi Factory USD Metapool: TrueUSD",chainId:1,address:"0xEcd5e75AFb02eFa118AF914515D6521aaBd189F1",value:"0xEcd5e75AFb02eFa118AF914515D6521aaBd189F1"},{decimals:18,symbol:"crvUSDDOLA-f",name:"Curve.fi Factory Plain Pool: crvUSD/DOLA",chainId:1,address:"0x8272E1A3dBef607C04AA6e5BD3a1A134c8ac063B",value:"0x8272E1A3dBef607C04AA6e5BD3a1A134c8ac063B"},{decimals:18,symbol:"GHO/LUSD",name:"Balancer GHO/LUSD Stable Pool",chainId:1,address:"0x3FA8C89704e5d07565444009e5d9e624B40Be813",value:"0x3FA8C89704e5d07565444009e5d9e624B40Be813"}];var yVaultsArbitrum=[{address:"0x1dBa7641dc69188D6086a73B972aC4bda29Ec35d",name:"Curve MIM Pool Vault",symbol:"yvCurve-MIM",decimals:18,isVault:true,underlyingTokens:["0x30dF229cefa463e991e29D42DB0bae2e122B2AC7"],chainId:42161,value:"0x1dBa7641dc69188D6086a73B972aC4bda29Ec35d",underlyingToken:"0x30dF229cefa463e991e29D42DB0bae2e122B2AC7"},{address:"0x630c9050E6b0014C6Fe4C214D4840909345aDB7D",name:"Curve FRAX-VST Pool Vault",symbol:"yvCurve-FRAX+VST",decimals:18,isVault:true,underlyingTokens:["0x59bF0545FCa0E5Ad48E13DA269faCD2E8C886Ba4"],chainId:42161,value:"0x630c9050E6b0014C6Fe4C214D4840909345aDB7D",underlyingToken:"0x59bF0545FCa0E5Ad48E13DA269faCD2E8C886Ba4"},{address:"0x976a1C749cd8153909e0B04EebE931eF8957b15b",name:"PHPTest",symbol:"yPHP",decimals:18,isVault:true,underlyingTokens:["0xFa247d0D55a324ca19985577a2cDcFC383D87953"],chainId:42161,value:"0x976a1C749cd8153909e0B04EebE931eF8957b15b",underlyingToken:"0xFa247d0D55a324ca19985577a2cDcFC383D87953"},{address:"0x239e14A19DFF93a17339DCC444f74406C17f8E67",name:"Curve Tricrypto Pool Vault",symbol:"yvCurve-Tricrypto",decimals:18,isVault:true,underlyingTokens:["0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2"],chainId:42161,value:"0x239e14A19DFF93a17339DCC444f74406C17f8E67",underlyingToken:"0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2"},{address:"0x49448d2B94fb9C4e41a30aD8315D32f46004A34b",name:"2CRV yVault",symbol:"yv2CRV",decimals:18,isVault:true,underlyingTokens:["0x7f90122BF0700F9E7e1F688fe926940E8839F353"],chainId:42161,value:"0x49448d2B94fb9C4e41a30aD8315D32f46004A34b",underlyingToken:"0x7f90122BF0700F9E7e1F688fe926940E8839F353"}];var yVaultsMainnet=[{address:"0x1025b1641d1F23C289412Dd5E5701e9810103a93",name:"Curve ibAUD-USDC Pool yVault",symbol:"yvCurve-ibAUD-USDC",decimals:18,isVault:true,underlyingTokens:["0x54c8Ecf46A81496eEB0608BD3353388b5D7a2a33"],chainId:1,value:"0x1025b1641d1F23C289412Dd5E5701e9810103a93",underlyingToken:"0x54c8Ecf46A81496eEB0608BD3353388b5D7a2a33"},{address:"0x3149950258FbBcE1638d6C23ac93A692604Ef864",name:"crvRenWBTC yVault",symbol:"yvcrvRenWBTC",decimals:18,isVault:true,underlyingTokens:["0x49849C98ae39Fff122806C06791Fa73784FB3675"],chainId:1,value:"0x3149950258FbBcE1638d6C23ac93A692604Ef864",underlyingToken:"0x49849C98ae39Fff122806C06791Fa73784FB3675"},{address:"0x378cb52b00F9D0921cb46dFc099CFf73b42419dC",name:"LUSD yVault",symbol:"yvLUSD",decimals:18,isVault:true,underlyingTokens:["0x5f98805A4E8be255a32880FDeC7F6728C6568bA0"],chainId:1,value:"0x378cb52b00F9D0921cb46dFc099CFf73b42419dC",underlyingToken:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",logoURI:"https://assets.coingecko.com/coins/images/14666/thumb/Group_3.png?1617631327"},{address:"0x39CAF13a104FF567f71fd2A4c68C026FDB6E740B",name:"Curve Aave Pool yVault",symbol:"yvCurve-Aave",decimals:18,isVault:true,underlyingTokens:["0xFd2a8fA60Abd58Efe3EeE34dd494cD491dC14900"],chainId:1,value:"0x39CAF13a104FF567f71fd2A4c68C026FDB6E740B",underlyingToken:"0xFd2a8fA60Abd58Efe3EeE34dd494cD491dC14900"},{address:"0x0ff3773a6984aD900f7FB23A9acbf07AC3aDFB06",name:"Curve Y Pool yVault",symbol:"yUSD",decimals:18,isVault:true,underlyingTokens:["0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"],chainId:1,value:"0x0ff3773a6984aD900f7FB23A9acbf07AC3aDFB06",underlyingToken:"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"},{address:"0x7F7DF0e9a040DdA05FC609143cc8dA7cC6c59587",name:"sUSD yVault",symbol:"yvsUSD",decimals:18,isVault:true,underlyingTokens:["0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],chainId:1,value:"0x7F7DF0e9a040DdA05FC609143cc8dA7cC6c59587",underlyingToken:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{address:"0x3D27705c64213A5DcD9D26880c1BcFa72d5b6B0E",name:"Curve USDK Pool yVault",symbol:"yvCurve-USDK",decimals:18,isVault:true,underlyingTokens:["0x97E2768e8E73511cA874545DC5Ff8067eB19B787"],chainId:1,value:"0x3D27705c64213A5DcD9D26880c1BcFa72d5b6B0E",underlyingToken:"0x97E2768e8E73511cA874545DC5Ff8067eB19B787"},{address:"0x04D549bAfE83B8BdCCC8dF38F15b90199D20f1eE",name:"Curve tBTC Factory yVault",symbol:"yvCurve-tBTC-f",decimals:18,isVault:true,underlyingTokens:["0xF95AAa7EBB1620e46221B73588502960Ef63dBa0"],chainId:1,value:"0x04D549bAfE83B8BdCCC8dF38F15b90199D20f1eE",underlyingToken:"0xF95AAa7EBB1620e46221B73588502960Ef63dBa0"},{address:"0x1133b2E2F51becCF25b2f8d0cA48c1d93DD5ab12",name:"OCEAN yVault",symbol:"yvOCEAN",decimals:18,isVault:true,underlyingTokens:["0x967da4048cD07aB37855c090aAF366e4ce1b9F48"],chainId:1,value:"0x1133b2E2F51becCF25b2f8d0cA48c1d93DD5ab12",underlyingToken:"0x967da4048cD07aB37855c090aAF366e4ce1b9F48",logoURI:"https://assets.coingecko.com/coins/images/3687/thumb/ocean-protocol-logo.jpg?1547038686"},{address:"0x4213458C69c19E6792510E1153cb0c5834665fdC",name:"Balancer Boosted Aave USD Pool yVault",symbol:"yvBalancer-BoostedAaveUSD",decimals:18,isVault:true,underlyingTokens:["0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"],chainId:1,value:"0x4213458C69c19E6792510E1153cb0c5834665fdC",underlyingToken:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"},{address:"0xa5cA62D95D24A4a350983D5B8ac4EB8638887396",name:"sUSD yVault",symbol:"yvsUSD",decimals:18,isVault:true,underlyingTokens:["0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],chainId:1,value:"0xa5cA62D95D24A4a350983D5B8ac4EB8638887396",underlyingToken:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{address:"0x4962B6C40B5E9433E029c5c423F6b1ce7fF28b0f",name:"sUSD yVault",symbol:"yvsUSD",decimals:18,isVault:true,underlyingTokens:["0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],chainId:1,value:"0x4962B6C40B5E9433E029c5c423F6b1ce7fF28b0f",underlyingToken:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{address:"0xA696a63cc78DfFa1a63E9E50587C197387FF6C7E",name:"WBTC yVault",symbol:"yvWBTC",decimals:8,isVault:true,underlyingTokens:["0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"],chainId:1,value:"0xA696a63cc78DfFa1a63E9E50587C197387FF6C7E",underlyingToken:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{address:"0x5c0A86A32c129538D62C106Eb8115a8b02358d57",name:"Curve rETH-wstETH Pool yVault",symbol:"yvCurve-rETHwstETH",decimals:18,isVault:true,underlyingTokens:["0x447Ddd4960d9fdBF6af9a790560d0AF76795CB08"],chainId:1,value:"0x5c0A86A32c129538D62C106Eb8115a8b02358d57",underlyingToken:"0x447Ddd4960d9fdBF6af9a790560d0AF76795CB08"},{address:"0x2E2b268cbC86917D2809CE2715A19E58a210FceE",name:"Curve HBTC Factory yVault",symbol:"yvCurve-HBTC-f",decimals:18,isVault:true,underlyingTokens:["0xb19059ebb43466C323583928285a49f558E572Fd"],chainId:1,value:"0x2E2b268cbC86917D2809CE2715A19E58a210FceE",underlyingToken:"0xb19059ebb43466C323583928285a49f558E572Fd"},{address:"0xC1f3C276Bf73396C020E8354bcA581846171649d",name:"wstETH yVault",symbol:"yvwstETH",decimals:18,isVault:true,underlyingTokens:["0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"],chainId:1,value:"0xC1f3C276Bf73396C020E8354bcA581846171649d",underlyingToken:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{address:"0x3B27F92C0e212C671EA351827EDF93DB27cc0c65",name:"USDT yVault",symbol:"yvUSDT",decimals:6,isVault:true,underlyingTokens:["0xdAC17F958D2ee523a2206206994597C13D831ec7"],chainId:1,value:"0x3B27F92C0e212C671EA351827EDF93DB27cc0c65",underlyingToken:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{address:"0xf2db9a7c0ACd427A680D640F02d90f6186E71725",name:"Curve LINK Pool yVault",symbol:"yvCurve-LINK",decimals:18,isVault:true,underlyingTokens:["0xcee60cFa923170e4f8204AE08B4fA6A3F5656F3a"],chainId:1,value:"0xf2db9a7c0ACd427A680D640F02d90f6186E71725",underlyingToken:"0xcee60cFa923170e4f8204AE08B4fA6A3F5656F3a"},{address:"0x944d749017053e0D37ec206c9898716A21e0B2E2",name:"Curve mUSD Factory yVault",symbol:"yvCurve-mUSD-f",decimals:18,isVault:true,underlyingTokens:["0x1AEf73d49Dedc4b1778d0706583995958Dc862e6"],chainId:1,value:"0x944d749017053e0D37ec206c9898716A21e0B2E2",underlyingToken:"0x1AEf73d49Dedc4b1778d0706583995958Dc862e6"},{address:"0xD1a075C806e40D79e32eA09553E7080d5d9d4b29",name:"SUSHI yVault",symbol:"yvSUSHI",decimals:18,isVault:true,underlyingTokens:["0x6B3595068778DD592e39A122f4f5a5cF09C90fE2"],chainId:1,value:"0xD1a075C806e40D79e32eA09553E7080d5d9d4b29",underlyingToken:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{address:"0x2DfB14E32e2F8156ec15a2c21c3A6c053af52Be8",name:"Curve MIM Pool yVault",symbol:"yvCurve-MIM",decimals:18,isVault:true,underlyingTokens:["0x5a6A4D54456819380173272A5E8E9B9904BdF41B"],chainId:1,value:"0x2DfB14E32e2F8156ec15a2c21c3A6c053af52Be8",underlyingToken:"0x5a6A4D54456819380173272A5E8E9B9904BdF41B"},{address:"0xdCD90C7f6324cfa40d7169ef80b12031770B4325",name:"Curve stETH Pool yVault",symbol:"yvCurve-stETH",decimals:18,isVault:true,underlyingTokens:["0x06325440D014e39736583c165C2963BA99fAf14E"],chainId:1,value:"0xdCD90C7f6324cfa40d7169ef80b12031770B4325",underlyingToken:"0x06325440D014e39736583c165C2963BA99fAf14E"},{address:"0xDb26d8815EdA864Dfa43306766f2F8CA50C03F9E",name:"Curve msUSD-FRAXBP Factory yVault",symbol:"yvCurve-msUSD-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0xc3b19502F8c02be75F3f77fd673503520DEB51dD"],chainId:1,value:"0xDb26d8815EdA864Dfa43306766f2F8CA50C03F9E",underlyingToken:"0xc3b19502F8c02be75F3f77fd673503520DEB51dD"},{address:"0xfb5137Aa9e079DB4b7C2929229caf503d0f6DA96",name:"Curve DOLA-crvUSD Factory yVault",symbol:"yvCurve-DOLA-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0x8272E1A3dBef607C04AA6e5BD3a1A134c8ac063B"],chainId:1,value:"0xfb5137Aa9e079DB4b7C2929229caf503d0f6DA96",underlyingToken:"0x8272E1A3dBef607C04AA6e5BD3a1A134c8ac063B"},{address:"0xe11ba472F74869176652C35D30dB89854b5ae84D",name:"HEGIC yVault",symbol:"yvHEGIC",decimals:18,isVault:true,underlyingTokens:["0x584bC13c7D411c00c01A62e8019472dE68768430"],chainId:1,value:"0xe11ba472F74869176652C35D30dB89854b5ae84D",underlyingToken:"0x584bC13c7D411c00c01A62e8019472dE68768430"},{address:"0x321d570790fd2f109Fe4e55aa419Adf2fce0c842",name:"Curve agEUR-EUROC Factory yVault",symbol:"yvCurve-agEUR-EUROC-f",decimals:18,isVault:true,underlyingTokens:["0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73"],chainId:1,value:"0x321d570790fd2f109Fe4e55aa419Adf2fce0c842",underlyingToken:"0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73"},{address:"0x67e019bfbd5a67207755D04467D6A70c0B75bF60",name:"Curve ibEUR Pool yVault",symbol:"yvCurve-ibEUR",decimals:18,isVault:true,underlyingTokens:["0x19b080FE1ffA0553469D20Ca36219F17Fcf03859"],chainId:1,value:"0x67e019bfbd5a67207755D04467D6A70c0B75bF60",underlyingToken:"0x19b080FE1ffA0553469D20Ca36219F17Fcf03859"},{address:"0xD6A4180c819324A9E432CA07C689EcBF00088cd6",name:"Curve EURS Factory yVault",symbol:"yvCurve-EURS-f",decimals:18,isVault:true,underlyingTokens:["0x194eBd173F6cDacE046C53eACcE9B953F28411d1"],chainId:1,value:"0xD6A4180c819324A9E432CA07C689EcBF00088cd6",underlyingToken:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1"},{address:"0x5e69e8b51B71C8596817fD442849BD44219bb095",name:"Curve ibBTC Pool yVault",symbol:"yvCurve-ibBTC",decimals:18,isVault:true,underlyingTokens:["0xFbdCA68601f835b27790D98bbb8eC7f05FDEaA9B"],chainId:1,value:"0x5e69e8b51B71C8596817fD442849BD44219bb095",underlyingToken:"0xFbdCA68601f835b27790D98bbb8eC7f05FDEaA9B"},{address:"0xe1747F4D30479D7a2DCFEa5af69fb86B8f71cCeC",name:"Curve TRYb Factory yVault",symbol:"yvCurve-TRYb-f",decimals:18,isVault:true,underlyingTokens:["0x6E0e681441BE6cB1d8405752462488BD4D691E3A"],chainId:1,value:"0xe1747F4D30479D7a2DCFEa5af69fb86B8f71cCeC",underlyingToken:"0x6E0e681441BE6cB1d8405752462488BD4D691E3A"},{address:"0x04c8bfe2eb09a1e2e9fA97A2fd970E06d87B43de",name:"Curve GEAR-ETH Factory yVault",symbol:"yvCurve-GEAR-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x5Be6C45e2d074fAa20700C49aDA3E88a1cc0025d"],chainId:1,value:"0x04c8bfe2eb09a1e2e9fA97A2fd970E06d87B43de",underlyingToken:"0x5Be6C45e2d074fAa20700C49aDA3E88a1cc0025d"},{address:"0x6d765CbE5bC922694afE112C140b8878b9FB0390",name:"SUSHI yVault",symbol:"yvSUSHI",decimals:18,isVault:true,underlyingTokens:["0x6B3595068778DD592e39A122f4f5a5cF09C90fE2"],chainId:1,value:"0x6d765CbE5bC922694afE112C140b8878b9FB0390",underlyingToken:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{address:"0x7788A5492bc948e1d8c2caa53b2e0a60ed5403b0",name:"Curve OHM-FRAXBP Factory yVault",symbol:"yvCurve-OHM-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0x5271045F7B73c17825A7A7aee6917eE46b0B7520"],chainId:1,value:"0x7788A5492bc948e1d8c2caa53b2e0a60ed5403b0",underlyingToken:"0x5271045F7B73c17825A7A7aee6917eE46b0B7520"},{address:"0x63c5c0604Ec410130C69C958aCab81794f7a622F",name:"Curve MATIC-ETH Factory yVault",symbol:"yvCurve-MATIC-ETH-f",decimals:18,isVault:true,underlyingTokens:["0xD8eb58D76aF99547333cfEeb6a0f9bd1A63b6492"],chainId:1,value:"0x63c5c0604Ec410130C69C958aCab81794f7a622F",underlyingToken:"0xD8eb58D76aF99547333cfEeb6a0f9bd1A63b6492"},{address:"0x1E6462678462c95e1F8AFE2558D7FF8692affBD0",name:"Curve FEI Pool yVault",symbol:"yvCurve-FEI",decimals:18,isVault:true,underlyingTokens:["0x06cb22615BA53E60D67Bf6C341a0fD5E718E1655"],chainId:1,value:"0x1E6462678462c95e1F8AFE2558D7FF8692affBD0",underlyingToken:"0x06cb22615BA53E60D67Bf6C341a0fD5E718E1655"},{address:"0xdADbB5472474E612A6fA9d82d3395DEA5829a52a",name:"Curve frxETH Factory yVault",symbol:"yvCurve-frxETH-f",decimals:18,isVault:true,underlyingTokens:["0xf43211935C781D5ca1a41d2041F397B8A7366C7A"],chainId:1,value:"0xdADbB5472474E612A6fA9d82d3395DEA5829a52a",underlyingToken:"0xf43211935C781D5ca1a41d2041F397B8A7366C7A"},{address:"0xE6570a24Ce63dD588195B98aAD9F91B121d5F3D7",name:"Curve FXS-ETH Factory yVault",symbol:"yvCurve-FXS-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x90244F43D548a4f8dFecfAD91a193465B1fad6F7"],chainId:1,value:"0xE6570a24Ce63dD588195B98aAD9F91B121d5F3D7",underlyingToken:"0x90244F43D548a4f8dFecfAD91a193465B1fad6F7"},{address:"0xe5F625e8f4D2A038AE9583Da254945285E5a77a4",name:"Curve DOLA-FRAXBP Factory yVault",symbol:"yvCurve-DOLA-FRXBP-f",decimals:18,isVault:true,underlyingTokens:["0xE57180685E3348589E9521aa53Af0BCD497E884d"],chainId:1,value:"0xe5F625e8f4D2A038AE9583Da254945285E5a77a4",underlyingToken:"0xE57180685E3348589E9521aa53Af0BCD497E884d"},{address:"0xd9788f3931Ede4D5018184E198699dC6d66C1915",name:"AAVE yVault",symbol:"yvAAVE",decimals:18,isVault:true,underlyingTokens:["0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9"],chainId:1,value:"0xd9788f3931Ede4D5018184E198699dC6d66C1915",underlyingToken:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",logoURI:"https://assets.coingecko.com/coins/images/12645/thumb/AAVE.png?1601374110"},{address:"0x849dC56ceCa7Cf55AbF5ec87910DA21c5C7dA581",name:"Curve ETH+ Factory yVault",symbol:"yvCurve-ETH+-f",decimals:18,isVault:true,underlyingTokens:["0xe8a5677171c87fCB65b76957f2852515B404C7b1"],chainId:1,value:"0x849dC56ceCa7Cf55AbF5ec87910DA21c5C7dA581",underlyingToken:"0xe8a5677171c87fCB65b76957f2852515B404C7b1"},{address:"0xca46d6e44499AfbD8795f8F86910F068a6bF1a7c",name:"Curve DYDX-ETH Factory yVault",symbol:"yvCurve-DYDX-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x4aCc1BF7D6a591016641325aA6664A1Cd178F002"],chainId:1,value:"0xca46d6e44499AfbD8795f8F86910F068a6bF1a7c",underlyingToken:"0x4aCc1BF7D6a591016641325aA6664A1Cd178F002"},{address:"0xc869206adAfD3D874dB22e8BbA662E05F6257613",name:"Curve clevCVX Factory yVault",symbol:"yvCurve-clevCVX-f",decimals:18,isVault:true,underlyingTokens:["0xF9078Fb962A7D13F55d40d49C8AA6472aBD1A5a6"],chainId:1,value:"0xc869206adAfD3D874dB22e8BbA662E05F6257613",underlyingToken:"0xF9078Fb962A7D13F55d40d49C8AA6472aBD1A5a6"},{address:"0x4Fdd1B06eF986238446be0F3EA163C1b6Fe28cC1",name:"GUSD yVault",symbol:"yvGUSD",decimals:2,isVault:true,underlyingTokens:["0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd"],chainId:1,value:"0x4Fdd1B06eF986238446be0F3EA163C1b6Fe28cC1",underlyingToken:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",logoURI:"https://assets.coingecko.com/coins/images/5992/thumb/gemini-dollar-gusd.png?1536745278"},{address:"0x63bD3Bbb6c5cb6E457C3f3cbb2D8aa2536E319F1",name:"Curve GUSD Factory yVault",symbol:"yvCurve-GUSD-f",decimals:18,isVault:true,underlyingTokens:["0xD2967f45c4f384DEEa880F807Be904762a3DeA07"],chainId:1,value:"0x63bD3Bbb6c5cb6E457C3f3cbb2D8aa2536E319F1",underlyingToken:"0xD2967f45c4f384DEEa880F807Be904762a3DeA07"},{address:"0x4C4A6A22bCE915C724A66b82128577F1B24831eD",name:"Curve EURT Pool yVault",symbol:"yvCurve-EURT",decimals:18,isVault:true,underlyingTokens:["0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890"],chainId:1,value:"0x4C4A6A22bCE915C724A66b82128577F1B24831eD",underlyingToken:"0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890"},{address:"0x015d78C7aD1289F5aA1DEC25bD6b67ba31fAc1Cf",name:"crvTETH yVault",symbol:"yvcrvTETH",decimals:18,isVault:true,underlyingTokens:["0xCb08717451aaE9EF950a2524E33B6DCaBA60147B"],chainId:1,value:"0x015d78C7aD1289F5aA1DEC25bD6b67ba31fAc1Cf",underlyingToken:"0xCb08717451aaE9EF950a2524E33B6DCaBA60147B"},{address:"0x6a7A0481e476827857704B87bdeE7922D058cbE4",name:"Curve hyUSD-eUSD Factory yVault",symbol:"yvCurve-hyUSD-eUSD-f",decimals:18,isVault:true,underlyingTokens:["0xc794C6A95f30d0ebF7B3Bbe85e8a0A95C9e411c1"],chainId:1,value:"0x6a7A0481e476827857704B87bdeE7922D058cbE4",underlyingToken:"0xc794C6A95f30d0ebF7B3Bbe85e8a0A95C9e411c1"},{address:"0xD4108Bb1185A5c30eA3f4264Fd7783473018Ce17",name:"DOLA yVault - Unlisted",symbol:"yvDOLA-U",decimals:18,isVault:true,underlyingTokens:["0x865377367054516e17014CcdED1e7d814EDC9ce4"],chainId:1,value:"0xD4108Bb1185A5c30eA3f4264Fd7783473018Ce17",underlyingToken:"0x865377367054516e17014CcdED1e7d814EDC9ce4"},{address:"0x2a38B9B0201Ca39B17B460eD2f11e4929559071E",name:"Curve GUSD Pool yVault",symbol:"yvCurve-GUSD",decimals:18,isVault:true,underlyingTokens:["0xD2967f45c4f384DEEa880F807Be904762a3DeA07"],chainId:1,value:"0x2a38B9B0201Ca39B17B460eD2f11e4929559071E",underlyingToken:"0xD2967f45c4f384DEEa880F807Be904762a3DeA07"},{address:"0x1635b506a88fBF428465Ad65d00e8d6B6E5846C3",name:"Curve CVX-ETH Pool yVault",symbol:"yvCurve-CVXETH",decimals:18,isVault:true,underlyingTokens:["0x3A283D9c08E8b55966afb64C515f5143cf907611"],chainId:1,value:"0x1635b506a88fBF428465Ad65d00e8d6B6E5846C3",underlyingToken:"0x3A283D9c08E8b55966afb64C515f5143cf907611"},{address:"0x2E919d27D515868f3D5Bc9110fa738f9449FC6ad",name:"Curve yveCRV Pool Vault",symbol:"yvCurve-yveCRV",decimals:18,isVault:true,underlyingTokens:["0x7E46fd8a30869aa9ed55af031067Df666EfE87da"],chainId:1,value:"0x2E919d27D515868f3D5Bc9110fa738f9449FC6ad",underlyingToken:"0x7E46fd8a30869aa9ed55af031067Df666EfE87da"},{address:"0x8cdf57760Be305F32e03B3d231e5A81e550C6295",name:"Curve USDN Factory yVault",symbol:"yvCurve-USDN-f",decimals:18,isVault:true,underlyingTokens:["0x4f3E8F405CF5aFC05D68142F3783bDfE13811522"],chainId:1,value:"0x8cdf57760Be305F32e03B3d231e5A81e550C6295",underlyingToken:"0x4f3E8F405CF5aFC05D68142F3783bDfE13811522"},{address:"0xBCBB5b54Fa51e7b7Dc920340043B203447842A6b",name:"Curve EURT-USD Pool yVault",symbol:"yvCurve-EURTUSD",decimals:18,isVault:true,underlyingTokens:["0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833"],chainId:1,value:"0xBCBB5b54Fa51e7b7Dc920340043B203447842A6b",underlyingToken:"0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833"},{address:"0xbda3A6CB2aaef41805F6317841d7B8654eC8b124",name:"crvRenWBTC yVault",symbol:"yvcrvRenWBTC",decimals:18,isVault:true,underlyingTokens:["0x49849C98ae39Fff122806C06791Fa73784FB3675"],chainId:1,value:"0xbda3A6CB2aaef41805F6317841d7B8654eC8b124",underlyingToken:"0x49849C98ae39Fff122806C06791Fa73784FB3675"},{address:"0x5B8C556B8b2a78696F0B9B830B3d67623122E270",name:"Curve stETH Factory yVault",symbol:"yvCurve-stETH-f",decimals:18,isVault:true,underlyingTokens:["0x06325440D014e39736583c165C2963BA99fAf14E"],chainId:1,value:"0x5B8C556B8b2a78696F0B9B830B3d67623122E270",underlyingToken:"0x06325440D014e39736583c165C2963BA99fAf14E"},{address:"0x30FCf7c6cDfC46eC237783D94Fc78553E79d4E9C",name:"Curve DUSD Pool yVault",symbol:"yvCurve-DUSD",decimals:18,isVault:true,underlyingTokens:["0x3a664Ab939FD8482048609f652f9a0B0677337B9"],chainId:1,value:"0x30FCf7c6cDfC46eC237783D94Fc78553E79d4E9C",underlyingToken:"0x3a664Ab939FD8482048609f652f9a0B0677337B9"},{address:"0xD347e7A3DdF5Ce4C42E19a4F30eEAA761795C72B",name:"Curve ibEUR Factory yVault",symbol:"yvCurve-ibEUR-f",decimals:18,isVault:true,underlyingTokens:["0x19b080FE1ffA0553469D20Ca36219F17Fcf03859"],chainId:1,value:"0xD347e7A3DdF5Ce4C42E19a4F30eEAA761795C72B",underlyingToken:"0x19b080FE1ffA0553469D20Ca36219F17Fcf03859"},{address:"0x6E9455D109202b426169F0d8f01A3332DAE160f3",name:"LP Yearn CRV Vault v2",symbol:"lp-yCRVv2",decimals:18,isVault:true,underlyingTokens:["0x99f5aCc8EC2Da2BC0771c32814EFF52b712de1E5"],chainId:1,value:"0x6E9455D109202b426169F0d8f01A3332DAE160f3",underlyingToken:"0x99f5aCc8EC2Da2BC0771c32814EFF52b712de1E5"},{address:"0x56A5Fd5104a4956898753dfb060ff32882Ae0eb4",name:"ALCX yVault",symbol:"yvALCX",decimals:18,isVault:true,underlyingTokens:["0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF"],chainId:1,value:"0x56A5Fd5104a4956898753dfb060ff32882Ae0eb4",underlyingToken:"0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF",logoURI:"https://assets.coingecko.com/coins/images/14113/thumb/Alchemix.png?1614409874"},{address:"0x8cc94ccd0f3841a468184aCA3Cc478D2148E1757",name:"Curve mUSD Pool yVault",symbol:"yvCurve-mUSD",decimals:18,isVault:true,underlyingTokens:["0x1AEf73d49Dedc4b1778d0706583995958Dc862e6"],chainId:1,value:"0x8cc94ccd0f3841a468184aCA3Cc478D2148E1757",underlyingToken:"0x1AEf73d49Dedc4b1778d0706583995958Dc862e6"},{address:"0x0F6121fB28C7C42916d663171063c62684598f9F",name:"HBTC yVault",symbol:"yvHBTC",decimals:18,isVault:true,underlyingTokens:["0x0316EB71485b0Ab14103307bf65a021042c6d380"],chainId:1,value:"0x0F6121fB28C7C42916d663171063c62684598f9F",underlyingToken:"0x0316EB71485b0Ab14103307bf65a021042c6d380"},{address:"0x6FAfCA7f49B4Fd9dC38117469cd31A1E5aec91F5",name:"Curve USDM Pool yVault",symbol:"yvCurve-USDM",decimals:18,isVault:true,underlyingTokens:["0x5B3b5DF2BF2B6543f78e053bD91C4Bdd820929f1"],chainId:1,value:"0x6FAfCA7f49B4Fd9dC38117469cd31A1E5aec91F5",underlyingToken:"0x5B3b5DF2BF2B6543f78e053bD91C4Bdd820929f1"},{address:"0x718AbE90777F5B778B52D553a5aBaa148DD0dc5D",name:"Curve alETH Pool yVault",symbol:"yvCurve-alETH",decimals:18,isVault:true,underlyingTokens:["0xC4C319E2D4d66CcA4464C0c2B32c9Bd23ebe784e"],chainId:1,value:"0x718AbE90777F5B778B52D553a5aBaa148DD0dc5D",underlyingToken:"0xC4C319E2D4d66CcA4464C0c2B32c9Bd23ebe784e"},{address:"0xAbD64D5AB5A4b129df4f6f37A8d461c2510b5503",name:"Curve 3Crv Factory yVault",symbol:"yvCurve-3Crv-f",decimals:18,isVault:true,underlyingTokens:["0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"],chainId:1,value:"0xAbD64D5AB5A4b129df4f6f37A8d461c2510b5503",underlyingToken:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},{address:"0x7845Ebf66c9575Fc5f5A0dBb9a34a706Ad997a3f",name:"Curve TriCryptoUSDT Factory yVault",symbol:"yvCurve-3CryptoUSDT-f",decimals:18,isVault:true,underlyingTokens:["0xf5f5B97624542D72A9E06f04804Bf81baA15e2B4"],chainId:1,value:"0x7845Ebf66c9575Fc5f5A0dBb9a34a706Ad997a3f",underlyingToken:"0xf5f5B97624542D72A9E06f04804Bf81baA15e2B4"},{address:"0x6f0Ace0F94f4B9890Dfa99A4175B3Ef0288C16B3",name:"Curve CRV-ETH Factory yVault",symbol:"yvCurve-CRV-ETH-f",decimals:18,isVault:true,underlyingTokens:["0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d"],chainId:1,value:"0x6f0Ace0F94f4B9890Dfa99A4175B3Ef0288C16B3",underlyingToken:"0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d"},{address:"0xAd86Df2e8F989c828B25A7Da5EB1Ec363283fA3F",name:"Curve LUSD Factory yVault",symbol:"yvCurve-LUSD-f",decimals:18,isVault:true,underlyingTokens:["0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA"],chainId:1,value:"0xAd86Df2e8F989c828B25A7Da5EB1Ec363283fA3F",underlyingToken:"0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA"},{address:"0x5faF6a2D186448Dfa667c51CB3D695c7A6E52d8E",name:"Curve stETH-WETH Pool yVault",symbol:"yvCurve-stETH-WETH",decimals:18,isVault:true,underlyingTokens:["0x828b154032950C8ff7CF8085D841723Db2696056"],chainId:1,value:"0x5faF6a2D186448Dfa667c51CB3D695c7A6E52d8E",underlyingToken:"0x828b154032950C8ff7CF8085D841723Db2696056"},{address:"0x59518884EeBFb03e90a18ADBAAAB770d4666471e",name:"Curve ibJPY Pool yVault",symbol:"yvCurve-ibJPY",decimals:18,isVault:true,underlyingTokens:["0x8818a9bb44Fbf33502bE7c15c500d0C783B73067"],chainId:1,value:"0x59518884EeBFb03e90a18ADBAAAB770d4666471e",underlyingToken:"0x8818a9bb44Fbf33502bE7c15c500d0C783B73067"},{address:"0x3466c90017F82DDA939B01E8DBd9b0f97AEF8DfC",name:"sUSD yVault",symbol:"yvsUSD",decimals:18,isVault:true,underlyingTokens:["0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],chainId:1,value:"0x3466c90017F82DDA939B01E8DBd9b0f97AEF8DfC",underlyingToken:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{address:"0x8b9C0c24307344B6D7941ab654b2Aeee25347473",name:"Curve EURN Pool yVault",symbol:"yvCurve-EURN",decimals:18,isVault:true,underlyingTokens:["0x3Fb78e61784C9c637D560eDE23Ad57CA1294c14a"],chainId:1,value:"0x8b9C0c24307344B6D7941ab654b2Aeee25347473",underlyingToken:"0x3Fb78e61784C9c637D560eDE23Ad57CA1294c14a"},{address:"0xd6A528faAd34Fe51c6F181acF43C1E20db4f84aC",name:"Balancer DOLA-USDC Factory yVault",symbol:"yvBal-DOLA-USDC-f",decimals:18,isVault:true,underlyingTokens:["0xFf4ce5AAAb5a627bf82f4A571AB1cE94Aa365eA6"],chainId:1,value:"0xd6A528faAd34Fe51c6F181acF43C1E20db4f84aC",underlyingToken:"0xFf4ce5AAAb5a627bf82f4A571AB1cE94Aa365eA6"},{address:"0xAA4f7562D3C25Bd2fCB8FEd615182667C0A7086C",name:"Balancer stafiETH Factory yVault",symbol:"yvBal-stafiETH-f",decimals:18,isVault:true,underlyingTokens:["0xB08885e6026bab4333A80024Ec25a1a3e1FF2b8A"],chainId:1,value:"0xAA4f7562D3C25Bd2fCB8FEd615182667C0A7086C",underlyingToken:"0xB08885e6026bab4333A80024Ec25a1a3e1FF2b8A"},{address:"0xDdb166C6CB38CEDe52d12c405b6e906c1fB6f9d7",name:"crvRenWSBTC yVault",symbol:"yvcrvRenWSBTC",decimals:18,isVault:true,underlyingTokens:["0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3"],chainId:1,value:"0xDdb166C6CB38CEDe52d12c405b6e906c1fB6f9d7",underlyingToken:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3"},{address:"0x8078198Fc424986ae89Ce4a910Fc109587b6aBF3",name:"Curve 3Crypto Factory yVault",symbol:"yvCurve-3Crypto-f",decimals:18,isVault:true,underlyingTokens:["0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"],chainId:1,value:"0x8078198Fc424986ae89Ce4a910Fc109587b6aBF3",underlyingToken:"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"},{address:"0xbE4afE6737CCf34cA21cdeF461E5C7547Adc8C77",name:"Curve ibGBP Factory yVault",symbol:"yvCurve-ibGBP-f",decimals:18,isVault:true,underlyingTokens:["0xD6Ac1CB9019137a896343Da59dDE6d097F710538"],chainId:1,value:"0xbE4afE6737CCf34cA21cdeF461E5C7547Adc8C77",underlyingToken:"0xD6Ac1CB9019137a896343Da59dDE6d097F710538"},{address:"0x133cb5cF617a33F5D02cFFfF579435776ef29FB0",name:"Curve multiBTC Factory yVault",symbol:"yvCurve-multiBTC-f",decimals:18,isVault:true,underlyingTokens:["0x2863a328A0B7fC6040f11614FA0728587DB8e353"],chainId:1,value:"0x133cb5cF617a33F5D02cFFfF579435776ef29FB0",underlyingToken:"0x2863a328A0B7fC6040f11614FA0728587DB8e353"},{address:"0xdb25cA703181E7484a155DD612b06f57E12Be5F0",name:"YFI yVault",symbol:"yvYFI",decimals:18,isVault:true,underlyingTokens:["0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e"],chainId:1,value:"0xdb25cA703181E7484a155DD612b06f57E12Be5F0",underlyingToken:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{address:"0xb32747B4045479B77a8b8Eb44029ba12580214F8",name:"SUSHI yVault",symbol:"yvSUSHI",decimals:18,isVault:true,underlyingTokens:["0x6B3595068778DD592e39A122f4f5a5cF09C90fE2"],chainId:1,value:"0xb32747B4045479B77a8b8Eb44029ba12580214F8",underlyingToken:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{address:"0x5359680A80c1FB2175cD33efF32f762e43cD8C41",name:"Curve ibKRW Factory yVault",symbol:"yvCurve-ibKRW-f",decimals:18,isVault:true,underlyingTokens:["0x8461A004b50d321CB22B7d034969cE6803911899"],chainId:1,value:"0x5359680A80c1FB2175cD33efF32f762e43cD8C41",underlyingToken:"0x8461A004b50d321CB22B7d034969cE6803911899"},{address:"0x4A3FE75762017DB0eD73a71C9A06db7768DB5e66",name:"COMP yVault",symbol:"yvCOMP",decimals:18,isVault:true,underlyingTokens:["0xc00e94Cb662C3520282E6f5717214004A7f26888"],chainId:1,value:"0x4A3FE75762017DB0eD73a71C9A06db7768DB5e66",underlyingToken:"0xc00e94Cb662C3520282E6f5717214004A7f26888",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{address:"0xAE6eD98B1Bd9aAdd3185160324e0e011159B61D3",name:"Curve Compound Factory yVault",symbol:"yvCurve-Compound-f",decimals:18,isVault:true,underlyingTokens:["0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2"],chainId:1,value:"0xAE6eD98B1Bd9aAdd3185160324e0e011159B61D3",underlyingToken:"0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2"},{address:"0xaA379c2aA72529d5ec0da8A41e2F41ED7Fe4b48C",name:"Curve TriCryptoUSDC Factory yVault",symbol:"yvCurve-3CryptoUSDC-f",decimals:18,isVault:true,underlyingTokens:["0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B"],chainId:1,value:"0xaA379c2aA72529d5ec0da8A41e2F41ED7Fe4b48C",underlyingToken:"0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B"},{address:"0x5a770DbD3Ee6bAF2802D29a901Ef11501C44797A",name:"Curve sUSD Pool yVault",symbol:"yvCurve-sUSD",decimals:18,isVault:true,underlyingTokens:["0xC25a3A3b969415c80451098fa907EC722572917F"],chainId:1,value:"0x5a770DbD3Ee6bAF2802D29a901Ef11501C44797A",underlyingToken:"0xC25a3A3b969415c80451098fa907EC722572917F"},{address:"0x790a60024bC3aea28385b60480f15a0771f26D09",name:"Curve YFI-ETH Pool yVault",symbol:"yvCurve-YFIETH",decimals:18,isVault:true,underlyingTokens:["0x29059568bB40344487d62f7450E78b8E6C74e0e5"],chainId:1,value:"0x790a60024bC3aea28385b60480f15a0771f26D09",underlyingToken:"0x29059568bB40344487d62f7450E78b8E6C74e0e5"},{address:"0xd88dBBA3f9c4391Ee46f5FF548f289054db6E51C",name:"Curve DOLA Pool yVault",symbol:"yvCurve-DOLA",decimals:18,isVault:true,underlyingTokens:["0xAA5A67c256e27A5d80712c51971408db3370927D"],chainId:1,value:"0xd88dBBA3f9c4391Ee46f5FF548f289054db6E51C",underlyingToken:"0xAA5A67c256e27A5d80712c51971408db3370927D"},{address:"0xe92AE2cF5b373c1713eB5855D4D3aF81D8a8aCAE",name:"Curve Stax Frax/Temple xLP + LP yVault - Unlisted",symbol:"yvCurvexFraxTplLP-U",decimals:18,isVault:true,underlyingTokens:["0xdaDfD00A2bBEb1abc4936b1644a3033e1B653228"],chainId:1,value:"0xe92AE2cF5b373c1713eB5855D4D3aF81D8a8aCAE",underlyingToken:"0xdaDfD00A2bBEb1abc4936b1644a3033e1B653228"},{address:"0x986b4AFF588a109c09B50A03f42E4110E29D353F",name:"Curve sETH Pool yVault",symbol:"yvCurve-sETH",decimals:18,isVault:true,underlyingTokens:["0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"],chainId:1,value:"0x986b4AFF588a109c09B50A03f42E4110E29D353F",underlyingToken:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{address:"0xbf91b696a35b539b1142e2f921A2A88BB019506a",name:"Curve ETHx-WETH Factory yVault",symbol:"yvCurve-ETHx-WETH-f",decimals:18,isVault:true,underlyingTokens:["0xd82C2eB10F4895CABED6EDa6eeee234bd1A9838B"],chainId:1,value:"0xbf91b696a35b539b1142e2f921A2A88BB019506a",underlyingToken:"0xd82C2eB10F4895CABED6EDa6eeee234bd1A9838B"},{address:"0xf8768814b88281DE4F532a3beEfA5b85B69b9324",name:"Curve TUSD Pool yVault",symbol:"yvCurve-TUSD",decimals:18,isVault:true,underlyingTokens:["0xEcd5e75AFb02eFa118AF914515D6521aaBd189F1"],chainId:1,value:"0xf8768814b88281DE4F532a3beEfA5b85B69b9324",underlyingToken:"0xEcd5e75AFb02eFa118AF914515D6521aaBd189F1"},{address:"0xD2C65E20C3fDE3F18097e7414e65596e0C83B1a9",name:"ICE yVault",symbol:"yvICE",decimals:18,isVault:true,underlyingTokens:["0xf16e81dce15B08F326220742020379B855B87DF9"],chainId:1,value:"0xD2C65E20C3fDE3F18097e7414e65596e0C83B1a9",underlyingToken:"0xf16e81dce15B08F326220742020379B855B87DF9"},{address:"0x91aE8fEaBe09182Fe5F91Fc273040b7D8F7aeFE7",name:"Curve Paxos Factory yVault",symbol:"yvCurve-USDP-f",decimals:18,isVault:true,underlyingTokens:["0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad"],chainId:1,value:"0x91aE8fEaBe09182Fe5F91Fc273040b7D8F7aeFE7",underlyingToken:"0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad"},{address:"0x8B58Aa42A4Aa222b684078459CE03Dd0A43342B1",name:"USDP yVault",symbol:"yvUSDP",decimals:18,isVault:true,underlyingTokens:["0x1456688345527bE1f37E9e627DA0837D6f08C925"],chainId:1,value:"0x8B58Aa42A4Aa222b684078459CE03Dd0A43342B1",underlyingToken:"0x1456688345527bE1f37E9e627DA0837D6f08C925"},{address:"0x4cb5483D87028518c5F35a49c151612a062bfCD0",name:"Balancer GHO-bb-a-USD Factory yVault",symbol:"yvBal-GHO-bb-a-USD-f",decimals:18,isVault:true,underlyingTokens:["0xc2B021133D1b0cF07dba696fd5DD89338428225B"],chainId:1,value:"0x4cb5483D87028518c5F35a49c151612a062bfCD0",underlyingToken:"0xc2B021133D1b0cF07dba696fd5DD89338428225B"},{address:"0x9E0E0AF468FbD041Cab7883c5eEf16D1A99a47C3",name:"Curve sdANGLE Factory yVault",symbol:"yvCurve-sdANGLE-f",decimals:18,isVault:true,underlyingTokens:["0x48fF31bBbD8Ab553Ebe7cBD84e1eA3dBa8f54957"],chainId:1,value:"0x9E0E0AF468FbD041Cab7883c5eEf16D1A99a47C3",underlyingToken:"0x48fF31bBbD8Ab553Ebe7cBD84e1eA3dBa8f54957"},{address:"0x83f798e925BcD4017Eb265844FDDAbb448f1707D",name:"iearn USDT",symbol:"yUSDT",decimals:6,isVault:true,underlyingTokens:["0xdAC17F958D2ee523a2206206994597C13D831ec7"],chainId:1,value:"0x83f798e925BcD4017Eb265844FDDAbb448f1707D",underlyingToken:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{address:"0x5331009B82853e9FB711bC0b300E1b374724AdaC",name:"Curve sdYFI Factory yVault",symbol:"yvCurve-sdYFI-f",decimals:18,isVault:true,underlyingTokens:["0x79E281BC69A03DaBCcD66858c65EF6724e50aebe"],chainId:1,value:"0x5331009B82853e9FB711bC0b300E1b374724AdaC",underlyingToken:"0x79E281BC69A03DaBCcD66858c65EF6724e50aebe"},{address:"0x1C6a9783F812b3Af3aBbf7de64c3cD7CC7D1af44",name:"Curve UST Pool yVault",symbol:"yvCurve-UST",decimals:18,isVault:true,underlyingTokens:["0x94e131324b6054c0D789b190b2dAC504e4361b53"],chainId:1,value:"0x1C6a9783F812b3Af3aBbf7de64c3cD7CC7D1af44",underlyingToken:"0x94e131324b6054c0D789b190b2dAC504e4361b53"},{address:"0x150F76e1339A918BaA38338ED9bd695Bd0924Bcf",name:"Curve alETH-frxETH Factory yVault",symbol:"yvCurve-alETH-frxETH-f",decimals:18,isVault:true,underlyingTokens:["0xB657B895B265C38c53FFF00166cF7F6A3C70587d"],chainId:1,value:"0x150F76e1339A918BaA38338ED9bd695Bd0924Bcf",underlyingToken:"0xB657B895B265C38c53FFF00166cF7F6A3C70587d"},{address:"0xC2ADaD1Bd59a1DA3D35bd86cDb555694372f488F",name:"Curve MIM-crvUSD Factory yVault",symbol:"yvCurve-MIM-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0xBe426b0f37c112dd20d5866769c8034171567b31"],chainId:1,value:"0xC2ADaD1Bd59a1DA3D35bd86cDb555694372f488F",underlyingToken:"0xBe426b0f37c112dd20d5866769c8034171567b31"},{address:"0x3e720ba935Bf137d45a3c98938DB1f4C8517298E",name:"Curve VEUR-agEUR Factory yVault",symbol:"yvCurve-VEUR-agEUR-f",decimals:18,isVault:true,underlyingTokens:["0xF05CFb8b4382c69f3B451C5FB55210B232E0edFA"],chainId:1,value:"0x3e720ba935Bf137d45a3c98938DB1f4C8517298E",underlyingToken:"0xF05CFb8b4382c69f3B451C5FB55210B232E0edFA"},{address:"0x5fA5B62c8AF877CB37031e0a3B2f34A78e3C56A6",name:"Curve LUSD Pool yVault",symbol:"yvCurve-LUSD",decimals:18,isVault:true,underlyingTokens:["0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA"],chainId:1,value:"0x5fA5B62c8AF877CB37031e0a3B2f34A78e3C56A6",underlyingToken:"0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA"},{address:"0x3D980E50508CFd41a13837A60149927a11c03731",name:"Curve triCrypto Pool yVault",symbol:"yvCurve-triCrypto",decimals:18,isVault:true,underlyingTokens:["0xcA3d75aC011BF5aD07a98d02f18225F9bD9A6BDF"],chainId:1,value:"0x3D980E50508CFd41a13837A60149927a11c03731",underlyingToken:"0xcA3d75aC011BF5aD07a98d02f18225F9bD9A6BDF"},{address:"0x6AEfd381C0AEF49bAafF58eBc70534B3941c61Bf",name:"Curve YFI-ETH Pool yVault",symbol:"yvCurve-YFIETH",decimals:18,isVault:true,underlyingTokens:["0x29059568bB40344487d62f7450E78b8E6C74e0e5"],chainId:1,value:"0x6AEfd381C0AEF49bAafF58eBc70534B3941c61Bf",underlyingToken:"0x29059568bB40344487d62f7450E78b8E6C74e0e5"},{address:"0x49b3E44e54b6220aF892DbA48ae45F1Ea6bC4aE9",name:"TUSD yVault",symbol:"yvTUSD",decimals:18,isVault:true,underlyingTokens:["0x0000000000085d4780B73119b644AE5ecd22b376"],chainId:1,value:"0x49b3E44e54b6220aF892DbA48ae45F1Ea6bC4aE9",underlyingToken:"0x0000000000085d4780B73119b644AE5ecd22b376"},{address:"0x77e829FFF18C14AD9bb88963acB0010A0506de88",name:"Curve StaFi rETH Factory yVault",symbol:"yvCurve-StaFi-rETH-f",decimals:18,isVault:true,underlyingTokens:["0x53a901d48795C58f485cBB38df08FA96a24669D5"],chainId:1,value:"0x77e829FFF18C14AD9bb88963acB0010A0506de88",underlyingToken:"0x53a901d48795C58f485cBB38df08FA96a24669D5"},{address:"0xc97232527B62eFb0D8ed38CF3EA103A6CcA4037e",name:"LP Yearn CRV Vault",symbol:"lp-yCRV",decimals:18,isVault:true,underlyingTokens:["0x453D92C7d4263201C69aACfaf589Ed14202d83a4"],chainId:1,value:"0xc97232527B62eFb0D8ed38CF3EA103A6CcA4037e",underlyingToken:"0x453D92C7d4263201C69aACfaf589Ed14202d83a4"},{address:"0xB5dE7250128775a317B3f775a7AFcEC73571B732",name:"Curve sETH Factory yVault",symbol:"yvCurve-sETH-f",decimals:18,isVault:true,underlyingTokens:["0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"],chainId:1,value:"0xB5dE7250128775a317B3f775a7AFcEC73571B732",underlyingToken:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{address:"0x2D5D4869381C4Fce34789BC1D38aCCe747E295AE",name:"Curve RAI Pool yVault",symbol:"yvCurve-RAI",decimals:18,isVault:true,underlyingTokens:["0x6BA5b4e438FA0aAf7C1bD179285aF65d13bD3D90"],chainId:1,value:"0x2D5D4869381C4Fce34789BC1D38aCCe747E295AE",underlyingToken:"0x6BA5b4e438FA0aAf7C1bD179285aF65d13bD3D90"},{address:"0xdA816459F1AB5631232FE5e97a05BBBb94970c95",name:"DAI yVault",symbol:"yvDAI",decimals:18,isVault:true,underlyingTokens:["0x6B175474E89094C44Da98b954EedeAC495271d0F"],chainId:1,value:"0xdA816459F1AB5631232FE5e97a05BBBb94970c95",underlyingToken:"0x6B175474E89094C44Da98b954EedeAC495271d0F",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"},{address:"0xF29AE508698bDeF169B89834F76704C3B205aedf",name:"SNX yVault",symbol:"yvSNX",decimals:18,isVault:true,underlyingTokens:["0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F"],chainId:1,value:"0xF29AE508698bDeF169B89834F76704C3B205aedf",underlyingToken:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{address:"0xcE0F1Ef5aAAB82547acc699d3Ab93c069bb6e547",name:"sUSD-hedging yVault",symbol:"yvsUSD-h",decimals:18,isVault:true,underlyingTokens:["0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],chainId:1,value:"0xcE0F1Ef5aAAB82547acc699d3Ab93c069bb6e547",underlyingToken:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{address:"0xe9Dc63083c464d6EDcCFf23444fF3CFc6886f6FB",name:"Curve oBTC Pool yVault",symbol:"yvCurve-oBTC",decimals:18,isVault:true,underlyingTokens:["0x2fE94ea3d5d4a175184081439753DE15AeF9d614"],chainId:1,value:"0xe9Dc63083c464d6EDcCFf23444fF3CFc6886f6FB",underlyingToken:"0x2fE94ea3d5d4a175184081439753DE15AeF9d614"},{address:"0xc97511a1dDB162C8742D39FF320CfDCd13fBcf7e",name:"Curve Paxos Pool yVault",symbol:"yvCurve-USDP",decimals:18,isVault:true,underlyingTokens:["0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad"],chainId:1,value:"0xc97511a1dDB162C8742D39FF320CfDCd13fBcf7e",underlyingToken:"0xc270b3B858c335B6BA5D5b10e2Da8a09976005ad"},{address:"0xF614d3864EF53510909a94c618a5EC1Ff75103BF",name:"Curve cbETH Factory yVault",symbol:"yvCurve-cbETH-f",decimals:18,isVault:true,underlyingTokens:["0x5b6C539b224014A09B3388e51CaAA8e354c959C8"],chainId:1,value:"0xF614d3864EF53510909a94c618a5EC1Ff75103BF",underlyingToken:"0x5b6C539b224014A09B3388e51CaAA8e354c959C8"},{address:"0xb37094c1B5614Bd6EcE40AFb295C26F4377069d3",name:"Curve FRAX Factory yVault",symbol:"yvCurve-FRAX-f",decimals:18,isVault:true,underlyingTokens:["0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"],chainId:1,value:"0xb37094c1B5614Bd6EcE40AFb295C26F4377069d3",underlyingToken:"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},{address:"0xF5f33812c93C5f2Ae2F28c041eEb393212439502",name:"Curve GUSD-crvUSD Factory yVault",symbol:"yvCurve-GUSD-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0xeCDd0cE505da71cd9dE855CD6804BA1e8C7bdB07"],chainId:1,value:"0xF5f33812c93C5f2Ae2F28c041eEb393212439502",underlyingToken:"0xeCDd0cE505da71cd9dE855CD6804BA1e8C7bdB07"},{address:"0x801Ab06154Bf539dea4385a39f5fa8534fB53073",name:"Curve EURS-USDC Pool yVault",symbol:"yvCurve-EURSUSDC",decimals:18,isVault:true,underlyingTokens:["0x3D229E1B4faab62F621eF2F6A610961f7BD7b23B"],chainId:1,value:"0x801Ab06154Bf539dea4385a39f5fa8534fB53073",underlyingToken:"0x3D229E1B4faab62F621eF2F6A610961f7BD7b23B"},{address:"0xe8b96C38a0b370eAfb11D9b8Df4131415423577a",name:"Curve STBT Factory yVault",symbol:"yvCurve-STBT-f",decimals:18,isVault:true,underlyingTokens:["0x892D701d94a43bDBCB5eA28891DaCA2Fa22A690b"],chainId:1,value:"0xe8b96C38a0b370eAfb11D9b8Df4131415423577a",underlyingToken:"0x892D701d94a43bDBCB5eA28891DaCA2Fa22A690b"},{address:"0x00e8Eb340f8AF587EEA6200D2081E31dC87285ac",name:"Curve XAI-FRAXBP Factory yVault",symbol:"yvCurve-XAI-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0x326290A1B0004eeE78fa6ED4F1d8f4b2523ab669"],chainId:1,value:"0x00e8Eb340f8AF587EEA6200D2081E31dC87285ac",underlyingToken:"0x326290A1B0004eeE78fa6ED4F1d8f4b2523ab669"},{address:"0x6A5468752f8DB94134B6508dAbAC54D3b45efCE6",name:"Curve CRV-ETH Pool yVault",symbol:"yvCurve-CRVETH",decimals:18,isVault:true,underlyingTokens:["0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d"],chainId:1,value:"0x6A5468752f8DB94134B6508dAbAC54D3b45efCE6",underlyingToken:"0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d"},{address:"0x3c5DF3077BcF800640B5DAE8c91106575a4826E6",name:"Curve pBTC Pool yVault",symbol:"yvCurve-pBTC",decimals:18,isVault:true,underlyingTokens:["0xDE5331AC4B3630f94853Ff322B66407e0D6331E8"],chainId:1,value:"0x3c5DF3077BcF800640B5DAE8c91106575a4826E6",underlyingToken:"0xDE5331AC4B3630f94853Ff322B66407e0D6331E8"},{address:"0xe80Cc7b2b69f32999766c1a0035ab77E8fb5B99C",name:"Curve cvxFXS Factory yVault",symbol:"yvCurve-cvxFXS-f",decimals:18,isVault:true,underlyingTokens:["0xF3A43307DcAFa93275993862Aae628fCB50dC768"],chainId:1,value:"0xe80Cc7b2b69f32999766c1a0035ab77E8fb5B99C",underlyingToken:"0xF3A43307DcAFa93275993862Aae628fCB50dC768"},{address:"0x1b905331F7dE2748F4D6a0678e1521E20347643F",name:"Curve ibAUD Pool yVault",symbol:"yvCurve-ibAUD",decimals:18,isVault:true,underlyingTokens:["0x3F1B0278A9ee595635B61817630cC19DE792f506"],chainId:1,value:"0x1b905331F7dE2748F4D6a0678e1521E20347643F",underlyingToken:"0x3F1B0278A9ee595635B61817630cC19DE792f506"},{address:"0x98fA691998a9e6f410702dEA8BC08a9d500AaAFe",name:"Curve STG-FRAXBP Factory yVault",symbol:"yvCurve-STG-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0x9de1c3D446237ab9BaFF74127eb4F303802a2683"],chainId:1,value:"0x98fA691998a9e6f410702dEA8BC08a9d500AaAFe",underlyingToken:"0x9de1c3D446237ab9BaFF74127eb4F303802a2683"},{address:"0xa258C4606Ca8206D8aA700cE2143D7db854D168c",name:"WETH yVault",symbol:"yvWETH",decimals:18,isVault:true,underlyingTokens:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"],chainId:1,value:"0xa258C4606Ca8206D8aA700cE2143D7db854D168c",underlyingToken:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{address:"0x8a0889d47f9Aa0Fac1cC718ba34E26b867437880",name:"Staked Yearn CRV Vault",symbol:"st-yCRV",decimals:18,isVault:true,underlyingTokens:["0x4c1317326fD8EFDeBdBE5e1cd052010D97723bd6"],chainId:1,value:"0x8a0889d47f9Aa0Fac1cC718ba34E26b867437880",underlyingToken:"0x4c1317326fD8EFDeBdBE5e1cd052010D97723bd6"},{address:"0xE22Ef63F2bD31eb69bF5917589a5daE3445c27b2",name:"Balancer Boosted Aave USD Pool yVault",symbol:"yvBB-A-USD",decimals:18,isVault:true,underlyingTokens:["0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"],chainId:1,value:"0xE22Ef63F2bD31eb69bF5917589a5daE3445c27b2",underlyingToken:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2"},{address:"0x054AF22E1519b020516D72D749221c24756385C9",name:"Curve HUSD Pool yVault",symbol:"yvCurve-HUSD",decimals:18,isVault:true,underlyingTokens:["0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858"],chainId:1,value:"0x054AF22E1519b020516D72D749221c24756385C9",underlyingToken:"0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858"},{address:"0x2Ab6578239eD541Ef7cC7D11a45D740cE9F0a1F4",name:"Curve CTR-ETH Factory yVault",symbol:"yvCurve-CTR-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x3f0e7916681452D23Cd36B1281457DA721F2E5dF"],chainId:1,value:"0x2Ab6578239eD541Ef7cC7D11a45D740cE9F0a1F4",underlyingToken:"0x3f0e7916681452D23Cd36B1281457DA721F2E5dF"},{address:"0x2147935D9739da4E691b8Ae2e1437492A394eBf5",name:"WETH ubiVault",symbol:"ubiWETH",decimals:18,isVault:true,underlyingTokens:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"],chainId:1,value:"0x2147935D9739da4E691b8Ae2e1437492A394eBf5",underlyingToken:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png"},{address:"0x132d8D2C76Db3812403431fAcB00F3453Fc42125",name:"Curve ankrETH Pool yVault",symbol:"yvCurve-ankrETH",decimals:18,isVault:true,underlyingTokens:["0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf"],chainId:1,value:"0x132d8D2C76Db3812403431fAcB00F3453Fc42125",underlyingToken:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf"},{address:"0x01B01C4A1F4C522aD341A9da5eaA48aF207ab3Ec",name:"Curve pUSD-FRAXBP Factory yVault",symbol:"yvCurve-pUSD-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0xE60986759872393a8360A4a7abEAb3A6e0BA7848"],chainId:1,value:"0x01B01C4A1F4C522aD341A9da5eaA48aF207ab3Ec",underlyingToken:"0xE60986759872393a8360A4a7abEAb3A6e0BA7848"},{address:"0x445F62Ee351E57cACBF3161F66562Ff2B1261db4",name:"Curve TUSD-crvUSD Factory yVault",symbol:"yvCurve-TUSD-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0x34D655069F4cAc1547E4C8cA284FfFF5ad4A8db0"],chainId:1,value:"0x445F62Ee351E57cACBF3161F66562Ff2B1261db4",underlyingToken:"0x34D655069F4cAc1547E4C8cA284FfFF5ad4A8db0"},{address:"0x04d73c87b20d372cB3240C72eEFB9d79bA5e4959",name:"Curve UST Wormhole Pool yVault",symbol:"yvCurve-UST",decimals:18,isVault:true,underlyingTokens:["0xCEAF7747579696A2F0bb206a14210e3c9e6fB269"],chainId:1,value:"0x04d73c87b20d372cB3240C72eEFB9d79bA5e4959",underlyingToken:"0xCEAF7747579696A2F0bb206a14210e3c9e6fB269"},{address:"0x9894acf19de6F00D4056DbFDDF2dd7444F993D87",name:"Balancer wstETH-rETH-sfrxETH Factory yVault",symbol:"yvBal-wstETH-rETH-sfrxETH-f",decimals:18,isVault:true,underlyingTokens:["0x5aEe1e99fE86960377DE9f88689616916D5DcaBe"],chainId:1,value:"0x9894acf19de6F00D4056DbFDDF2dd7444F993D87",underlyingToken:"0x5aEe1e99fE86960377DE9f88689616916D5DcaBe"},{address:"0x58900d761Ae3765B75DDFc235c1536B527F25d8F",name:"Curve yETH Factory yVault",symbol:"yvCurve-yETH-f",decimals:18,isVault:true,underlyingTokens:["0x69ACcb968B19a53790f43e57558F5E443A91aF22"],chainId:1,value:"0x58900d761Ae3765B75DDFc235c1536B527F25d8F",underlyingToken:"0x69ACcb968B19a53790f43e57558F5E443A91aF22"},{address:"0x9F8B5c0fc18B79DdFc05b21c43da7E324Cf3B8Eb",name:"Curve ibEUR-USDC Factory yVault",symbol:"yvCurve-ibEUR-USDC-f",decimals:18,isVault:true,underlyingTokens:["0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF"],chainId:1,value:"0x9F8B5c0fc18B79DdFc05b21c43da7E324Cf3B8Eb",underlyingToken:"0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF"},{address:"0x341bb10D8f5947f3066502DC8125d9b8949FD3D6",name:"Curve STG-USDC Pool yVault",symbol:"yvCurve-STG-USDC",decimals:18,isVault:true,underlyingTokens:["0xdf55670e27bE5cDE7228dD0A6849181891c9ebA1"],chainId:1,value:"0x341bb10D8f5947f3066502DC8125d9b8949FD3D6",underlyingToken:"0xdf55670e27bE5cDE7228dD0A6849181891c9ebA1"},{address:"0x73a052500105205d34Daf004eAb301916DA8190f",name:"iearn TUSD",symbol:"yTUSD",decimals:18,isVault:true,underlyingTokens:["0x0000000000085d4780B73119b644AE5ecd22b376"],chainId:1,value:"0x73a052500105205d34Daf004eAb301916DA8190f",underlyingToken:"0x0000000000085d4780B73119b644AE5ecd22b376"},{address:"0x5b2384D566D2E4a0b29B8eccB642C63199cd393c",name:"Curve sUSD Factory yVault",symbol:"yvCurve-sUSD-f",decimals:18,isVault:true,underlyingTokens:["0xC25a3A3b969415c80451098fa907EC722572917F"],chainId:1,value:"0x5b2384D566D2E4a0b29B8eccB642C63199cd393c",underlyingToken:"0xC25a3A3b969415c80451098fa907EC722572917F"},{address:"0x3a51269E0707A3416044bad5066858A12198fCf5",name:"Curve CLEV-ETH Factory yVault",symbol:"yvCurve-CLEV-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x6C280dB098dB673d30d5B34eC04B6387185D3620"],chainId:1,value:"0x3a51269E0707A3416044bad5066858A12198fCf5",underlyingToken:"0x6C280dB098dB673d30d5B34eC04B6387185D3620"},{address:"0xd6627F7dE81eB517A32F0F81537Ea2636B27B8CC",name:"Curve wBETH Factory yVault",symbol:"yvCurve-wBETH-f",decimals:18,isVault:true,underlyingTokens:["0xBfAb6FA95E0091ed66058ad493189D2cB29385E6"],chainId:1,value:"0xd6627F7dE81eB517A32F0F81537Ea2636B27B8CC",underlyingToken:"0xBfAb6FA95E0091ed66058ad493189D2cB29385E6"},{address:"0x490bD0886F221A5F79713D3E84404355A9293C50",name:"Curve ibCHF Pool yVault",symbol:"yvCurve-ibCHF",decimals:18,isVault:true,underlyingTokens:["0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c"],chainId:1,value:"0x490bD0886F221A5F79713D3E84404355A9293C50",underlyingToken:"0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c"},{address:"0xd02b103f7f5dba89Ad316E2b3Fe247F280CcE5b2",name:"Curve xETHETH-f Factory yVault",symbol:"yvCurve-xETHETH-f-f",decimals:18,isVault:true,underlyingTokens:["0x16eAd9a10b1A77007E6E329B076aD1Fe97a6F7C0"],chainId:1,value:"0xd02b103f7f5dba89Ad316E2b3Fe247F280CcE5b2",underlyingToken:"0x16eAd9a10b1A77007E6E329B076aD1Fe97a6F7C0"},{address:"0x7cA00559B978CFde81297849be6151d3ccB408A9",name:"Curve USDC-crvUSD Factory yVault",symbol:"yvCurve-USDC-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0x4DEcE678ceceb27446b35C672dC7d61F30bAD69E"],chainId:1,value:"0x7cA00559B978CFde81297849be6151d3ccB408A9",underlyingToken:"0x4DEcE678ceceb27446b35C672dC7d61F30bAD69E"},{address:"0xE2CaD35CFD1A9B5acD557558f44B096ef8340C1B",name:"Curve TriCryptoLLAMA Factory yVault",symbol:"yvCurve-TriCryptoLLAMA-f",decimals:18,isVault:true,underlyingTokens:["0x2889302a794dA87fBF1D6Db415C1492194663D13"],chainId:1,value:"0xE2CaD35CFD1A9B5acD557558f44B096ef8340C1B",underlyingToken:"0x2889302a794dA87fBF1D6Db415C1492194663D13"},{address:"0xFD0877d9095789cAF24c98F7CCe092fa8E120775",name:"TUSD yVault",symbol:"yvTUSD",decimals:18,isVault:true,underlyingTokens:["0x0000000000085d4780B73119b644AE5ecd22b376"],chainId:1,value:"0xFD0877d9095789cAF24c98F7CCe092fa8E120775",underlyingToken:"0x0000000000085d4780B73119b644AE5ecd22b376"},{address:"0xE5eDcE53e39Cbc6d819E2C340BCF295e0084ff7c",name:"Curve ibEUR-USDC Pool yVault",symbol:"yvCurve-ibEUR-USDC",decimals:18,isVault:true,underlyingTokens:["0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF"],chainId:1,value:"0xE5eDcE53e39Cbc6d819E2C340BCF295e0084ff7c",underlyingToken:"0x8682Fbf0CbF312C891532BA9F1A91e44f81ad7DF"},{address:"0x571B384636BA518697d745AC218aD4cEE5EE0ABC",name:"Curve sBTCv2 Factory yVault",symbol:"yvCurve-sBTCv2-f",decimals:18,isVault:true,underlyingTokens:["0x051d7e5609917Bd9b73f04BAc0DED8Dd46a74301"],chainId:1,value:"0x571B384636BA518697d745AC218aD4cEE5EE0ABC",underlyingToken:"0x051d7e5609917Bd9b73f04BAc0DED8Dd46a74301"},{address:"0x6B5ce31AF687a671a804d8070Ddda99Cab926dfE",name:"Curve ibGBP-USDC Pool yVault",symbol:"yvCurve-ibGBP-USDC",decimals:18,isVault:true,underlyingTokens:["0x22CF19EB64226e0E1A79c69b345b31466fD273A7"],chainId:1,value:"0x6B5ce31AF687a671a804d8070Ddda99Cab926dfE",underlyingToken:"0x22CF19EB64226e0E1A79c69b345b31466fD273A7"},{address:"0x708c42E0236fe8f5916C5638a462Ee83DA99d07b",name:"Curve LDO-ETH Factory yVault",symbol:"yvCurve-LDO-ETH-f",decimals:18,isVault:true,underlyingTokens:["0xb79565c01b7Ae53618d9B847b9443aAf4f9011e7"],chainId:1,value:"0x708c42E0236fe8f5916C5638a462Ee83DA99d07b",underlyingToken:"0xb79565c01b7Ae53618d9B847b9443aAf4f9011e7"},{address:"0xF6B9DFE6bc42ed2eaB44D6B829017f7B78B29f88",name:"Curve ibKRW-USDC Pool yVault",symbol:"yvCurve-ibKRW-USDC",decimals:18,isVault:true,underlyingTokens:["0x80CAcCdBD3f07BbdB558DB4a9e146D099933D677"],chainId:1,value:"0xF6B9DFE6bc42ed2eaB44D6B829017f7B78B29f88",underlyingToken:"0x80CAcCdBD3f07BbdB558DB4a9e146D099933D677"},{address:"0x5CBF567cb0C3D319A052C91eFB3B3318899338DF",name:"Curve pETH Factory yVault",symbol:"yvCurve-pETH-f",decimals:18,isVault:true,underlyingTokens:["0x9848482da3Ee3076165ce6497eDA906E66bB85C5"],chainId:1,value:"0x5CBF567cb0C3D319A052C91eFB3B3318899338DF",underlyingToken:"0x9848482da3Ee3076165ce6497eDA906E66bB85C5"},{address:"0x27b7b1ad7288079A66d12350c828D3C00A6F07d7",name:"Curve Iron Bank Pool yVault",symbol:"yvCurve-IronBank",decimals:18,isVault:true,underlyingTokens:["0x5282a4eF67D9C33135340fB3289cc1711c13638C"],chainId:1,value:"0x27b7b1ad7288079A66d12350c828D3C00A6F07d7",underlyingToken:"0x5282a4eF67D9C33135340fB3289cc1711c13638C"},{address:"0xa8eF50905352aCD611F53640b001E48F2eA31d63",name:"Curve cvxCRVv2 Factory yVault",symbol:"yvCurve-cvxCRVv2-f",decimals:18,isVault:true,underlyingTokens:["0x971add32Ea87f10bD192671630be3BE8A11b8623"],chainId:1,value:"0xa8eF50905352aCD611F53640b001E48F2eA31d63",underlyingToken:"0x971add32Ea87f10bD192671630be3BE8A11b8623"},{address:"0xB364D19c3FF37e0fa4B94bf4cf626729533C1c26",name:"FRAX yVault",symbol:"yvFRAX",decimals:18,isVault:true,underlyingTokens:["0x853d955aCEf822Db058eb8505911ED77F175b99e"],chainId:1,value:"0xB364D19c3FF37e0fa4B94bf4cf626729533C1c26",underlyingToken:"0x853d955aCEf822Db058eb8505911ED77F175b99e",logoURI:"https://assets.coingecko.com/coins/images/13422/thumb/frax_logo.png?1608476506"},{address:"0xA9412Ffd7E0866755ae0dda3318470A61F62abe8",name:"Balancer FUD Auto-Compounding yVault",symbol:"yvBlpFUD",decimals:18,isVault:true,underlyingTokens:["0x178E029173417b1F9C8bC16DCeC6f697bC323746"],chainId:1,value:"0xA9412Ffd7E0866755ae0dda3318470A61F62abe8",underlyingToken:"0x178E029173417b1F9C8bC16DCeC6f697bC323746"},{address:"0x9A39f31DD5EDF5919A5C0c2433cE053fAD2E0336",name:"Curve ibJPY-USDC Pool yVault",symbol:"yvCurve-ibJPY-USDC",decimals:18,isVault:true,underlyingTokens:["0x127091edE112aEd7Bae281747771b3150Bb047bB"],chainId:1,value:"0x9A39f31DD5EDF5919A5C0c2433cE053fAD2E0336",underlyingToken:"0x127091edE112aEd7Bae281747771b3150Bb047bB"},{address:"0x5383C1Ab5beac04d6A6E6872Cc6a422f2Dc25576",name:"Curve USDC+ Factory yVault",symbol:"yvCurve-USDC+-f",decimals:18,isVault:true,underlyingTokens:["0xfed2B54453F75634bcdaEA5e5b11a3f99b9C28Fa"],chainId:1,value:"0x5383C1Ab5beac04d6A6E6872Cc6a422f2Dc25576",underlyingToken:"0xfed2B54453F75634bcdaEA5e5b11a3f99b9C28Fa"},{address:"0x0DAa35A1735152EDb928239c1712883Dd8Eb976f",name:"Yearn LQTY",symbol:"yLQTY",decimals:18,isVault:true,underlyingTokens:["0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D"],chainId:1,value:"0x0DAa35A1735152EDb928239c1712883Dd8Eb976f",underlyingToken:"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D",logoURI:"https://assets.coingecko.com/coins/images/14665/thumb/200-lqty-icon.png?1617631180"},{address:"0x0e8A7717A4FD7694682E7005957dD5d7598bF14A",name:"yExperimentalWBTC",symbol:"yExptWBTC",decimals:8,isVault:true,underlyingTokens:["0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"],chainId:1,value:"0x0e8A7717A4FD7694682E7005957dD5d7598bF14A",underlyingToken:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png"},{address:"0x79F4a9ed7a6196c67a2D6BCE8eC55E9F18802018",name:"Curve oETH Factory yVault",symbol:"yvCurve-oETH-f",decimals:18,isVault:true,underlyingTokens:["0x94B17476A93b3262d87B9a326965D1E91f9c13E7"],chainId:1,value:"0x79F4a9ed7a6196c67a2D6BCE8eC55E9F18802018",underlyingToken:"0x94B17476A93b3262d87B9a326965D1E91f9c13E7"},{address:"0xD6Ea40597Be05c201845c0bFd2e96A60bACde267",name:"Curve Compound Pool yVault",symbol:"yvCurve-Compound",decimals:18,isVault:true,underlyingTokens:["0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2"],chainId:1,value:"0xD6Ea40597Be05c201845c0bFd2e96A60bACde267",underlyingToken:"0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2"},{address:"0xd395DEC4F1733ff09b750D869eEfa7E0D37C3eE6",name:"Curve DOLA-FRAXBP Pool yVault - Unlisted",symbol:"yvCurve-DOLA-FRAXBP-U",decimals:18,isVault:true,underlyingTokens:["0xE57180685E3348589E9521aa53Af0BCD497E884d"],chainId:1,value:"0xd395DEC4F1733ff09b750D869eEfa7E0D37C3eE6",underlyingToken:"0xE57180685E3348589E9521aa53Af0BCD497E884d"},{address:"0xb09F2a67a731466182518fae980feAe96479d80b",name:"KP3RETH-f yVault",symbol:"yvKP3RETH-f",decimals:18,isVault:true,underlyingTokens:["0x4647B6D835f3B393C7A955df51EEfcf0db961606"],chainId:1,value:"0xb09F2a67a731466182518fae980feAe96479d80b",underlyingToken:"0x4647B6D835f3B393C7A955df51EEfcf0db961606"},{address:"0x03eaE26089A8c28DDC4c81d65bEfE014C793A60d",name:"Curve stETH-frxETH Factory yVault",symbol:"yvCurve-stETH-frxETH-f",decimals:18,isVault:true,underlyingTokens:["0x4d9f9D15101EEC665F77210cB999639f760F831E"],chainId:1,value:"0x03eaE26089A8c28DDC4c81d65bEfE014C793A60d",underlyingToken:"0x4d9f9D15101EEC665F77210cB999639f760F831E"},{address:"0x8fA3A9ecd9EFb07A8CE90A6eb014CF3c0E3B32Ef",name:"Curve BBTC Pool yVault",symbol:"yvCurve-BBTC",decimals:18,isVault:true,underlyingTokens:["0x410e3E86ef427e30B9235497143881f717d93c2A"],chainId:1,value:"0x8fA3A9ecd9EFb07A8CE90A6eb014CF3c0E3B32Ef",underlyingToken:"0x410e3E86ef427e30B9235497143881f717d93c2A"},{address:"0xcE71767158421482C39E72f209A7A8ef3A0c669d",name:"Balancer rETH Factory yVault",symbol:"yvBal-rETH-f",decimals:18,isVault:true,underlyingTokens:["0x1E19CF2D73a72Ef1332C882F20534B6519Be0276"],chainId:1,value:"0xcE71767158421482C39E72f209A7A8ef3A0c669d",underlyingToken:"0x1E19CF2D73a72Ef1332C882F20534B6519Be0276"},{address:"0x8176b059BD8f63aeB7e20282b12D243b4626E2AE",name:"Curve FRAX-crvUSD Factory yVault",symbol:"yvCurve-FRAX-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0x0CD6f267b2086bea681E922E19D40512511BE538"],chainId:1,value:"0x8176b059BD8f63aeB7e20282b12D243b4626E2AE",underlyingToken:"0x0CD6f267b2086bea681E922E19D40512511BE538"},{address:"0xB512D68A3194ba294A5b8146FA9beCd6a5Fea137",name:"Curve sUSD-crvUSD Factory yVault",symbol:"yvCurve-sUSD-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0x94cC50e4521bD271C1a997a3A4Dc815C2F920b41"],chainId:1,value:"0xB512D68A3194ba294A5b8146FA9beCd6a5Fea137",underlyingToken:"0x94cC50e4521bD271C1a997a3A4Dc815C2F920b41"},{address:"0xCA31DcB9D30e70BF709B41e3935c3f7cdBC6D255",name:"Curve EURT-USD Factory yVault",symbol:"yvCurve-EURT-USD-f",decimals:18,isVault:true,underlyingTokens:["0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833"],chainId:1,value:"0xCA31DcB9D30e70BF709B41e3935c3f7cdBC6D255",underlyingToken:"0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833"},{address:"0x75A291F0232ADD37d72Dd1Dcff55B715755ECDEe",name:"Curve CVX-ETH Factory yVault",symbol:"yvCurve-CVX-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x3A283D9c08E8b55966afb64C515f5143cf907611"],chainId:1,value:"0x75A291F0232ADD37d72Dd1Dcff55B715755ECDEe",underlyingToken:"0x3A283D9c08E8b55966afb64C515f5143cf907611"},{address:"0x883A777f2594004419fc08b388D7d3bdC1c0D6c1",name:"Balancer bb-a-USD Factory yVault",symbol:"yvBal-bb-a-USD-f",decimals:18,isVault:true,underlyingTokens:["0xfeBb0bbf162E64fb9D0dfe186E517d84C395f016"],chainId:1,value:"0x883A777f2594004419fc08b388D7d3bdC1c0D6c1",underlyingToken:"0xfeBb0bbf162E64fb9D0dfe186E517d84C395f016"},{address:"0x8Aa95B71D8e0e1C7949bd84223E0C7911D85171C",name:"Curve RSR-FRAXBP Factory yVault",symbol:"yvCurve-RSR-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0x3F436954afb722F5D14D868762a23faB6b0DAbF0"],chainId:1,value:"0x8Aa95B71D8e0e1C7949bd84223E0C7911D85171C",underlyingToken:"0x3F436954afb722F5D14D868762a23faB6b0DAbF0"},{address:"0x0d4EA8536F9A13e4FBa16042a46c30f092b06aA5",name:"Curve EURT Pool yVault",symbol:"yvCurve-EURT",decimals:18,isVault:true,underlyingTokens:["0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890"],chainId:1,value:"0x0d4EA8536F9A13e4FBa16042a46c30f092b06aA5",underlyingToken:"0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890"},{address:"0x67B9F46BCbA2DF84ECd41cC6511ca33507c9f4E9",name:"Curve DOLA Pool yVault - Unlisted",symbol:"yvCurve-DOLA-U",decimals:18,isVault:true,underlyingTokens:["0xAA5A67c256e27A5d80712c51971408db3370927D"],chainId:1,value:"0x67B9F46BCbA2DF84ECd41cC6511ca33507c9f4E9",underlyingToken:"0xAA5A67c256e27A5d80712c51971408db3370927D"},{address:"0x8414Db07a7F743dEbaFb402070AB01a4E0d2E45e",name:"Curve sBTC Pool yVault",symbol:"yvCurve-sBTC",decimals:18,isVault:true,underlyingTokens:["0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3"],chainId:1,value:"0x8414Db07a7F743dEbaFb402070AB01a4E0d2E45e",underlyingToken:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3"},{address:"0xE14d13d8B3b85aF791b2AADD661cDBd5E6097Db1",name:"YFI yVault",symbol:"yvYFI",decimals:18,isVault:true,underlyingTokens:["0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e"],chainId:1,value:"0xE14d13d8B3b85aF791b2AADD661cDBd5E6097Db1",underlyingToken:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",logoURI:"https://assets.coingecko.com/coins/images/11849/thumb/yfi-192x192.png?1598325330"},{address:"0xa8E0c42F45C877e611C76F2D4bF57476f2014381",name:"Curve Iron Bank Factory yVault",symbol:"yvCurve-IronBank-f",decimals:18,isVault:true,underlyingTokens:["0x5282a4eF67D9C33135340fB3289cc1711c13638C"],chainId:1,value:"0xa8E0c42F45C877e611C76F2D4bF57476f2014381",underlyingToken:"0x5282a4eF67D9C33135340fB3289cc1711c13638C"},{address:"0x5737022626C282a89D105fD2e89ed6928EbDAe93",name:"eCRV yVault",symbol:"yveCRV",decimals:18,isVault:true,underlyingTokens:["0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"],chainId:1,value:"0x5737022626C282a89D105fD2e89ed6928EbDAe93",underlyingToken:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{address:"0xC116dF49c02c5fD147DE25Baa105322ebF26Bd97",name:"Curve RSV Pool yVault",symbol:"yvCurve-RSV",decimals:18,isVault:true,underlyingTokens:["0xC2Ee6b0334C261ED60C72f6054450b61B8f18E35"],chainId:1,value:"0xC116dF49c02c5fD147DE25Baa105322ebF26Bd97",underlyingToken:"0xC2Ee6b0334C261ED60C72f6054450b61B8f18E35"},{address:"0x5AB64C599FcC59f0f2726A300b03166A395578Da",name:"Curve 3EUR Pool yVault",symbol:"yvCurve-3EUR",decimals:18,isVault:true,underlyingTokens:["0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571"],chainId:1,value:"0x5AB64C599FcC59f0f2726A300b03166A395578Da",underlyingToken:"0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571"},{address:"0x84E13785B5a27879921D6F685f041421C7F482dA",name:"Curve 3pool yVault",symbol:"yvCurve-3pool",decimals:18,isVault:true,underlyingTokens:["0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"],chainId:1,value:"0x84E13785B5a27879921D6F685f041421C7F482dA",underlyingToken:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490"},{address:"0x6c6371E15499FedCdadEE06ADc5b55680b3d0785",name:"Curve cbETH-frxETH Factory yVault",symbol:"yvCurve-cbETH-frxETH-f",decimals:18,isVault:true,underlyingTokens:["0x548E063CE6F3BaC31457E4f5b4e2345286274257"],chainId:1,value:"0x6c6371E15499FedCdadEE06ADc5b55680b3d0785",underlyingToken:"0x548E063CE6F3BaC31457E4f5b4e2345286274257"},{address:"0x5B707472eeF1553646740a7e5BEcFD41B9B4Ef4C",name:"COMP yVault",symbol:"yvCOMP",decimals:18,isVault:true,underlyingTokens:["0xc00e94Cb662C3520282E6f5717214004A7f26888"],chainId:1,value:"0x5B707472eeF1553646740a7e5BEcFD41B9B4Ef4C",underlyingToken:"0xc00e94Cb662C3520282E6f5717214004A7f26888",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{address:"0x1C97e67Dc7ca179aE82E0c4AFF4Af9ff66612A43",name:"Curve PAL-ETH Factory yVault",symbol:"yvCurve-PAL-ETH-f",decimals:18,isVault:true,underlyingTokens:["0xbE4f3AD6C9458b901C81b734CB22D9eaE9Ad8b50"],chainId:1,value:"0x1C97e67Dc7ca179aE82E0c4AFF4Af9ff66612A43",underlyingToken:"0xbE4f3AD6C9458b901C81b734CB22D9eaE9Ad8b50"},{address:"0x2e5c7e9B1Da0D9Cb2832eBb06241d18552A85400",name:"Curve ibCHF-USDC Pool yVault",symbol:"yvCurve-ibCHF-USDC",decimals:18,isVault:true,underlyingTokens:["0x08ceA8E5B4551722dEB97113C139Dd83C26c5398"],chainId:1,value:"0x2e5c7e9B1Da0D9Cb2832eBb06241d18552A85400",underlyingToken:"0x08ceA8E5B4551722dEB97113C139Dd83C26c5398"},{address:"0x2807387F1212cB2852aB97cdAa3627dACa5E4661",name:"MIM yVault",symbol:"yvMIM",decimals:18,isVault:true,underlyingTokens:["0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3"],chainId:1,value:"0x2807387F1212cB2852aB97cdAa3627dACa5E4661",underlyingToken:"0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",logoURI:"https://assets.coingecko.com/coins/images/16786/thumb/mimlogopng.png?1624979612"},{address:"0x23D3D0f1c697247d5e0a9efB37d8b0ED0C464f7f",name:"Curve tBTC Pool yVault",symbol:"yvCurve-tBTC",decimals:18,isVault:true,underlyingTokens:["0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd"],chainId:1,value:"0x23D3D0f1c697247d5e0a9efB37d8b0ED0C464f7f",underlyingToken:"0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd"},{address:"0x0e880118C29F095143dDA28e64d95333A9e75A47",name:"eCRV yVault",symbol:"yveCRV",decimals:18,isVault:true,underlyingTokens:["0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"],chainId:1,value:"0x0e880118C29F095143dDA28e64d95333A9e75A47",underlyingToken:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{address:"0xf4fDbc7C66Dc9832D672Ffe6242B6A386CeAd5DE",name:"sUSD yVault",symbol:"yvsUSD",decimals:18,isVault:true,underlyingTokens:["0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],chainId:1,value:"0xf4fDbc7C66Dc9832D672Ffe6242B6A386CeAd5DE",underlyingToken:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",logoURI:"https://assets.coingecko.com/coins/images/5013/thumb/sUSD.png?1616150765"},{address:"0x2D59aa422A7AaE58038CF8aE6eD07330Cc7d3ae8",name:"Curve bLUSD Factory yVault",symbol:"yvCurve-bLUSD-f",decimals:18,isVault:true,underlyingTokens:["0x5ca0313D44551e32e0d7a298EC024321c4BC59B4"],chainId:1,value:"0x2D59aa422A7AaE58038CF8aE6eD07330Cc7d3ae8",underlyingToken:"0x5ca0313D44551e32e0d7a298EC024321c4BC59B4"},{address:"0x3221BFBE308144f19089CB197b7C11c2Bf495906",name:"Curve BTRFLY-ETH Factory yVault",symbol:"yvCurve-BTRFLY-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x7483Dd57f6488b0e194A151C57Df6Ec85C00aCE9"],chainId:1,value:"0x3221BFBE308144f19089CB197b7C11c2Bf495906",underlyingToken:"0x7483Dd57f6488b0e194A151C57Df6Ec85C00aCE9"},{address:"0x241AdD131B9aaa7527132b752252b99420937ADc",name:"Curve USDT-crvUSD Factory yVault",symbol:"yvCurve-USDT-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0x390f3595bCa2Df7d23783dFd126427CCeb997BF4"],chainId:1,value:"0x241AdD131B9aaa7527132b752252b99420937ADc",underlyingToken:"0x390f3595bCa2Df7d23783dFd126427CCeb997BF4"},{address:"0x30B801F933e676Cb25892D1838FDCC00A1dde4cf",name:"Curve JPEG-pETH Factory yVault",symbol:"yvCurve-JPEG-pETH-f",decimals:18,isVault:true,underlyingTokens:["0xDA68f66fC0f10Ee61048E70106Df4BDB26bAF595"],chainId:1,value:"0x30B801F933e676Cb25892D1838FDCC00A1dde4cf",underlyingToken:"0xDA68f66fC0f10Ee61048E70106Df4BDB26bAF595"},{address:"0x528D50dC9a333f01544177a924893FA1F5b9F748",name:"Curve ibKRW Pool yVault",symbol:"yvCurve-ibKRW",decimals:18,isVault:true,underlyingTokens:["0x8461A004b50d321CB22B7d034969cE6803911899"],chainId:1,value:"0x528D50dC9a333f01544177a924893FA1F5b9F748",underlyingToken:"0x8461A004b50d321CB22B7d034969cE6803911899"},{address:"0xa669d6C2Df33F41940c2646A9BF3031e2524d515",name:"Curve sdCRVv2 Factory yVault",symbol:"yvCurve-sdCRVv2-f",decimals:18,isVault:true,underlyingTokens:["0xCA0253A98D16e9C1e3614caFDA19318EE69772D0"],chainId:1,value:"0xa669d6C2Df33F41940c2646A9BF3031e2524d515",underlyingToken:"0xCA0253A98D16e9C1e3614caFDA19318EE69772D0"},{address:"0xF56fB6cc29F0666BDD1662FEaAE2A3C935ee3469",name:"Curve USDP-crvUSD Factory yVault",symbol:"yvCurve-USDP-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0xCa978A0528116DDA3cbA9ACD3e68bc6191CA53D0"],chainId:1,value:"0xF56fB6cc29F0666BDD1662FEaAE2A3C935ee3469",underlyingToken:"0xCa978A0528116DDA3cbA9ACD3e68bc6191CA53D0"},{address:"0xB4AdA607B9d6b2c9Ee07A275e9616B84AC560139",name:"Curve FRAX Pool yVault",symbol:"yvCurve-FRAX",decimals:18,isVault:true,underlyingTokens:["0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"],chainId:1,value:"0xB4AdA607B9d6b2c9Ee07A275e9616B84AC560139",underlyingToken:"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B"},{address:"0x1bE5d71F2dA660BFdee8012dDc58D024448A0A59",name:"Curve (iearn fork) USDT",symbol:"ycUSDT",decimals:6,isVault:true,underlyingTokens:["0xdAC17F958D2ee523a2206206994597C13D831ec7"],chainId:1,value:"0x1bE5d71F2dA660BFdee8012dDc58D024448A0A59",underlyingToken:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{address:"0x671a912C10bba0CFA74Cfc2d6Fba9BA1ed9530B2",name:"LINK yVault",symbol:"yvLINK",decimals:18,isVault:true,underlyingTokens:["0x514910771AF9Ca656af840dff83E8264EcF986CA"],chainId:1,value:"0x671a912C10bba0CFA74Cfc2d6Fba9BA1ed9530B2",underlyingToken:"0x514910771AF9Ca656af840dff83E8264EcF986CA",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png"},{address:"0x82c83ddA32DB09F63F9A59A129278f3fdC3EeE67",name:"Curve 3EUR Factory yVault",symbol:"yvCurve-3EUR-f",decimals:18,isVault:true,underlyingTokens:["0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571"],chainId:1,value:"0x82c83ddA32DB09F63F9A59A129278f3fdC3EeE67",underlyingToken:"0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571"},{address:"0x8072B1d66389a1AA039e21Aac35A92464005baF5",name:"Curve rETH-frxETH Factory yVault",symbol:"yvCurve-rETH-frxETH-f",decimals:18,isVault:true,underlyingTokens:["0xbA6c373992AD8ec1f7520E5878E5540Eb36DeBf1"],chainId:1,value:"0x8072B1d66389a1AA039e21Aac35A92464005baF5",underlyingToken:"0xbA6c373992AD8ec1f7520E5878E5540Eb36DeBf1"},{address:"0xAD2f9A55518Dba12E8AB069502820923351667C5",name:"Curve msETH Factory yVault",symbol:"yvCurve-msETH-f",decimals:18,isVault:true,underlyingTokens:["0xa4c567c662349BeC3D0fB94C4e7f85bA95E208e4"],chainId:1,value:"0xAD2f9A55518Dba12E8AB069502820923351667C5",underlyingToken:"0xa4c567c662349BeC3D0fB94C4e7f85bA95E208e4"},{address:"0xcd68c3fC3e94C5AcC10366556b836855D96bfa93",name:"Curve dETH Factory yVault",symbol:"yvCurve-dETH-f",decimals:18,isVault:true,underlyingTokens:["0x7C0d189E1FecB124487226dCbA3748bD758F98E4"],chainId:1,value:"0xcd68c3fC3e94C5AcC10366556b836855D96bfa93",underlyingToken:"0x7C0d189E1FecB124487226dCbA3748bD758F98E4"},{address:"0x32413274504908460f0c373C7f20F429Fb80ed3A",name:"saCRV yVault",symbol:"yvsaCRV",decimals:18,isVault:true,underlyingTokens:["0x02d341CcB60fAaf662bC0554d13778015d1b285C"],chainId:1,value:"0x32413274504908460f0c373C7f20F429Fb80ed3A",underlyingToken:"0x02d341CcB60fAaf662bC0554d13778015d1b285C"},{address:"0x7e113c504263354ba99290dadAd00D1e1F2b6476",name:"Curve sdFXS Factory yVault",symbol:"yvCurve-sdFXS-f",decimals:18,isVault:true,underlyingTokens:["0x8c524635d52bd7b1Bd55E062303177a7d916C046"],chainId:1,value:"0x7e113c504263354ba99290dadAd00D1e1F2b6476",underlyingToken:"0x8c524635d52bd7b1Bd55E062303177a7d916C046"},{address:"0xD631734272c437e1730De3CD2193c060e8DfB39E",name:"crvSPELLETH yVault",symbol:"yvcrvSPELLETH",decimals:18,isVault:true,underlyingTokens:["0x8282BD15dcA2EA2bDf24163E8f2781B30C43A2ef"],chainId:1,value:"0xD631734272c437e1730De3CD2193c060e8DfB39E",underlyingToken:"0x8282BD15dcA2EA2bDf24163E8f2781B30C43A2ef"},{address:"0x4856A7EFBbFcaE92AB13c5e2e322Fc77647bB856",name:"RAI yVault",symbol:"yvRAI",decimals:18,isVault:true,underlyingTokens:["0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919"],chainId:1,value:"0x4856A7EFBbFcaE92AB13c5e2e322Fc77647bB856",underlyingToken:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{address:"0x16825039dfe2a5b01F3E1E6a2BBF9a576c6F95c4",name:"Curve d3pool Pool yVault",symbol:"yvCurve-d3pool",decimals:18,isVault:true,underlyingTokens:["0xBaaa1F5DbA42C3389bDbc2c9D2dE134F5cD0Dc89"],chainId:1,value:"0x16825039dfe2a5b01F3E1E6a2BBF9a576c6F95c4",underlyingToken:"0xBaaa1F5DbA42C3389bDbc2c9D2dE134F5cD0Dc89"},{address:"0x20F6A2ec303dF7120eAe3346dE5aD877f80Beb64",name:"Balancer auraBAL Factory yVault",symbol:"yvBal-auraBAL-f",decimals:18,isVault:true,underlyingTokens:["0x3dd0843A028C86e0b760b1A76929d1C5Ef93a2dd"],chainId:1,value:"0x20F6A2ec303dF7120eAe3346dE5aD877f80Beb64",underlyingToken:"0x3dd0843A028C86e0b760b1A76929d1C5Ef93a2dd"},{address:"0x7047F90229a057C13BF847C0744D646CFb6c9E1A",name:"Curve renBTC Pool yVault",symbol:"yvCurve-renBTC",decimals:18,isVault:true,underlyingTokens:["0x49849C98ae39Fff122806C06791Fa73784FB3675"],chainId:1,value:"0x7047F90229a057C13BF847C0744D646CFb6c9E1A",underlyingToken:"0x49849C98ae39Fff122806C06791Fa73784FB3675"},{address:"0x6D2F347DCFc55C6AC80e515a58344acd7FeF0B84",name:"bCRV yVault",symbol:"yvbCRV",decimals:18,isVault:true,underlyingTokens:["0x3B3Ac5386837Dc563660FB6a0937DFAa5924333B"],chainId:1,value:"0x6D2F347DCFc55C6AC80e515a58344acd7FeF0B84",underlyingToken:"0x3B3Ac5386837Dc563660FB6a0937DFAa5924333B"},{address:"0xC8cA30Aa2E486846f7304D3B9334f96d32000F8d",name:"Curve apeUSD-FRAXBP Factory yVault",symbol:"yvCurve-apeUSD-FBP-f",decimals:18,isVault:true,underlyingTokens:["0x04b727C7e246CA70d496ecF52E6b6280f3c8077D"],chainId:1,value:"0xC8cA30Aa2E486846f7304D3B9334f96d32000F8d",underlyingToken:"0x04b727C7e246CA70d496ecF52E6b6280f3c8077D"},{address:"0x93cF0b02D0A2B61551d107378AFf60CEAe40c342",name:"Curve sdYFIv2 Factory yVault",symbol:"yvCurve-sdYFIv2-f",decimals:18,isVault:true,underlyingTokens:["0x852b90239C5034b5bb7a5e54eF1bEF3Ce3359CC8"],chainId:1,value:"0x93cF0b02D0A2B61551d107378AFf60CEAe40c342",underlyingToken:"0x852b90239C5034b5bb7a5e54eF1bEF3Ce3359CC8"},{address:"0x507c6dE33f50c0505F77F598c0B3CA7b5fEB3D68",name:"Curve alUSD-FRAXBP Factory yVault",symbol:"yvCurve-alUSD-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0xB30dA2376F63De30b42dC055C93fa474F31330A5"],chainId:1,value:"0x507c6dE33f50c0505F77F598c0B3CA7b5fEB3D68",underlyingToken:"0xB30dA2376F63De30b42dC055C93fa474F31330A5"},{address:"0x7AB4a7BE740131BdE216521B54ADddD672F44A05",name:"Curve agEUR-EUROC Pool yVault",symbol:"yvCurve-agEUREUROC",decimals:18,isVault:true,underlyingTokens:["0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73"],chainId:1,value:"0x7AB4a7BE740131BdE216521B54ADddD672F44A05",underlyingToken:"0xBa3436Fd341F2C8A928452Db3C5A3670d1d5Cc73"},{address:"0xc325849908D482550b87f96ef60271B95f92C861",name:"Balancer cbETH-wstETH Factory yVault",symbol:"yvBal-cbETH-wstETH-f",decimals:18,isVault:true,underlyingTokens:["0x9c6d47Ff73e0F5E51BE5FD53236e3F595C5793F2"],chainId:1,value:"0xc325849908D482550b87f96ef60271B95f92C861",underlyingToken:"0x9c6d47Ff73e0F5E51BE5FD53236e3F595C5793F2"},{address:"0x4B5BfD52124784745c1071dcB244C6688d2533d3",name:"Curve Y Pool yVault",symbol:"yUSD",decimals:18,isVault:true,underlyingTokens:["0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"],chainId:1,value:"0x4B5BfD52124784745c1071dcB244C6688d2533d3",underlyingToken:"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8"},{address:"0x7356f09C294Cb9c6428AC7327B24B0f29419C181",name:"SNX yVault",symbol:"yvSNX",decimals:18,isVault:true,underlyingTokens:["0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F"],chainId:1,value:"0x7356f09C294Cb9c6428AC7327B24B0f29419C181",underlyingToken:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F/logo.png"},{address:"0xFBEB78a723b8087fD2ea7Ef1afEc93d35E8Bed42",name:"UNI yVault",symbol:"yvUNI",decimals:18,isVault:true,underlyingTokens:["0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"],chainId:1,value:"0xFBEB78a723b8087fD2ea7Ef1afEc93d35E8Bed42",underlyingToken:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",logoURI:"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png?1600306604"},{address:"0x595a68a8c9D5C230001848B69b1947ee2A607164",name:"Curve ibGBP Pool yVault",symbol:"yvCurve-ibGBP",decimals:18,isVault:true,underlyingTokens:["0xD6Ac1CB9019137a896343Da59dDE6d097F710538"],chainId:1,value:"0x595a68a8c9D5C230001848B69b1947ee2A607164",underlyingToken:"0xD6Ac1CB9019137a896343Da59dDE6d097F710538"},{address:"0xC8BE5E2aE51c3F75FcfBD900505Ec63Ce7dE320c",name:"Balancer stETH Factory yVault",symbol:"yvBal-stETH-f",decimals:18,isVault:true,underlyingTokens:["0x32296969Ef14EB0c6d29669C550D4a0449130230"],chainId:1,value:"0xC8BE5E2aE51c3F75FcfBD900505Ec63Ce7dE320c",underlyingToken:"0x32296969Ef14EB0c6d29669C550D4a0449130230"},{address:"0xB8C3B7A2A618C552C23B1E4701109a9E756Bab67",name:"1INCH yVault",symbol:"yv1INCH",decimals:18,isVault:true,underlyingTokens:["0x111111111117dC0aa78b770fA6A738034120C302"],chainId:1,value:"0xB8C3B7A2A618C552C23B1E4701109a9E756Bab67",underlyingToken:"0x111111111117dC0aa78b770fA6A738034120C302",logoURI:"https://assets.coingecko.com/coins/images/13469/thumb/1inch-token.png?1608803028"},{address:"0x5b189D92983E941273b26e3b46e5a16206c08827",name:"eCRV yVault",symbol:"yveCRV",decimals:18,isVault:true,underlyingTokens:["0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"],chainId:1,value:"0x5b189D92983E941273b26e3b46e5a16206c08827",underlyingToken:"0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c"},{address:"0x4560b99C904aAD03027B5178CCa81584744AC01f",name:"Curve cvxCRV Pool yVault",symbol:"yvCurve-cvxCRV",decimals:18,isVault:true,underlyingTokens:["0x9D0464996170c6B9e75eED71c68B99dDEDf279e8"],chainId:1,value:"0x4560b99C904aAD03027B5178CCa81584744AC01f",underlyingToken:"0x9D0464996170c6B9e75eED71c68B99dDEDf279e8"},{address:"0xC4dAf3b5e2A9e93861c3FBDd25f1e943B8D87417",name:"Curve USDP Pool yVault",symbol:"yvCurve-USDP",decimals:18,isVault:true,underlyingTokens:["0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6"],chainId:1,value:"0xC4dAf3b5e2A9e93861c3FBDd25f1e943B8D87417",underlyingToken:"0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6"},{address:"0x61f46C65E403429266e8b569F23f70dD75d9BeE7",name:"LP Yearn CRV Vault",symbol:"lp-yCRV",decimals:18,isVault:true,underlyingTokens:["0x0309A528bBa0394dC4A2Ce59123C52E317A54604"],chainId:1,value:"0x61f46C65E403429266e8b569F23f70dD75d9BeE7",underlyingToken:"0x0309A528bBa0394dC4A2Ce59123C52E317A54604"},{address:"0xd6b2f4F0586BCfc9B1bf5cD8E22546aDD7B81a64",name:"Curve T-ETH Factory yVault",symbol:"yvCurve-T-ETH-f",decimals:18,isVault:true,underlyingTokens:["0xCb08717451aaE9EF950a2524E33B6DCaBA60147B"],chainId:1,value:"0xd6b2f4F0586BCfc9B1bf5cD8E22546aDD7B81a64",underlyingToken:"0xCb08717451aaE9EF950a2524E33B6DCaBA60147B"},{address:"0xa354F35829Ae975e850e23e9615b11Da1B3dC4DE",name:"USDC yVault",symbol:"yvUSDC",decimals:6,isVault:true,underlyingTokens:["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"],chainId:1,value:"0xa354F35829Ae975e850e23e9615b11Da1B3dC4DE",underlyingToken:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{address:"0x5F208d3a8b13062adE45a33Ca9Bc8de64D520CB9",name:"Curve stETHv2 Factory yVault",symbol:"yvCurve-stETHv2-f",decimals:18,isVault:true,underlyingTokens:["0x21E27a5E5513D6e65C4f830167390997aA84843a"],chainId:1,value:"0x5F208d3a8b13062adE45a33Ca9Bc8de64D520CB9",underlyingToken:"0x21E27a5E5513D6e65C4f830167390997aA84843a"},{address:"0x25212Df29073FfFA7A67399AcEfC2dd75a831A1A",name:"Curve EURS Pool yVault",symbol:"yvCurve-EURS",decimals:18,isVault:true,underlyingTokens:["0x194eBd173F6cDacE046C53eACcE9B953F28411d1"],chainId:1,value:"0x25212Df29073FfFA7A67399AcEfC2dd75a831A1A",underlyingToken:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1"},{address:"0x80bbeE2fa460dA291e796B9045e93d19eF948C6A",name:"Curve Pax Pool yVault",symbol:"yvCurve-Pax",decimals:18,isVault:true,underlyingTokens:["0xD905e2eaeBe188fc92179b6350807D8bd91Db0D8"],chainId:1,value:"0x80bbeE2fa460dA291e796B9045e93d19eF948C6A",underlyingToken:"0xD905e2eaeBe188fc92179b6350807D8bd91Db0D8"},{address:"0xbD65955F752B2eF093B34B05e5FFb439AE8e5049",name:"COMP yVault",symbol:"yvCOMP",decimals:18,isVault:true,underlyingTokens:["0xc00e94Cb662C3520282E6f5717214004A7f26888"],chainId:1,value:"0xbD65955F752B2eF093B34B05e5FFb439AE8e5049",underlyingToken:"0xc00e94Cb662C3520282E6f5717214004A7f26888",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xc00e94Cb662C3520282E6f5717214004A7f26888/logo.png"},{address:"0x3C26DE7e22613A31b77E93F011d804D8A7821581",name:"LOOKS yVault",symbol:"yvLOOKS",decimals:18,isVault:true,underlyingTokens:["0xf4d2888d29D722226FafA5d9B24F9164c092421E"],chainId:1,value:"0x3C26DE7e22613A31b77E93F011d804D8A7821581",underlyingToken:"0xf4d2888d29D722226FafA5d9B24F9164c092421E"},{address:"0x497590d2d57f05cf8B42A36062fA53eBAe283498",name:"SUSHI yVault",symbol:"yvSUSHI",decimals:18,isVault:true,underlyingTokens:["0x6B3595068778DD592e39A122f4f5a5cF09C90fE2"],chainId:1,value:"0x497590d2d57f05cf8B42A36062fA53eBAe283498",underlyingToken:"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",logoURI:"https://assets.coingecko.com/coins/images/12271/thumb/512x512_Logo_no_chop.png?1606986688"},{address:"0xE537B5cc158EB71037D4125BDD7538421981E6AA",name:"Curve 3Crypto Pool yVault",symbol:"yvCurve-3Crypto",decimals:18,isVault:true,underlyingTokens:["0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"],chainId:1,value:"0xE537B5cc158EB71037D4125BDD7538421981E6AA",underlyingToken:"0xc4AD29ba4B3c580e6D59105FFf484999997675Ff"},{address:"0x72FaEA467BD88db6720A861e56A3a72B4Aa579DF",name:"Curve ibCHF Factory yVault",symbol:"yvCurve-ibCHF-f",decimals:18,isVault:true,underlyingTokens:["0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c"],chainId:1,value:"0x72FaEA467BD88db6720A861e56A3a72B4Aa579DF",underlyingToken:"0x9c2C8910F113181783c249d8F6Aa41b51Cde0f0c"},{address:"0x6949145469362F9eeaB3c96Ea41b51D9B4cC2b21",name:"Curve TriCryptoINV Factory yVault",symbol:"yvCurve-TriCryptoINV-f",decimals:18,isVault:true,underlyingTokens:["0x5426178799ee0a0181A89b4f57eFddfAb49941Ec"],chainId:1,value:"0x6949145469362F9eeaB3c96Ea41b51D9B4cC2b21",underlyingToken:"0x5426178799ee0a0181A89b4f57eFddfAb49941Ec"},{address:"0x3f34A7eF4f17528CbFFb7817060941BCdaC924fa",name:"Curve TriCRV Factory yVault",symbol:"yvCurve-TriCRV-f",decimals:18,isVault:true,underlyingTokens:["0x4eBdF703948ddCEA3B11f675B4D1Fba9d2414A14"],chainId:1,value:"0x3f34A7eF4f17528CbFFb7817060941BCdaC924fa",underlyingToken:"0x4eBdF703948ddCEA3B11f675B4D1Fba9d2414A14"},{address:"0x27B5739e22ad9033bcBf192059122d163b60349D",name:"Staked Yearn CRV Vault",symbol:"st-yCRV",decimals:18,isVault:true,underlyingTokens:["0xFCc5c47bE19d06BF83eB04298b026F81069ff65b"],chainId:1,value:"0x27B5739e22ad9033bcBf192059122d163b60349D",underlyingToken:"0xFCc5c47bE19d06BF83eB04298b026F81069ff65b"},{address:"0xD725F5742047B4B4A3110D0b38284227fcaB041e",name:"LP Yearn BAL Vault",symbol:"lp-yBAL",decimals:18,isVault:true,underlyingTokens:["0xD61e198e139369a40818FE05F5d5e6e045Cd6eaF"],chainId:1,value:"0xD725F5742047B4B4A3110D0b38284227fcaB041e",underlyingToken:"0xD61e198e139369a40818FE05F5d5e6e045Cd6eaF"},{address:"0xc5F3D11580c41cD07104e9AF154Fc6428bb93c73",name:"Balancer Boosted Aave USD Pool yVault",symbol:"yvBalancer-BoostedAaveUSD",decimals:18,isVault:true,underlyingTokens:["0xA13a9247ea42D743238089903570127DdA72fE44"],chainId:1,value:"0xc5F3D11580c41cD07104e9AF154Fc6428bb93c73",underlyingToken:"0xA13a9247ea42D743238089903570127DdA72fE44"},{address:"0x873fB544277FD7b977B196a826459a69E27eA4ea",name:"RAI yVault",symbol:"yvRAI",decimals:18,isVault:true,underlyingTokens:["0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919"],chainId:1,value:"0x873fB544277FD7b977B196a826459a69E27eA4ea",underlyingToken:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",logoURI:"https://assets.coingecko.com/coins/images/14004/thumb/RAI-logo-coin.png?1613592334"},{address:"0xBF7AA989192b020a8d3e1C65a558e123834325cA",name:"HBTC yVault",symbol:"yvHBTC",decimals:18,isVault:true,underlyingTokens:["0x0316EB71485b0Ab14103307bf65a021042c6d380"],chainId:1,value:"0xBF7AA989192b020a8d3e1C65a558e123834325cA",underlyingToken:"0x0316EB71485b0Ab14103307bf65a021042c6d380"},{address:"0xb4D1Be44BfF40ad6e506edf43156577a3f8672eC",name:"Curve sAave Pool yVault",symbol:"yvCurve-sAave",decimals:18,isVault:true,underlyingTokens:["0x02d341CcB60fAaf662bC0554d13778015d1b285C"],chainId:1,value:"0xb4D1Be44BfF40ad6e506edf43156577a3f8672eC",underlyingToken:"0x02d341CcB60fAaf662bC0554d13778015d1b285C"},{address:"0x4CbB6A5EC00cEEC252a7091559484F7adb83165f",name:"Curve alUSD Factory yVault",symbol:"yvCurve-alUSD-f",decimals:18,isVault:true,underlyingTokens:["0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c"],chainId:1,value:"0x4CbB6A5EC00cEEC252a7091559484F7adb83165f",underlyingToken:"0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c"},{address:"0xBfedbcbe27171C418CDabC2477042554b1904857",name:"Curve rETH Pool yVault",symbol:"yvCurve-rETH",decimals:18,isVault:true,underlyingTokens:["0x53a901d48795C58f485cBB38df08FA96a24669D5"],chainId:1,value:"0xBfedbcbe27171C418CDabC2477042554b1904857",underlyingToken:"0x53a901d48795C58f485cBB38df08FA96a24669D5"},{address:"0x28a5b95C101df3Ded0C0d9074DB80C438774B6a9",name:"Curve USDT Pool yVault",symbol:"yvCurve-USDT",decimals:18,isVault:true,underlyingTokens:["0x9fC689CCaDa600B6DF723D9E47D84d76664a1F23"],chainId:1,value:"0x28a5b95C101df3Ded0C0d9074DB80C438774B6a9",underlyingToken:"0x9fC689CCaDa600B6DF723D9E47D84d76664a1F23"},{address:"0x9777d7E2b60bB01759D0E2f8be2095df444cb07E",name:"Curve (iearn fork) USDC",symbol:"ycUSDC",decimals:6,isVault:true,underlyingTokens:["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"],chainId:1,value:"0x9777d7E2b60bB01759D0E2f8be2095df444cb07E",underlyingToken:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"},{address:"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447",name:"iearn USDT",symbol:"yUSDT",decimals:6,isVault:true,underlyingTokens:["0xdAC17F958D2ee523a2206206994597C13D831ec7"],chainId:1,value:"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447",underlyingToken:"0xdAC17F958D2ee523a2206206994597C13D831ec7",logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"},{address:"0xd8C620991b8E626C099eAaB29B1E3eEa279763bb",name:"Curve MIM-UST Pool yVault",symbol:"yvCurve-MIMUST",decimals:18,isVault:true,underlyingTokens:["0x55A8a39bc9694714E2874c1ce77aa1E599461E18"],chainId:1,value:"0xd8C620991b8E626C099eAaB29B1E3eEa279763bb",underlyingToken:"0x55A8a39bc9694714E2874c1ce77aa1E599461E18"},{address:"0x2fB06235aB90812e5BaE28404024C9498fF9414d",name:"Curve JPEG-pETH Factory yVault",symbol:"yvCurve-JPEG-pETH-f",decimals:18,isVault:true,underlyingTokens:["0x23E7817bC73645063FB2fa85c1d098EfFE84bE90"],chainId:1,value:"0x2fB06235aB90812e5BaE28404024C9498fF9414d",underlyingToken:"0x23E7817bC73645063FB2fa85c1d098EfFE84bE90"},{address:"0x625b7DF2fa8aBe21B0A976736CDa4775523aeD1E",name:"Curve HBTC Pool yVault",symbol:"yvCurve-HBTC",decimals:18,isVault:true,underlyingTokens:["0xb19059ebb43466C323583928285a49f558E572Fd"],chainId:1,value:"0x625b7DF2fa8aBe21B0A976736CDa4775523aeD1E",underlyingToken:"0xb19059ebb43466C323583928285a49f558E572Fd"},{address:"0x1A5ebfF0E881Aec34837845e4D0EB430a1B4b737",name:"Curve FRAXBP Factory yVault",symbol:"yvCurve-FRAXBP-f",decimals:18,isVault:true,underlyingTokens:["0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC"],chainId:1,value:"0x1A5ebfF0E881Aec34837845e4D0EB430a1B4b737",underlyingToken:"0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC"},{address:"0xfb9A680825f29972629b2295E050f74CB2f4992b",name:"Balancer GHO-LUSD Factory yVault",symbol:"yvBal-GHO-LUSD-f",decimals:18,isVault:true,underlyingTokens:["0x3FA8C89704e5d07565444009e5d9e624B40Be813"],chainId:1,value:"0xfb9A680825f29972629b2295E050f74CB2f4992b",underlyingToken:"0x3FA8C89704e5d07565444009e5d9e624B40Be813"},{address:"0x65346970F0f66CCAd8a5bfc3a03C96836C1897bE",name:"Curve DUSD Factory yVault",symbol:"yvCurve-DUSD-f",decimals:18,isVault:true,underlyingTokens:["0x3a664Ab939FD8482048609f652f9a0B0677337B9"],chainId:1,value:"0x65346970F0f66CCAd8a5bfc3a03C96836C1897bE",underlyingToken:"0x3a664Ab939FD8482048609f652f9a0B0677337B9"},{address:"0xA74d4B67b3368E83797a35382AFB776bAAE4F5C8",name:"Curve alUSD Pool yVault",symbol:"yvCurve-alUSD",decimals:18,isVault:true,underlyingTokens:["0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c"],chainId:1,value:"0xA74d4B67b3368E83797a35382AFB776bAAE4F5C8",underlyingToken:"0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c"},{address:"0x8472E9914C0813C4b465927f82E213EA34839173",name:"sBTC yVault",symbol:"yvsBTC",decimals:18,isVault:true,underlyingTokens:["0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6"],chainId:1,value:"0x8472E9914C0813C4b465927f82E213EA34839173",underlyingToken:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6"},{address:"0xF59D66c1d593Fb10e2f8c2a6fD2C958792434B9c",name:"Curve OUSD Pool yVault",symbol:"yvCurve-OUSD",decimals:18,isVault:true,underlyingTokens:["0x87650D7bbfC3A9F10587d7778206671719d9910D"],chainId:1,value:"0xF59D66c1d593Fb10e2f8c2a6fD2C958792434B9c",underlyingToken:"0x87650D7bbfC3A9F10587d7778206671719d9910D"},{address:"0x429EA2d8d5B06CA40dD986FaC0734BA0E0CaC022",name:"Curve sdCRV Factory yVault",symbol:"yvCurve-sdCRV-f",decimals:18,isVault:true,underlyingTokens:["0xf7b55C3732aD8b2c2dA7c24f30A69f55c54FB717"],chainId:1,value:"0x429EA2d8d5B06CA40dD986FaC0734BA0E0CaC022",underlyingToken:"0xf7b55C3732aD8b2c2dA7c24f30A69f55c54FB717"},{address:"0xa540744DEDBDA9eF64cf753F0E851EfE4a419EA9",name:"Curve MIM Factory yVault",symbol:"yvCurve-MIM-f",decimals:18,isVault:true,underlyingTokens:["0x5a6A4D54456819380173272A5E8E9B9904BdF41B"],chainId:1,value:"0xa540744DEDBDA9eF64cf753F0E851EfE4a419EA9",underlyingToken:"0x5a6A4D54456819380173272A5E8E9B9904BdF41B"},{address:"0xc09cfb625e586B117282399433257a1C0841edf3",name:"Staked Yearn BAL Vault",symbol:"st-yBAL",decimals:18,isVault:true,underlyingTokens:["0x98E86Ed5b0E48734430BfBe92101156C75418cad"],chainId:1,value:"0xc09cfb625e586B117282399433257a1C0841edf3",underlyingToken:"0x98E86Ed5b0E48734430BfBe92101156C75418cad"},{address:"0x3B96d491f067912D18563d56858Ba7d6EC67a6fa",name:"Curve USDN Pool yVault",symbol:"yvCurve-USDN",decimals:18,isVault:true,underlyingTokens:["0x4f3E8F405CF5aFC05D68142F3783bDfE13811522"],chainId:1,value:"0x3B96d491f067912D18563d56858Ba7d6EC67a6fa",underlyingToken:"0x4f3E8F405CF5aFC05D68142F3783bDfE13811522"},{address:"0xe2277cC76f806925DC6c9a5E4E5933605f43c3c4",name:"Curve LUSD-crvUSD Factory yVault",symbol:"yvCurve-LUSD-crvUSD-f",decimals:18,isVault:true,underlyingTokens:["0x9978c6B08d28d3B74437c917c5dD7C026df9d55C"],chainId:1,value:"0xe2277cC76f806925DC6c9a5E4E5933605f43c3c4",underlyingToken:"0x9978c6B08d28d3B74437c917c5dD7C026df9d55C"},{address:"0x19b8Bc5CcF9700e16f2780bEA152F01C449f45D0",name:"ALCX yVault",symbol:"yvALCX",decimals:18,isVault:true,underlyingTokens:["0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF"],chainId:1,value:"0x19b8Bc5CcF9700e16f2780bEA152F01C449f45D0",underlyingToken:"0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF",logoURI:"https://assets.coingecko.com/coins/images/14113/thumb/Alchemix.png?1614409874"},{address:"0x3408324Dbb537886CADc180f6FfCf674eE215F67",name:"renBTC yVault",symbol:"yvrenBTC",decimals:8,isVault:true,underlyingTokens:["0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D"],chainId:1,value:"0x3408324Dbb537886CADc180f6FfCf674eE215F67",underlyingToken:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D"},{address:"0xE510E87d0eF7d987Ed1baF8E1D7Aaef5b9e3db42",name:"Curve OHM-ETH Factory yVault",symbol:"yvCurve-OHM-ETH-f",decimals:18,isVault:true,underlyingTokens:["0x3660BD168494d61ffDac21E403d0F6356cF90fD7"],chainId:1,value:"0xE510E87d0eF7d987Ed1baF8E1D7Aaef5b9e3db42",underlyingToken:"0x3660BD168494d61ffDac21E403d0F6356cF90fD7"},{address:"0x774B4Cbc2703cE83fB3b828b7C782d1CD983b04A",name:"Curve ankrETH Factory yVault",symbol:"yvCurve-ankrETH-f",decimals:18,isVault:true,underlyingTokens:["0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf"],chainId:1,value:"0x774B4Cbc2703cE83fB3b828b7C782d1CD983b04A",underlyingToken:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf"},{address:"0x2a82DcdcBfB88e92021B8BcC3DA22703a2E4459c",name:"Curve BUSD Factory yVault",symbol:"yvCurve-BUSD-f",decimals:18,isVault:true,underlyingTokens:["0x4807862AA8b2bF68830e4C8dc86D0e9A998e085a"],chainId:1,value:"0x2a82DcdcBfB88e92021B8BcC3DA22703a2E4459c",underlyingToken:"0x4807862AA8b2bF68830e4C8dc86D0e9A998e085a"}];var aTokensGoerli=[{chainId:"5",aTokenAddress:"0x5fDF09EE06219f96EffE1b4CC47f44A630C5A358",stableDebtTokenAddress:"0x2ab21c55DAC613a3C2E2D40De0e5df270BaFec4C",variableDebtTokenAddress:"0x299D037785b53305494A8Ef3e89c47e7E23efe58",underlyingAssetAddress:"0x0B7a69d978DdA361Db5356D4Bd0206496aFbDD96",aTokenSymbol:"aAAVE"},{chainId:"5",aTokenAddress:"0x41355876CEC93c43cE4e784ce1b5f5e62557D2e2",stableDebtTokenAddress:"0x14DA7b36d17812cc5fD8C171D3c573f5E78823e3",variableDebtTokenAddress:"0xE34A49958A50346d9616fB5f8C601A67CD07aC84",underlyingAssetAddress:"0x515614aA3d8f09152b1289848383A260c7D053Ff",aTokenSymbol:"aBAT"},{chainId:"5",aTokenAddress:"0xabd2878A23cba83F1e9790635e09e494b8E21333",stableDebtTokenAddress:"0xB14F9C379eBeBE76C8881D7104bcb50d50aFC1c2",variableDebtTokenAddress:"0xD078EAEA33DCA2bE04Ef1511F7c73D78F06f9abe",underlyingAssetAddress:"0xa7c3Bf25FFeA8605B516Cf878B7435fe1768c89b",aTokenSymbol:"aBUSD"},{chainId:"5",aTokenAddress:"0x31f30d9A5627eAfeC4433Ae2886Cf6cc3D25E772",stableDebtTokenAddress:"0x80bECEc53542B4C85ccf9D51c1cbaB4A5C624637",variableDebtTokenAddress:"0x40e63a0143da87aC2cd22EC08CE55535cB53ee80",underlyingAssetAddress:"0x75Ab5AB1Eef154C0352Fc31D2428Cef80C7F8B33",aTokenSymbol:"aDAI"},{chainId:"5",aTokenAddress:"0x3DB016c45090337e989C882F47Cf1Dc51fB6dE1B",stableDebtTokenAddress:"0x8733524Ca21c3089e787C7972A4DF0d5f50b315b",variableDebtTokenAddress:"0x2861E9f276b82BCbef0e973fF4E17Dd25bCE8346",underlyingAssetAddress:"0x1057DCaa0b66dFBcEc5241fD51F4326C210f201F",aTokenSymbol:"aENJ"},{chainId:"5",aTokenAddress:"0x7D5e39D49Ca107b49Fd4c6cF777B04bdA79a675C",stableDebtTokenAddress:"0x62d1Fc8a330F4A01De9770B38695F339bB987164",variableDebtTokenAddress:"0x4758f759257CC24292d90c2c0A1D27Cd7D4f5B19",underlyingAssetAddress:"0x54Bc1D59873A5ABde98cf76B6EcF4075ff65d685",aTokenSymbol:"aKNC"},{chainId:"5",aTokenAddress:"0x8c8cc9b893b6962409BCEaAFCA95d1044ce809bc",stableDebtTokenAddress:"0x8fc66637ab88f13c92F60D6BD509cc151187D93f",variableDebtTokenAddress:"0xb0B37762c1d2aa2370D1da9e0276d45240BbD632",underlyingAssetAddress:"0x7337e7FF9abc45c0e43f130C136a072F4794d40b",aTokenSymbol:"aLINK"},{chainId:"5",aTokenAddress:"0x71d4C18Ce2bd9889E17099B1552D0b92FAe15731",stableDebtTokenAddress:"0x935bb070195A5cFe2E30890f4D672b1e361a20a6",variableDebtTokenAddress:"0x6E67bbCE6d126b9B09F974723cC2df83506F2a13",underlyingAssetAddress:"0x8d9EAc6f25470EFfD68f0AD22993CB2813c0c9B9",aTokenSymbol:"aMANA"},{chainId:"5",aTokenAddress:"0xd77332d9FA5299010b403bB4f768ACb2d2E8A8a6",stableDebtTokenAddress:"0x2e5549073cbC537f77393bE12c2e4220bc7146f1",variableDebtTokenAddress:"0x80911c6784E6487A2E5670CAeBa6DdE3c80836A7",underlyingAssetAddress:"0x90be02599452FBC1a3D47E9EB62895330cfA05Ed",aTokenSymbol:"aMKR"},{chainId:"5",aTokenAddress:"0x2A4B55A3229470BE6Bc78f1b534Cfe8064107407",stableDebtTokenAddress:"0xfBf071aDd7414B81E7b6eBF1a4Def16Cc523221f",variableDebtTokenAddress:"0x5e8d588EFf65787657Eb48eBD64E739b1C7eF177",underlyingAssetAddress:"0x3160F3f3B55eF85d0D27f04A2d74d426c32de842",aTokenSymbol:"aREN"},{chainId:"5",aTokenAddress:"0x1Fad08D99F66fe709f4c4d7D81268d6fd380a20f",stableDebtTokenAddress:"0x8E2890B0c234Cea38FDfe7d70E6B496004d81f35",variableDebtTokenAddress:"0x50b60ff9591883b14ABCC5395e0218641c8aFFd3",underlyingAssetAddress:"0xFc1Ab0379db4B6ad8Bf5Bc1382e108a341E2EaBb",aTokenSymbol:"aSNX"},{chainId:"5",aTokenAddress:"0xb997a147657a9295137e54c6C19ECF9e97Eb4b36",stableDebtTokenAddress:"0x07836D13e93342EA05477244c2f38B9C41C99A0D",variableDebtTokenAddress:"0xA2b3b3Bc809d45a535da603485D9CFcE7658BEC1",underlyingAssetAddress:"0x4e62eB262948671590b8D967BDE048557bdd03eD",aTokenSymbol:"aSUSD"},{chainId:"5",aTokenAddress:"0x37416BA913324Bc0eEB60f27d5897d8A6A75028b",stableDebtTokenAddress:"0x5C5B7b4cf294c060204Cf3123502d264C0c88f26",variableDebtTokenAddress:"0x485e3336934d45cC41112D04287ED1f3C9c84B3f",underlyingAssetAddress:"0xc048C1b6ac47393F073dA2b3d5D1cc43b94891Fd",aTokenSymbol:"aTUSD"},{chainId:"5",aTokenAddress:"0x6Ea7776f7d217b41Dc44684Da6f9FcD4eb9642C3",stableDebtTokenAddress:"0xE36213372341F7422ec42D375EEAd34946420db2",variableDebtTokenAddress:"0x111f523Fc4b9451871980324c1A32CA14E90D375",underlyingAssetAddress:"0x981D8AcaF6af3a46785e7741d22fBE81B25Ebf1e",aTokenSymbol:"aUNI"},{chainId:"5",aTokenAddress:"0x935c0F6019b05C787573B5e6176681282A3f3E05",stableDebtTokenAddress:"0x82f69F0aa86BC4A2daD63b2DA13A43548F15dE23",variableDebtTokenAddress:"0xcfc2d9b9498cBd6F71E5E46d46082C76C4F6C695",underlyingAssetAddress:"0x9FD21bE27A2B059a288229361E2fA632D8D2d074",aTokenSymbol:"aUSDC"},{chainId:"5",aTokenAddress:"0xDCb84F51dd4BeA1ce4b6118F087B260a71BB656c",stableDebtTokenAddress:"0xe92E940B939a6108C9C4dE3aF29A55286Cd6cC92",variableDebtTokenAddress:"0x5684765693E499E40BB90d36f8BdEf69B755D740",underlyingAssetAddress:"0x65E2fe35C30eC218b46266F89847c63c2eDa7Dc7",aTokenSymbol:"aUSDT"},{chainId:"5",aTokenAddress:"0x2f8274ce7fB939014e657e480e9ed3e1131f242B",stableDebtTokenAddress:"0x5744FE36A565637C10911f020779a048fA9ac5d4",variableDebtTokenAddress:"0xdb2276bAC9F27A7AF8d608fFE21036303aa3486A",underlyingAssetAddress:"0xf4423F4152966eBb106261740da907662A3569C5",aTokenSymbol:"aWBTC"},{chainId:"5",aTokenAddress:"0x22404B0e2a7067068AcdaDd8f9D586F834cCe2c5",stableDebtTokenAddress:"0x2D9038076C16F152B6Ab5391644DB8e3E88C3723",variableDebtTokenAddress:"0xE3F7fEe1F71F1227007575931B62B94076549989",underlyingAssetAddress:"0xCCa7d1416518D095E729904aAeA087dBA749A4dC",aTokenSymbol:"aWETH"},{chainId:"5",aTokenAddress:"0xAF299560160896eF72219F0e2Ea67d4653cE8251",stableDebtTokenAddress:"0x4D6f1069B958ea197A1e38151e15bB33f403f78F",variableDebtTokenAddress:"0xcCef241f5aa65f7344928cF460b7c7703fC8873d",underlyingAssetAddress:"0x6c260F702B6Bb9AC989DA4B0fcbE7fddF8f749c4",aTokenSymbol:"aYFI"},{chainId:"5",aTokenAddress:"0x22af6D8C0cD02a4EbdF6f79B6181DcC565f0b18e",stableDebtTokenAddress:"0x1d5094E61854380D458400e1B3f8b323CC87fD6C",variableDebtTokenAddress:"0x97431382542b21fe7a2D293737799f5B7afbF0a9",underlyingAssetAddress:"0xAcFd03DdF9C68015E1943FB02b60c5df56C4CB9e",aTokenSymbol:"aZRX"},{chainId:"5",aTokenAddress:"0x8C1d95Ed70e16664b0CFF72c31a536a68474A4eA",stableDebtTokenAddress:"0xD97DfD88bA230fE7947683B5b5af280FAF6a2E87",variableDebtTokenAddress:"0x710F5Ae6370ebb29c4aF779a5cB22C84C46b682c",underlyingAssetAddress:"0x45E18E77b15A02a31507e948A546a509A50a2376",aTokenSymbol:"axSUSHI"}];var aTokensMainnet=[{aTokenAddress:"0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811",aTokenSymbol:"aUSDT",stableDebtTokenAddress:"0xe91D55AB2240594855aBd11b3faAE801Fd4c4687",variableDebtTokenAddress:"0x531842cEbbdD378f8ee36D171d6cC9C4fcf475Ec",underlyingAssetAddress:"0xdAC17F958D2ee523a2206206994597C13D831ec7",decimals:6,chainId:"1"},{aTokenAddress:"0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656",aTokenSymbol:"aWBTC",stableDebtTokenAddress:"0x51B039b9AFE64B78758f8Ef091211b5387eA717c",variableDebtTokenAddress:"0x9c39809Dec7F95F5e0713634a4D0701329B3b4d2",underlyingAssetAddress:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",decimals:8,chainId:"1"},{aTokenAddress:"0x030bA81f1c18d280636F32af80b9AAd02Cf0854e",aTokenSymbol:"aWETH",stableDebtTokenAddress:"0x4e977830ba4bd783C0BB7F15d3e243f73FF57121",variableDebtTokenAddress:"0xF63B34710400CAd3e044cFfDcAb00a0f32E33eCf",underlyingAssetAddress:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",decimals:18,chainId:"1"},{aTokenAddress:"0x5165d24277cD063F5ac44Efd447B27025e888f37",aTokenSymbol:"aYFI",stableDebtTokenAddress:"0xca823F78C2Dd38993284bb42Ba9b14152082F7BD",variableDebtTokenAddress:"0x7EbD09022Be45AD993BAA1CEc61166Fcc8644d97",underlyingAssetAddress:"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",decimals:18,chainId:"1"},{aTokenAddress:"0xDf7FF54aAcAcbFf42dfe29DD6144A69b629f8C9e",aTokenSymbol:"aZRX",stableDebtTokenAddress:"0x071B4323a24E73A5afeEbe34118Cd21B8FAAF7C3",variableDebtTokenAddress:"0x85791D117A392097590bDeD3bD5abB8d5A20491A",underlyingAssetAddress:"0xE41d2489571d322189246DaFA5ebDe1F4699F498",decimals:18,chainId:"1"},{aTokenAddress:"0xB9D7CB55f463405CDfBe4E90a6D2Df01C2B92BF1",aTokenSymbol:"aUNI",stableDebtTokenAddress:"0xD939F7430dC8D5a427f156dE1012A56C18AcB6Aa",variableDebtTokenAddress:"0x5BdB050A92CADcCfCDcCCBFC17204a1C9cC0Ab73",underlyingAssetAddress:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",decimals:18,chainId:"1"},{aTokenAddress:"0xFFC97d72E13E01096502Cb8Eb52dEe56f74DAD7B",aTokenSymbol:"aAAVE",stableDebtTokenAddress:"0x079D6a3E844BcECf5720478A718Edb6575362C5f",variableDebtTokenAddress:"0xF7DBA49d571745D9d7fcb56225B05BEA803EBf3C",underlyingAssetAddress:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",decimals:18,chainId:"1"},{aTokenAddress:"0x05Ec93c0365baAeAbF7AefFb0972ea7ECdD39CF1",aTokenSymbol:"aBAT",stableDebtTokenAddress:"0x277f8676FAcf4dAA5a6EA38ba511B7F65AA02f9F",variableDebtTokenAddress:"0xfc218A6Dfe6901CB34B1a5281FC6f1b8e7E56877",underlyingAssetAddress:"0x0D8775F648430679A709E98d2b0Cb6250d2887EF",decimals:18,chainId:"1"},{aTokenAddress:"0xA361718326c15715591c299427c62086F69923D9",aTokenSymbol:"aBUSD",stableDebtTokenAddress:"0x4A7A63909A72D268b1D8a93a9395d098688e0e5C",variableDebtTokenAddress:"0xbA429f7011c9fa04cDd46a2Da24dc0FF0aC6099c",underlyingAssetAddress:"0x4Fabb145d64652a948d72533023f6E7A623C7C53",decimals:18,chainId:"1"},{aTokenAddress:"0x028171bCA77440897B824Ca71D1c56caC55b68A3",aTokenSymbol:"aDAI",stableDebtTokenAddress:"0x778A13D3eeb110A4f7bb6529F99c000119a08E92",variableDebtTokenAddress:"0x6C3c78838c761c6Ac7bE9F59fe808ea2A6E4379d",underlyingAssetAddress:"0x6B175474E89094C44Da98b954EedeAC495271d0F",decimals:18,chainId:"1"},{aTokenAddress:"0xaC6Df26a590F08dcC95D5a4705ae8abbc88509Ef",aTokenSymbol:"aENJ",stableDebtTokenAddress:"0x943DcCA156b5312Aa24c1a08769D67FEce4ac14C",variableDebtTokenAddress:"0x38995F292a6E31b78203254fE1cdd5Ca1010A446",underlyingAssetAddress:"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c",decimals:18,chainId:"1"},{aTokenAddress:"0x39C6b3e42d6A679d7D776778Fe880BC9487C2EDA",aTokenSymbol:"aKNC",stableDebtTokenAddress:"0x9915dfb872778B2890a117DA1F35F335eb06B54f",variableDebtTokenAddress:"0x6B05D1c608015Ccb8e205A690cB86773A96F39f1",underlyingAssetAddress:"0xdd974D5C2e2928deA5F71b9825b8b646686BD200",decimals:18,chainId:"1"},{aTokenAddress:"0xa06bC25B5805d5F8d82847D191Cb4Af5A3e873E0",aTokenSymbol:"aLINK",stableDebtTokenAddress:"0xFB4AEc4Cc858F2539EBd3D37f2a43eAe5b15b98a",variableDebtTokenAddress:"0x0b8f12b1788BFdE65Aa1ca52E3e9F3Ba401be16D",underlyingAssetAddress:"0x514910771AF9Ca656af840dff83E8264EcF986CA",decimals:18,chainId:"1"},{aTokenAddress:"0xa685a61171bb30d4072B338c80Cb7b2c865c873E",aTokenSymbol:"aMANA",stableDebtTokenAddress:"0xD86C74eA2224f4B8591560652b50035E4e5c0a3b",variableDebtTokenAddress:"0x0A68976301e46Ca6Ce7410DB28883E309EA0D352",underlyingAssetAddress:"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942",decimals:18,chainId:"1"},{aTokenAddress:"0xc713e5E149D5D0715DcD1c156a020976e7E56B88",aTokenSymbol:"aMKR",stableDebtTokenAddress:"0xC01C8E4b12a89456a9fD4e4e75B72546Bf53f0B5",variableDebtTokenAddress:"0xba728eAd5e496BE00DCF66F650b6d7758eCB50f8",underlyingAssetAddress:"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2",decimals:18,chainId:"1"},{aTokenAddress:"0xCC12AbE4ff81c9378D670De1b57F8e0Dd228D77a",aTokenSymbol:"aREN",stableDebtTokenAddress:"0x3356Ec1eFA75d9D150Da1EC7d944D9EDf73703B7",variableDebtTokenAddress:"0xcd9D82d33bd737De215cDac57FE2F7f04DF77FE0",underlyingAssetAddress:"0x408e41876cCCDC0F92210600ef50372656052a38",decimals:18,chainId:"1"},{aTokenAddress:"0x35f6B052C598d933D69A4EEC4D04c73A191fE6c2",aTokenSymbol:"aSNX",stableDebtTokenAddress:"0x8575c8ae70bDB71606A53AeA1c6789cB0fBF3166",variableDebtTokenAddress:"0x267EB8Cf715455517F9BD5834AeAE3CeA1EBdbD8",underlyingAssetAddress:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F",decimals:18,chainId:"1"},{aTokenAddress:"0x6C5024Cd4F8A59110119C56f8933403A539555EB",aTokenSymbol:"aSUSD",stableDebtTokenAddress:"0x30B0f7324feDF89d8eff397275F8983397eFe4af",variableDebtTokenAddress:"0xdC6a3Ab17299D9C2A412B0e0a4C1f55446AE0817",underlyingAssetAddress:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",decimals:18,chainId:"1"},{aTokenAddress:"0x101cc05f4A51C0319f570d5E146a8C625198e636",aTokenSymbol:"aTUSD",stableDebtTokenAddress:"0x7f38d60D94652072b2C44a18c0e14A481EC3C0dd",variableDebtTokenAddress:"0x01C0eb1f8c6F1C1bF74ae028697ce7AA2a8b0E92",underlyingAssetAddress:"0x0000000000085d4780B73119b644AE5ecd22b376",decimals:18,chainId:"1"},{aTokenAddress:"0xBcca60bB61934080951369a648Fb03DF4F96263C",aTokenSymbol:"aUSDC",stableDebtTokenAddress:"0xE4922afAB0BbaDd8ab2a88E0C79d884Ad337fcA6",variableDebtTokenAddress:"0x619beb58998eD2278e08620f97007e1116D5D25b",underlyingAssetAddress:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",decimals:6,chainId:"1"},{aTokenAddress:"0x8dAE6Cb04688C62d939ed9B68d32Bc62e49970b1",aTokenSymbol:"aCRV",stableDebtTokenAddress:"0x9288059a74f589C919c7Cf1Db433251CdFEB874B",variableDebtTokenAddress:"0x00ad8eBF64F141f1C81e9f8f792d3d1631c6c684",underlyingAssetAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",decimals:18,chainId:"1"},{aTokenAddress:"0xD37EE7e4f452C6638c96536e68090De8cBcdb583",aTokenSymbol:"aGUSD",stableDebtTokenAddress:"0xf8aC64ec6Ff8E0028b37EB89772d21865321bCe0",variableDebtTokenAddress:"0x279AF5b99540c1A3A7E3CDd326e19659401eF99e",underlyingAssetAddress:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",decimals:2,chainId:"1"},{aTokenAddress:"0x272F97b7a56a387aE942350bBC7Df5700f8a4576",aTokenSymbol:"aBAL",stableDebtTokenAddress:"0xe569d31590307d05DA3812964F1eDd551D665a0b",variableDebtTokenAddress:"0x13210D4Fe0d5402bd7Ecbc4B5bC5cFcA3b71adB0",underlyingAssetAddress:"0xba100000625a3754423978a60c9317c58a424e3D",decimals:18,chainId:"1"},{aTokenAddress:"0xF256CC7847E919FAc9B808cC216cAc87CCF2f47a",aTokenSymbol:"aXSUSHI",stableDebtTokenAddress:"0x73Bfb81D7dbA75C904f430eA8BAe82DB0D41187B",variableDebtTokenAddress:"0xfAFEDF95E21184E3d880bd56D4806c4b8d31c69A",underlyingAssetAddress:"0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272",decimals:18,chainId:"1"},{aTokenAddress:"0x514cd6756CCBe28772d4Cb81bC3156BA9d1744aa",aTokenSymbol:"aRENFIL",stableDebtTokenAddress:"0xcAad05C49E14075077915cB5C820EB3245aFb950",variableDebtTokenAddress:"0x348e2eBD5E962854871874E444F4122399c02755",underlyingAssetAddress:"0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5",decimals:18,chainId:"1"},{aTokenAddress:"0xc9BC48c72154ef3e5425641a3c747242112a46AF",aTokenSymbol:"aRAI",stableDebtTokenAddress:"0x9C72B8476C33AE214ee3e8C20F0bc28496a62032",variableDebtTokenAddress:"0xB5385132EE8321977FfF44b60cDE9fE9AB0B4e6b",underlyingAssetAddress:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",decimals:18,chainId:"1"},{aTokenAddress:"0x1E6bb68Acec8fefBD87D192bE09bb274170a0548",aTokenSymbol:"aAMPL",stableDebtTokenAddress:"0x18152C9f77DAdc737006e9430dB913159645fa87",variableDebtTokenAddress:"0xf013D90E4e4E3Baf420dFea60735e75dbd42f1e1",underlyingAssetAddress:"0xD46bA6D942050d489DBd938a2C909A5d5039A161",decimals:9,chainId:"1"},{aTokenAddress:"0x2e8F4bdbE3d47d7d7DE490437AeA9915D930F1A3",aTokenSymbol:"aUSDP",stableDebtTokenAddress:"0x2387119bc85A74e0BBcbe190d80676CB16F10D4F",variableDebtTokenAddress:"0xFDb93B3b10936cf81FA59A02A7523B6e2149b2B7",underlyingAssetAddress:"0x8E870D67F660D95d5be530380D0eC0bd388289E1",decimals:18,chainId:"1"},{aTokenAddress:"0x6F634c6135D2EBD550000ac92F494F9CB8183dAe",aTokenSymbol:"aDPI",stableDebtTokenAddress:"0xa3953F07f389d719F99FC378ebDb9276177d8A6e",variableDebtTokenAddress:"0x4dDff5885a67E4EffeC55875a3977D7E60F82ae0",underlyingAssetAddress:"0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b",decimals:18,chainId:"1"},{aTokenAddress:"0xd4937682df3C8aEF4FE912A96A74121C0829E664",aTokenSymbol:"aFRAX",stableDebtTokenAddress:"0x3916e3B6c84b161df1b2733dFfc9569a1dA710c2",variableDebtTokenAddress:"0xfE8F19B17fFeF0fDbfe2671F248903055AFAA8Ca",underlyingAssetAddress:"0x853d955aCEf822Db058eb8505911ED77F175b99e",decimals:18,chainId:"1"},{aTokenAddress:"0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3",aTokenSymbol:"aFEI",stableDebtTokenAddress:"0xd89cF9E8A858F8B4b31Faf793505e112d6c17449",variableDebtTokenAddress:"0xC2e10006AccAb7B45D9184FcF5b7EC7763f5BaAe",underlyingAssetAddress:"0x956F47F50A910163D8BF957Cf5846D573E7f87CA",decimals:18,chainId:"1"}];var LENDING_POOL_ADDRESSES$1=[{address:"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9",chainId:1},{address:"0x4bd5643ac6f66a5237E18bfA7d47cF22f1c9F210",chainId:5}];var PROTOCOL_DATA_PROVIDER_ADDRESSES$1=[{address:"0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d",chainId:1},{address:"0x927F584d4321C1dCcBf5e2902368124b02419a1E",chainId:5}];var PRICE_ORACLE_ADDRESSES$1=[{address:"0xa50ba011c48153de246e5192c8f9258a2ba79ca9",chainId:1},{address:"0xc1c6f3b788FE7F4bB896a2Fad65F5a8c0Ad509C9",chainId:5}];var A_TOKENS$1={1:aTokensMainnet,5:aTokensGoerli,42161:[],421613:[],11155111:[]};var curvePoolsMainnet=[{id:"0",address:"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7",coinsAddresses:["0x6B175474E89094C44Da98b954EedeAC495271d0F","0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xdAC17F958D2ee523a2206206994597C13D831ec7","0x0000000000000000000000000000000000000000"],decimals:["18","6","6","0"],virtualPrice:"1022642939362272111",amplificationCoefficient:"2000",assetType:"0",totalSupply:"651442782983255959409817577",lpTokenAddress:"0x6c3f90f043a72fa612cbac8115ee7e52bde6e490",name:"Curve.fi DAI/USDC/USDT",symbol:"3Crv",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/3pool/swap","https://classic.curve.fi/3pool"],deposit:["https://curve.fi/#/ethereum/pools/3pool/deposit","https://classic.curve.fi/3pool/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/3pool/withdraw","https://classic.curve.fi/3pool/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"113635737362494352895490433"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"111974333596757"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"440689089779868"}],usdTotal:667080757.0409865,isMetaPool:false,usdTotalExcludingBasePool:667080757.0409865,gaugeAddress:"0xbfcf63294ad7105dea65aa58f8ae5be2d9d0952a",chainId:1},{id:"1",address:"0xDeBF20617708857ebe4F679508E7b7863a8A8EeE",coinsAddresses:["0x028171bCA77440897B824Ca71D1c56caC55b68A3","0xBcca60bB61934080951369a648Fb03DF4F96263C","0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811","0x0000000000000000000000000000000000000000"],decimals:["18","6","6","0"],virtualPrice:"1099575046205757809",amplificationCoefficient:"2000",assetType:"0",totalSupply:"23212121087549835303110807",lpTokenAddress:"0xFd2a8fA60Abd58Efe3EeE34dd494cD491dC14900",name:"Curve.fi aDAI/aUSDC/aUSDT",symbol:"a3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/aave/swap","https://classic.curve.fi/aave"],deposit:["https://curve.fi/#/ethereum/pools/aave/deposit","https://classic.curve.fi/aave/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/aave/withdraw","https://classic.curve.fi/aave/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x028171bCA77440897B824Ca71D1c56caC55b68A3",usdPrice:.999324,decimals:"18",isBasePoolLpToken:false,symbol:"aDAI",poolBalance:"4557975897830465823202232"},{address:"0xBcca60bB61934080951369a648Fb03DF4F96263C",usdPrice:1.006,decimals:"6",isBasePoolLpToken:false,symbol:"aUSDC",poolBalance:"4487185092213"},{address:"0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811",usdPrice:1.003,decimals:"6",isBasePoolLpToken:false,symbol:"aUSDT",poolBalance:"16481825729628"}],usdTotal:25600274.115706693,isMetaPool:false,usdTotalExcludingBasePool:25600274.115706693,gaugeAddress:"0xd662908ada2ea1916b3318327a97eb18ad588b5d",chainId:1},{id:"2",address:"0xA96A65c051bF88B4095Ee1f2451C2A9d43F53Ae2",coinsAddresses:["0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE","0xE95A203B1a91a908F9B9CE46459d101078c2c3cb","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1056036356962788484",amplificationCoefficient:"10",assetType:"1",totalSupply:"3368980637711626609973",lpTokenAddress:"0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf",name:"Curve.fi ETH/aETH",symbol:"ankrCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/ankreth/swap","https://classic.curve.fi/ankreth"],deposit:["https://curve.fi/#/ethereum/pools/ankreth/deposit","https://classic.curve.fi/ankreth/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/ankreth/withdraw","https://classic.curve.fi/ankreth/withdraw"]},implementation:"",assetTypeName:"eth",coins:[{address:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",usdPrice:1123.52,poolBalance:"1096225692508289822139",decimals:18,symbol:"ETH",isBasePoolLpToken:false},{address:"0xE95A203B1a91a908F9B9CE46459d101078c2c3cb",usdPrice:1116.6669056335165,decimals:"18",isBasePoolLpToken:false,symbol:"aETHс",poolBalance:"2281978121818565631595"}],usdTotal:3779840.938061435,isMetaPool:false,usdTotalExcludingBasePool:3779840.938061435,gaugeAddress:"0x6d10ed2cf043e6fcf51a0e7b4c2af3fa06695707",chainId:1},{id:"3",address:"0x79a8C46DeA5aDa233ABaFFD40F3A0A2B1e5A4F27",coinsAddresses:["0xC2cB1040220768554cf699b0d863A3cd4324ce32","0x26EA744E5B887E5205727f55dFBE8685e3b21951","0xE6354ed5bC4b393a5Aad09f21c46E101e692d447","0x04bC0Ab673d88aE9dbC9DA2380cB6B79C4BCa9aE"],decimals:["18","6","6","18"],virtualPrice:"1136855533552108225",amplificationCoefficient:"500",assetType:"0",totalSupply:"5490851132414858773155044",lpTokenAddress:"0x3b3ac5386837dc563660fb6a0937dfaa5924333b",name:"Curve.fi yDAI/yUSDC/yUSDT/yBUSD",symbol:"yDAI+yUSDC+yUSDT+yBUSD",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/busd/swap","https://classic.curve.fi/busd"],deposit:["https://curve.fi/#/ethereum/pools/busd/deposit","https://classic.curve.fi/busd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/busd/withdraw","https://classic.curve.fi/busd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xC2cB1040220768554cf699b0d863A3cd4324ce32",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"yDAI",poolBalance:"1230708493548875636789969"},{address:"0x26EA744E5B887E5205727f55dFBE8685e3b21951",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"yUSDC",poolBalance:"1171567248324"},{address:"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"yUSDT",poolBalance:"2169162385269"},{address:"0x04bC0Ab673d88aE9dbC9DA2380cB6B79C4BCa9aE",usdPrice:1.002,decimals:"18",isBasePoolLpToken:false,symbol:"yBUSD",poolBalance:"1151165413980996805946921"}],usdTotal:5730767.159816749,isMetaPool:false,usdTotalExcludingBasePool:5730767.159816749,gaugeAddress:"0x69fb7c45726cfe2badee8317005d3f94be838840",chainId:1},{id:"4",address:"0xA2B47E3D5c44877cca798226B7B8118F9BFb7A56",coinsAddresses:["0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643","0x39AA39c021dfbaE8faC545936693aC917d5E7563","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["8","8","0","0"],virtualPrice:"1111148996715455722",amplificationCoefficient:"4500",assetType:"0",totalSupply:"39662048524143180441957848",lpTokenAddress:"0x845838df265dcd2c412a1dc9e959c7d08537f8a2",name:"Curve.fi cDAI/cUSDC",symbol:"cDAI+cUSDC",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/compound/swap","https://classic.curve.fi/compound"],deposit:["https://curve.fi/#/ethereum/pools/compound/deposit","https://classic.curve.fi/compound/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/compound/withdraw","https://classic.curve.fi/compound/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643",usdPrice:.02213429,decimals:"8",isBasePoolLpToken:false,symbol:"cDAI",poolBalance:"138663815249723320"},{address:"0x39AA39c021dfbaE8faC545936693aC917d5E7563",usdPrice:.0227057174630131,decimals:"8",isBasePoolLpToken:false,symbol:"cUSDC",poolBalance:"59175627718671731"}],usdTotal:44128501.82920405,isMetaPool:false,usdTotalExcludingBasePool:44128501.82920405,gaugeAddress:"0x7ca5b0a2910b33e9759dc7ddb0413949071d7575",chainId:1},{id:"5",address:"0x0Ce6a5fF5217e38315f87032CF90686C96627CAA",coinsAddresses:["0xdB25f211AB05b1c97D595516F45794528a807ad8","0xD71eCFF9342A5Ced620049e616c5035F1dB98620","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["2","18","0","0"],virtualPrice:"1004837642495550352",amplificationCoefficient:"100",assetType:"3",totalSupply:"5573105388686742935562589",lpTokenAddress:"0x194eBd173F6cDacE046C53eACcE9B953F28411d1",name:"Curve.fi EURS/sEUR",symbol:"eursCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/eurs/swap","https://classic.curve.fi/eurs"],deposit:["https://curve.fi/#/ethereum/pools/eurs/deposit","https://classic.curve.fi/eurs/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/eurs/withdraw","https://classic.curve.fi/eurs/withdraw"]},implementation:"",assetTypeName:"other",coins:[{address:"0xdB25f211AB05b1c97D595516F45794528a807ad8",usdPrice:1.017,decimals:"2",isBasePoolLpToken:false,symbol:"EURS",poolBalance:"396382834"},{address:"0xD71eCFF9342A5Ced620049e616c5035F1dB98620",usdPrice:1.02717,decimals:"18",isBasePoolLpToken:false,symbol:"sEUR",poolBalance:"1641966934529021777927302"}],usdTotal:5717792.597920175,isMetaPool:false,usdTotalExcludingBasePool:5717792.597920175,gaugeAddress:"0x90bb609649e0451e5ad952683d64bd2d1f245840",chainId:1},{id:"6",address:"0x4CA9b3063Ec5866A4B82E437059D2C43d1be596F",coinsAddresses:["0x0316EB71485b0Ab14103307bf65a021042c6d380","0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","8","0","0"],virtualPrice:"1010006218529448406",amplificationCoefficient:"1000",assetType:"2",totalSupply:"225388172852452189282",lpTokenAddress:"0xb19059ebb43466c323583928285a49f558e572fd",name:"Curve.fi hBTC/wBTC",symbol:"hCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/hbtc/swap","https://classic.curve.fi/hbtc"],deposit:["https://curve.fi/#/ethereum/pools/hbtc/deposit","https://classic.curve.fi/hbtc/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/hbtc/withdraw","https://classic.curve.fi/hbtc/withdraw"]},implementation:"",assetTypeName:"btc",coins:[{address:"0x0316EB71485b0Ab14103307bf65a021042c6d380",usdPrice:16057.268741659198,decimals:"18",isBasePoolLpToken:false,symbol:"HBTC",poolBalance:"32812283975107019101"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"19494787680"}],usdTotal:3640840.481262907,isMetaPool:false,usdTotalExcludingBasePool:3640840.481262907,gaugeAddress:"0x4c18e409dc8619bfb6a1cb56d114c3f592e0ae79",chainId:1},{id:"7",address:"0x2dded6Da1BF5DBdF597C45fcFaa3194e53EcfeAF",coinsAddresses:["0x8e595470Ed749b85C6F7669de83EAe304C2ec68F","0x76Eb2FE28b36B3ee97F3Adae0C69606eeDB2A37c","0x48759F220ED983dB51fA7A8C0D2AAb8f3ce4166a","0x0000000000000000000000000000000000000000"],decimals:["8","8","8","0"],virtualPrice:"1058229665334902942",amplificationCoefficient:"6000",assetType:"0",totalSupply:"9907283395156475493753582",lpTokenAddress:"0x5282a4eF67D9C33135340fB3289cc1711c13638C",name:"Curve.fi cyDAI/cyUSDC/cyUSDT",symbol:"ib3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/ib/swap","https://classic.curve.fi/ib"],deposit:["https://curve.fi/#/ethereum/pools/ib/deposit","https://classic.curve.fi/ib/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/ib/withdraw","https://classic.curve.fi/ib/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x8e595470Ed749b85C6F7669de83EAe304C2ec68F",usdPrice:.010616448941327605,decimals:"8",isBasePoolLpToken:false,symbol:"iDAI",poolBalance:"21694742141372529"},{address:"0x76Eb2FE28b36B3ee97F3Adae0C69606eeDB2A37c",usdPrice:.010641916333184938,decimals:"8",isBasePoolLpToken:false,symbol:"iUSDC",poolBalance:"9871560122148747"},{address:"0x48759F220ED983dB51fA7A8C0D2AAb8f3ce4166a",usdPrice:.010779834973995588,decimals:"8",isBasePoolLpToken:false,symbol:"iUSDT",poolBalance:"66303388719338446"}],usdTotal:10501130.277482107,isMetaPool:false,usdTotalExcludingBasePool:10501130.277482107,gaugeAddress:"0xf5194c3325202f456c95c1cf0ca36f8475c1949f",chainId:1},{id:"8",address:"0xF178C0b5Bb7e7aBF4e12A4838C7b7c5bA2C623c0",coinsAddresses:["0x514910771AF9Ca656af840dff83E8264EcF986CA","0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1002724224498611053",amplificationCoefficient:"100",assetType:"3",totalSupply:"319578402792083636685957",lpTokenAddress:"0xcee60cFa923170e4f8204AE08B4fA6A3F5656F3a",name:"Curve.fi LINK/sLINK",symbol:"linkCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/link/swap","https://classic.curve.fi/link"],deposit:["https://curve.fi/#/ethereum/pools/link/deposit","https://classic.curve.fi/link/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/link/withdraw","https://classic.curve.fi/link/withdraw"]},implementation:"",assetTypeName:"other",coins:[{address:"0x514910771AF9Ca656af840dff83E8264EcF986CA",usdPrice:5.76,decimals:"18",isBasePoolLpToken:false,symbol:"LINK",poolBalance:"192181361362023116863687"},{address:"0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6",usdPrice:5.782340681035073,decimals:"18",isBasePoolLpToken:false,symbol:"sLINK",poolBalance:"128333171441493002280341"}],usdTotal:1849030.7593976464,isMetaPool:false,usdTotalExcludingBasePool:1849030.7593976464,gaugeAddress:"0xfd4d8a17df4c27c1dd245d153ccf4499e806c87d",chainId:1},{id:"9",address:"0x06364f10B501e868329afBc005b3492902d6C763",coinsAddresses:["0x99d1Fa417f94dcD62BfE781a1213c092a47041Bc","0x9777d7E2b60bB01759D0E2f8be2095df444cb07E","0x1bE5d71F2dA660BFdee8012dDc58D024448A0A59","0x8E870D67F660D95d5be530380D0eC0bd388289E1"],decimals:["18","6","6","18"],virtualPrice:"1039859318423721237",amplificationCoefficient:"200",assetType:"0",totalSupply:"301032995077683932361470",lpTokenAddress:"0xd905e2eaebe188fc92179b6350807d8bd91db0d8",name:"Curve.fi DAI/USDC/USDT/PAX",symbol:"ypaxCrv",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/pax/swap","https://classic.curve.fi/pax"],deposit:["https://curve.fi/#/ethereum/pools/pax/deposit","https://classic.curve.fi/pax/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/pax/withdraw","https://classic.curve.fi/pax/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x99d1Fa417f94dcD62BfE781a1213c092a47041Bc",usdPrice:1.0179785763336944,decimals:"18",isBasePoolLpToken:false,symbol:"ycDAI",poolBalance:"66528454341895561932684"},{address:"0x9777d7E2b60bB01759D0E2f8be2095df444cb07E",usdPrice:1.0257646634112652,decimals:"6",isBasePoolLpToken:false,symbol:"ycUSDC",poolBalance:"70582422328"},{address:"0x1bE5d71F2dA660BFdee8012dDc58D024448A0A59",usdPrice:1.0112281533049012,decimals:"6",isBasePoolLpToken:false,symbol:"ycUSDT",poolBalance:"95390153697"},{address:"0x8E870D67F660D95d5be530380D0eC0bd388289E1",usdPrice:.9981,decimals:"18",isBasePoolLpToken:false,symbol:"USDP",poolBalance:"75863744881027850501065"}],usdTotal:312306.30865091865,isMetaPool:false,usdTotalExcludingBasePool:312306.30865091865,gaugeAddress:"0x64e3c23bfc40722d3b649844055f1d51c1ac041d",chainId:1},{id:"10",address:"0x93054188d876f558f4a66B2EF1d97d16eDf0895B",coinsAddresses:["0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D","0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["8","8","0","0"],virtualPrice:"1023346299364298924",amplificationCoefficient:"1000",assetType:"2",totalSupply:"964041469231153417338",lpTokenAddress:"0x49849c98ae39fff122806c06791fa73784fb3675",name:"Curve.fi renBTC/wBTC",symbol:"crvRenWBTC",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/ren/swap","https://classic.curve.fi/ren"],deposit:["https://curve.fi/#/ethereum/pools/ren/deposit","https://classic.curve.fi/ren/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/ren/withdraw","https://classic.curve.fi/ren/withdraw"]},implementation:"",assetTypeName:"btc",coins:[{address:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",usdPrice:16236.763813696798,decimals:"8",isBasePoolLpToken:false,symbol:"renBTC",poolBalance:"8385787354"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"90378076823"}],usdTotal:15797959.907371458,isMetaPool:false,usdTotalExcludingBasePool:15797959.907371458,gaugeAddress:"0xb1f2cdec61db658f091671f5f199635aef202cac",chainId:1},{id:"11",address:"0xEB16Ae0052ed37f479f7fe63849198Df1765a733",coinsAddresses:["0x028171bCA77440897B824Ca71D1c56caC55b68A3","0x6C5024Cd4F8A59110119C56f8933403A539555EB","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1081409022369385247",amplificationCoefficient:"100",assetType:"0",totalSupply:"1729253218535941585335520",lpTokenAddress:"0x02d341CcB60fAaf662bC0554d13778015d1b285C",name:"Curve.fi aDAI/aSUSD",symbol:"saCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/saave/swap","https://classic.curve.fi/saave"],deposit:["https://curve.fi/#/ethereum/pools/saave/deposit","https://classic.curve.fi/saave/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/saave/withdraw","https://classic.curve.fi/saave/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x028171bCA77440897B824Ca71D1c56caC55b68A3",usdPrice:.999324,decimals:"18",isBasePoolLpToken:false,symbol:"aDAI",poolBalance:"1118864135903744092634932"},{address:"0x6C5024Cd4F8A59110119C56f8933403A539555EB",usdPrice:1.0031219688221868,decimals:"18",isBasePoolLpToken:false,symbol:"aSUSD",poolBalance:"751537138123592851186395"}],usdTotal:1871991.1973854033,isMetaPool:false,usdTotalExcludingBasePool:1871991.1973854033,gaugeAddress:"0x462253b8f74b72304c145db0e4eebd326b22ca39",chainId:1},{id:"12",address:"0x7fC77b5c7614E1533320Ea6DDc2Eb61fa00A9714",coinsAddresses:["0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D","0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6","0x0000000000000000000000000000000000000000"],decimals:["8","8","18","0"],virtualPrice:"1016021260928825566",amplificationCoefficient:"100",assetType:"2",totalSupply:"1082717368161550146980",lpTokenAddress:"0x075b1bb99792c9e1041ba13afef80c91a1e70fb3",name:"Curve.fi renBTC/wBTC/sBTC",symbol:"crvRenWSBTC",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/sbtc/swap","https://classic.curve.fi/sbtc"],deposit:["https://curve.fi/#/ethereum/pools/sbtc/deposit","https://classic.curve.fi/sbtc/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/sbtc/withdraw","https://classic.curve.fi/sbtc/withdraw"]},implementation:"",assetTypeName:"btc",coins:[{address:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",usdPrice:16236.763813696798,decimals:"8",isBasePoolLpToken:false,symbol:"renBTC",poolBalance:"19078306409"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"55216276001"},{address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",usdPrice:16042.888085908799,decimals:"18",isBasePoolLpToken:false,symbol:"sBTC",poolBalance:"358241909191020078591"}],usdTotal:17664806.86583948,isMetaPool:false,usdTotalExcludingBasePool:17664806.86583948,gaugeAddress:"0x705350c4bcd35c9441419ddd5d2f097d7a55410f",chainId:1},{id:"13",address:"0xc5424B857f758E906013F3555Dad202e4bdB4567",coinsAddresses:["0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE","0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1016127724272466456",amplificationCoefficient:"256",assetType:"1",totalSupply:"13918788959118470156294",lpTokenAddress:"0xa3d87fffce63b53e0d54faa1cc983b7eb0b74a9c",name:"Curve.fi ETH/sETH",symbol:"eCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/seth/swap","https://classic.curve.fi/seth"],deposit:["https://curve.fi/#/ethereum/pools/seth/deposit","https://classic.curve.fi/seth/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/seth/withdraw","https://classic.curve.fi/seth/withdraw"]},implementation:"",assetTypeName:"eth",coins:[{address:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",usdPrice:1123.52,poolBalance:"10041307681756591784598",decimals:18,symbol:"ETH",isBasePoolLpToken:false},{address:"0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb",usdPrice:1128.4613471407768,decimals:"18",isBasePoolLpToken:false,symbol:"sETH",poolBalance:"4107826238702924972573"}],usdTotal:15917133.137754096,isMetaPool:false,usdTotalExcludingBasePool:15917133.137754096,gaugeAddress:"0x3c0ffff15ea30c35d7a85b85c0782d6c94e1d238",chainId:1},{id:"14",address:"0xDC24316b9AE028F1497c275EB9192a3Ea0f67022",coinsAddresses:["0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE","0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1057526487141361750",amplificationCoefficient:"50",assetType:"1",totalSupply:"678731450953530787116292",lpTokenAddress:"0x06325440D014e39736583c165C2963BA99fAf14E",name:"Curve.fi ETH/stETH",symbol:"steCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/steth/swap","https://classic.curve.fi/steth"],deposit:["https://curve.fi/#/ethereum/pools/steth/deposit","https://classic.curve.fi/steth/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/steth/withdraw","https://classic.curve.fi/steth/withdraw"]},implementation:"",assetTypeName:"eth",coins:[{address:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",usdPrice:1123.52,poolBalance:"246080388564346409368451",decimals:18,symbol:"ETH",isBasePoolLpToken:false},{address:"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",usdPrice:1106.2260202903078,decimals:"18",isBasePoolLpToken:false,symbol:"stETH",poolBalance:"472469969361839539422751"}],usdTotal:799134812.0736458,isMetaPool:false,usdTotalExcludingBasePool:799134812.0736458,gaugeAddress:"0x182b723a58739a9c974cfdb385ceadb237453c28",chainId:1},{id:"15",address:"0xA5407eAE9Ba41422680e2e00537571bcC53efBfD",coinsAddresses:["0x6B175474E89094C44Da98b954EedeAC495271d0F","0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xdAC17F958D2ee523a2206206994597C13D831ec7","0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],decimals:["18","6","6","18"],virtualPrice:"1058842402449106446",amplificationCoefficient:"100",assetType:"0",totalSupply:"54311661177548321976488148",lpTokenAddress:"0xc25a3a3b969415c80451098fa907ec722572917f",name:"Curve.fi DAI/USDC/USDT/sUSD",symbol:"crvPlain3andSUSD",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/susdv2/swap","https://classic.curve.fi/susdv2"],deposit:["https://curve.fi/#/ethereum/pools/susdv2/deposit","https://classic.curve.fi/susdv2/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/susdv2/withdraw","https://classic.curve.fi/susdv2/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"14604149751026679543955588"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"14932698961667"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"17100871974448"},{address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",usdPrice:1.0061236277506873,decimals:"18",isBasePoolLpToken:false,symbol:"sUSD",poolBalance:"10877413547827505178972700"}],usdTotal:57642656.78765389,isMetaPool:false,usdTotalExcludingBasePool:57642656.78765389,gaugeAddress:"0xa90996896660decc6e997655e065b23788857849",chainId:1},{id:"16",address:"0x52EA46506B9CC5Ef470C5bf89f17Dc28bB35D85C",coinsAddresses:["0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643","0x39AA39c021dfbaE8faC545936693aC917d5E7563","0xdAC17F958D2ee523a2206206994597C13D831ec7","0x0000000000000000000000000000000000000000"],decimals:["8","8","6","0"],virtualPrice:"2931296926145059371",amplificationCoefficient:"2000",assetType:"0",totalSupply:"143883891300111978016656",lpTokenAddress:"0x9fc689ccada600b6df723d9e47d84d76664a1f23",name:"Curve.fi cDAI/cUSDC/USDT",symbol:"cDAI+cUSDC+USDT",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/usdt/swap","https://classic.curve.fi/usdt"],deposit:["https://curve.fi/#/ethereum/pools/usdt/deposit","https://classic.curve.fi/usdt/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/usdt/withdraw","https://classic.curve.fi/usdt/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643",usdPrice:.02213429,decimals:"8",isBasePoolLpToken:false,symbol:"cDAI",poolBalance:"312529381882996"},{address:"0x39AA39c021dfbaE8faC545936693aC917d5E7563",usdPrice:.0227057174630131,decimals:"8",isBasePoolLpToken:false,symbol:"cUSDC",poolBalance:"336181117045820"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"276505208831"}],usdTotal:422290.2083614461,isMetaPool:false,usdTotalExcludingBasePool:422290.2083614461,gaugeAddress:"0xbc89cd85491d81c6ad2954e6d0362ee29fca8f53",chainId:1},{id:"17",address:"0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51",coinsAddresses:["0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01","0xd6aD7a6750A7593E092a9B218d66C0A814a3436e","0x83f798e925BcD4017Eb265844FDDAbb448f1707D","0x73a052500105205d34Daf004eAb301916DA8190f"],decimals:["18","6","6","18"],virtualPrice:"1142180819301074068",amplificationCoefficient:"2048",assetType:"0",totalSupply:"8779173860236240934727369",lpTokenAddress:"0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8",name:"Curve.fi yDAI/yUSDC/yUSDT/yTUSD",symbol:"yDAI+yUSDC+yUSDT+yTUSD",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/iearn/swap","https://classic.curve.fi/iearn"],deposit:["https://curve.fi/#/ethereum/pools/iearn/deposit","https://classic.curve.fi/iearn/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/iearn/withdraw","https://classic.curve.fi/iearn/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"yDAI",poolBalance:"1404093736534232082291630"},{address:"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"yUSDC",poolBalance:"1183790511046"},{address:"0x83f798e925BcD4017Eb265844FDDAbb448f1707D",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"yUSDT",poolBalance:"5081197367616"},{address:"0x73a052500105205d34Daf004eAb301916DA8190f",usdPrice:.9785544807351984,decimals:"18",isBasePoolLpToken:false,symbol:"yTUSD",poolBalance:"1285697872502557945550681"}],usdTotal:8936500.50778254,isMetaPool:false,usdTotalExcludingBasePool:8936500.50778254,gaugeAddress:"0xfa712ee4788c042e2b7bb55e6cb8ec569c4530c1",chainId:1},{id:"18",address:"0x8038C01A0390a8c547446a0b2c18fc9aEFEcc10c",coinsAddresses:["0x5BC25f649fc4e26069dDF4cF4010F9f706c23831","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1022279505146196552",amplificationCoefficient:"200",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"99739221631706136142093",lpTokenAddress:"0x3a664ab939fd8482048609f652f9a0b0677337b9",name:"Curve.fi DUSD/3Crv",symbol:"dusd3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/dusd/swap","https://classic.curve.fi/dusd"],deposit:["https://curve.fi/#/ethereum/pools/dusd/deposit","https://classic.curve.fi/dusd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/dusd/withdraw","https://classic.curve.fi/dusd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x5BC25f649fc4e26069dDF4cF4010F9f706c23831",usdPrice:.9962182592500776,decimals:"18",isBasePoolLpToken:false,symbol:"DUSD",poolBalance:"69369844042026362965055"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"31906840356106851256666"}],usdTotal:101780.27374549535,isMetaPool:true,underlyingCoins:[{address:"0x5BC25f649fc4e26069dDF4cF4010F9f706c23831",usdPrice:.9962182592500776,decimals:"18",isBasePoolLpToken:false,symbol:"DUSD",poolBalance:"69369844042026362965055"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"5565734129664596307913"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"5484360683"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"21584392063"}],usdTotalExcludingBasePool:69107.50527599687,gaugeAddress:"0xaea6c312f4b3e04d752946d329693f7293bc2e6d",chainId:1},{id:"19",address:"0x4f062658EaAF2C1ccf8C8e36D6824CDf41167956",coinsAddresses:["0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["2","18","0","0"],virtualPrice:"1030405116771762493",amplificationCoefficient:"1000",underlyingDecimals:["2","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"17259595921438266061339238",lpTokenAddress:"0xd2967f45c4f384deea880f807be904762a3dea07",name:"Curve.fi GUSD/3Crv",symbol:"gusd3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/gusd/swap","https://classic.curve.fi/gusd"],deposit:["https://curve.fi/#/ethereum/pools/gusd/deposit","https://classic.curve.fi/gusd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/gusd/withdraw","https://classic.curve.fi/gusd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",usdPrice:1.0012660019727615,decimals:"2",isBasePoolLpToken:false,symbol:"GUSD",poolBalance:"747924924"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"10077179861140128001506112"}],usdTotal:17807801.941018753,isMetaPool:true,underlyingCoins:[{address:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",usdPrice:1.0012660019727615,decimals:"2",isBasePoolLpToken:false,symbol:"GUSD",poolBalance:"747924924"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"1757833218768762305337617"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"1732132934712"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"6817027276313"}],usdTotalExcludingBasePool:7488717.984292615,gaugeAddress:"0xc5cfada84e902ad92dd40194f0883ad49639b023",chainId:1},{id:"20",address:"0x3eF6A01A0f81D6046290f3e2A8c5b843e738E604",coinsAddresses:["0xdF574c24545E5FfEcb9a659c229253D4111d87e1","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["8","18","0","0"],virtualPrice:"1054369962038525227",amplificationCoefficient:"200",underlyingDecimals:["8","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"27476001216240353276826",lpTokenAddress:"0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858",name:"Curve.fi HUSD/3Crv",symbol:"husd3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/husd/swap","https://classic.curve.fi/husd"],deposit:["https://curve.fi/#/ethereum/pools/husd/deposit","https://classic.curve.fi/husd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/husd/withdraw","https://classic.curve.fi/husd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xdF574c24545E5FfEcb9a659c229253D4111d87e1",usdPrice:.07828567476811867,decimals:"8",isBasePoolLpToken:false,symbol:"HUSD",poolBalance:"3119966163750"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"190714597377779898273"}],usdTotal:2637.779291479947,isMetaPool:true,underlyingCoins:[{address:"0xdF574c24545E5FfEcb9a659c229253D4111d87e1",usdPrice:.07828567476811867,decimals:"8",isBasePoolLpToken:false,symbol:"HUSD",poolBalance:"3119966163750"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"33267685919505056065"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"32781298"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"129014926"}],usdTotalExcludingBasePool:2442.4865638286738,gaugeAddress:"0x2db0e83599a91b508ac268a6197b8b14f5e72840",chainId:1},{id:"21",address:"0xE7a24EF0C5e95Ffb0f6684b813A78F2a3AD7D171",coinsAddresses:["0x0E2EC54fC0B509F445631Bf4b91AB8168230C752","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1011532803039661487",amplificationCoefficient:"5",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"36360840319108742830714",lpTokenAddress:"0x6d65b498cb23deaba52db31c93da9bffb340fb8f",name:"Curve.fi LinkUSD/3Crv",symbol:"LinkUSD3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/linkusd/swap","https://classic.curve.fi/linkusd"],deposit:["https://curve.fi/#/ethereum/pools/linkusd/deposit","https://classic.curve.fi/linkusd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/linkusd/withdraw","https://classic.curve.fi/linkusd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x0E2EC54fC0B509F445631Bf4b91AB8168230C752",usdPrice:.940540359566019,decimals:"18",isBasePoolLpToken:false,symbol:"LINKUSD",poolBalance:"21724023155121949232364"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"14820497610326311203719"}],usdTotal:35608.58625371316,isMetaPool:true,underlyingCoins:[{address:"0x0E2EC54fC0B509F445631Bf4b91AB8168230C752",usdPrice:.940540359566019,decimals:"18",isBasePoolLpToken:false,symbol:"LINKUSD",poolBalance:"21724023155121949232364"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"2585243428925673507152"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"2547446049"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"10025794702"}],usdTotalExcludingBasePool:20432.320549538923,chainId:1},{id:"22",address:"0x8474DdbE98F5aA3179B3B3F5942D724aFcdec9f6",coinsAddresses:["0xe2f2a5C287993345a840Db3B0845fbC70f5935a5","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1018636149854079478",amplificationCoefficient:"200",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"2799582401934857914681857",lpTokenAddress:"0x1aef73d49dedc4b1778d0706583995958dc862e6",name:"Curve.fi MUSD/3Crv",symbol:"musd3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/musd/swap","https://classic.curve.fi/musd"],deposit:["https://curve.fi/#/ethereum/pools/musd/deposit","https://classic.curve.fi/musd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/musd/withdraw","https://classic.curve.fi/musd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xe2f2a5C287993345a840Db3B0845fbC70f5935a5",usdPrice:1.0016975146130052,decimals:"18",isBasePoolLpToken:false,symbol:"mUSD",poolBalance:"1317522743522641660512342"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"1500303041855330658563644"}],usdTotal:2856077.2814022535,isMetaPool:true,underlyingCoins:[{address:"0xe2f2a5C287993345a840Db3B0845fbC70f5935a5",usdPrice:1.0016975146130052,decimals:"18",isBasePoolLpToken:false,symbol:"mUSD",poolBalance:"1317522743522641660512342"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"261708390793249134851126"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"257882100613"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"1014927479711"}],usdTotalExcludingBasePool:1319759.257632738,gaugeAddress:"0x5f626c30ec1215f4edcc9982265e8b1f411d1352",chainId:1},{id:"23",address:"0xC18cC39da8b11dA8c3541C598eE022258F9744da",coinsAddresses:["0x196f4727526eA7FB1e17b2071B3d8eAA38486988","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1029390083335817967",amplificationCoefficient:"200",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"20669414070765636657611",lpTokenAddress:"0xc2ee6b0334c261ed60c72f6054450b61b8f18e35",name:"Curve.fi RSV/3Crv",symbol:"rsv3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/rsv/swap","https://classic.curve.fi/rsv"],deposit:["https://curve.fi/#/ethereum/pools/rsv/deposit","https://classic.curve.fi/rsv/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/rsv/withdraw","https://classic.curve.fi/rsv/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x196f4727526eA7FB1e17b2071B3d8eAA38486988",usdPrice:1.0051212049493914,decimals:"18",isBasePoolLpToken:false,symbol:"RSV",poolBalance:"7100390539158131036717"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"13869050429328508920341"}],usdTotal:21338.731996403127,isMetaPool:true,underlyingCoins:[{address:"0x196f4727526eA7FB1e17b2071B3d8eAA38486988",usdPrice:1.0051212049493914,decimals:"18",isBasePoolLpToken:false,symbol:"RSV",poolBalance:"7100390539158131036717"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"2419275818571579489737"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"2383904957"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"9382158141"}],usdTotalExcludingBasePool:7136.753094329879,gaugeAddress:"0x4dc4a289a8e33600d8bd4cf5f6313e43a37adec7",chainId:1},{id:"24",address:"0x3E01dD8a5E1fb3481F0F589056b428Fc308AF0Fb",coinsAddresses:["0x1c48f86ae57291F7686349F12601910BD8D470bb","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"2078315149581511819",amplificationCoefficient:"200",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"92079457724872318689535",lpTokenAddress:"0x97e2768e8e73511ca874545dc5ff8067eb19b787",name:"Curve.fi USDK/3Crv",symbol:"usdk3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/usdk/swap","https://classic.curve.fi/usdk"],deposit:["https://curve.fi/#/ethereum/pools/usdk/deposit","https://classic.curve.fi/usdk/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/usdk/withdraw","https://classic.curve.fi/usdk/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x1c48f86ae57291F7686349F12601910BD8D470bb",usdPrice:.9999131008127681,decimals:"18",isBasePoolLpToken:false,symbol:"USDK",poolBalance:"105282238261963094761170"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"84186498641335730973643"}],usdTotal:191480.496499773,isMetaPool:true,underlyingCoins:[{address:"0x1c48f86ae57291F7686349F12601910BD8D470bb",usdPrice:.9999131008127681,decimals:"18",isBasePoolLpToken:false,symbol:"USDK",poolBalance:"105282238261963094761170"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"14685241895328063284051"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"14470537290"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"56950621646"}],usdTotalExcludingBasePool:105273.0893210282,gaugeAddress:"0xc2b1df84112619d190193e48148000e3990bf627",chainId:1},{id:"25",address:"0x0f9cb53Ebe405d49A0bbdBD291A65Ff571bC83e1",coinsAddresses:["0x674C6Ad92Fd080e4004b2312b45f796a192D27a0","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1064454955028284869",amplificationCoefficient:"250",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"9406559756729139418446138",lpTokenAddress:"0x4f3e8f405cf5afc05d68142f3783bdfe13811522",name:"Curve.fi USDN/3Crv",symbol:"usdn3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/usdn/swap","https://classic.curve.fi/usdn"],deposit:["https://curve.fi/#/ethereum/pools/usdn/deposit","https://classic.curve.fi/usdn/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/usdn/withdraw","https://classic.curve.fi/usdn/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x674C6Ad92Fd080e4004b2312b45f796a192D27a0",usdPrice:.8970105006804071,decimals:"18",isBasePoolLpToken:false,symbol:"USDN",poolBalance:"9423218466650958210751017"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"636964442465334140594958"}],usdTotal:9104980.776748952,isMetaPool:true,underlyingCoins:[{address:"0x674C6Ad92Fd080e4004b2312b45f796a192D27a0",usdPrice:.8970105006804071,decimals:"18",isBasePoolLpToken:false,symbol:"USDN",poolBalance:"9423218466650958210751017"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"111110178796928674484254"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"109485699793"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"430894758073"}],usdTotalExcludingBasePool:8452725.914791433,gaugeAddress:"0xf98450b5602fa59cc66e1379dffb6fddc724cfc4",chainId:1},{id:"26",address:"0x42d7025938bEc20B69cBae5A77421082407f053A",coinsAddresses:["0x1456688345527bE1f37E9e627DA0837D6f08C925","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1009339182676231390",amplificationCoefficient:"100",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"4060596476717699943509542",lpTokenAddress:"0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6",name:"Curve.fi USDP/3Crv",symbol:"usdp3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/usdp/swap","https://classic.curve.fi/usdp"],deposit:["https://curve.fi/#/ethereum/pools/usdp/deposit","https://classic.curve.fi/usdp/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/usdp/withdraw","https://classic.curve.fi/usdp/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x1456688345527bE1f37E9e627DA0837D6f08C925",usdPrice:.9970575581670778,decimals:"18",isBasePoolLpToken:false,symbol:"USDP",poolBalance:"2424970101972795837146252"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"1637182278589860961312273"}],usdTotal:4094317.8340045298,isMetaPool:true,underlyingCoins:[{address:"0x1456688345527bE1f37E9e627DA0837D6f08C925",usdPrice:.9970575581670778,decimals:"18",isBasePoolLpToken:false,symbol:"USDP",poolBalance:"2424970101972795837146252"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"285585196864709766385332"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"281409817424"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"1107523771852"}],usdTotalExcludingBasePool:2417834.768501165,gaugeAddress:"0x055be5ddb7a925bfef3417fc157f53ca77ca7222",chainId:1},{id:"27",address:"0x890f4e345B1dAED0367A877a1612f86A1f86985f",coinsAddresses:["0xa47c8bf37f92aBed4A126BDA807A7b7498661acD","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1067474650917107125",amplificationCoefficient:"100",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"297302631552091288824147",lpTokenAddress:"0x94e131324b6054c0D789b190b2dAC504e4361b53",name:"Curve.fi UST/3Crv",symbol:"ust3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/ust/swap","https://classic.curve.fi/ust"],deposit:["https://curve.fi/#/ethereum/pools/ust/deposit","https://classic.curve.fi/ust/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/ust/withdraw","https://classic.curve.fi/ust/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xa47c8bf37f92aBed4A126BDA807A7b7498661acD",usdPrice:.021183797569128218,decimals:"18",isBasePoolLpToken:false,symbol:"UST",poolBalance:"389764817174525084421776"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"1330375409115353795710"}],usdTotal:9619.010241309074,isMetaPool:true,underlyingCoins:[{address:"0xa47c8bf37f92aBed4A126BDA807A7b7498661acD",usdPrice:.021183797569128218,decimals:"18",isBasePoolLpToken:false,symbol:"UST",poolBalance:"389764817174525084421776"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"232066721027192763595"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"228673805"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"899974554"}],usdTotalExcludingBasePool:8256.69898659341,gaugeAddress:"0x3b7020743bc2a4ca9eaf9d0722d42e20d6935855",chainId:1},{id:"28",address:"0x071c661B4DeefB59E2a3DdB20Db036821eeE8F4b",coinsAddresses:["0x9BE89D2a4cd102D8Fecc6BF9dA793be995C22541","0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["8","18","0","0"],virtualPrice:"1017222106161124367",amplificationCoefficient:"200",underlyingDecimals:["8","8","8","18","0","0","0","0"],assetType:"2",totalSupply:"24605069875425434344",lpTokenAddress:"0x410e3E86ef427e30B9235497143881f717d93c2A",name:"Curve.fi bBTC/sbtcCRV",symbol:"bBTC/sbtcCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/bbtc/swap","https://classic.curve.fi/bbtc"],deposit:["https://curve.fi/#/ethereum/pools/bbtc/deposit","https://classic.curve.fi/bbtc/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/bbtc/withdraw","https://classic.curve.fi/bbtc/withdraw"]},implementation:"",assetTypeName:"btc",coins:[{address:"0x9BE89D2a4cd102D8Fecc6BF9dA793be995C22541",usdPrice:16058.809808743661,decimals:"8",isBasePoolLpToken:false,symbol:"BBTC",poolBalance:"1145066807"},{address:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3",usdPrice:16315.252147321007,decimals:"18",isBasePoolLpToken:true,symbol:"sbtcCrv",poolBalance:"13364490230043994820"}],usdTotal:401929.12864275975,isMetaPool:true,underlyingCoins:[{address:"0x9BE89D2a4cd102D8Fecc6BF9dA793be995C22541",usdPrice:16058.809808743661,decimals:"8",isBasePoolLpToken:false,symbol:"BBTC",poolBalance:"1145066807"},{address:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",usdPrice:16236.763813696798,decimals:"8",isBasePoolLpToken:false,symbol:"renBTC",poolBalance:"235492518"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"681560491"},{address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",usdPrice:16042.888085908799,decimals:"18",isBasePoolLpToken:false,symbol:"sBTC",poolBalance:"4421948549237023916"}],usdTotalExcludingBasePool:183884.10071918386,gaugeAddress:"0xdfc7adfa664b08767b735de28f9e84cd30492aee",chainId:1},{id:"29",address:"0xd81dA8D904b52208541Bade1bD6595D8a251F8dd",coinsAddresses:["0x8064d9Ae6cDf087b1bcd5BDf3531bD5d8C537a68","0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1007479200495595935",amplificationCoefficient:"200",underlyingDecimals:["18","8","8","18","0","0","0","0"],assetType:"2",totalSupply:"25107650416390388361",lpTokenAddress:"0x2fE94ea3d5d4a175184081439753DE15AeF9d614",name:"Curve.fi oBTC/sbtcCRV",symbol:"oBTC/sbtcCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/obtc/swap","https://classic.curve.fi/obtc"],deposit:["https://curve.fi/#/ethereum/pools/obtc/deposit","https://classic.curve.fi/obtc/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/obtc/withdraw","https://classic.curve.fi/obtc/withdraw"]},implementation:"",assetTypeName:"btc",coins:[{address:"0x8064d9Ae6cDf087b1bcd5BDf3531bD5d8C537a68",usdPrice:16035.022842474391,decimals:"18",isBasePoolLpToken:false,symbol:"oBTC",poolBalance:"13427794658128831815"},{address:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3",usdPrice:16315.252147321007,decimals:"18",isBasePoolLpToken:true,symbol:"sbtcCrv",poolBalance:"11680740910665404367"}],usdTotal:405889.22729218553,isMetaPool:true,underlyingCoins:[{address:"0x8064d9Ae6cDf087b1bcd5BDf3531bD5d8C537a68",usdPrice:16035.022842474391,decimals:"18",isBasePoolLpToken:false,symbol:"oBTC",poolBalance:"13427794658128831815"},{address:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",usdPrice:16236.763813696798,decimals:"8",isBasePoolLpToken:false,symbol:"renBTC",poolBalance:"205823570"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"595692868"},{address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",usdPrice:16042.888085908799,decimals:"18",isBasePoolLpToken:false,symbol:"sBTC",poolBalance:"3864841414438327753"}],usdTotalExcludingBasePool:215314.99406715142,gaugeAddress:"0x11137b10c210b579405c21a07489e28f3c040ab1",chainId:1},{id:"30",address:"0x7F55DDe206dbAD629C080068923b36fe9D6bDBeF",coinsAddresses:["0x5228a22e72ccC52d415EcFd199F99D0665E7733b","0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1009507786582024095",amplificationCoefficient:"200",underlyingDecimals:["18","8","8","18","0","0","0","0"],assetType:"2",totalSupply:"21456249285685826634",lpTokenAddress:"0xDE5331AC4B3630f94853Ff322B66407e0D6331E8",name:"Curve.fi pBTC/sbtcCRV",symbol:"pBTC/sbtcCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/pbtc/swap","https://classic.curve.fi/pbtc"],deposit:["https://curve.fi/#/ethereum/pools/pbtc/deposit","https://classic.curve.fi/pbtc/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/pbtc/withdraw","https://classic.curve.fi/pbtc/withdraw"]},implementation:"",assetTypeName:"btc",coins:[{address:"0x5228a22e72ccC52d415EcFd199F99D0665E7733b",usdPrice:16024.510280013345,decimals:"18",isBasePoolLpToken:false,symbol:"pBTC",poolBalance:"12066556482568123083"},{address:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3",usdPrice:16315.252147321007,decimals:"18",isBasePoolLpToken:true,symbol:"sbtcCrv",poolBalance:"9443114683809297922"}],usdTotal:347427.45552169275,isMetaPool:true,underlyingCoins:[{address:"0x5228a22e72ccC52d415EcFd199F99D0665E7733b",usdPrice:16024.510280013345,decimals:"18",isBasePoolLpToken:false,symbol:"pBTC",poolBalance:"12066556482568123083"},{address:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",usdPrice:16236.763813696798,decimals:"8",isBasePoolLpToken:false,symbol:"renBTC",poolBalance:"166394888"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"481578704"},{address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",usdPrice:16042.888085908799,decimals:"18",isBasePoolLpToken:false,symbol:"sBTC",poolBalance:"3124471383313802769"}],usdTotalExcludingBasePool:193360.65839927454,gaugeAddress:"0xd7d147c6bb90a718c3de8c0568f9b560c79fa416",chainId:1},{id:"31",address:"0xC25099792E9349C7DD09759744ea681C7de2cb66",coinsAddresses:["0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa","0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1011855076080594610",amplificationCoefficient:"150",underlyingDecimals:["18","8","8","18","0","0","0","0"],assetType:"2",totalSupply:"86300064033928747612",lpTokenAddress:"0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd",name:"Curve.fi tBTC/sbtcCrv",symbol:"tbtc/sbtcCrv",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/tbtc/swap","https://classic.curve.fi/tbtc"],deposit:["https://curve.fi/#/ethereum/pools/tbtc/deposit","https://classic.curve.fi/tbtc/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/tbtc/withdraw","https://classic.curve.fi/tbtc/withdraw"]},implementation:"",assetTypeName:"btc",coins:[{address:"0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa",usdPrice:16048.16620091469,decimals:"18",isBasePoolLpToken:false,symbol:"TBTC",poolBalance:"43858112610110658315"},{address:"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3",usdPrice:16315.252147321007,decimals:"18",isBasePoolLpToken:true,symbol:"sbtcCrv",poolBalance:"42779666901417642228"}],usdTotal:1401803.3327005198,isMetaPool:true,underlyingCoins:[{address:"0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa",usdPrice:16048.16620091469,decimals:"18",isBasePoolLpToken:false,symbol:"TBTC",poolBalance:"43858112610110658315"},{address:"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",usdPrice:16236.763813696798,decimals:"8",isBasePoolLpToken:false,symbol:"renBTC",poolBalance:"753810382"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"2181671750"},{address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",usdPrice:16042.888085908799,decimals:"18",isBasePoolLpToken:false,symbol:"sBTC",poolBalance:"14154635360973595869"}],usdTotalExcludingBasePool:703842.2804254883,gaugeAddress:"0x6828bcf74279ee32f2723ec536c22c51eed383c6",chainId:1},{id:"32",address:"0xEcd5e75AFb02eFa118AF914515D6521aaBd189F1",coinsAddresses:["0x0000000000085d4780B73119b644AE5ecd22b376","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1007097605026111345",amplificationCoefficient:"600",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"35381394859277725885874667",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/tusd/swap","https://classic.curve.fi/tusd"],deposit:["https://curve.fi/#/ethereum/pools/tusd/deposit","https://classic.curve.fi/tusd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/tusd/withdraw","https://classic.curve.fi/tusd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x0000000000085d4780B73119b644AE5ecd22b376",usdPrice:1.0015450976879605,decimals:"18",isBasePoolLpToken:false,symbol:"TUSD",poolBalance:"14729195830055305861327129"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"20441386866203539569474360"}],usdTotal:35684039.06012048,isMetaPool:true,underlyingCoins:[{address:"0x0000000000085d4780B73119b644AE5ecd22b376",usdPrice:1.0015450976879605,decimals:"18",isBasePoolLpToken:false,symbol:"TUSD",poolBalance:"14729195830055305861327129"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"3565734597005662047921165"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"3513602010686"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"13828223149011"}],usdTotalExcludingBasePool:14751953.876477841,gaugeAddress:"0x359fd5d6417ae3d8d6497d9b2e7a890798262ba4",chainId:1},{id:"33",address:"0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA",coinsAddresses:["0x5f98805A4E8be255a32880FDeC7F6728C6568bA0","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1017301941987312156",amplificationCoefficient:"500",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"61873314404171802286862132",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/lusd/swap","https://classic.curve.fi/lusd"],deposit:["https://curve.fi/#/ethereum/pools/lusd/deposit","https://classic.curve.fi/lusd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/lusd/withdraw","https://classic.curve.fi/lusd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",usdPrice:1.0399841981066111,decimals:"18",isBasePoolLpToken:false,symbol:"LUSD",poolBalance:"5004492751184211261223360"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"56804635286074515329294608"}],usdTotal:63372831.78927829,isMetaPool:true,underlyingCoins:[{address:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",usdPrice:1.0399841981066111,decimals:"18",isBasePoolLpToken:false,symbol:"LUSD",poolBalance:"5004492751184211261223360"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"9908831266469886818059355"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"9763959855748"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"38427293498992"}],usdTotalExcludingBasePool:5204593.38077066,gaugeAddress:"0x9b8519a9a00100720ccdc8a120fbed319ca47a14",chainId:1},{id:"34",address:"0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B",coinsAddresses:["0x853d955aCEf822Db058eb8505911ED77F175b99e","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1008947548363215258",amplificationCoefficient:"1500",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"417364928491946968882800803",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/frax/swap","https://classic.curve.fi/frax"],deposit:["https://curve.fi/#/ethereum/pools/frax/deposit","https://classic.curve.fi/frax/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/frax/withdraw","https://classic.curve.fi/frax/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",usdPrice:1.0006972361613427,decimals:"18",isBasePoolLpToken:false,symbol:"FRAX",poolBalance:"245529357589595909695896974"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"171686458645172530746217938"}],usdTotal:421508365.3544126,isMetaPool:true,underlyingCoins:[{address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",usdPrice:1.0006972361613427,decimals:"18",isBasePoolLpToken:false,symbol:"FRAX",poolBalance:"245529357589595909695896974"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"29948474114573215257427596"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"29510614433923"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"116142739108086"}],usdTotalExcludingBasePool:245700549.53637862,gaugeAddress:"0x72e158d38dbd50a483501c24f792bdaaa3e7d55c",chainId:1},{id:"35",address:"0x4807862AA8b2bF68830e4C8dc86D0e9A998e085a",coinsAddresses:["0x4Fabb145d64652a948d72533023f6E7A623C7C53","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1009068135155409120",amplificationCoefficient:"5000",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"21241227396962178435336010",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/busdv2/swap","https://classic.curve.fi/busdv2"],deposit:["https://curve.fi/#/ethereum/pools/busdv2/deposit","https://classic.curve.fi/busdv2/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/busdv2/withdraw","https://classic.curve.fi/busdv2/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x4Fabb145d64652a948d72533023f6E7A623C7C53",usdPrice:1.0017419058572385,decimals:"18",isBasePoolLpToken:false,symbol:"BUSD",poolBalance:"3683841630294217252176005"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"17358575967408258352739044"}],usdTotal:21465529.518676464,isMetaPool:true,underlyingCoins:[{address:"0x4Fabb145d64652a948d72533023f6E7A623C7C53",usdPrice:1.0017419058572385,decimals:"18",isBasePoolLpToken:false,symbol:"BUSD",poolBalance:"3683841630294217252176005"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"3027978252496830676389941"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"2983707897166"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"11742758140508"}],usdTotalExcludingBasePool:3690258.535607166,gaugeAddress:"0xd4b22fedca85e684919955061fdf353b9d38389b",chainId:1},{id:"36",address:"0xF9440930043eb3997fc70e1339dBb11F341de7A8",coinsAddresses:["0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE","0x9559Aaa82d9649C7A7b220E7c461d2E74c9a3593","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1018321793537937522",amplificationCoefficient:"10",assetType:"1",totalSupply:"1933430232349537384465",lpTokenAddress:"0x53a901d48795C58f485cBB38df08FA96a24669D5",name:"Curve.fi ETH/rETH",symbol:"rCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/reth/swap","https://classic.curve.fi/reth"],deposit:["https://curve.fi/#/ethereum/pools/reth/deposit","https://classic.curve.fi/reth/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/reth/withdraw","https://classic.curve.fi/reth/withdraw"]},implementation:"",assetTypeName:"eth",coins:[{address:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",usdPrice:1123.52,poolBalance:"485254266524507127615",decimals:18,symbol:"ETH",isBasePoolLpToken:false},{address:"0x9559Aaa82d9649C7A7b220E7c461d2E74c9a3593",usdPrice:957.42,decimals:"18",isBasePoolLpToken:false,symbol:"rETH",poolBalance:"1472424898931781636013"}],usdTotal:1954921.9202608806,isMetaPool:false,usdTotalExcludingBasePool:1954921.9202608806,gaugeAddress:"0x824f13f1a2f29cfeea81154b46c0fc820677a637",chainId:1},{id:"37",address:"0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c",coinsAddresses:["0xBC6DA0FE9aD5f3b0d58160288917AA56653660E9","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1010429819272092005",amplificationCoefficient:"200",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"75873259360862324608728581",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/alusd/swap","https://classic.curve.fi/alusd"],deposit:["https://curve.fi/#/ethereum/pools/alusd/deposit","https://classic.curve.fi/alusd/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/alusd/withdraw","https://classic.curve.fi/alusd/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xBC6DA0FE9aD5f3b0d58160288917AA56653660E9",usdPrice:.9936122069084513,decimals:"18",isBasePoolLpToken:false,symbol:"alUSD",poolBalance:"56016993323231858626237417"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"20240527943277417353808130"}],usdTotal:76385572.97477832,isMetaPool:true,underlyingCoins:[{address:"0xBC6DA0FE9aD5f3b0d58160288917AA56653660E9",usdPrice:.9936122069084513,decimals:"18",isBasePoolLpToken:false,symbol:"alUSD",poolBalance:"56016993323231858626237417"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"3530697365173848621697379"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"3479077038379"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"13692345773084"}],usdTotalExcludingBasePool:55659168.36027239,gaugeAddress:"0x9582c4adacb3bce56fea3e590f05c3ca2fb9c477",chainId:1},{id:"38",address:"0x80466c64868E1ab14a1Ddf27A676C3fcBE638Fe5",coinsAddresses:["0xdAC17F958D2ee523a2206206994597C13D831ec7","0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x0000000000000000000000000000000000000000"],decimals:["6","8","18","0"],virtualPrice:"1021409415641949446",amplificationCoefficient:"3645",assetType:"4",totalSupply:"388906141703128150591",lpTokenAddress:"0xcA3d75aC011BF5aD07a98d02f18225F9bD9A6BDF",name:"Curve.fi USD-BTC-ETH",symbol:"crvTricrypto",priceOracle:16137.088371917262,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/tricrypto/swap","https://classic.curve.fi/tricrypto"],deposit:["https://curve.fi/#/ethereum/pools/tricrypto/deposit","https://classic.curve.fi/tricrypto/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/tricrypto/withdraw","https://classic.curve.fi/tricrypto/withdraw"]},implementation:"",assetTypeName:"unknown",coins:[{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"102068102441"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:15973.32,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"654070285"},{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1122.25,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"93514713742809640251"}],usdTotal:311593.7976892711,isMetaPool:false,usdTotalExcludingBasePool:311593.7976892711,gaugeAddress:"0x6955a55416a06839309018a8b0cb72c4ddc11f15",chainId:1},{id:"39",address:"0x618788357D0EBd8A37e763ADab3bc575D54c2C7d",coinsAddresses:["0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"982681604944574607",amplificationCoefficient:"100",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"1667733916098463615077893",lpTokenAddress:"0x6BA5b4e438FA0aAf7C1bD179285aF65d13bD3D90",name:"RAI3CRV",symbol:"RAI3CRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/rai/swap","https://classic.curve.fi/rai"],deposit:["https://curve.fi/#/ethereum/pools/rai/deposit","https://classic.curve.fi/rai/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/rai/withdraw","https://classic.curve.fi/rai/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",usdPrice:2.8322802157607976,decimals:"18",isBasePoolLpToken:false,symbol:"RAI",poolBalance:"245070505892438843583462"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"926859947268608049067911"}],usdTotal:1643217.6937329555,isMetaPool:true,underlyingCoins:[{address:"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919",usdPrice:2.8322802157607976,decimals:"18",isBasePoolLpToken:false,symbol:"RAI",poolBalance:"245070505892438843583462"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"161678686587488211468104"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"159314874067"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"627003747965"}],usdTotalExcludingBasePool:694108.3453056446,gaugeAddress:"0x66ec719045bbd62db5ebb11184c18237d3cc2e62",chainId:1},{id:"40",address:"0x5a6A4D54456819380173272A5E8E9B9904BdF41B",coinsAddresses:["0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3","0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1008457509884435737",amplificationCoefficient:"2000",underlyingDecimals:["18","18","6","6","0","0","0","0"],assetType:"0",totalSupply:"85372487172861204589150672",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/mim/swap","https://classic.curve.fi/mim"],deposit:["https://curve.fi/#/ethereum/pools/mim/deposit","https://classic.curve.fi/mim/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/mim/withdraw","https://classic.curve.fi/mim/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",usdPrice:1.0005826716659343,decimals:"18",isBasePoolLpToken:false,symbol:"MIM",poolBalance:"55613876954044135313838989"},{address:"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490",usdPrice:1.0240051382350377,decimals:"18",isBasePoolLpToken:true,symbol:"3Crv",poolBalance:"29807718112756981613086570"}],usdTotal:86169538.09090276,isMetaPool:true,underlyingCoins:[{address:"0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",usdPrice:1.0005826716659343,decimals:"18",isBasePoolLpToken:false,symbol:"MIM",poolBalance:"55613876954044135313838989"},{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1.003,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"5199569502213029064525907"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"5123549540961"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"20164374380464"}],usdTotalExcludingBasePool:55646281.58437801,gaugeAddress:"0xd8b712d29381748db89c36bca0138d7c75866ddf",chainId:1},{id:"41",address:"0xFD5dB7463a3aB53fD211b4af195c5BCCC1A03890",coinsAddresses:["0xC581b735A1688071A1746c968e0798D642EDE491","0xD71eCFF9342A5Ced620049e616c5035F1dB98620","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["6","18","0","0"],virtualPrice:"1008246714343003052",amplificationCoefficient:"100",assetType:"0",totalSupply:"20031636943644062971808",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/eurt/swap","https://classic.curve.fi/eurt"],deposit:["https://curve.fi/#/ethereum/pools/eurt/deposit","https://classic.curve.fi/eurt/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/eurt/withdraw","https://classic.curve.fi/eurt/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xC581b735A1688071A1746c968e0798D642EDE491",usdPrice:1.0183885698538886,decimals:"6",isBasePoolLpToken:false,symbol:"EURT",poolBalance:"13436323639"},{address:"0xD71eCFF9342A5Ced620049e616c5035F1dB98620",usdPrice:1.02717,decimals:"18",isBasePoolLpToken:false,symbol:"sEUR",poolBalance:"6772690880168872498708"}],usdTotal:20640.103306198267,isMetaPool:false,usdTotalExcludingBasePool:20640.103306198267,gaugeAddress:"0xe8060ad8971450e624d5289a10017dd30f5da85f",chainId:1},{id:"42",address:"0x4e0915C88bC70750D68C481540F081fEFaF22273",coinsAddresses:["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xdAC17F958D2ee523a2206206994597C13D831ec7","0xa693B19d2931d498c5B318dF961919BB4aee87a5","0x853d955aCEf822Db058eb8505911ED77F175b99e"],decimals:["6","6","6","18"],virtualPrice:"1007295095340865542",amplificationCoefficient:"500",assetType:"0",totalSupply:"60580236462619794517962",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/4pool/swap","https://classic.curve.fi/4pool"],deposit:["https://curve.fi/#/ethereum/pools/4pool/deposit","https://classic.curve.fi/4pool/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/4pool/withdraw","https://classic.curve.fi/4pool/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"700110759"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"696532475"},{address:"0xa693B19d2931d498c5B318dF961919BB4aee87a5",usdPrice:.021519,decimals:"6",isBasePoolLpToken:false,symbol:"UST",poolBalance:"104997717858"},{address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",usdPrice:1.0006972361613427,decimals:"18",isBasePoolLpToken:false,symbol:"FRAX",poolBalance:"700089078796658765403"}],usdTotal:4357.362863279859,isMetaPool:false,usdTotalExcludingBasePool:4357.362863279859,gaugeAddress:"0x34883134a39b206a451c2d3b0e7cac44be4d9181",chainId:1},{id:"43",address:"0x1005F7406f32a61BD760CfA14aCCd2737913d546",coinsAddresses:["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xdAC17F958D2ee523a2206206994597C13D831ec7","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["6","6","0","0"],virtualPrice:"1000533124895073405",amplificationCoefficient:"1500",assetType:"0",totalSupply:"230417545302969142309",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/2pool/swap","https://classic.curve.fi/2pool"],deposit:["https://curve.fi/#/ethereum/pools/2pool/deposit","https://classic.curve.fi/2pool/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/2pool/withdraw","https://classic.curve.fi/2pool/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"69405262"},{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"161149571"}],usdTotal:230.71598257099998,isMetaPool:false,usdTotalExcludingBasePool:230.71598257099998,gaugeAddress:"0x9f330db38caaae5b61b410e2f0aad63fff2109d8",chainId:1},{id:"44",address:"0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2",coinsAddresses:["0x853d955aCEf822Db058eb8505911ED77F175b99e","0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","6","0","0"],virtualPrice:"1000986606447015083",amplificationCoefficient:"1500",assetType:"0",totalSupply:"461676060068304583005020310",lpTokenAddress:"0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC",name:"Curve.fi FRAX/USDC",symbol:"crvFRAX",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/fraxusdc/swap","https://classic.curve.fi/fraxusdc"],deposit:["https://curve.fi/#/ethereum/pools/fraxusdc/deposit","https://classic.curve.fi/fraxusdc/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/fraxusdc/withdraw","https://classic.curve.fi/fraxusdc/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",usdPrice:1.0006972361613427,decimals:"18",isBasePoolLpToken:false,symbol:"FRAX",poolBalance:"343377821018196617586539612"},{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"118801302468309"}],usdTotal:462418538.92032254,isMetaPool:false,usdTotalExcludingBasePool:462418538.92032254,gaugeAddress:"0xcfc25170633581bf896cb6cdee170e3e3aa59503",chainId:1},{id:"45",address:"0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577",coinsAddresses:["0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE","0x5E8422345238F34275888049021821E8E08CAa1f","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000386213435288290",amplificationCoefficient:"120",assetType:"0",totalSupply:"22560867147419980388513",lpTokenAddress:"0xf43211935C781D5ca1a41d2041F397B8A7366C7A",name:"Curve.fi ETH/frxETH",symbol:"frxETHCRV",priceOracle:1.0002741549898762,poolUrls:{swap:["https://curve.fi/#/ethereum/pools/frxeth/swap","https://classic.curve.fi/frxeth"],deposit:["https://curve.fi/#/ethereum/pools/frxeth/deposit","https://classic.curve.fi/frxeth/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/frxeth/withdraw","https://classic.curve.fi/frxeth/withdraw"]},implementation:"",assetTypeName:"usd",coins:[{address:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",usdPrice:1123.52,poolBalance:"11471848840525899597563",decimals:18,symbol:"ETH",isBasePoolLpToken:false},{address:"0x5E8422345238F34275888049021821E8E08CAa1f",usdPrice:1123.52,decimals:"18",isBasePoolLpToken:false,symbol:"frxETH",poolBalance:"11097757246060514495248"}],usdTotal:25357403.830401562,isMetaPool:false,usdTotalExcludingBasePool:25357403.830401562,gaugeAddress:"0x2932a86df44fe8d2a706d8e9c5d51c24883423f5",chainId:1},{id:"factory-crvusd-0",address:"0x4DEcE678ceceb27446b35C672dC7d61F30bAD69E",coinsAddresses:["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["6","18","0","0"],virtualPrice:"1004132965213954546",amplificationCoefficient:"500",assetType:"0",totalSupply:"41196839005554177676363318",name:"Curve.fi Factory Plain Pool: crvUSD/USDC",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDUSDC-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-0/swap","https://classic.curve.fi/factory-crvusd-0"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-0/deposit","https://classic.curve.fi/factory-crvusd-0/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-0/withdraw","https://classic.curve.fi/factory-crvusd-0/withdraw"]},implementation:"",lpTokenAddress:"0x4DEcE678ceceb27446b35C672dC7d61F30bAD69E",assetTypeName:"usd",coins:[{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"16546083497566"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"24822741909929606517816883"}],usdTotal:41364805.15737636,isMetaPool:false,usdTotalExcludingBasePool:41364805.15737636,gaugeAddress:"0x95f00391cb5eebcd190eb58728b4ce23dbfa6ac1",gaugeRewards:[{gaugeAddress:"0x95f00391cb5eebcd190eb58728b4ce23dbfa6ac1",tokenPrice:.480011,name:"Curve DAO Token",symbol:"CRV",decimals:"18",tokenAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",apy:0}],gaugeCrvApy:[2.906430927088741,7.266077317721853],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-1",address:"0x390f3595bCa2Df7d23783dFd126427CCeb997BF4",coinsAddresses:["0xdAC17F958D2ee523a2206206994597C13D831ec7","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["6","18","0","0"],virtualPrice:"1004095907337789738",amplificationCoefficient:"500",assetType:"0",totalSupply:"44464948712443342988066848",name:"Curve.fi Factory Plain Pool: crvUSD/USDT",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDUSDT-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-1/swap","https://classic.curve.fi/factory-crvusd-1"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-1/deposit","https://classic.curve.fi/factory-crvusd-1/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-1/withdraw","https://classic.curve.fi/factory-crvusd-1/withdraw"]},implementation:"",lpTokenAddress:"0x390f3595bCa2Df7d23783dFd126427CCeb997BF4",assetTypeName:"usd",coins:[{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1.001,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"17734945154195"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"26914094043544511631070735"}],usdTotal:44644475.06573687,isMetaPool:false,usdTotalExcludingBasePool:44644475.06573687,gaugeAddress:"0x4e6bb6b7447b7b2aa268c16ab87f4bb48bf57939",gaugeRewards:[{gaugeAddress:"0x4e6bb6b7447b7b2aa268c16ab87f4bb48bf57939",tokenPrice:.480011,name:"Curve DAO Token",symbol:"CRV",decimals:"18",tokenAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",apy:0}],gaugeCrvApy:[3.0764246253499024,7.691061563374756],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-2",address:"0xCa978A0528116DDA3cbA9ACD3e68bc6191CA53D0",coinsAddresses:["0x8E870D67F660D95d5be530380D0eC0bd388289E1","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1002009517695379886",amplificationCoefficient:"500",assetType:"0",totalSupply:"4906937125136374224994666",name:"Curve.fi Factory Plain Pool: crvUSD/USDP",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDUSDP-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-2/swap","https://classic.curve.fi/factory-crvusd-2"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-2/deposit","https://classic.curve.fi/factory-crvusd-2/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-2/withdraw","https://classic.curve.fi/factory-crvusd-2/withdraw"]},implementation:"",lpTokenAddress:"0xCa978A0528116DDA3cbA9ACD3e68bc6191CA53D0",assetTypeName:"usd",coins:[{address:"0x8E870D67F660D95d5be530380D0eC0bd388289E1",usdPrice:.999494,decimals:"18",isBasePoolLpToken:false,symbol:"USDP",poolBalance:"2015596761188965182503220"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"2901365514547118185275247"}],usdTotal:4913538.521569328,isMetaPool:false,usdTotalExcludingBasePool:4913538.521569328,gaugeAddress:"0x5c07440a172805d566faf7ebaf16ef068ac05f43",gaugeRewards:[{gaugeAddress:"0x5c07440a172805d566faf7ebaf16ef068ac05f43",tokenPrice:.480011,name:"Curve DAO Token",symbol:"CRV",decimals:"18",tokenAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",apy:0}],gaugeCrvApy:[4.682778627196075,11.706946567990189],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-3",address:"0x34D655069F4cAc1547E4C8cA284FfFF5ad4A8db0",coinsAddresses:["0x0000000000085d4780B73119b644AE5ecd22b376","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1001278567834946916",amplificationCoefficient:"500",assetType:"0",totalSupply:"12315279458358766390143775",name:"Curve.fi Factory Plain Pool: crvUSD/TUSD",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDTUSD-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-3/swap","https://classic.curve.fi/factory-crvusd-3"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-3/deposit","https://classic.curve.fi/factory-crvusd-3/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-3/withdraw","https://classic.curve.fi/factory-crvusd-3/withdraw"]},implementation:"",lpTokenAddress:"0x34D655069F4cAc1547E4C8cA284FfFF5ad4A8db0",assetTypeName:"usd",coins:[{address:"0x0000000000085d4780B73119b644AE5ecd22b376",usdPrice:.9985769930916261,decimals:"18",isBasePoolLpToken:false,symbol:"TUSD",poolBalance:"6914355861744441107331669"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"5416853718914847719006760"}],usdTotal:12316882.390197862,isMetaPool:false,usdTotalExcludingBasePool:12316882.390197862,gaugeAddress:"0xfcaf4ec80a94a5409141af16a1dca950a6973a39",gaugeRewards:[{gaugeAddress:"0xfcaf4ec80a94a5409141af16a1dca950a6973a39",tokenPrice:.480011,name:"Curve DAO Token",symbol:"CRV",decimals:"18",tokenAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",apy:0}],gaugeCrvApy:[4.884615283024376,12.211538207560938],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-4",address:"0x0CD6f267b2086bea681E922E19D40512511BE538",coinsAddresses:["0x853d955aCEf822Db058eb8505911ED77F175b99e","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000738513522608727",amplificationCoefficient:"500",assetType:"0",totalSupply:"5664219910944255811751344",name:"Curve.fi Factory Plain Pool: crvUSD/Frax",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDFRAX-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-4/swap","https://classic.curve.fi/factory-crvusd-4"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-4/deposit","https://classic.curve.fi/factory-crvusd-4/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-4/withdraw","https://classic.curve.fi/factory-crvusd-4/withdraw"]},implementation:"",lpTokenAddress:"0x0CD6f267b2086bea681E922E19D40512511BE538",assetTypeName:"usd",coins:[{address:"0x853d955aCEf822Db058eb8505911ED77F175b99e",usdPrice:.9982626916596676,decimals:"18",isBasePoolLpToken:false,symbol:"FRAX",poolBalance:"3593267690490649192116946"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"2075572048577558612638278"}],usdTotal:5660877.455840777,isMetaPool:false,usdTotalExcludingBasePool:5660877.455840777,gaugeAddress:"0x96424e6b5eaafe0c3b36ca82068d574d44be4e3c",gaugeRewards:[],gaugeCrvApy:[5.13654298549503,12.841357463737575],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-5",address:"0x58B94400bdAd7b9ac8d5335E12eF96E8B4966b4a",coinsAddresses:["0x6B175474E89094C44Da98b954EedeAC495271d0F","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:0,amplificationCoefficient:"500",assetType:"0",totalSupply:"0",name:"Curve.fi Factory Plain Pool: crvUSD/DAI",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDDAI-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-5/swap","https://classic.curve.fi/factory-crvusd-5"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-5/deposit","https://classic.curve.fi/factory-crvusd-5/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-5/withdraw","https://classic.curve.fi/factory-crvusd-5/withdraw"]},implementation:"",lpTokenAddress:"0x58B94400bdAd7b9ac8d5335E12eF96E8B4966b4a",assetTypeName:"usd",coins:[{address:"0x6B175474E89094C44Da98b954EedeAC495271d0F",usdPrice:1,decimals:"18",isBasePoolLpToken:false,symbol:"DAI",poolBalance:"0"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,gaugeAddress:"0x42144499fd4d017723b3a723953b229e64eb1ffd",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-6",address:"0xBe426b0f37c112dd20d5866769c8034171567b31",coinsAddresses:["0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000418956984429872",amplificationCoefficient:"1000",assetType:"0",totalSupply:"655017283288089776430362",name:"Curve.fi Factory Plain Pool: crvUSD/MIM",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDMIM-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-6/swap","https://classic.curve.fi/factory-crvusd-6"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-6/deposit","https://classic.curve.fi/factory-crvusd-6/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-6/withdraw","https://classic.curve.fi/factory-crvusd-6/withdraw"]},implementation:"",lpTokenAddress:"0xBe426b0f37c112dd20d5866769c8034171567b31",assetTypeName:"usd",coins:[{address:"0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",usdPrice:.9989289161103447,decimals:"18",isBasePoolLpToken:false,symbol:"MIM",poolBalance:"403245998384917666041248"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"252064108413004395082575"}],usdTotal:654669.3543652701,isMetaPool:false,usdTotalExcludingBasePool:654669.3543652701,gaugeAddress:"0x533b5aee744647c20e33653f03676c471bb8e67b",gaugeRewards:[],gaugeCrvApy:[5.676619926586074,14.191549816465185],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-7",address:"0x94cC50e4521bD271C1a997a3A4Dc815C2F920b41",coinsAddresses:["0x57Ab1ec28D129707052df4dF418D58a2D46d5f51","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000298928140877445",amplificationCoefficient:"500",assetType:"0",totalSupply:"2972431687733665716032844",name:"Curve.fi Factory Plain Pool: crvUSD/SUSD",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDSUSD-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-7/swap","https://classic.curve.fi/factory-crvusd-7"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-7/deposit","https://classic.curve.fi/factory-crvusd-7/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-7/withdraw","https://classic.curve.fi/factory-crvusd-7/withdraw"]},implementation:"",lpTokenAddress:"0x94cC50e4521bD271C1a997a3A4Dc815C2F920b41",assetTypeName:"usd",coins:[{address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",usdPrice:.9987760848271293,decimals:"18",isBasePoolLpToken:false,symbol:"sUSD",poolBalance:"1549065087358160636504113"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"1424260381248567436308770"}],usdTotal:2970249.504914821,isMetaPool:false,usdTotalExcludingBasePool:2970249.504914821,gaugeAddress:"0x512a68dd5433563bad526c8c2838c39debc9a756",gaugeRewards:[],gaugeCrvApy:[1.2203258346227224,3.0508145865568057],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-8",address:"0x86152dF0a0E321Afb3B0B9C4deb813184F365ADa",coinsAddresses:["0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1001028130581062794",amplificationCoefficient:"100",assetType:"0",totalSupply:"284230251043671873899761",name:"Curve.fi Factory Plain Pool: crvUSD/GHO",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDGHO-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-8/swap","https://classic.curve.fi/factory-crvusd-8"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-8/deposit","https://classic.curve.fi/factory-crvusd-8/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-8/withdraw","https://classic.curve.fi/factory-crvusd-8/withdraw"]},implementation:"",lpTokenAddress:"0x86152dF0a0E321Afb3B0B9C4deb813184F365ADa",assetTypeName:"usd",coins:[{address:"0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",usdPrice:.9773028791317238,decimals:"18",isBasePoolLpToken:false,symbol:"GHO",poolBalance:"220584572679100847626367"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"64537710461925397145821"}],usdTotal:280062.1771411179,isMetaPool:false,usdTotalExcludingBasePool:280062.1771411179,gaugeAddress:"0xfc58c946a2d541cfa29ad8c16fc2994323e34458",gaugeRewards:[],gaugeCrvApy:[4.508800634784037,11.272001586960092],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-9",address:"0x1982Fe483f4bff067A2183c98fA231423d41E92B",coinsAddresses:["0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000475245782211559",amplificationCoefficient:"100",assetType:"0",totalSupply:"341230068976011865147457",name:"Curve.fi Factory Plain Pool: crvUSD/MAI",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDMAI-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-9/swap","https://classic.curve.fi/factory-crvusd-9"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-9/deposit","https://classic.curve.fi/factory-crvusd-9/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-9/withdraw","https://classic.curve.fi/factory-crvusd-9/withdraw"]},implementation:"",lpTokenAddress:"0x1982Fe483f4bff067A2183c98fA231423d41E92B",assetTypeName:"usd",coins:[{address:"0x8D6CeBD76f18E1558D4DB88138e2DeFB3909fAD6",usdPrice:.8846718241608162,decimals:"18",isBasePoolLpToken:false,symbol:"MAI",poolBalance:"311508748957918873729825"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"33012873027684355108483"}],usdTotal:308568.53412478894,isMetaPool:false,usdTotalExcludingBasePool:308568.53412478894,gaugeAddress:"0x71873000399db5fddcd8d953e0e6570a0cb4c50c",gaugeRewards:[],gaugeCrvApy:[5.931162245616933,14.827905614042331],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-10",address:"0xA8a02c7D9ada50444F8c658F43Dc440675B21797",coinsAddresses:["0xd7C9F0e536dC865Ae858b0C0453Fe76D13c3bEAc","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000647086444841410",amplificationCoefficient:"100",assetType:"0",totalSupply:"962175718507547653147352",name:"Curve.fi Factory Plain Pool: crvUSD/XAI",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDXAI-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-10/swap","https://classic.curve.fi/factory-crvusd-10"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-10/deposit","https://classic.curve.fi/factory-crvusd-10/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-10/withdraw","https://classic.curve.fi/factory-crvusd-10/withdraw"]},implementation:"",lpTokenAddress:"0xA8a02c7D9ada50444F8c658F43Dc440675B21797",assetTypeName:"usd",coins:[{address:"0xd7C9F0e536dC865Ae858b0C0453Fe76D13c3bEAc",usdPrice:.990380650461888,decimals:"18",isBasePoolLpToken:false,symbol:"XAI",poolBalance:"643817780865993949100741"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"319588585051211497800973"}],usdTotal:956948.469592822,isMetaPool:false,usdTotalExcludingBasePool:956948.469592822,gaugeAddress:"0x9dc22ca10bb8210c8788827204da091eb6ca04a5",gaugeRewards:[],gaugeCrvApy:[5.605845640176577,14.014614100441442],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-11",address:"0xfC636D819d1a98433402eC9dEC633d864014F28C",coinsAddresses:["0xb40b6608B2743E691C9B54DdBDEe7bf03cd79f1c","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1084031932274820124",amplificationCoefficient:"100",assetType:"0",totalSupply:"504642588191961077390360",name:"Curve.fi Factory Plain Pool: crvUSD/UZD",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDUZD-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-11/swap","https://classic.curve.fi/factory-crvusd-11"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-11/deposit","https://classic.curve.fi/factory-crvusd-11/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-11/withdraw","https://classic.curve.fi/factory-crvusd-11/withdraw"]},implementation:"",lpTokenAddress:"0xfC636D819d1a98433402eC9dEC633d864014F28C",assetTypeName:"usd",coins:[{address:"0xb40b6608B2743E691C9B54DdBDEe7bf03cd79f1c",usdPrice:342593842025837e-19,decimals:"18",isBasePoolLpToken:false,symbol:"UZD",poolBalance:"2578658410999591082850357"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"39008674411226494818"}],usdTotal:127.31960386675246,isMetaPool:false,usdTotalExcludingBasePool:127.31960386675246,gaugeAddress:"0xe39c817fe25ac1a8bd343a74037e3c90b09beeef",usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-12",address:"0x8272E1A3dBef607C04AA6e5BD3a1A134c8ac063B",coinsAddresses:["0x865377367054516e17014CcdED1e7d814EDC9ce4","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000858510982406653",amplificationCoefficient:"200",assetType:"0",totalSupply:"2309640960602651100796380",name:"Curve.fi Factory Plain Pool: crvUSD/DOLA",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDDOLA-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-12/swap","https://classic.curve.fi/factory-crvusd-12"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-12/deposit","https://classic.curve.fi/factory-crvusd-12/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-12/withdraw","https://classic.curve.fi/factory-crvusd-12/withdraw"]},implementation:"",lpTokenAddress:"0x8272E1A3dBef607C04AA6e5BD3a1A134c8ac063B",assetTypeName:"usd",coins:[{address:"0x865377367054516e17014CcdED1e7d814EDC9ce4",usdPrice:.994355,decimals:"18",isBasePoolLpToken:false,symbol:"DOLA",poolBalance:"1366534950168914234413211"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"945286309372395047027143"}],usdTotal:2303323.973690035,isMetaPool:false,usdTotalExcludingBasePool:2303323.973690035,gaugeAddress:"0xecad6745058377744c09747b2715c0170b5699e5",gaugeRewards:[],gaugeCrvApy:[6.9168626989372655,17.292156747343164],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-13",address:"0xeCDd0cE505da71cd9dE855CD6804BA1e8C7bdB07",coinsAddresses:["0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["2","18","0","0"],virtualPrice:"1000328477372456859",amplificationCoefficient:"500",assetType:"0",totalSupply:"1431153523396963409169330",name:"Curve.fi Factory Plain Pool: crvUSD/GUSD",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDGUSD-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-13/swap","https://classic.curve.fi/factory-crvusd-13"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-13/deposit","https://classic.curve.fi/factory-crvusd-13/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-13/withdraw","https://classic.curve.fi/factory-crvusd-13/withdraw"]},implementation:"",lpTokenAddress:"0xeCDd0cE505da71cd9dE855CD6804BA1e8C7bdB07",assetTypeName:"usd",coins:[{address:"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd",usdPrice:1.0006713109400147,decimals:"2",isBasePoolLpToken:false,symbol:"GUSD",poolBalance:"53316650"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"898556653160086104956109"}],usdTotal:1431336.5944295954,isMetaPool:false,usdTotalExcludingBasePool:1431336.5944295954,gaugeAddress:"0xde14d2b848a7a1373e155cc4db9b649f4be24296",gaugeRewards:[],gaugeCrvApy:[4.526144872589334,11.315362181473335],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-14",address:"0xAe9e8c9A548505c9ad22a412354186151363c09e",coinsAddresses:["0xA0d69E286B938e21CBf7E51D71F6A4c8918f482F","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:0,amplificationCoefficient:"500",assetType:"0",totalSupply:"0",name:"Curve.fi Factory Plain Pool: crvUSD/eUSD",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"crvUSDeUSD-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-14/swap","https://classic.curve.fi/factory-crvusd-14"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-14/deposit","https://classic.curve.fi/factory-crvusd-14/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-14/withdraw","https://classic.curve.fi/factory-crvusd-14/withdraw"]},implementation:"",lpTokenAddress:"0xAe9e8c9A548505c9ad22a412354186151363c09e",assetTypeName:"usd",coins:[{address:"0xA0d69E286B938e21CBf7E51D71F6A4c8918f482F",usdPrice:1.001,decimals:"18",isBasePoolLpToken:false,symbol:"eUSD",poolBalance:"0"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-15",address:"0x9c3B46C0Ceb5B9e304FCd6D88Fc50f7DD24B31Bc",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x5E8422345238F34275888049021821E8E08CAa1f","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000188638695665470",amplificationCoefficient:"1000",assetType:"1",totalSupply:"24546098575420139518552",name:"Curve.fi Factory Plain Pool: frxETH/WETH",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"frxeth-ng-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-15/swap","https://classic.curve.fi/factory-crvusd-15"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-15/deposit","https://classic.curve.fi/factory-crvusd-15/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-15/withdraw","https://classic.curve.fi/factory-crvusd-15/withdraw"]},implementation:"",lpTokenAddress:"0x9c3B46C0Ceb5B9e304FCd6D88Fc50f7DD24B31Bc",assetTypeName:"eth",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1633.51,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"5751944898945990483498"},{address:"0x5E8422345238F34275888049021821E8E08CAa1f",usdPrice:1632.5084960631546,decimals:"18",isBasePoolLpToken:false,symbol:"frxETH",poolBalance:"18803610668492206868188"}],usdTotal:40092913.68485457,isMetaPool:false,usdTotalExcludingBasePool:40092913.68485457,gaugeAddress:"0x4e21418095d32d15c6e2b96a9910772613a50d50",gaugeRewards:[],gaugeCrvApy:[3.888814420311535,9.722036050778836],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-16",address:"0xB7ECB2AA52AA64a717180E030241bC75Cd946726",coinsAddresses:["0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","0x18084fbA666a33d37592fA2633fD49a74DD93a88","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["8","18","0","0"],virtualPrice:"1000504236578089748",amplificationCoefficient:"300",assetType:"2",totalSupply:"388566142343173827282",name:"Curve.fi Factory Plain Pool: tBTC/WBTC",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"2BTC-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-16/swap","https://classic.curve.fi/factory-crvusd-16"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-16/deposit","https://classic.curve.fi/factory-crvusd-16/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-16/withdraw","https://classic.curve.fi/factory-crvusd-16/withdraw"]},implementation:"",lpTokenAddress:"0xB7ECB2AA52AA64a717180E030241bC75Cd946726",assetTypeName:"btc",coins:[{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:27434,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"25360905403"},{address:"0x18084fbA666a33d37592fA2633fD49a74DD93a88",usdPrice:27489.6265501,decimals:"18",isBasePoolLpToken:false,symbol:"tBTC",poolBalance:"135218981814677741482"}],usdTotal:10674630.100829273,isMetaPool:false,usdTotalExcludingBasePool:10674630.100829273,gaugeAddress:"0x5010263ac1978297f56048c7d2b02316a3435404",gaugeRewards:[],gaugeCrvApy:[.5388566388933498,1.3471415972333745],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-17",address:"0x3de254A0f838a844F727fee81040e0FA7884B935",coinsAddresses:["0x4591DBfF62656E7859Afe5e45f6f47D3669fBB28","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000332149649429855",amplificationCoefficient:"100",assetType:"0",totalSupply:"9796827785152794603495569",name:"Curve.fi Factory Plain Pool: mkUSD/crvUSD",implementationAddress:"0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286",symbol:"mkcrvUSD-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-17/swap","https://classic.curve.fi/factory-crvusd-17"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-17/deposit","https://classic.curve.fi/factory-crvusd-17/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-17/withdraw","https://classic.curve.fi/factory-crvusd-17/withdraw"]},implementation:"",lpTokenAddress:"0x3de254A0f838a844F727fee81040e0FA7884B935",assetTypeName:"usd",coins:[{address:"0x4591DBfF62656E7859Afe5e45f6f47D3669fBB28",usdPrice:.997867032181803,decimals:"18",isBasePoolLpToken:false,symbol:"mkUSD",poolBalance:"5123442778061858383687611"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"4676740024707908999781705"}],usdTotal:9785379.85472921,isMetaPool:false,usdTotalExcludingBasePool:9785379.85472921,gaugeAddress:"0x0e5bdb5afe132d1c6a6c67f6d8eb6133dd607e36",gaugeRewards:[{gaugeAddress:"0x0e5bdb5afe132d1c6a6c67f6d8eb6133dd607e36",tokenPrice:.480011,name:"Curve DAO Token",symbol:"CRV",decimals:"18",tokenAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",apy:0}],gaugeCrvApy:[5.65198583805072,14.1299645951268],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-18",address:"0x143B33AF57172E2FBF67F30B3A4d49e7f0199EeC",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x83F20F44975D03b1b09e64809B757c47f942BEeA","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:0,amplificationCoefficient:"50",assetType:"0",totalSupply:"0",name:"Curve.fi Factory Plain Pool: crvUSD<>sDAI",implementationAddress:"0x0C9D8c7e486e822C29488Ff51BFf0167B4650953",symbol:"crvsDAI-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-18/swap","https://classic.curve.fi/factory-crvusd-18"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-18/deposit","https://classic.curve.fi/factory-crvusd-18/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-18/withdraw","https://classic.curve.fi/factory-crvusd-18/withdraw"]},implementation:"",lpTokenAddress:"0x143B33AF57172E2FBF67F30B3A4d49e7f0199EeC",assetTypeName:"usd",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"0"},{address:"0x83F20F44975D03b1b09e64809B757c47f942BEeA",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"sDAI",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-19",address:"0xb7be2211430D8b59BFCBcA029c2f3a2577369A19",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x25eC98773D7b4ceD4cAFaB96A2A1c0945f145e10","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:0,amplificationCoefficient:"50",assetType:"0",totalSupply:"0",name:"Curve.fi Factory Plain Pool: crvUSD<>stUSDT",implementationAddress:"0x7Ca46A636b02D4aBC66883D7FF164bDE506DC66a",symbol:"crvstUSDT-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-19/swap","https://classic.curve.fi/factory-crvusd-19"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-19/deposit","https://classic.curve.fi/factory-crvusd-19/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-19/withdraw","https://classic.curve.fi/factory-crvusd-19/withdraw"]},implementation:"",lpTokenAddress:"0xb7be2211430D8b59BFCBcA029c2f3a2577369A19",assetTypeName:"usd",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"0"},{address:"0x25eC98773D7b4ceD4cAFaB96A2A1c0945f145e10",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"stUSDT",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-20",address:"0xAcfFeB3DD13Ca770976deB3deaD62D4Eb5cf0ac4",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x83F20F44975D03b1b09e64809B757c47f942BEeA","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000237021990594318",amplificationCoefficient:"500",assetType:"0",totalSupply:"21984015259980778203638",name:"Curve.fi Factory Plain Pool: crvUSD-sDAI",implementationAddress:"0x0C9D8c7e486e822C29488Ff51BFf0167B4650953",symbol:"crvsDAI-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-20/swap","https://classic.curve.fi/factory-crvusd-20"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-20/deposit","https://classic.curve.fi/factory-crvusd-20/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-20/withdraw","https://classic.curve.fi/factory-crvusd-20/withdraw"]},implementation:"",lpTokenAddress:"0xAcfFeB3DD13Ca770976deB3deaD62D4Eb5cf0ac4",assetTypeName:"usd",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"11874432970704999324894"},{address:"0x83F20F44975D03b1b09e64809B757c47f942BEeA",usdPrice:1.0360555459239373,decimals:"18",isBasePoolLpToken:false,symbol:"sDAI",poolBalance:"9754089368288073531667"}],usdTotal:21970.3730574365,isMetaPool:false,usdTotalExcludingBasePool:21970.3730574365,gaugeAddress:"0x731d19d122d6187cd64c44708dd8665fe8126fa8",gaugeRewards:[],gaugeCrvApy:[0,0],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-21",address:"0xB9eC78Bd89d3Ef17537f130CC72750FD4DE85f82",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x25eC98773D7b4ceD4cAFaB96A2A1c0945f145e10","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000215143687691768",amplificationCoefficient:"500",assetType:"0",totalSupply:"21991625195572291723076",name:"Curve.fi Factory Plain Pool: crvUSD-stUSDT",implementationAddress:"0x7Ca46A636b02D4aBC66883D7FF164bDE506DC66a",symbol:"crvstUSDT-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-21/swap","https://classic.curve.fi/factory-crvusd-21"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-21/deposit","https://classic.curve.fi/factory-crvusd-21/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-21/withdraw","https://classic.curve.fi/factory-crvusd-21/withdraw"]},implementation:"",lpTokenAddress:"0xB9eC78Bd89d3Ef17537f130CC72750FD4DE85f82",assetTypeName:"usd",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"11000999481363505864610"},{address:"0x25eC98773D7b4ceD4cAFaB96A2A1c0945f145e10",usdPrice:.9987726450299316,decimals:"18",isBasePoolLpToken:false,symbol:"stUSDT",poolBalance:"10995357074996172320233"}],usdTotal:21973.74671547818,isMetaPool:false,usdTotalExcludingBasePool:21973.74671547818,gaugeAddress:"0x188a85362cc5e245a377294aa270c7758a203918",gaugeRewards:[],gaugeCrvApy:[0,0],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-crvusd-22",address:"0x707EAe1CcFee0B8fef07D3F18EAFD1246762d587",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x530824DA86689C9C17CdC2871Ff29B058345b44a","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1000259475050006151",amplificationCoefficient:"500",assetType:"0",totalSupply:"2399999999999999999999",name:"Curve.fi Factory Plain Pool: crvUSD-STBT",implementationAddress:"0x7Ca46A636b02D4aBC66883D7FF164bDE506DC66a",symbol:"crvSTBT-f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-crvusd-22/swap","https://classic.curve.fi/factory-crvusd-22"],deposit:["https://curve.fi/#/ethereum/pools/factory-crvusd-22/deposit","https://classic.curve.fi/factory-crvusd-22/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-crvusd-22/withdraw","https://classic.curve.fi/factory-crvusd-22/withdraw"]},implementation:"",lpTokenAddress:"0x707EAe1CcFee0B8fef07D3F18EAFD1246762d587",assetTypeName:"usd",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991714721245769,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"1200000000000000000000"},{address:"0x530824DA86689C9C17CdC2871Ff29B058345b44a",usdPrice:.998097,decimals:"18",isBasePoolLpToken:false,symbol:"STBT",poolBalance:"1200622740281236023106"}],usdTotal:2397.343721755973,isMetaPool:false,usdTotalExcludingBasePool:2397.343721755973,gaugeAddress:"0xd32f4be8f777ac27c6aad544457de6d4f17a1bfa",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-0",address:"0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B",coinsAddresses:["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"],decimals:["6","8","18"],virtualPrice:"1002049320687773948",amplificationCoefficient:"1707629",name:"TricryptoUSDC",symbol:"crvUSDCWBTCWETH",totalSupply:"40325750544246135325473",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-0/swap","https://classic.curve.fi/factory-tricrypto-0"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-0/deposit","https://classic.curve.fi/factory-tricrypto-0/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-0/withdraw","https://classic.curve.fi/factory-tricrypto-0/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x7F86Bf177Dd4F3494b841a37e810A34dD56c829B",assetTypeName:"unknown",coins:[{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"14312782429165"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:27410,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"52272267260"},{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"8818508828745618373595"}],usdTotal:43030918.14714296,isMetaPool:false,usdTotalExcludingBasePool:43030918.14714296,gaugeAddress:"0x85d44861d024cb7603ba906f2dc9569fc02083f6",gaugeRewards:[{gaugeAddress:"0x85d44861d024cb7603ba906f2dc9569fc02083f6",tokenPrice:.478919,name:"Curve DAO Token",symbol:"CRV",decimals:"18",tokenAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",apy:0}],gaugeCrvApy:[4.431697423947198,11.079243559867995],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-1",address:"0xf5f5B97624542D72A9E06f04804Bf81baA15e2B4",coinsAddresses:["0xdAC17F958D2ee523a2206206994597C13D831ec7","0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"],decimals:["6","8","18"],virtualPrice:"1000900458907466861",amplificationCoefficient:"2700000",name:"TricryptoUSDT",symbol:"crvUSDTWBTCWETH",totalSupply:"41222678711938281586777",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-1/swap","https://classic.curve.fi/factory-tricrypto-1"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-1/deposit","https://classic.curve.fi/factory-tricrypto-1/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-1/withdraw","https://classic.curve.fi/factory-tricrypto-1/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0xf5f5B97624542D72A9E06f04804Bf81baA15e2B4",assetTypeName:"unknown",coins:[{address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"14572444944327"},{address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",usdPrice:27410,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"53231045482"},{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"9053790155050165445199"}],usdTotal:43937320.89965871,isMetaPool:false,usdTotalExcludingBasePool:43937320.89965871,gaugeAddress:"0xf29fff074f5cf755b55fbb3eb10a29203ac91ea2",gaugeRewards:[{gaugeAddress:"0xf29fff074f5cf755b55fbb3eb10a29203ac91ea2",tokenPrice:.478919,name:"Curve DAO Token",symbol:"CRV",decimals:"18",tokenAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52",apy:0}],gaugeCrvApy:[4.772158925727808,11.93039731431952],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-2",address:"0x2889302a794dA87fBF1D6Db415C1492194663D13",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x18084fbA666a33d37592fA2633fD49a74DD93a88","0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"],decimals:["18","18","18"],virtualPrice:"1000504566900150811",amplificationCoefficient:"1707629",name:"TricryptoLLAMA",symbol:"crvCRVUSDTBTCWSTETH",totalSupply:"7913805871387971939835",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-2/swap","https://classic.curve.fi/factory-tricrypto-2"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-2/deposit","https://classic.curve.fi/factory-tricrypto-2/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-2/withdraw","https://classic.curve.fi/factory-tricrypto-2/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x2889302a794dA87fBF1D6Db415C1492194663D13",assetTypeName:"unknown",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991719863324405,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"2936257317440661995758528"},{address:"0x18084fbA666a33d37592fA2633fD49a74DD93a88",usdPrice:27465.577886500003,decimals:"18",isBasePoolLpToken:false,symbol:"tBTC",poolBalance:"106937751703241119644"},{address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",usdPrice:1860.675622021752,decimals:"18",isBasePoolLpToken:false,symbol:"wstETH",poolBalance:"1580735265939650836554",ethLsdApy:.0413666701092736}],usdTotal:8812168.778866895,isMetaPool:false,usdTotalExcludingBasePool:8812168.778866895,gaugeAddress:"0x60d3d7ebbc44dc810a743703184f062d00e6db7e",gaugeRewards:[{gaugeAddress:"0x60d3d7ebbc44dc810a743703184f062d00e6db7e",tokenPrice:1860.675622021752,name:"Wrapped liquid staked Ether 2.0",symbol:"wstETH",decimals:"18",tokenAddress:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",apy:14.892469835537284}],gaugeCrvApy:[8.690297408408142,21.725743521020355],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-3",address:"0x5426178799ee0a0181A89b4f57eFddfAb49941Ec",coinsAddresses:["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x41D5D79431A913C4aE7d69a668ecdfE5fF9DFB68"],decimals:["6","18","18"],virtualPrice:"1005732812033081605",amplificationCoefficient:"2700000",name:"TricryptoINV",symbol:"crvUSDCWETHINV",totalSupply:"6748231185078228861625",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-3/swap","https://classic.curve.fi/factory-tricrypto-3"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-3/deposit","https://classic.curve.fi/factory-tricrypto-3/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-3/withdraw","https://classic.curve.fi/factory-tricrypto-3/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x5426178799ee0a0181A89b4f57eFddfAb49941Ec",assetTypeName:"unknown",coins:[{address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC",poolBalance:"257197581891"},{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"156614209918334815189"},{address:"0x41D5D79431A913C4aE7d69a668ecdfE5fF9DFB68",usdPrice:32.982997,decimals:"18",isBasePoolLpToken:false,symbol:"INV",poolBalance:"7760668537862057403932"}],usdTotal:768735.455164335,isMetaPool:false,usdTotalExcludingBasePool:768735.455164335,gaugeAddress:"0x4fc86cd0f9b650280fa783e3116258e0e0496a2c",gaugeRewards:[],gaugeCrvApy:[21.33466555061164,53.3366638765291],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-4",address:"0x4eBdF703948ddCEA3B11f675B4D1Fba9d2414A14",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0xD533a949740bb3306d119CC777fa900bA034cd52"],decimals:["18","18","18"],virtualPrice:"1028141344419732828",amplificationCoefficient:"2700000",name:"TriCRV",symbol:"crvUSDETHCRV",totalSupply:"761527509793526851269900",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-4/swap","https://classic.curve.fi/factory-tricrypto-4"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-4/deposit","https://classic.curve.fi/factory-tricrypto-4/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-4/withdraw","https://classic.curve.fi/factory-tricrypto-4/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x4eBdF703948ddCEA3B11f675B4D1Fba9d2414A14",assetTypeName:"unknown",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991719863324405,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"7214657052706881079056766"},{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"4415054540492461107365"},{address:"0xD533a949740bb3306d119CC777fa900bA034cd52",usdPrice:.478919,decimals:"18",isBasePoolLpToken:false,symbol:"CRV",poolBalance:"15068233187134979689424074"}],usdTotal:21629764.838621795,isMetaPool:false,usdTotalExcludingBasePool:21629764.838621795,gaugeAddress:"0x8d867bef70c6733ff25cc0d1caa8aa6c38b24817",gaugeRewards:[],gaugeCrvApy:[10.112235893127853,25.28058973281963],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-5",address:"0x9847a74fB7C3c4362220f616E15b83A58527F7E4",coinsAddresses:["0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB","0xb2F30A7C980f052f02563fb518dcc39e6bf38175","0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"],decimals:["18","18","18"],virtualPrice:"1010099985144784812",amplificationCoefficient:"2700000",name:"sUSD/snxUSD/wUSDA",symbol:"3SPool",totalSupply:"44207583258517825077",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-5/swap","https://classic.curve.fi/factory-tricrypto-5"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-5/deposit","https://classic.curve.fi/factory-tricrypto-5/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-5/withdraw","https://classic.curve.fi/factory-tricrypto-5/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x9847a74fB7C3c4362220f616E15b83A58527F7E4",assetTypeName:"unknown",coins:[{address:"0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB",usdPrice:.7811830977008868,decimals:"18",isBasePoolLpToken:false,symbol:"wUSDA",poolBalance:"56232503906786529849"},{address:"0xb2F30A7C980f052f02563fb518dcc39e6bf38175",usdPrice:1.240029803762669,decimals:"18",isBasePoolLpToken:false,symbol:"snxUSD",poolBalance:"35059280808531602448"},{address:"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51",usdPrice:.9986082904448784,decimals:"18",isBasePoolLpToken:false,symbol:"sUSD",poolBalance:"45155983534882994609"}],usdTotal:132.49557421557108,isMetaPool:false,usdTotalExcludingBasePool:132.49557421557108,gaugeAddress:"0x5832c01c465e7c51b22ecb4f02d63081dbed2b28",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-6",address:"0xdcafD1914afDBC5788B701F47283CaeEAa5FBAed",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141","0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB"],decimals:["18","18","18"],virtualPrice:"1042432191787963741",amplificationCoefficient:"2700000",name:"WETH/AMPH/wUSDA",symbol:"AMPHDUP",totalSupply:"24967637017789312016",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-6/swap","https://classic.curve.fi/factory-tricrypto-6"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-6/deposit","https://classic.curve.fi/factory-tricrypto-6/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-6/withdraw","https://classic.curve.fi/factory-tricrypto-6/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0xdcafD1914afDBC5788B701F47283CaeEAa5FBAed",assetTypeName:"unknown",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"60247805738930422"},{address:"0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141",usdPrice:.03418120538996841,decimals:"18",isBasePoolLpToken:false,symbol:"AMPH",poolBalance:"2853463149120650531379"},{address:"0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB",usdPrice:.9426654815809963,decimals:"18",isBasePoolLpToken:false,symbol:"wUSDA",poolBalance:"102459078727613498677"}],usdTotal:292.4336236028688,isMetaPool:false,usdTotalExcludingBasePool:292.4336236028688,gaugeAddress:"0xfb3fd2825fe128c3aa7576a2b87be19880015cae",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-7",address:"0x05CA1ff6fF45e55906c86Ad0d3FB2EbFaE9E0891",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141","0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB"],decimals:["18","18","18"],virtualPrice:0,amplificationCoefficient:"2700000",name:"AMPH/WETH/wUSDA",symbol:"AMPHDUP",totalSupply:"0",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-7/swap","https://classic.curve.fi/factory-tricrypto-7"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-7/deposit","https://classic.curve.fi/factory-tricrypto-7/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-7/withdraw","https://classic.curve.fi/factory-tricrypto-7/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x05CA1ff6fF45e55906c86Ad0d3FB2EbFaE9E0891",assetTypeName:"unknown",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"0"},{address:"0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"AMPH",poolBalance:"0"},{address:"0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"wUSDA",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,gaugeAddress:"0xfbb82a8df175ab3ee94eae2fec1c43467d6cf222",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-8",address:"0x037164C912f9733A0973B18EE339FBeF66cfd2C2",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB","0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141"],decimals:["18","18","18"],virtualPrice:0,amplificationCoefficient:"2700000",name:"AMPH/wUSDA/WETH",symbol:"AMPHDUP",totalSupply:"0",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-8/swap","https://classic.curve.fi/factory-tricrypto-8"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-8/deposit","https://classic.curve.fi/factory-tricrypto-8/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-8/withdraw","https://classic.curve.fi/factory-tricrypto-8/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x037164C912f9733A0973B18EE339FBeF66cfd2C2",assetTypeName:"unknown",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"0"},{address:"0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"wUSDA",poolBalance:"0"},{address:"0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"AMPH",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,gaugeAddress:"0x23376482abc1403e24306d6d09da10df7f9c570f",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-9",address:"0x3921e2cb3Ac3bC009Fa4ec5Ea1ee0bc7FA4Be4C1",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB","0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141"],decimals:["18","18","18"],virtualPrice:0,amplificationCoefficient:"2700000",name:"AMPH/wUSDA/WETH",symbol:"AMPHDUP",totalSupply:"0",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-9/swap","https://classic.curve.fi/factory-tricrypto-9"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-9/deposit","https://classic.curve.fi/factory-tricrypto-9/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-9/withdraw","https://classic.curve.fi/factory-tricrypto-9/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x3921e2cb3Ac3bC009Fa4ec5Ea1ee0bc7FA4Be4C1",assetTypeName:"unknown",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"0"},{address:"0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"wUSDA",poolBalance:"0"},{address:"0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"AMPH",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,gaugeAddress:"0xa6aae326b8901a610db0d25e863b2a1b2f10cd4e",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-10",address:"0x38AB39c82BE45f660AFa4A74E85dAd4b4aDd0492",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB","0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141"],decimals:["18","18","18"],virtualPrice:0,amplificationCoefficient:"1707629",name:"AMPH/wUSDA/WETH",symbol:"AMPHDUP",totalSupply:"0",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-10/swap","https://classic.curve.fi/factory-tricrypto-10"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-10/deposit","https://classic.curve.fi/factory-tricrypto-10/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-10/withdraw","https://classic.curve.fi/factory-tricrypto-10/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x38AB39c82BE45f660AFa4A74E85dAd4b4aDd0492",assetTypeName:"unknown",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"0"},{address:"0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"wUSDA",poolBalance:"0"},{address:"0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"AMPH",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,gaugeAddress:"0xbb091d9a2ea48f35360420e5bee935663042bbc3",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-11",address:"0x86bF09aCB47AB31686bE413d614E9ded3666a1d3",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x5E8422345238F34275888049021821E8E08CAa1f","0x6f80310CA7F2C654691D1383149Fa1A57d8AB1f8"],decimals:["18","18","18"],virtualPrice:"1002199079179203419",amplificationCoefficient:"2700000",name:"TriSILO",symbol:"crvUSDETHSILO",totalSupply:"12240369482712670843352",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-11/swap","https://classic.curve.fi/factory-tricrypto-11"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-11/deposit","https://classic.curve.fi/factory-tricrypto-11/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-11/withdraw","https://classic.curve.fi/factory-tricrypto-11/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x86bF09aCB47AB31686bE413d614E9ded3666a1d3",assetTypeName:"unknown",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991719863324405,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"54602718557758631064770"},{address:"0x5E8422345238F34275888049021821E8E08CAa1f",usdPrice:1630.013991953164,decimals:"18",isBasePoolLpToken:false,symbol:"frxETH",poolBalance:"33491386549923032636"},{address:"0x6f80310CA7F2C654691D1383149Fa1A57d8AB1f8",usdPrice:.053819987265776144,decimals:"18",isBasePoolLpToken:false,symbol:"Silo",poolBalance:"1009445657139138317059990"}],usdTotal:163477.2878595149,isMetaPool:false,usdTotalExcludingBasePool:163477.2878595149,gaugeAddress:"0xb901a92f2c385afa0a019e8a307a59a570239ca4",gaugeRewards:[],gaugeCrvApy:[38.380144938041816,95.95036234510454],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-12",address:"0x50120e3348287C6d001E455f5b00FeA07A875541",coinsAddresses:["0xFE77ff4Cff74DCb6Aa570869F4f075c727054575","0x5Ac4a1E420f0F510ef94DB86CDbaB59d5C0F2c83","0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141"],decimals:["18","18","18"],virtualPrice:"1000014578381757544",amplificationCoefficient:"2700000",name:"3AMPH",symbol:"3AMPH",totalSupply:"1711024552639623471981",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-12/swap","https://classic.curve.fi/factory-tricrypto-12"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-12/deposit","https://classic.curve.fi/factory-tricrypto-12/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-12/withdraw","https://classic.curve.fi/factory-tricrypto-12/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x50120e3348287C6d001E455f5b00FeA07A875541",assetTypeName:"unknown",coins:[{address:"0xFE77ff4Cff74DCb6Aa570869F4f075c727054575",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"oAMPH",poolBalance:"11005336666666000000"},{address:"0x5Ac4a1E420f0F510ef94DB86CDbaB59d5C0F2c83",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"vAMPH",poolBalance:"1100533336666600000000"},{address:"0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"AMPH",poolBalance:"413599999999975010000000"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,gaugeAddress:"0x2b7822e663c856153ea1a36acead03dd3b7c6561",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-13",address:"0x6A62EE3e5c4b412Cd9167D3aFd5E481e1E30715a",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0xa21Af1050F7B26e0cfF45ee51548254C41ED6b5c"],decimals:["18","18","18"],virtualPrice:"1003153541581345615",amplificationCoefficient:"2700000",name:"TriOSAK",symbol:"OSAKETHcrvUSD",totalSupply:"227982739427157583984155",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-13/swap","https://classic.curve.fi/factory-tricrypto-13"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-13/deposit","https://classic.curve.fi/factory-tricrypto-13/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-13/withdraw","https://classic.curve.fi/factory-tricrypto-13/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x6A62EE3e5c4b412Cd9167D3aFd5E481e1E30715a",assetTypeName:"unknown",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"5263013418102101472"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991719863324405,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"8647437989440007429732"},{address:"0xa21Af1050F7B26e0cfF45ee51548254C41ED6b5c",usdPrice:3.2587599408759997e-8,decimals:"18",isBasePoolLpToken:false,symbol:"OSAK",poolBalance:"262831897935074574790872926963"}],usdTotal:25793.681580409233,isMetaPool:false,usdTotalExcludingBasePool:25793.681580409233,gaugeAddress:"0x8c94e9a3b68316fba06ba6666acdfc2dc7b7f623",gaugeRewards:[],gaugeCrvApy:[0,0],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-14",address:"0x2570f1bD5D2735314FC102eb12Fc1aFe9e6E7193",coinsAddresses:["0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0","0xae78736Cd615f374D3085123A210448E74Fc6393","0xac3E018457B222d93114458476f3E3416Abbe38F"],decimals:["18","18","18"],virtualPrice:"1000408662225744463",amplificationCoefficient:"27000000",name:"TryLSD",symbol:"TryLSD",totalSupply:"36368832082815854152",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-14/swap","https://classic.curve.fi/factory-tricrypto-14"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-14/deposit","https://classic.curve.fi/factory-tricrypto-14/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-14/withdraw","https://classic.curve.fi/factory-tricrypto-14/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x2570f1bD5D2735314FC102eb12Fc1aFe9e6E7193",assetTypeName:"unknown",coins:[{address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",usdPrice:1860.675622021752,decimals:"18",isBasePoolLpToken:false,symbol:"wstETH",poolBalance:"33925888251561859452",ethLsdApy:.0413666701092736},{address:"0xae78736Cd615f374D3085123A210448E74Fc6393",usdPrice:1772.61,decimals:"18",isBasePoolLpToken:false,symbol:"rETH",poolBalance:"39206078958699443769",ethLsdApy:.03285942921078596},{address:"0xac3E018457B222d93114458476f3E3416Abbe38F",usdPrice:1719.356324476935,decimals:"18",isBasePoolLpToken:false,symbol:"sfrxETH",poolBalance:"36069808052406484252",ethLsdApy:.03981080465316096}],usdTotal:194639.0134456697,isMetaPool:false,usdTotalExcludingBasePool:194639.0134456697,gaugeAddress:"0xea012f5b25fa0d8e46123b85f585d0a5075e96b5",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-15",address:"0x56aEFfd9935ACabF21543701212d67aD529F7f2e",coinsAddresses:["0x5E8422345238F34275888049021821E8E08CAa1f","0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x73968b9a57c6E53d41345FD57a6E6ae27d6CDB2F"],decimals:["18","18","18"],virtualPrice:0,amplificationCoefficient:"2700000",name:"triSDT",symbol:"triSDT",totalSupply:"0",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-15/swap","https://classic.curve.fi/factory-tricrypto-15"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-15/deposit","https://classic.curve.fi/factory-tricrypto-15/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-15/withdraw","https://classic.curve.fi/factory-tricrypto-15/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x56aEFfd9935ACabF21543701212d67aD529F7f2e",assetTypeName:"unknown",coins:[{address:"0x5E8422345238F34275888049021821E8E08CAa1f",usdPrice:1630.013991953164,decimals:"18",isBasePoolLpToken:false,symbol:"frxETH",poolBalance:"0"},{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991719863324405,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"0"},{address:"0x73968b9a57c6E53d41345FD57a6E6ae27d6CDB2F",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"SDT",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,gaugeAddress:"0x33dc66f2808d8df2798e9e02ce15f8658ac6d0f8",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-16",address:"0x954313005C56b555bdC41B84D6c63B69049d7847",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0x5E8422345238F34275888049021821E8E08CAa1f","0x73968b9a57c6E53d41345FD57a6E6ae27d6CDB2F"],decimals:["18","18","18"],virtualPrice:"1000019378924002489",amplificationCoefficient:"2700000",name:"triSDT",symbol:"triSDT",totalSupply:"12785374305977221548",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-16/swap","https://classic.curve.fi/factory-tricrypto-16"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-16/deposit","https://classic.curve.fi/factory-tricrypto-16/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-16/withdraw","https://classic.curve.fi/factory-tricrypto-16/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x954313005C56b555bdC41B84D6c63B69049d7847",assetTypeName:"unknown",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991719863324405,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"100921592228098905494"},{address:"0x5E8422345238F34275888049021821E8E08CAa1f",usdPrice:1630.013991953164,decimals:"18",isBasePoolLpToken:false,symbol:"frxETH",poolBalance:"60796524561532685"},{address:"0x73968b9a57c6E53d41345FD57a6E6ae27d6CDB2F",usdPrice:.2943996603664951,decimals:"18",isBasePoolLpToken:false,symbol:"SDT",poolBalance:"340637710031170854134"}],usdTotal:300.220839609002,isMetaPool:false,usdTotalExcludingBasePool:300.220839609002,gaugeAddress:"0x2dd2b7e07dd433b758b98a3889a63cbf48ef0d99",gaugeRewards:[],gaugeCrvApy:[210.26099119631465,525.6524779907866],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-17",address:"0x1Ac76b6e2926ff475969d22a2258449a4600E006",coinsAddresses:["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB","0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141"],decimals:["18","18","18"],virtualPrice:0,amplificationCoefficient:"2700000",name:"AMPH/WETH/wUSDA",symbol:"AMPHDUP",totalSupply:"0",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-17/swap","https://classic.curve.fi/factory-tricrypto-17"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-17/deposit","https://classic.curve.fi/factory-tricrypto-17/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-17/withdraw","https://classic.curve.fi/factory-tricrypto-17/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x1Ac76b6e2926ff475969d22a2258449a4600E006",assetTypeName:"unknown",coins:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"0"},{address:"0x43833f0C2025dFA80b5556574FAA11CBf7F3f4eB",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"wUSDA",poolBalance:"0"},{address:"0x943c5F4F54509d1e78B1fCD93B92c43ce83d3141",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"AMPH",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-18",address:"0xC7DE47b9Ca2Fc753D6a2F167D8b3e19c6D18b19a",coinsAddresses:["0x865377367054516e17014CcdED1e7d814EDC9ce4","0xAD038Eb671c44b853887A7E32528FaB35dC5D710","0x41D5D79431A913C4aE7d69a668ecdfE5fF9DFB68"],decimals:["18","18","18"],virtualPrice:"1003563414227141440",amplificationCoefficient:"2700000",name:"TriDBR",symbol:"crvDBRINV",totalSupply:"133887161025198258666030",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-18/swap","https://classic.curve.fi/factory-tricrypto-18"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-18/deposit","https://classic.curve.fi/factory-tricrypto-18/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-18/withdraw","https://classic.curve.fi/factory-tricrypto-18/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0xC7DE47b9Ca2Fc753D6a2F167D8b3e19c6D18b19a",assetTypeName:"unknown",coins:[{address:"0x865377367054516e17014CcdED1e7d814EDC9ce4",usdPrice:.993478,decimals:"18",isBasePoolLpToken:false,symbol:"DOLA",poolBalance:"196911306620888129635706"},{address:"0xAD038Eb671c44b853887A7E32528FaB35dC5D710",usdPrice:.09328105447492173,decimals:"18",isBasePoolLpToken:false,symbol:"DBR",poolBalance:"2083727730240240725654849"},{address:"0x41D5D79431A913C4aE7d69a668ecdfE5fF9DFB68",usdPrice:32.982997,decimals:"18",isBasePoolLpToken:false,symbol:"INV",poolBalance:"5911794289385357853795"}],usdTotal:584988.064305966,isMetaPool:false,usdTotalExcludingBasePool:584988.064305966,gaugeAddress:"0x5ccde4bec0f4006c3826b51edf0d227d12ea33fa",gaugeRewards:[],gaugeCrvApy:[null,null],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-19",address:"0x5b3BA844b3859f56524e99Ae54857b36c8Ae3eFE",coinsAddresses:["0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32"],decimals:["18","18","18"],virtualPrice:"1000120334403525528",amplificationCoefficient:"2700000",name:"TriLDO",symbol:"crvUSDETHLDO",totalSupply:"2350932279362046274462",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-19/swap","https://classic.curve.fi/factory-tricrypto-19"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-19/deposit","https://classic.curve.fi/factory-tricrypto-19/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-19/withdraw","https://classic.curve.fi/factory-tricrypto-19/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x5b3BA844b3859f56524e99Ae54857b36c8Ae3eFE",assetTypeName:"unknown",coins:[{address:"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E",usdPrice:.9991719863324405,decimals:"18",isBasePoolLpToken:false,symbol:"crvUSD",poolBalance:"32268189185169845610064"},{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",usdPrice:1631.83,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"19546143983207051786"},{address:"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",usdPrice:1.5570428757025636,decimals:"18",isBasePoolLpToken:false,symbol:"LDO",poolBalance:"20607226447978973462330"}],usdTotal:96223.789948429,isMetaPool:false,usdTotalExcludingBasePool:96223.789948429,gaugeAddress:"0xab79226e4fbd6d299316c0964be9f417c8f920c9",gaugeRewards:[],gaugeCrvApy:[0,0],usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-20",address:"0x8e2b641271544300e59d14E27520DEA204056D66",coinsAddresses:["0xE72B141DF173b999AE7c1aDcbF60Cc9833Ce56a8","0xA0d69E286B938e21CBf7E51D71F6A4c8918f482F","0x320623b8E4fF03373931769A31Fc52A4E78B5d70"],decimals:["18","18","18"],virtualPrice:0,amplificationCoefficient:"2700000",name:"TriRSR",symbol:"crvRSReUSD",totalSupply:"0",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-20/swap","https://classic.curve.fi/factory-tricrypto-20"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-20/deposit","https://classic.curve.fi/factory-tricrypto-20/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-20/withdraw","https://classic.curve.fi/factory-tricrypto-20/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0x8e2b641271544300e59d14E27520DEA204056D66",assetTypeName:"unknown",coins:[{address:"0xE72B141DF173b999AE7c1aDcbF60Cc9833Ce56a8",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"ETH+",poolBalance:"0"},{address:"0xA0d69E286B938e21CBf7E51D71F6A4c8918f482F",usdPrice:1.001,decimals:"18",isBasePoolLpToken:false,symbol:"eUSD",poolBalance:"0"},{address:"0x320623b8E4fF03373931769A31Fc52A4E78B5d70",usdPrice:null,decimals:"18",isBasePoolLpToken:false,symbol:"RSR",poolBalance:"0"}],usdTotal:0,isMetaPool:false,usdTotalExcludingBasePool:0,usesRateOracle:false,isBroken:false,chainId:1},{id:"factory-tricrypto-21",address:"0xDB6925eA42897ca786a045B252D95aA7370f44b4",coinsAddresses:["0xE72B141DF173b999AE7c1aDcbF60Cc9833Ce56a8","0xA0d69E286B938e21CBf7E51D71F6A4c8918f482F","0x320623b8E4fF03373931769A31Fc52A4E78B5d70"],decimals:["18","18","18"],virtualPrice:"1000014395659820855",amplificationCoefficient:"2700000",name:"TriRSR",symbol:"crvRSReUSDETH+",totalSupply:"597222394892944420152981",implementationAddress:"0x66442B0C5260B92cAa9c234ECf2408CBf6b19a6f",poolUrls:{swap:["https://curve.fi/#/ethereum/pools/factory-tricrypto-21/swap","https://classic.curve.fi/factory-tricrypto-21"],deposit:["https://curve.fi/#/ethereum/pools/factory-tricrypto-21/deposit","https://classic.curve.fi/factory-tricrypto-21/deposit"],withdraw:["https://curve.fi/#/ethereum/pools/factory-tricrypto-21/withdraw","https://classic.curve.fi/factory-tricrypto-21/withdraw"]},implementation:"tricrypto-1",lpTokenAddress:"0xDB6925eA42897ca786a045B252D95aA7370f44b4",assetTypeName:"unknown",coins:[{address:"0xE72B141DF173b999AE7c1aDcbF60Cc9833Ce56a8",usdPrice:1639.8217272047984,decimals:"18",isBasePoolLpToken:false,symbol:"ETH+",poolBalance:"521508319895473540329"},{address:"0xA0d69E286B938e21CBf7E51D71F6A4c8918f482F",usdPrice:1.001,decimals:"18",isBasePoolLpToken:false,symbol:"eUSD",poolBalance:"856586546653246582225133"},{address:"0x320623b8E4fF03373931769A31Fc52A4E78B5d70",usdPrice:.0017990356387957902,decimals:"18",isBasePoolLpToken:false,symbol:"RSR",poolBalance:"476855429044186739468058184"}],usdTotal:2570503.7184863165,isMetaPool:false,usdTotalExcludingBasePool:2570503.7184863165,usesRateOracle:false,isBroken:false,chainId:1}];var curvePoolsArbitrum=[{id:"0",address:"0x7f90122BF0700F9E7e1F688fe926940E8839F353",coinsAddresses:["0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8","0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["6","6","0","0"],virtualPrice:"1014230985707546798",amplificationCoefficient:"2000",assetType:"0",totalSupply:"9607123446582214155681901",name:"Curve.fi USDC/USDT",poolUrls:{swap:["https://curve.fi/#/arbitrum/pools/2pool/swap","https://arbitrum.curve.fi/2pool"],deposit:["https://curve.fi/#/arbitrum/pools/2pool/deposit","https://arbitrum.curve.fi/2pool/deposit"],withdraw:["https://curve.fi/#/arbitrum/pools/2pool/withdraw","https://arbitrum.curve.fi/2pool/withdraw"]},implementation:"",lpTokenAddress:"0x7f90122BF0700F9E7e1F688fe926940E8839F353",assetTypeName:"usd",coins:[{address:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC.e",poolBalance:"5503096756636"},{address:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",usdPrice:.998655,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"4240787085652"}],usdTotal:9738179.9836578,isMetaPool:false,usdTotalExcludingBasePool:9738179.9836578,gaugeAddress:"0xce5f24b7a95e9cba7df4b54e911b4a3dc8cdaf6f",gaugeRewards:[],gaugeCrvApy:[1.9458208366541279,4.8645520916353195],usesRateOracle:false,isBroken:false,chainId:42161},{id:"1",address:"0x3E01dD8a5E1fb3481F0F589056b428Fc308AF0Fb",coinsAddresses:["0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f","0xDBf31dF14B66535aF65AaC99C32e9eA844e14501","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["8","8","0","0"],virtualPrice:"1001661096138534428",amplificationCoefficient:"200",assetType:"0",totalSupply:"14833177421319792636",name:"Curve.fi WBTC/renBTC",poolUrls:{swap:["https://curve.fi/#/arbitrum/pools/ren/swap","https://arbitrum.curve.fi/ren"],deposit:["https://curve.fi/#/arbitrum/pools/ren/deposit","https://arbitrum.curve.fi/ren/deposit"],withdraw:["https://curve.fi/#/arbitrum/pools/ren/withdraw","https://arbitrum.curve.fi/ren/withdraw"]},implementation:"",lpTokenAddress:"0x3E01dD8a5E1fb3481F0F589056b428Fc308AF0Fb",assetTypeName:"usd",coins:[{address:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",usdPrice:27429,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"1101030628"},{address:"0xDBf31dF14B66535aF65AaC99C32e9eA844e14501",usdPrice:27990,decimals:"8",isBasePoolLpToken:false,symbol:"renBTC",poolBalance:"385861777"}],usdTotal:410004.40233642,isMetaPool:false,usdTotalExcludingBasePool:410004.40233642,gaugeAddress:"0xc2b1df84112619d190193e48148000e3990bf627",gaugeRewards:[],gaugeCrvApy:[3.8962243071189464,9.740560767797366],usesRateOracle:false,isBroken:false,chainId:42161},{id:"2",address:"0x960ea3e3C7FB317332d990873d354E18d7645590",coinsAddresses:["0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f","0x82aF49447D8a07e3bd95BD0d56f35241523fBab1","0x0000000000000000000000000000000000000000"],decimals:["6","8","18","0"],virtualPrice:"1037805614575258807",amplificationCoefficient:"1707629",assetType:"0",totalSupply:"3100921846676516508664",name:"Curve.fi USD-BTC-ETH",lpTokenAddress:"0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2",symbol:"crv3crypto",priceOracle:27523.33757075064,poolUrls:{swap:["https://curve.fi/#/arbitrum/pools/tricrypto/swap","https://arbitrum.curve.fi/tricrypto"],deposit:["https://curve.fi/#/arbitrum/pools/tricrypto/deposit","https://arbitrum.curve.fi/tricrypto/deposit"],withdraw:["https://curve.fi/#/arbitrum/pools/tricrypto/withdraw","https://arbitrum.curve.fi/tricrypto/withdraw"]},implementation:"",zapAddress:"0xf97c707024ef0dd3e77a0824555a46b622bfb500",assetTypeName:"usd",coins:[{address:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",usdPrice:.998655,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"1133988084956"},{address:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",usdPrice:27429,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"4157398173"},{address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",usdPrice:1616.13,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"706897166523946001849"}],usdTotal:3415233.333588249,isMetaPool:false,usdTotalExcludingBasePool:3415233.333588249,gaugeAddress:"0x555766f3da968ecbefa690ffd49a2ac02f47aa5f",usesRateOracle:false,isBroken:false,chainId:42161},{id:"3",address:"0x30dF229cefa463e991e29D42DB0bae2e122B2AC7",coinsAddresses:["0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A","0x7f90122BF0700F9E7e1F688fe926940E8839F353","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1016856388785511412",amplificationCoefficient:"2000",underlyingDecimals:["18","6","6","0","0","0","0","0"],assetType:"0",totalSupply:"3076861199123745251500384",name:"Curve.fi Factory USD Metapool: MIM",poolUrls:{swap:[],deposit:[],withdraw:[]},implementation:"",lpTokenAddress:"0x30dF229cefa463e991e29D42DB0bae2e122B2AC7",assetTypeName:"usd",coins:[{address:"0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A",usdPrice:.994916,decimals:"18",isBasePoolLpToken:false,symbol:"MIM",poolBalance:"2271753663062725847702826"},{address:"0x7f90122BF0700F9E7e1F688fe926940E8839F353",usdPrice:1.0093909711111868,decimals:"18",isBasePoolLpToken:true,symbol:"2CRV",poolBalance:"845145862896730802299807"}],usdTotal:3113286.6707196482,isMetaPool:true,underlyingCoins:[{address:"0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A",usdPrice:.994916,decimals:"18",isBasePoolLpToken:false,symbol:"MIM",poolBalance:"2271753663062725847702826"},{address:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC.e",poolBalance:"484111553562"},{address:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",usdPrice:.998655,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"373065224028"}],usdTotalExcludingBasePool:2260204.0674397154,usesRateOracle:false,isBroken:false,chainId:42161},{id:"4",address:"0xC9B8a3FDECB9D5b218d02555a8Baf332E5B740d5",coinsAddresses:["0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F","0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","6","0","0"],virtualPrice:"1010780073086985812",amplificationCoefficient:"200",assetType:"0",totalSupply:"1436640549870163832030352",name:"Curve.fi Factory Plain Pool: FRAXBP",poolUrls:{swap:["https://curve.fi/#/arbitrum/pools/factory-v2-41/swap","https://arbitrum.curve.fi/factory-v2-41"],deposit:["https://curve.fi/#/arbitrum/pools/factory-v2-41/deposit","https://arbitrum.curve.fi/factory-v2-41/deposit"],withdraw:["https://curve.fi/#/arbitrum/pools/factory-v2-41/withdraw","https://arbitrum.curve.fi/factory-v2-41/withdraw"]},implementation:"",lpTokenAddress:"0xC9B8a3FDECB9D5b218d02555a8Baf332E5B740d5",assetTypeName:"usd",coins:[{address:"0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F",usdPrice:.993981,decimals:"18",isBasePoolLpToken:false,symbol:"FRAX",poolBalance:"799147389007425633327546"},{address:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC.e",poolBalance:"653017201897"}],usdTotal:1447354.52276999,isMetaPool:false,usdTotalExcludingBasePool:1447354.52276999,gaugeAddress:"0x95285ea6ff14f80a2fd3989a6bab993bd6b5fa13",gaugeRewards:[],gaugeCrvApy:[1.0534069337631786,2.6335173344079466],usesRateOracle:false,isBroken:false,chainId:42161},{id:"5",address:"0x6eB2dc694eB516B16Dc9FBc678C60052BbdD7d80",coinsAddresses:["0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE","0x5979D7b546E38E414F7E9822514be443A4800529","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["18","18","0","0"],virtualPrice:"1027552377812812442",amplificationCoefficient:"50",assetType:"0",totalSupply:"1939818215791007756140",name:"Curve.fi ETH/wstETH",lpTokenAddress:"0xDbcD16e622c95AcB2650b38eC799f76BFC557a0b",symbol:"wstETHCRV",priceOracle:0,poolUrls:{swap:["https://curve.fi/#/arbitrum/pools/wsteth/swap","https://arbitrum.curve.fi/wsteth"],deposit:["https://curve.fi/#/arbitrum/pools/wsteth/deposit","https://arbitrum.curve.fi/wsteth/deposit"],withdraw:["https://curve.fi/#/arbitrum/pools/wsteth/withdraw","https://arbitrum.curve.fi/wsteth/withdraw"]},implementation:"",assetTypeName:"eth",coins:[{address:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",usdPrice:1615.16,poolBalance:"981271300454466437119",decimals:18,symbol:"ETH",isBasePoolLpToken:false},{address:"0x5979D7b546E38E414F7E9822514be443A4800529",usdPrice:1842.34468433796,decimals:"18",isBasePoolLpToken:false,symbol:"wstETH",poolBalance:"886294815738068736994"}],usdTotal:3217770.6961733587,isMetaPool:false,usdTotalExcludingBasePool:3217770.6961733587,gaugeAddress:"0x098ef55011b6b8c99845128114a9d9159777d697",gaugeRewards:[{gaugeAddress:"0x098ef55011b6b8c99845128114a9d9159777d697",tokenPrice:1.53,name:"Lido DAO Token",symbol:"LDO",decimals:"18",apy:0,metaData:{rate:"1240079365079365",periodFinish:1687774470},tokenAddress:"0x13Ad51ed4F1B7e9Dc168d8a00cB3f4dDD85EfA60"}],gaugeCrvApy:[0,0],usesRateOracle:false,isBroken:false,chainId:42161},{id:"crypto-0",address:"0x960ea3e3C7FB317332d990873d354E18d7645590",coinsAddresses:["0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f","0x82aF49447D8a07e3bd95BD0d56f35241523fBab1","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["6","8","18","0","0","0","0","0"],virtualPrice:"1037805143929062883",amplificationCoefficient:"1707629",lpTokenAddress:"0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2",name:"Curve.fi USD-BTC-ETH",symbol:"crv3crypto",totalSupply:"3100921846676516508664",priceOracle:27510.457441356284,poolUrls:{swap:["https://curve.fi/#/arbitrum/pools/tricrypto/swap","https://arbitrum.curve.fi/tricrypto"],deposit:["https://curve.fi/#/arbitrum/pools/tricrypto/deposit","https://arbitrum.curve.fi/tricrypto/deposit"],withdraw:["https://curve.fi/#/arbitrum/pools/tricrypto/withdraw","https://arbitrum.curve.fi/tricrypto/withdraw"]},implementation:"",zapAddress:"0xf97c707024ef0dd3e77a0824555a46b622bfb500",assetTypeName:"unknown",coins:[{address:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",usdPrice:.998655,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"1134531494888"},{address:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",usdPrice:27429,decimals:"8",isBasePoolLpToken:false,symbol:"WBTC",poolBalance:"4157398173"},{address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",usdPrice:1616.13,decimals:"18",isBasePoolLpToken:false,symbol:"WETH",poolBalance:"706561556489682480016"}],usdTotal:3415233.623189216,isMetaPool:false,usdTotalExcludingBasePool:3415233.623189216,gaugeAddress:"0x555766f3da968ecbefa690ffd49a2ac02f47aa5f",usesRateOracle:false,isBroken:false,chainId:42161},{id:"crypto-1",address:"0xA827a652Ead76c6B0b3D19dba05452E06e25c27e",coinsAddresses:["0xD22a58f79e9481D1a88e00c343885A588b34b68B","0x7f90122BF0700F9E7e1F688fe926940E8839F353","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],decimals:["2","18","0","0","0","0","0","0"],virtualPrice:"1014655423269049062",amplificationCoefficient:"200000000",lpTokenAddress:"0x3dFe1324A0ee9d86337d06aEB829dEb4528DB9CA",name:"Curve EURS-2Crv",symbol:"crvEURSUSD",totalSupply:"7189813339717293413289",priceOracle:.9456411453112988,poolUrls:{swap:["https://curve.fi/#/arbitrum/pools/eursusd/swap","https://arbitrum.curve.fi/eursusd"],deposit:["https://curve.fi/#/arbitrum/pools/eursusd/deposit","https://arbitrum.curve.fi/eursusd/deposit"],withdraw:["https://curve.fi/#/arbitrum/pools/eursusd/withdraw","https://arbitrum.curve.fi/eursusd/withdraw"]},implementation:"",zapAddress:"0x25e2e8d104bc1a70492e2be32da7c1f8367f9d2c",assetTypeName:"unknown",coins:[{address:"0xD22a58f79e9481D1a88e00c343885A588b34b68B",usdPrice:1.059,decimals:"2",isBasePoolLpToken:false,symbol:"EURS",poolBalance:"740652"},{address:"0x7f90122BF0700F9E7e1F688fe926940E8839F353",usdPrice:1.0093909711111868,decimals:"18",isBasePoolLpToken:true,symbol:"2CRV",poolBalance:"7152952635507455896438"}],usdTotal:15063.630487067194,isMetaPool:true,underlyingCoins:[{address:"0xD22a58f79e9481D1a88e00c343885A588b34b68B",usdPrice:1.059,decimals:"2",isBasePoolLpToken:false,symbol:"EURS",poolBalance:"740652"},{address:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",usdPrice:1,decimals:"6",isBasePoolLpToken:false,symbol:"USDC.e",poolBalance:"4097312860"},{address:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",usdPrice:.998655,decimals:"6",isBasePoolLpToken:false,symbol:"USDT",poolBalance:"3157464285"}],usdTotalExcludingBasePool:7843.50468,gaugeAddress:"0x6339ef8df0c2d3d3e7ee697e241666a916b81587",gaugeRewards:[],gaugeCrvApy:[0,0],usesRateOracle:false,isBroken:false,chainId:42161}];var votingEscrowContract=[{value:"0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2",address:"0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2",name:"CRV Voting Escrow",chainId:1,decimals:18}];var curvePools=curvePoolsMainnet.concat(curvePoolsArbitrum);var ETH_ADDRESS="0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE";var supportedPools=curvePools.map(function(pool){return{chainId:pool.chainId,address:pool.address,value:pool.address,name:pool.name,decimalsList:pool.decimals,coins:pool.coins,assetTypeName:pool.assetTypeName,symbol:pool.symbol,implementation:pool.implementation,lpTokenAddress:pool.lpTokenAddress,gaugeAddress:pool.gaugeAddress}});var supportedGauges=curvePools.filter(function(pool){return Boolean(pool.gaugeAddress)}).map(function(pool){return{chainId:pool.chainId,address:pool.gaugeAddress,value:pool.gaugeAddress,name:pool.name,symbol:pool.symbol}});var getSupportedTokens$1=function(address,chainId){var _a;return(_a=curvePools.find(function(pool){return pool.address===address&&pool.chainId===Number(chainId)}))===null||_a===void 0?void 0:_a.coins.map(function(coin){return{value:coin.address,name:coin.symbol,symbol:coin.symbol,decimals:Number(coin.decimals)}})};var getSupportedIndexes=function(address,chainId){var _a;if(chainId!=="1"&&chainId!=="42161")return[];var pools=chainId==="1"?curvePoolsMainnet:curvePoolsArbitrum;var supporteIndexes=(_a=pools.find(function(pool){return pool.address===address}))===null||_a===void 0?void 0:_a.coins.map(function(coin,index){return{address:coin.address,value:"".concat(index),name:coin.symbol,symbol:coin.symbol,decimals:Number(coin.decimals)}});return supporteIndexes};var getLPTokenFromGauge=function(chainId,gaugeAddress){var _a;if(chainId!=="1"&&chainId!=="42161")return;var pools=chainId==="1"?curvePoolsMainnet:curvePoolsArbitrum;return(_a=pools.find(function(pool){return pool.gaugeAddress===gaugeAddress}))===null||_a===void 0?void 0:_a.lpTokenAddress};var getLPTokenFromPool=function(chainId,mainContractAddress){var _a;if(chainId!=="1"&&chainId!=="42161")return;var pools=chainId==="1"?curvePoolsMainnet:curvePoolsArbitrum;return(_a=pools.find(function(pool){return pool.address===mainContractAddress}))===null||_a===void 0?void 0:_a.lpTokenAddress};var getSupportedCurveTokens=function(chainId,prevAddresses){var coins=[];var addressSet=prevAddresses?prevAddresses:new Set;curvePools.forEach(function(pool){if(pool.chainId!==Number(chainId))return;pool.coins.forEach(function(coin){if(addressSet.has(coin.address))return;addressSet.add(coin.address);coins.push({chainId:pool.chainId,value:coin.address,name:coin.symbol,symbol:coin.symbol,decimals:Number(coin.decimals),address:coin.address,type:"CURVE"})})});return coins};var mainnetTokensJson=[{token:{symbol:"USDT",address:"0xdAC17F958D2ee523a2206206994597C13D831ec7",decimal:6,xfer_disabled:false},name:"Tether USD",icon:"https://get.celer.app/cbridge-icons/USDT.png",inbound_lmt:"5000000000000",inbound_epoch_cap:"10000000000000",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"USDC",address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",decimal:6,xfer_disabled:false},name:"USD Coin",icon:"https://get.celer.app/cbridge-icons/USDC.png",inbound_lmt:"5000000000000",inbound_epoch_cap:"10000000000000",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"WETH",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",decimal:18,xfer_disabled:false,display_symbol:"ETH"},name:"ETH",icon:"https://get.celer.app/cbridge-icons/ETH.png",balance:"--"},{token:{symbol:"WETH",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",decimal:18,xfer_disabled:false},name:"Wrapped ETH",icon:"https://get.celer.app/cbridge-icons/WETH.png",inbound_lmt:"2000000000000000000000",inbound_epoch_cap:"5000000000000000000000",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"ANML",address:"0x38B0e3A59183814957D83dF2a97492AED1F003e2",decimal:18,xfer_disabled:false},name:"Animal Concerts Token",icon:"https://get.celer.app/cbridge-icons/ANML.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"AVG",address:"0xa41F142b6eb2b164f8164CAE0716892Ce02f311f",decimal:18,xfer_disabled:false},name:"Avocado DAO Token",icon:"https://get.celer.app/cbridge-icons/AVG.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"DF",address:"0x431ad2ff6a9C365805eBaD47Ee021148d6f7DBe0",decimal:18,xfer_disabled:false},name:"dForce",icon:"https://get.celer.app/cbridge-icons/DF.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"DODO",address:"0x43Dfc4159D86F3A37A5A4B3D4580b888ad7d4DDd",decimal:18,xfer_disabled:false},name:"DODO Bird",icon:"https://get.celer.app/cbridge-icons/DODO.jpg",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"DOMI",address:"0x45C2F8c9B4c0bDC76200448cc26C48ab6ffef83F",decimal:18,xfer_disabled:false},name:"Domi",icon:"https://get.celer.app/cbridge-icons/Domi.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"GHX",address:"0x728f30fa2f100742C7949D1961804FA8E0B1387d",decimal:18,xfer_disabled:false},name:"GamerCoin",icon:"https://get.celer.app/cbridge-icons/GHX.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"LUSD",address:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0",decimal:18,xfer_disabled:false},name:"Liquity USD",icon:"https://get.celer.app/cbridge-icons/LUSD.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"MASK",address:"0x69af81e73A73B40adF4f3d4223Cd9b1ECE623074",decimal:18,xfer_disabled:false},name:"Mask Network",icon:"https://get.celer.app/cbridge-icons/MASK.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"MCB",address:"0x4e352cF164E64ADCBad318C3a1e222E9EBa4Ce42",decimal:18,xfer_disabled:false},name:"MCDEX Token",icon:"https://get.celer.app/cbridge-icons/MCB.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"PSP",address:"0xcAfE001067cDEF266AfB7Eb5A286dCFD277f3dE5",decimal:18,xfer_disabled:false},name:"ParaSwap",icon:"https://get.celer.app/cbridge-icons/PSP.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"REVA",address:"0x33CcE3a8BA0bf7Ec56B2CCD2aD9306748a84E4cf",decimal:18,xfer_disabled:false},name:"Reva Token",icon:"https://get.celer.app/cbridge-icons/WREVA.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"SOS",address:"0x3b484b82567a09e2588A13D54D032153f0c0aEe0",decimal:18,xfer_disabled:false},name:"OpenDAO",icon:"https://get.celer.app/cbridge-icons/SOS.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"USX",address:"0x0a5E677a6A24b2F1A2Bf4F3bFfC443231d2fDEc8",decimal:18,xfer_disabled:false},name:"dForce USD",icon:"https://i.postimg.cc/zXtTRBJw/142.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"},{token:{symbol:"iZi",address:"0x9ad37205d608B8b219e6a2573f922094CEc5c200",decimal:18,xfer_disabled:false},name:"Izumi Finance",icon:"https://get.celer.app/cbridge-icons/IZI.png",inbound_lmt:"",inbound_epoch_cap:"",transfer_disabled:false,liq_add_disabled:false,liq_rm_disabled:false,liq_agg_rm_src_disabled:false,delay_threshold:"",delay_period:0,balance:"--"}];var celerBridgeMainnetTokens=mainnetTokensJson.map(function(cToken){return{value:cToken.token.address,address:cToken.token.address,decimals:cToken.token.decimal,symbol:cToken.token.symbol,chainId:1,name:cToken.name,logoURI:cToken.icon,type:"CELER_BRIDGE"}});var __assign$t=undefined&&undefined.__assign||function(){__assign$t=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$t.apply(this,arguments)};var tokenTypes=["DEFAULT","AAVE_V2","AAVE_V3","CURVE","CURVE_LP","CURVE_GAUGE","YEARN_VAULTS","RADIANT_V2","COMPOUND","YEARN_TOKENS","CELER_BRIDGE"];var getAaveTokens=function(_a){var chainId=_a.chainId;if(chainId==="5")return aaveGoerliErc20.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"AAVE_V2"})});if(chainId==="1")return aaveMainnetErc20.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"AAVE_V2"})});return[]};var getCompoundTokens=function(_a){var chainId=_a.chainId;return cTokens.filter(function(ct){return ct.chainId===Number(chainId)}).map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"COMPOUND"})})};var getCurveLPTokens=function(_a){var chainId=_a.chainId;if(chainId==="1")return curveLPTokens.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"CURVE_LP"})});if(chainId==="42161")return curveLPTokensArbitrum.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"CURVE_LP"})});return[]};var getCurveGaugeTokens=function(_a){var chainId=_a.chainId;if(chainId==="1")return curveGaugeTokens.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"CURVE_GAUGE"})});if(chainId==="42161")return curveGaugeTokensArbitrum.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"CURVE_GAUGE"})});return[]};var getAaveV3Tokens=function(_a){var chainId=_a.chainId;if(chainId=="1")return aaveV3MainnetErc20$1.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"AAVE_V3"})});if(chainId=="42161")return aaveV3ArbitrumErc20$1.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"AAVE_V3"})});return[]};var getYearnVaults=function(_a){var chainId=_a.chainId;if(chainId=="1")return yVaultsMainnet.map(function(token){return __assign$t(__assign$t({},token),{type:"YEARN_VAULTS"})});if(chainId=="42161")return yVaultsArbitrum.map(function(token){return __assign$t(__assign$t({},token),{type:"YEARN_VAULTS"})});return[]};var getYearnTokens=function(_a){var chainId=_a.chainId;if(chainId=="1")return yTokensMainnet.map(function(token){return __assign$t(__assign$t({},token),{type:"YEARN_TOKENS"})});if(chainId=="42161")return yTokensArbitrum.map(function(token){return __assign$t(__assign$t({},token),{type:"YEARN_TOKENS"})});return[]};var getRadiantV2Tokens=function(_a){var chainId=_a.chainId;if(chainId==="42161")return RadiantV2RTokens.map(function(token){return __assign$t(__assign$t({value:token.address},token),{type:"RADIANT_V2"})});return[]};var getAllCurrencies=function(_a){var chainId=_a.chainId;var eth=ETHAddresses.filter(function(item){return item.chainId===Number(chainId)}).map(function(contract){return{value:contract.address,name:contract.name,decimals:contract.decimals,symbol:contract.symbol,logoURI:contract.logoURI,type:"DEFAULT"}});var tokens=getSupportedTokens({chainId:chainId});return eth.concat(tokens)};var getSupportedTokens=function(_a){var chainId=_a.chainId;var tokenAddresses=new Set;var uniswapDefaults=uniswapDefaultErc20;var tokens=uniswapDefaults.map(function(contract){return __assign$t(__assign$t({},contract),{type:"DEFAULT"})}).concat(getAaveTokens({chainId:chainId}).map(function(token){return __assign$t(__assign$t({},token),{chainId:Number(chainId)})})).concat(getAaveV3Tokens({chainId:chainId}).map(function(token){return __assign$t(__assign$t({},token),{chainId:Number(chainId)})})).concat(getCompoundTokens({chainId:chainId})).concat(getCurveLPTokens({chainId:chainId})).concat(getCurveGaugeTokens({chainId:chainId})).filter(function(contract){if(chainId&&contract.chainId!==Number(chainId))return false;return true}).map(function(contract){return{value:contract.address,address:contract.address,name:contract.name,decimals:contract.decimals,symbol:contract.symbol,default:contract.name==="Kirobo"?true:contract.type==="DEFAULT",logoURI:contract.logoURI,chainId:Number(contract.chainId),type:contract.type}});if(chainId){return tokens.concat(getSupportedCurveTokens(chainId,tokenAddresses)).concat(getYearnVaults({chainId:chainId})).concat(getYearnTokens({chainId:chainId}))}return tokens};var getSupportedContracts=function(_a){var contracts=_a.contracts,chainId=_a.chainId;return contracts.filter(function(contract){return contract.chainId===Number(chainId)}).map(function(contract){return{value:contract.address,name:contract.name,decimals:contract.decimals,chainId:contract.chainId}})};var isProduction$1=process.env.NODE_ENV==="production";var prefix="Invariant failed";function invariant(condition,message){if(condition){return}if(isProduction$1){throw new Error(prefix)}var provided=typeof message==="function"?message():message;var value=provided?"".concat(prefix,": ").concat(provided):prefix;throw new Error(value)}const version$q="logger/5.7.0";let _permanentCensorErrors=false;let _censorErrors=false;const LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel=LogLevels["default"];let _globalLogger=null;function _checkNormalize(){try{const missing=[];["NFD","NFC","NFKD","NFKC"].forEach(form=>{try{if("test".normalize(form)!=="test"){throw new Error("bad normalize")}}catch(error){missing.push(form)}});if(missing.length){throw new Error("missing "+missing.join(", "))}if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769)){throw new Error("broken implementation")}}catch(error){return error.message}return null}const _normalizeError=_checkNormalize();var LogLevel;(function(LogLevel){LogLevel["DEBUG"]="DEBUG";LogLevel["INFO"]="INFO";LogLevel["WARNING"]="WARNING";LogLevel["ERROR"]="ERROR";LogLevel["OFF"]="OFF"})(LogLevel||(LogLevel={}));var ErrorCode;(function(ErrorCode){ErrorCode["UNKNOWN_ERROR"]="UNKNOWN_ERROR";ErrorCode["NOT_IMPLEMENTED"]="NOT_IMPLEMENTED";ErrorCode["UNSUPPORTED_OPERATION"]="UNSUPPORTED_OPERATION";ErrorCode["NETWORK_ERROR"]="NETWORK_ERROR";ErrorCode["SERVER_ERROR"]="SERVER_ERROR";ErrorCode["TIMEOUT"]="TIMEOUT";ErrorCode["BUFFER_OVERRUN"]="BUFFER_OVERRUN";ErrorCode["NUMERIC_FAULT"]="NUMERIC_FAULT";ErrorCode["MISSING_NEW"]="MISSING_NEW";ErrorCode["INVALID_ARGUMENT"]="INVALID_ARGUMENT";ErrorCode["MISSING_ARGUMENT"]="MISSING_ARGUMENT";ErrorCode["UNEXPECTED_ARGUMENT"]="UNEXPECTED_ARGUMENT";ErrorCode["CALL_EXCEPTION"]="CALL_EXCEPTION";ErrorCode["INSUFFICIENT_FUNDS"]="INSUFFICIENT_FUNDS";ErrorCode["NONCE_EXPIRED"]="NONCE_EXPIRED";ErrorCode["REPLACEMENT_UNDERPRICED"]="REPLACEMENT_UNDERPRICED";ErrorCode["UNPREDICTABLE_GAS_LIMIT"]="UNPREDICTABLE_GAS_LIMIT";ErrorCode["TRANSACTION_REPLACED"]="TRANSACTION_REPLACED";ErrorCode["ACTION_REJECTED"]="ACTION_REJECTED"})(ErrorCode||(ErrorCode={}));const HEX="0123456789abcdef";class Logger{constructor(version){Object.defineProperty(this,"version",{enumerable:true,value:version,writable:false})}_log(logLevel,args){const level=logLevel.toLowerCase();if(LogLevels[level]==null){this.throwArgumentError("invalid log level name","logLevel",logLevel)}if(_logLevel>LogLevels[level]){return}console.log.apply(console,args)}debug(...args){this._log(Logger.levels.DEBUG,args)}info(...args){this._log(Logger.levels.INFO,args)}warn(...args){this._log(Logger.levels.WARNING,args)}makeError(message,code,params){if(_censorErrors){return this.makeError("censored error",code,{})}if(!code){code=Logger.errors.UNKNOWN_ERROR}if(!params){params={}}const messageDetails=[];Object.keys(params).forEach(key=>{const value=params[key];try{if(value instanceof Uint8Array){let hex="";for(let i=0;i<value.length;i++){hex+=HEX[value[i]>>4];hex+=HEX[value[i]&15]}messageDetails.push(key+"=Uint8Array(0x"+hex+")")}else{messageDetails.push(key+"="+JSON.stringify(value))}}catch(error){messageDetails.push(key+"="+JSON.stringify(params[key].toString()))}});messageDetails.push(`code=${code}`);messageDetails.push(`version=${this.version}`);const reason=message;let url="";switch(code){case ErrorCode.NUMERIC_FAULT:{url="NUMERIC_FAULT";const fault=message;switch(fault){case"overflow":case"underflow":case"division-by-zero":url+="-"+fault;break;case"negative-power":case"negative-width":url+="-unsupported";break;case"unbound-bitwise-result":url+="-unbound-result";break}break}case ErrorCode.CALL_EXCEPTION:case ErrorCode.INSUFFICIENT_FUNDS:case ErrorCode.MISSING_NEW:case ErrorCode.NONCE_EXPIRED:case ErrorCode.REPLACEMENT_UNDERPRICED:case ErrorCode.TRANSACTION_REPLACED:case ErrorCode.UNPREDICTABLE_GAS_LIMIT:url=code;break}if(url){message+=" [ See: https://links.ethers.org/v5-errors-"+url+" ]"}if(messageDetails.length){message+=" ("+messageDetails.join(", ")+")"}const error=new Error(message);error.reason=reason;error.code=code;Object.keys(params).forEach(function(key){error[key]=params[key]});return error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,Logger.errors.INVALID_ARGUMENT,{argument:name,value:value})}assert(condition,message,code,params){if(!!condition){return}this.throwError(message,code,params)}assertArgument(condition,message,name,value){if(!!condition){return}this.throwArgumentError(message,name,value)}checkNormalize(message){if(_normalizeError){this.throwError("platform missing String.prototype.normalize",Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError})}}checkSafeUint53(value,message){if(typeof value!=="number"){return}if(message==null){message="value not safe"}if(value<0||value>=9007199254740991){this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:value})}if(value%1){this.throwError(message,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:value})}}checkArgumentCount(count,expectedCount,message){if(message){message=": "+message}else{message=""}if(count<expectedCount){this.throwError("missing argument"+message,Logger.errors.MISSING_ARGUMENT,{count:count,expectedCount:expectedCount})}if(count>expectedCount){this.throwError("too many arguments"+message,Logger.errors.UNEXPECTED_ARGUMENT,{count:count,expectedCount:expectedCount})}}checkNew(target,kind){if(target===Object||target==null){this.throwError("missing new",Logger.errors.MISSING_NEW,{name:kind.name})}}checkAbstract(target,kind){if(target===kind){this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",Logger.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"})}else if(target===Object||target==null){this.throwError("missing new",Logger.errors.MISSING_NEW,{name:kind.name})}}static globalLogger(){if(!_globalLogger){_globalLogger=new Logger(version$q)}return _globalLogger}static setCensorship(censorship,permanent){if(!censorship&&permanent){this.globalLogger().throwError("cannot permanently disable censorship",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}if(_permanentCensorErrors){if(!censorship){return}this.globalLogger().throwError("error censorship permanent",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors=!!censorship;_permanentCensorErrors=!!permanent}static setLogLevel(logLevel){const level=LogLevels[logLevel.toLowerCase()];if(level==null){Logger.globalLogger().warn("invalid log level - "+logLevel);return}_logLevel=level}static from(version){return new Logger(version)}}Logger.errors=ErrorCode;Logger.levels=LogLevel;const version$p="bytes/5.7.0";const logger$J=new Logger(version$p);function isHexable(value){return!!value.toHexString}function addSlice(array){if(array.slice){return array}array.slice=function(){const args=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(array,args)))};return array}function isBytesLike(value){return isHexString(value)&&!(value.length%2)||isBytes(value)}function isInteger$1(value){return typeof value==="number"&&value==value&&value%1===0}function isBytes(value){if(value==null){return false}if(value.constructor===Uint8Array){return true}if(typeof value==="string"){return false}if(!isInteger$1(value.length)||value.length<0){return false}for(let i=0;i<value.length;i++){const v=value[i];if(!isInteger$1(v)||v<0||v>=256){return false}}return true}function arrayify(value,options){if(!options){options={}}if(typeof value==="number"){logger$J.checkSafeUint53(value,"invalid arrayify value");const result=[];while(value){result.unshift(value&255);value=parseInt(String(value/256))}if(result.length===0){result.push(0)}return addSlice(new Uint8Array(result))}if(options.allowMissingPrefix&&typeof value==="string"&&value.substring(0,2)!=="0x"){value="0x"+value}if(isHexable(value)){value=value.toHexString()}if(isHexString(value)){let hex=value.substring(2);if(hex.length%2){if(options.hexPad==="left"){hex="0"+hex}else if(options.hexPad==="right"){hex+="0"}else{logger$J.throwArgumentError("hex data is odd-length","value",value)}}const result=[];for(let i=0;i<hex.length;i+=2){result.push(parseInt(hex.substring(i,i+2),16))}return addSlice(new Uint8Array(result))}if(isBytes(value)){return addSlice(new Uint8Array(value))}return logger$J.throwArgumentError("invalid arrayify value","value",value)}function concat$1(items){const objects=items.map(item=>arrayify(item));const length=objects.reduce((accum,item)=>accum+item.length,0);const result=new Uint8Array(length);objects.reduce((offset,object)=>{result.set(object,offset);return offset+object.length},0);return addSlice(result)}function stripZeros(value){let result=arrayify(value);if(result.length===0){return result}let start=0;while(start<result.length&&result[start]===0){start++}if(start){result=result.slice(start)}return result}function zeroPad(value,length){value=arrayify(value);if(value.length>length){logger$J.throwArgumentError("value out of range","value",arguments[0])}const result=new Uint8Array(length);result.set(value,length-value.length);return addSlice(result)}function isHexString(value,length){if(typeof value!=="string"||!value.match(/^0x[0-9A-Fa-f]*$/)){return false}if(length&&value.length!==2+2*length){return false}return true}const HexCharacters="0123456789abcdef";function hexlify(value,options){if(!options){options={}}if(typeof value==="number"){logger$J.checkSafeUint53(value,"invalid hexlify value");let hex="";while(value){hex=HexCharacters[value&15]+hex;value=Math.floor(value/16)}if(hex.length){if(hex.length%2){hex="0"+hex}return"0x"+hex}return"0x00"}if(typeof value==="bigint"){value=value.toString(16);if(value.length%2){return"0x0"+value}return"0x"+value}if(options.allowMissingPrefix&&typeof value==="string"&&value.substring(0,2)!=="0x"){value="0x"+value}if(isHexable(value)){return value.toHexString()}if(isHexString(value)){if(value.length%2){if(options.hexPad==="left"){value="0x0"+value.substring(2)}else if(options.hexPad==="right"){value+="0"}else{logger$J.throwArgumentError("hex data is odd-length","value",value)}}return value.toLowerCase()}if(isBytes(value)){let result="0x";for(let i=0;i<value.length;i++){let v=value[i];result+=HexCharacters[(v&240)>>4]+HexCharacters[v&15]}return result}return logger$J.throwArgumentError("invalid hexlify value","value",value)}function hexDataLength(data){if(typeof data!=="string"){data=hexlify(data)}else if(!isHexString(data)||data.length%2){return null}return(data.length-2)/2}function hexDataSlice(data,offset,endOffset){if(typeof data!=="string"){data=hexlify(data)}else if(!isHexString(data)||data.length%2){logger$J.throwArgumentError("invalid hexData","value",data)}offset=2+2*offset;if(endOffset!=null){return"0x"+data.substring(offset,2+2*endOffset)}return"0x"+data.substring(offset)}function hexConcat(items){let result="0x";items.forEach(item=>{result+=hexlify(item).substring(2)});return result}function hexValue(value){const trimmed=hexStripZeros(hexlify(value,{hexPad:"left"}));if(trimmed==="0x"){return"0x0"}return trimmed}function hexStripZeros(value){if(typeof value!=="string"){value=hexlify(value)}if(!isHexString(value)){logger$J.throwArgumentError("invalid hex string","value",value)}value=value.substring(2);let offset=0;while(offset<value.length&&value[offset]==="0"){offset++}return"0x"+value.substring(offset)}function hexZeroPad(value,length){if(typeof value!=="string"){value=hexlify(value)}else if(!isHexString(value)){logger$J.throwArgumentError("invalid hex string","value",value)}if(value.length>2*length+2){logger$J.throwArgumentError("value out of range","value",arguments[1])}while(value.length<2*length+2){value="0x0"+value.substring(2)}return value}function splitSignature(signature){const result={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0,yParityAndS:"0x",compact:"0x"};if(isBytesLike(signature)){let bytes=arrayify(signature);if(bytes.length===64){result.v=27+(bytes[32]>>7);bytes[32]&=127;result.r=hexlify(bytes.slice(0,32));result.s=hexlify(bytes.slice(32,64))}else if(bytes.length===65){result.r=hexlify(bytes.slice(0,32));result.s=hexlify(bytes.slice(32,64));result.v=bytes[64]}else{logger$J.throwArgumentError("invalid signature string","signature",signature)}if(result.v<27){if(result.v===0||result.v===1){result.v+=27}else{logger$J.throwArgumentError("signature invalid v byte","signature",signature)}}result.recoveryParam=1-result.v%2;if(result.recoveryParam){bytes[32]|=128}result._vs=hexlify(bytes.slice(32,64))}else{result.r=signature.r;result.s=signature.s;result.v=signature.v;result.recoveryParam=signature.recoveryParam;result._vs=signature._vs;if(result._vs!=null){const vs=zeroPad(arrayify(result._vs),32);result._vs=hexlify(vs);const recoveryParam=vs[0]>=128?1:0;if(result.recoveryParam==null){result.recoveryParam=recoveryParam}else if(result.recoveryParam!==recoveryParam){logger$J.throwArgumentError("signature recoveryParam mismatch _vs","signature",signature)}vs[0]&=127;const s=hexlify(vs);if(result.s==null){result.s=s}else if(result.s!==s){logger$J.throwArgumentError("signature v mismatch _vs","signature",signature)}}if(result.recoveryParam==null){if(result.v==null){logger$J.throwArgumentError("signature missing v and recoveryParam","signature",signature)}else if(result.v===0||result.v===1){result.recoveryParam=result.v}else{result.recoveryParam=1-result.v%2}}else{if(result.v==null){result.v=27+result.recoveryParam}else{const recId=result.v===0||result.v===1?result.v:1-result.v%2;if(result.recoveryParam!==recId){logger$J.throwArgumentError("signature recoveryParam mismatch v","signature",signature)}}}if(result.r==null||!isHexString(result.r)){logger$J.throwArgumentError("signature missing or invalid r","signature",signature)}else{result.r=hexZeroPad(result.r,32)}if(result.s==null||!isHexString(result.s)){logger$J.throwArgumentError("signature missing or invalid s","signature",signature)}else{result.s=hexZeroPad(result.s,32)}const vs=arrayify(result.s);if(vs[0]>=128){logger$J.throwArgumentError("signature s out of range","signature",signature)}if(result.recoveryParam){vs[0]|=128}const _vs=hexlify(vs);if(result._vs){if(!isHexString(result._vs)){logger$J.throwArgumentError("signature invalid _vs","signature",signature)}result._vs=hexZeroPad(result._vs,32)}if(result._vs==null){result._vs=_vs}else if(result._vs!==_vs){logger$J.throwArgumentError("signature _vs mismatch v and s","signature",signature)}}result.yParityAndS=result._vs;result.compact=result.r+result.yParityAndS.substring(2);return result}function joinSignature(signature){signature=splitSignature(signature);return hexlify(concat$1([signature.r,signature.s,signature.recoveryParam?"0x1c":"0x1b"]))}const version$o="bignumber/5.7.0";var BN=BN$1.BN;const logger$I=new Logger(version$o);const _constructorGuard$4={};const MAX_SAFE=9007199254740991;function isBigNumberish(value){return value!=null&&(BigNumber$1.isBigNumber(value)||typeof value==="number"&&value%1===0||typeof value==="string"&&!!value.match(/^-?[0-9]+$/)||isHexString(value)||typeof value==="bigint"||isBytes(value))}let _warnedToStringRadix=false;let BigNumber$1=class BigNumber{constructor(constructorGuard,hex){if(constructorGuard!==_constructorGuard$4){logger$I.throwError("cannot call constructor directly; use BigNumber.from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"})}this._hex=hex;this._isBigNumber=true;Object.freeze(this)}fromTwos(value){return toBigNumber(toBN(this).fromTwos(value))}toTwos(value){return toBigNumber(toBN(this).toTwos(value))}abs(){if(this._hex[0]==="-"){return BigNumber.from(this._hex.substring(1))}return this}add(other){return toBigNumber(toBN(this).add(toBN(other)))}sub(other){return toBigNumber(toBN(this).sub(toBN(other)))}div(other){const o=BigNumber.from(other);if(o.isZero()){throwFault$1("division-by-zero","div")}return toBigNumber(toBN(this).div(toBN(other)))}mul(other){return toBigNumber(toBN(this).mul(toBN(other)))}mod(other){const value=toBN(other);if(value.isNeg()){throwFault$1("division-by-zero","mod")}return toBigNumber(toBN(this).umod(value))}pow(other){const value=toBN(other);if(value.isNeg()){throwFault$1("negative-power","pow")}return toBigNumber(toBN(this).pow(value))}and(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault$1("unbound-bitwise-result","and")}return toBigNumber(toBN(this).and(value))}or(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault$1("unbound-bitwise-result","or")}return toBigNumber(toBN(this).or(value))}xor(other){const value=toBN(other);if(this.isNegative()||value.isNeg()){throwFault$1("unbound-bitwise-result","xor")}return toBigNumber(toBN(this).xor(value))}mask(value){if(this.isNegative()||value<0){throwFault$1("negative-width","mask")}return toBigNumber(toBN(this).maskn(value))}shl(value){if(this.isNegative()||value<0){throwFault$1("negative-width","shl")}return toBigNumber(toBN(this).shln(value))}shr(value){if(this.isNegative()||value<0){throwFault$1("negative-width","shr")}return toBigNumber(toBN(this).shrn(value))}eq(other){return toBN(this).eq(toBN(other))}lt(other){return toBN(this).lt(toBN(other))}lte(other){return toBN(this).lte(toBN(other))}gt(other){return toBN(this).gt(toBN(other))}gte(other){return toBN(this).gte(toBN(other))}isNegative(){return this._hex[0]==="-"}isZero(){return toBN(this).isZero()}toNumber(){try{return toBN(this).toNumber()}catch(error){throwFault$1("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(e){}return logger$I.throwError("this platform does not support BigInt",Logger.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){if(arguments.length>0){if(arguments[0]===10){if(!_warnedToStringRadix){_warnedToStringRadix=true;logger$I.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")}}else if(arguments[0]===16){logger$I.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",Logger.errors.UNEXPECTED_ARGUMENT,{})}else{logger$I.throwError("BigNumber.toString does not accept parameters",Logger.errors.UNEXPECTED_ARGUMENT,{})}}return toBN(this).toString(10)}toHexString(){return this._hex}toJSON(key){return{type:"BigNumber",hex:this.toHexString()}}static from(value){if(value instanceof BigNumber){return value}if(typeof value==="string"){if(value.match(/^-?0x[0-9a-f]+$/i)){return new BigNumber(_constructorGuard$4,toHex$3(value))}if(value.match(/^-?[0-9]+$/)){return new BigNumber(_constructorGuard$4,toHex$3(new BN(value)))}return logger$I.throwArgumentError("invalid BigNumber string","value",value)}if(typeof value==="number"){if(value%1){throwFault$1("underflow","BigNumber.from",value)}if(value>=MAX_SAFE||value<=-MAX_SAFE){throwFault$1("overflow","BigNumber.from",value)}return BigNumber.from(String(value))}const anyValue=value;if(typeof anyValue==="bigint"){return BigNumber.from(anyValue.toString())}if(isBytes(anyValue)){return BigNumber.from(hexlify(anyValue))}if(anyValue){if(anyValue.toHexString){const hex=anyValue.toHexString();if(typeof hex==="string"){return BigNumber.from(hex)}}else{let hex=anyValue._hex;if(hex==null&&anyValue.type==="BigNumber"){hex=anyValue.hex}if(typeof hex==="string"){if(isHexString(hex)||hex[0]==="-"&&isHexString(hex.substring(1))){return BigNumber.from(hex)}}}}return logger$I.throwArgumentError("invalid BigNumber value","value",value)}static isBigNumber(value){return!!(value&&value._isBigNumber)}};function toHex$3(value){if(typeof value!=="string"){return toHex$3(value.toString(16))}if(value[0]==="-"){value=value.substring(1);if(value[0]==="-"){logger$I.throwArgumentError("invalid hex","value",value)}value=toHex$3(value);if(value==="0x00"){return value}return"-"+value}if(value.substring(0,2)!=="0x"){value="0x"+value}if(value==="0x"){return"0x00"}if(value.length%2){value="0x0"+value.substring(2)}while(value.length>4&&value.substring(0,4)==="0x00"){value="0x"+value.substring(4)}return value}function toBigNumber(value){return BigNumber$1.from(toHex$3(value))}function toBN(value){const hex=BigNumber$1.from(value).toHexString();if(hex[0]==="-"){return new BN("-"+hex.substring(3),16)}return new BN(hex.substring(2),16)}function throwFault$1(fault,operation,value){const params={fault:fault,operation:operation};if(value!=null){params.value=value}return logger$I.throwError(fault,Logger.errors.NUMERIC_FAULT,params)}function _base36To16(value){return new BN(value,36).toString(16)}function _base16To36(value){return new BN(value,16).toString(36)}const logger$H=new Logger(version$o);const _constructorGuard$3={};const Zero$2=BigNumber$1.from(0);const NegativeOne$2=BigNumber$1.from(-1);function throwFault(message,fault,operation,value){const params={fault:fault,operation:operation};if(value!==undefined){params.value=value}return logger$H.throwError(message,Logger.errors.NUMERIC_FAULT,params)}let zeros="0";while(zeros.length<256){zeros+=zeros}function getMultiplier(decimals){if(typeof decimals!=="number"){try{decimals=BigNumber$1.from(decimals).toNumber()}catch(e){}}if(typeof decimals==="number"&&decimals>=0&&decimals<=256&&!(decimals%1)){return"1"+zeros.substring(0,decimals)}return logger$H.throwArgumentError("invalid decimal size","decimals",decimals)}function formatFixed(value,decimals){if(decimals==null){decimals=0}const multiplier=getMultiplier(decimals);value=BigNumber$1.from(value);const negative=value.lt(Zero$2);if(negative){value=value.mul(NegativeOne$2)}let fraction=value.mod(multiplier).toString();while(fraction.length<multiplier.length-1){fraction="0"+fraction}fraction=fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];const whole=value.div(multiplier).toString();if(multiplier.length===1){value=whole}else{value=whole+"."+fraction}if(negative){value="-"+value}return value}function parseFixed(value,decimals){if(decimals==null){decimals=0}const multiplier=getMultiplier(decimals);if(typeof value!=="string"||!value.match(/^-?[0-9.]+$/)){logger$H.throwArgumentError("invalid decimal value","value",value)}const negative=value.substring(0,1)==="-";if(negative){value=value.substring(1)}if(value==="."){logger$H.throwArgumentError("missing value","value",value)}const comps=value.split(".");if(comps.length>2){logger$H.throwArgumentError("too many decimal points","value",value)}let whole=comps[0],fraction=comps[1];if(!whole){whole="0"}if(!fraction){fraction="0"}while(fraction[fraction.length-1]==="0"){fraction=fraction.substring(0,fraction.length-1)}if(fraction.length>multiplier.length-1){throwFault("fractional component exceeds decimals","underflow","parseFixed")}if(fraction===""){fraction="0"}while(fraction.length<multiplier.length-1){fraction+="0"}const wholeValue=BigNumber$1.from(whole);const fractionValue=BigNumber$1.from(fraction);let wei=wholeValue.mul(multiplier).add(fractionValue);if(negative){wei=wei.mul(NegativeOne$2)}return wei}class FixedFormat{constructor(constructorGuard,signed,width,decimals){if(constructorGuard!==_constructorGuard$3){logger$H.throwError("cannot use FixedFormat constructor; use FixedFormat.from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"})}this.signed=signed;this.width=width;this.decimals=decimals;this.name=(signed?"":"u")+"fixed"+String(width)+"x"+String(decimals);this._multiplier=getMultiplier(decimals);Object.freeze(this)}static from(value){if(value instanceof FixedFormat){return value}if(typeof value==="number"){value=`fixed128x${value}`}let signed=true;let width=128;let decimals=18;if(typeof value==="string"){if(value==="fixed");else if(value==="ufixed"){signed=false}else{const match=value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);if(!match){logger$H.throwArgumentError("invalid fixed format","format",value)}signed=match[1]!=="u";width=parseInt(match[2]);decimals=parseInt(match[3])}}else if(value){const check=(key,type,defaultValue)=>{if(value[key]==null){return defaultValue}if(typeof value[key]!==type){logger$H.throwArgumentError("invalid fixed format ("+key+" not "+type+")","format."+key,value[key])}return value[key]};signed=check("signed","boolean",signed);width=check("width","number",width);decimals=check("decimals","number",decimals)}if(width%8){logger$H.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",width)}if(decimals>80){logger$H.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",decimals)}return new FixedFormat(_constructorGuard$3,signed,width,decimals)}}class FixedNumber{constructor(constructorGuard,hex,value,format){if(constructorGuard!==_constructorGuard$3){logger$H.throwError("cannot use FixedNumber constructor; use FixedNumber.from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"})}this.format=format;this._hex=hex;this._value=value;this._isFixedNumber=true;Object.freeze(this)}_checkFormat(other){if(this.format.name!==other.format.name){logger$H.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",other)}}addUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.add(b),this.format.decimals,this.format)}subUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.sub(b),this.format.decimals,this.format)}mulUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals);const b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b),this.format.decimals,this.format)}floor(){const comps=this.toString().split(".");if(comps.length===1){comps.push("0")}let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);if(this.isNegative()&&hasFraction){result=result.subUnsafe(ONE$3.toFormat(result.format))}return result}ceiling(){const comps=this.toString().split(".");if(comps.length===1){comps.push("0")}let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);if(!this.isNegative()&&hasFraction){result=result.addUnsafe(ONE$3.toFormat(result.format))}return result}round(decimals){if(decimals==null){decimals=0}const comps=this.toString().split(".");if(comps.length===1){comps.push("0")}if(decimals<0||decimals>80||decimals%1){logger$H.throwArgumentError("invalid decimal count","decimals",decimals)}if(comps[1].length<=decimals){return this}const factor=FixedNumber.from("1"+zeros.substring(0,decimals),this.format);const bump=BUMP.toFormat(this.format);return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor)}isZero(){return this._value==="0.0"||this._value==="0"}isNegative(){return this._value[0]==="-"}toString(){return this._value}toHexString(width){if(width==null){return this._hex}if(width%8){logger$H.throwArgumentError("invalid byte width","width",width)}const hex=BigNumber$1.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();return hexZeroPad(hex,width/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(format){return FixedNumber.fromString(this._value,format)}static fromValue(value,decimals,format){if(format==null&&decimals!=null&&!isBigNumberish(decimals)){format=decimals;decimals=null}if(decimals==null){decimals=0}if(format==null){format="fixed"}return FixedNumber.fromString(formatFixed(value,decimals),FixedFormat.from(format))}static fromString(value,format){if(format==null){format="fixed"}const fixedFormat=FixedFormat.from(format);const numeric=parseFixed(value,fixedFormat.decimals);if(!fixedFormat.signed&&numeric.lt(Zero$2)){throwFault("unsigned value cannot be negative","overflow","value",value)}let hex=null;if(fixedFormat.signed){hex=numeric.toTwos(fixedFormat.width).toHexString()}else{hex=numeric.toHexString();hex=hexZeroPad(hex,fixedFormat.width/8)}const decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(_constructorGuard$3,hex,decimal,fixedFormat)}static fromBytes(value,format){if(format==null){format="fixed"}const fixedFormat=FixedFormat.from(format);if(arrayify(value).length>fixedFormat.width/8){throw new Error("overflow")}let numeric=BigNumber$1.from(value);if(fixedFormat.signed){numeric=numeric.fromTwos(fixedFormat.width)}const hex=numeric.toTwos((fixedFormat.signed?0:1)+fixedFormat.width).toHexString();const decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(_constructorGuard$3,hex,decimal,fixedFormat)}static from(value,format){if(typeof value==="string"){return FixedNumber.fromString(value,format)}if(isBytes(value)){return FixedNumber.fromBytes(value,format)}try{return FixedNumber.fromValue(value,0,format)}catch(error){if(error.code!==Logger.errors.INVALID_ARGUMENT){throw error}}return logger$H.throwArgumentError("invalid FixedNumber value","value",value)}static isFixedNumber(value){return!!(value&&value._isFixedNumber)}}const ONE$3=FixedNumber.from(1);const BUMP=FixedNumber.from("0.5");function keccak256$3(data){return"0x"+sha3.keccak_256(arrayify(data))}const version$n="rlp/5.7.0";const logger$G=new Logger(version$n);function arrayifyInteger(value){const result=[];while(value){result.unshift(value&255);value>>=8}return result}function unarrayifyInteger(data,offset,length){let result=0;for(let i=0;i<length;i++){result=result*256+data[offset+i]}return result}function _encode(object){if(Array.isArray(object)){let payload=[];object.forEach(function(child){payload=payload.concat(_encode(child))});if(payload.length<=55){payload.unshift(192+payload.length);return payload}const length=arrayifyInteger(payload.length);length.unshift(247+length.length);return length.concat(payload)}if(!isBytesLike(object)){logger$G.throwArgumentError("RLP object must be BytesLike","object",object)}const data=Array.prototype.slice.call(arrayify(object));if(data.length===1&&data[0]<=127){return data}else if(data.length<=55){data.unshift(128+data.length);return data}const length=arrayifyInteger(data.length);length.unshift(183+length.length);return length.concat(data)}function encode$1(object){return hexlify(_encode(object))}function _decodeChildren(data,offset,childOffset,length){const result=[];while(childOffset<offset+1+length){const decoded=_decode(data,childOffset);result.push(decoded.result);childOffset+=decoded.consumed;if(childOffset>offset+1+length){logger$G.throwError("child data too short",Logger.errors.BUFFER_OVERRUN,{})}}return{consumed:1+length,result:result}}function _decode(data,offset){if(data.length===0){logger$G.throwError("data too short",Logger.errors.BUFFER_OVERRUN,{})}if(data[offset]>=248){const lengthLength=data[offset]-247;if(offset+1+lengthLength>data.length){logger$G.throwError("data short segment too short",Logger.errors.BUFFER_OVERRUN,{})}const length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length){logger$G.throwError("data long segment too short",Logger.errors.BUFFER_OVERRUN,{})}return _decodeChildren(data,offset,offset+1+lengthLength,lengthLength+length)}else if(data[offset]>=192){const length=data[offset]-192;if(offset+1+length>data.length){logger$G.throwError("data array too short",Logger.errors.BUFFER_OVERRUN,{})}return _decodeChildren(data,offset,offset+1,length)}else if(data[offset]>=184){const lengthLength=data[offset]-183;if(offset+1+lengthLength>data.length){logger$G.throwError("data array too short",Logger.errors.BUFFER_OVERRUN,{})}const length=unarrayifyInteger(data,offset+1,lengthLength);if(offset+1+lengthLength+length>data.length){logger$G.throwError("data array too short",Logger.errors.BUFFER_OVERRUN,{})}const result=hexlify(data.slice(offset+1+lengthLength,offset+1+lengthLength+length));return{consumed:1+lengthLength+length,result:result}}else if(data[offset]>=128){const length=data[offset]-128;if(offset+1+length>data.length){logger$G.throwError("data too short",Logger.errors.BUFFER_OVERRUN,{})}const result=hexlify(data.slice(offset+1,offset+1+length));return{consumed:1+length,result:result}}return{consumed:1,result:hexlify(data[offset])}}function decode$1(data){const bytes=arrayify(data);const decoded=_decode(bytes,0);if(decoded.consumed!==bytes.length){logger$G.throwArgumentError("invalid rlp data","data",data)}return decoded.result}var index$7=Object.freeze({__proto__:null,decode:decode$1,encode:encode$1});const version$m="address/5.7.0";const logger$F=new Logger(version$m);function getChecksumAddress(address){if(!isHexString(address,20)){logger$F.throwArgumentError("invalid address","address",address)}address=address.toLowerCase();const chars=address.substring(2).split("");const expanded=new Uint8Array(40);for(let i=0;i<40;i++){expanded[i]=chars[i].charCodeAt(0)}const hashed=arrayify(keccak256$3(expanded));for(let i=0;i<40;i+=2){if(hashed[i>>1]>>4>=8){chars[i]=chars[i].toUpperCase()}if((hashed[i>>1]&15)>=8){chars[i+1]=chars[i+1].toUpperCase()}}return"0x"+chars.join("")}const MAX_SAFE_INTEGER$3=9007199254740991;function log10$1(x){if(Math.log10){return Math.log10(x)}return Math.log(x)/Math.LN10}const ibanLookup={};for(let i=0;i<10;i++){ibanLookup[String(i)]=String(i)}for(let i=0;i<26;i++){ibanLookup[String.fromCharCode(65+i)]=String(10+i)}const safeDigits=Math.floor(log10$1(MAX_SAFE_INTEGER$3));function ibanChecksum(address){address=address.toUpperCase();address=address.substring(4)+address.substring(0,2)+"00";let expanded=address.split("").map(c=>{return ibanLookup[c]}).join("");while(expanded.length>=safeDigits){let block=expanded.substring(0,safeDigits);expanded=parseInt(block,10)%97+expanded.substring(block.length)}let checksum=String(98-parseInt(expanded,10)%97);while(checksum.length<2){checksum="0"+checksum}return checksum}function getAddress$1(address){let result=null;if(typeof address!=="string"){logger$F.throwArgumentError("invalid address","address",address)}if(address.match(/^(0x)?[0-9a-fA-F]{40}$/)){if(address.substring(0,2)!=="0x"){address="0x"+address}result=getChecksumAddress(address);if(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&result!==address){logger$F.throwArgumentError("bad address checksum","address",address)}}else if(address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){if(address.substring(2,4)!==ibanChecksum(address)){logger$F.throwArgumentError("bad icap checksum","address",address)}result=_base36To16(address.substring(4));while(result.length<40){result="0"+result}result=getChecksumAddress("0x"+result)}else{logger$F.throwArgumentError("invalid address","address",address)}return result}function isAddress$4(address){try{getAddress$1(address);return true}catch(error){}return false}function getIcapAddress(address){let base36=_base16To36(getAddress$1(address).substring(2)).toUpperCase();while(base36.length<30){base36="0"+base36}return"XE"+ibanChecksum("XE00"+base36)+base36}function getContractAddress$1(transaction){let from=null;try{from=getAddress$1(transaction.from)}catch(error){logger$F.throwArgumentError("missing from address","transaction",transaction)}const nonce=stripZeros(arrayify(BigNumber$1.from(transaction.nonce).toHexString()));return getAddress$1(hexDataSlice(keccak256$3(encode$1([from,nonce])),12))}function getCreate2Address(from,salt,initCodeHash){if(hexDataLength(salt)!==32){logger$F.throwArgumentError("salt must be 32 bytes","salt",salt)}if(hexDataLength(initCodeHash)!==32){logger$F.throwArgumentError("initCodeHash must be 32 bytes","initCodeHash",initCodeHash)}return getAddress$1(hexDataSlice(keccak256$3(concat$1(["0xff",getAddress$1(from),salt,initCodeHash])),12))}function _defineProperties$3(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass$3(Constructor,protoProps,staticProps){if(protoProps)_defineProperties$3(Constructor.prototype,protoProps);if(staticProps)_defineProperties$3(Constructor,staticProps);return Constructor}function _extends$2(){_extends$2=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends$2.apply(this,arguments)}function _inheritsLoose$2(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass}var ChainId$1;(function(ChainId){ChainId[ChainId["MAINNET"]=1]="MAINNET";ChainId[ChainId["GOERLI"]=5]="GOERLI";ChainId[ChainId["SEPOLIA"]=11155111]="SEPOLIA";ChainId[ChainId["OPTIMISM"]=10]="OPTIMISM";ChainId[ChainId["OPTIMISM_GOERLI"]=420]="OPTIMISM_GOERLI";ChainId[ChainId["OPTIMISM_SEPOLIA"]=11155420]="OPTIMISM_SEPOLIA";ChainId[ChainId["ARBITRUM_ONE"]=42161]="ARBITRUM_ONE";ChainId[ChainId["ARBITRUM_GOERLI"]=421613]="ARBITRUM_GOERLI";ChainId[ChainId["ARBITRUM_SEPOLIA"]=421614]="ARBITRUM_SEPOLIA";ChainId[ChainId["POLYGON"]=137]="POLYGON";ChainId[ChainId["POLYGON_MUMBAI"]=80001]="POLYGON_MUMBAI";ChainId[ChainId["CELO"]=42220]="CELO";ChainId[ChainId["CELO_ALFAJORES"]=44787]="CELO_ALFAJORES";ChainId[ChainId["GNOSIS"]=100]="GNOSIS";ChainId[ChainId["MOONBEAM"]=1284]="MOONBEAM";ChainId[ChainId["BNB"]=56]="BNB";ChainId[ChainId["AVALANCHE"]=43114]="AVALANCHE";ChainId[ChainId["BASE_GOERLI"]=84531]="BASE_GOERLI";ChainId[ChainId["BASE"]=8453]="BASE";ChainId[ChainId["ZORA"]=7777777]="ZORA";ChainId[ChainId["ZORA_SEPOLIA"]=999999999]="ZORA_SEPOLIA";ChainId[ChainId["ROOTSTOCK"]=30]="ROOTSTOCK";ChainId[ChainId["BLAST"]=81457]="BLAST"})(ChainId$1||(ChainId$1={}));var SUPPORTED_CHAINS=[ChainId$1.MAINNET,ChainId$1.OPTIMISM,ChainId$1.OPTIMISM_GOERLI,ChainId$1.OPTIMISM_SEPOLIA,ChainId$1.ARBITRUM_ONE,ChainId$1.ARBITRUM_GOERLI,ChainId$1.ARBITRUM_SEPOLIA,ChainId$1.POLYGON,ChainId$1.POLYGON_MUMBAI,ChainId$1.GOERLI,ChainId$1.SEPOLIA,ChainId$1.CELO_ALFAJORES,ChainId$1.CELO,ChainId$1.BNB,ChainId$1.AVALANCHE,ChainId$1.BASE,ChainId$1.BASE_GOERLI,ChainId$1.ZORA,ChainId$1.ZORA_SEPOLIA,ChainId$1.ROOTSTOCK,ChainId$1.BLAST];var NativeCurrencyName$1;(function(NativeCurrencyName){NativeCurrencyName["ETHER"]="ETH";NativeCurrencyName["MATIC"]="MATIC";NativeCurrencyName["CELO"]="CELO";NativeCurrencyName["GNOSIS"]="XDAI";NativeCurrencyName["MOONBEAM"]="GLMR";NativeCurrencyName["BNB"]="BNB";NativeCurrencyName["AVAX"]="AVAX";NativeCurrencyName["ROOTSTOCK"]="RBTC"})(NativeCurrencyName$1||(NativeCurrencyName$1={}));var _V2_FACTORY_ADDRESSES,_V2_ROUTER_ADDRESSES,_CHAIN_TO_ADDRESSES_M,_GOVERNANCE_ALPHA_V1_,_GOVERNANCE_BRAVO_ADD,_MERKLE_DISTRIBUTOR_A$1,_ARGENT_WALLET_DETECT,_SOCKS_CONTROLLER_ADD;var DEFAULT_NETWORKS$1=[ChainId$1.MAINNET,ChainId$1.GOERLI,ChainId$1.SEPOLIA];function constructSameAddressMap$2(address,additionalNetworks){if(additionalNetworks===void 0){additionalNetworks=[]}return DEFAULT_NETWORKS$1.concat(additionalNetworks).reduce(function(memo,chainId){memo[chainId]=address;return memo},{})}constructSameAddressMap$2("0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",[ChainId$1.OPTIMISM,ChainId$1.ARBITRUM_ONE,ChainId$1.POLYGON,ChainId$1.POLYGON_MUMBAI,ChainId$1.SEPOLIA]);var V2_FACTORY_ADDRESSES=(_V2_FACTORY_ADDRESSES={},_V2_FACTORY_ADDRESSES[ChainId$1.MAINNET]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",_V2_FACTORY_ADDRESSES[ChainId$1.GOERLI]="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",_V2_FACTORY_ADDRESSES[ChainId$1.SEPOLIA]="0xB7f907f7A9eBC822a80BD25E224be42Ce0A698A0",_V2_FACTORY_ADDRESSES[ChainId$1.OPTIMISM]="0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf",_V2_FACTORY_ADDRESSES[ChainId$1.ARBITRUM_ONE]="0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9",_V2_FACTORY_ADDRESSES[ChainId$1.AVALANCHE]="0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",_V2_FACTORY_ADDRESSES[ChainId$1.BASE]="0x8909dc15e40173ff4699343b6eb8132c65e18ec6",_V2_FACTORY_ADDRESSES[ChainId$1.BNB]="0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6",_V2_FACTORY_ADDRESSES[ChainId$1.POLYGON]="0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",_V2_FACTORY_ADDRESSES[ChainId$1.CELO]="0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f",_V2_FACTORY_ADDRESSES[ChainId$1.BLAST]="0x5C346464d33F90bABaf70dB6388507CC889C1070",_V2_FACTORY_ADDRESSES);_V2_ROUTER_ADDRESSES={},_V2_ROUTER_ADDRESSES[ChainId$1.MAINNET]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",_V2_ROUTER_ADDRESSES[ChainId$1.GOERLI]="0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",_V2_ROUTER_ADDRESSES[ChainId$1.ARBITRUM_ONE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",_V2_ROUTER_ADDRESSES[ChainId$1.OPTIMISM]="0x4a7b5da61326a6379179b40d00f57e5bbdc962c2",_V2_ROUTER_ADDRESSES[ChainId$1.BASE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",_V2_ROUTER_ADDRESSES[ChainId$1.AVALANCHE]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",_V2_ROUTER_ADDRESSES[ChainId$1.BNB]="0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24",_V2_ROUTER_ADDRESSES[ChainId$1.POLYGON]="0xedf6066a2b290c185783862c7f4776a2c8077ad1",_V2_ROUTER_ADDRESSES[ChainId$1.BLAST]="0xBB66Eb1c5e875933D44DAe661dbD80e5D9B03035",_V2_ROUTER_ADDRESSES;var DEFAULT_ADDRESSES={v3CoreFactoryAddress:"0x1F98431c8aD98523631AE4a59f267346ea31F984",multicallAddress:"0x1F98415757620B543A52E61c46B32eB19261F984",quoterAddress:"0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6",v3MigratorAddress:"0xA5644E29708357803b5A882D272c41cC0dF92B34",nonfungiblePositionManagerAddress:"0xC36442b4a4522E871399CD717aBDD847Ab11FE88"};var MAINNET_ADDRESSES=_extends$2({},DEFAULT_ADDRESSES,{v1MixedRouteQuoterAddress:"0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E"});var GOERLI_ADDRESSES=_extends$2({},DEFAULT_ADDRESSES,{v1MixedRouteQuoterAddress:"0xBa60b6e6fF25488308789E6e0A65D838be34194e"});var OPTIMISM_ADDRESSES=DEFAULT_ADDRESSES;var ARBITRUM_ONE_ADDRESSES=_extends$2({},DEFAULT_ADDRESSES,{multicallAddress:"0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB",tickLensAddress:"0xbfd8137f7d1516D3ea5cA83523914859ec47F573"});var POLYGON_ADDRESSES=DEFAULT_ADDRESSES;var CELO_ADDRESSES={v3CoreFactoryAddress:"0xAfE208a311B21f13EF87E33A90049fC17A7acDEc",multicallAddress:"0x633987602DE5C4F337e3DbF265303A1080324204",quoterAddress:"0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8",v3MigratorAddress:"0x3cFd4d48EDfDCC53D3f173F596f621064614C582",nonfungiblePositionManagerAddress:"0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A",tickLensAddress:"0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D"};var BNB_ADDRESSES={v3CoreFactoryAddress:"0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7",multicallAddress:"0x963Df249eD09c358A4819E39d9Cd5736c3087184",quoterAddress:"0x78D78E420Da98ad378D7799bE8f4AF69033EB077",v3MigratorAddress:"0x32681814957e0C13117ddc0c2aba232b5c9e760f",nonfungiblePositionManagerAddress:"0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613",tickLensAddress:"0xD9270014D396281579760619CCf4c3af0501A47C",swapRouter02Address:"0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2"};var OPTIMISM_GOERLI_ADDRESSES={v3CoreFactoryAddress:"0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10",multicallAddress:"0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd",quoterAddress:"0x9569CbA925c8ca2248772A9A4976A516743A246F",v3MigratorAddress:"0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8",nonfungiblePositionManagerAddress:"0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6",tickLensAddress:"0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e"};var OPTIMISM_SEPOLIA_ADDRESSES={v3CoreFactoryAddress:"0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF",multicallAddress:"0x80e4e06841bb76AA9735E0448cB8d003C0EF009a",quoterAddress:"0x0FBEa6cf957d95ee9313490050F6A0DA68039404",v3MigratorAddress:"0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07",nonfungiblePositionManagerAddress:"0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d",tickLensAddress:"0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5",swapRouter02Address:"0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4"};var ARBITRUM_GOERLI_ADDRESSES={v3CoreFactoryAddress:"0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6",multicallAddress:"0x8260CB40247290317a4c062F3542622367F206Ee",quoterAddress:"0x1dd92b83591781D0C6d98d07391eea4b9a6008FA",v3MigratorAddress:"0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3",nonfungiblePositionManagerAddress:"0x622e4726a167799826d1E1D150b076A7725f5D81",tickLensAddress:"0xb52429333da969a0C79a60930a4Bf0020E5D1DE8"};var ARBITRUM_SEPOLIA_ADDRESSES={v3CoreFactoryAddress:"0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e",multicallAddress:"0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A",quoterAddress:"0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B",v3MigratorAddress:"0x398f43ef2c67B941147157DA1c5a868E906E043D",nonfungiblePositionManagerAddress:"0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65",tickLensAddress:"0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9",swapRouter02Address:"0x101F443B4d1b059569D643917553c771E1b9663E"};var SEPOLIA_ADDRESSES={v3CoreFactoryAddress:"0x0227628f3F023bb0B980b67D528571c95c6DaC1c",multicallAddress:"0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07",quoterAddress:"0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3",v3MigratorAddress:"0x729004182cF005CEC8Bd85df140094b6aCbe8b15",nonfungiblePositionManagerAddress:"0x1238536071E1c677A632429e3655c799b22cDA52",tickLensAddress:"0xd7f33bcdb21b359c8ee6f0251d30e94832baad07",swapRouter02Address:"0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E"};var AVALANCHE_ADDRESSES={v3CoreFactoryAddress:"0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD",multicallAddress:"0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2",quoterAddress:"0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F",v3MigratorAddress:"0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97",nonfungiblePositionManagerAddress:"0x655C406EBFa14EE2006250925e54ec43AD184f8B",tickLensAddress:"0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950",swapRouter02Address:"0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE"};var BASE_ADDRESSES={v3CoreFactoryAddress:"0x33128a8fC17869897dcE68Ed026d694621f6FDfD",multicallAddress:"0x091e99cb1C49331a94dD62755D168E941AbD0693",quoterAddress:"0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a",v3MigratorAddress:"0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7",nonfungiblePositionManagerAddress:"0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1",tickLensAddress:"0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d",swapRouter02Address:"0x2626664c2603336E57B271c5C0b26F421741e481"};var BASE_GOERLI_ADDRESSES={v3CoreFactoryAddress:"0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2",multicallAddress:"0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439",quoterAddress:"0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9",v3MigratorAddress:"0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE",nonfungiblePositionManagerAddress:"0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30",tickLensAddress:"0x1acB873Ee909D0c98adB18e4474943249F931b92",swapRouter02Address:"0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d"};var ZORA_ADDRESSES={v3CoreFactoryAddress:"0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb",multicallAddress:"0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15",quoterAddress:"0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df",v3MigratorAddress:"0x048352d8dCF13686982C799da63fA6426a9D0b60",nonfungiblePositionManagerAddress:"0xbC91e8DfA3fF18De43853372A3d7dfe585137D78",tickLensAddress:"0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044",swapRouter02Address:"0x7De04c96BE5159c3b5CeffC82aa176dc81281557"};var ZORA_SEPOLIA_ADDRESSES={v3CoreFactoryAddress:"0x4324A677D74764f46f33ED447964252441aA8Db6",multicallAddress:"0xA1E7e3A69671C4494EC59Dbd442de930a93F911A",quoterAddress:"0xC195976fEF0985886E37036E2DF62bF371E12Df0",v3MigratorAddress:"0x65ef259b31bf1d977c37e9434658694267674897",nonfungiblePositionManagerAddress:"0xB8458EaAe43292e3c1F7994EFd016bd653d23c20",tickLensAddress:"0x23C0F71877a1Fc4e20A78018f9831365c85f3064"};var ROOTSTOCK_ADDRESSES={v3CoreFactoryAddress:"0xaF37EC98A00FD63689CF3060BF3B6784E00caD82",multicallAddress:"0x996a9858cDfa45Ad68E47c9A30a7201E29c6a386",quoterAddress:"0xb51727c996C68E60F598A923a5006853cd2fEB31",v3MigratorAddress:"0x16678977CA4ec3DAD5efc7b15780295FE5f56162",nonfungiblePositionManagerAddress:"0x9d9386c042F194B460Ec424a1e57ACDE25f5C4b1",tickLensAddress:"0x55B9dF5bF68ADe972191a91980459f48ecA16afC",swapRouter02Address:"0x0B14ff67f0014046b4b99057Aec4509640b3947A"};var BLAST_ADDRESSES={v3CoreFactoryAddress:"0x792edAdE80af5fC680d96a2eD80A44247D2Cf6Fd",multicallAddress:"0xdC7f370de7631cE9e2c2e1DCDA6B3B5744Cf4705",quoterAddress:"0x6Cdcd65e03c1CEc3730AeeCd45bc140D57A25C77",v3MigratorAddress:"0x15CA7043CD84C5D21Ae76Ba0A1A967d42c40ecE0",nonfungiblePositionManagerAddress:"0xB218e4f7cF0533d4696fDfC419A0023D33345F28",tickLensAddress:"0x2E95185bCdD928a3e984B7e2D6560Ab1b17d7274",swapRouter02Address:"0x549FEB8c9bd4c12Ad2AB27022dA12492aC452B66"};var CHAIN_TO_ADDRESSES_MAP=(_CHAIN_TO_ADDRESSES_M={},_CHAIN_TO_ADDRESSES_M[ChainId$1.MAINNET]=MAINNET_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.OPTIMISM]=OPTIMISM_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.ARBITRUM_ONE]=ARBITRUM_ONE_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.POLYGON]=POLYGON_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.POLYGON_MUMBAI]=POLYGON_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.GOERLI]=GOERLI_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.CELO]=CELO_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.CELO_ALFAJORES]=CELO_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.BNB]=BNB_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.OPTIMISM_GOERLI]=OPTIMISM_GOERLI_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.OPTIMISM_SEPOLIA]=OPTIMISM_SEPOLIA_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.ARBITRUM_GOERLI]=ARBITRUM_GOERLI_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.ARBITRUM_SEPOLIA]=ARBITRUM_SEPOLIA_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.SEPOLIA]=SEPOLIA_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.AVALANCHE]=AVALANCHE_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.BASE]=BASE_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.BASE_GOERLI]=BASE_GOERLI_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.ZORA]=ZORA_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.ZORA_SEPOLIA]=ZORA_SEPOLIA_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.ROOTSTOCK]=ROOTSTOCK_ADDRESSES,_CHAIN_TO_ADDRESSES_M[ChainId$1.BLAST]=BLAST_ADDRESSES,_CHAIN_TO_ADDRESSES_M);_GOVERNANCE_ALPHA_V1_={},_GOVERNANCE_ALPHA_V1_[ChainId$1.MAINNET]="0xC4e172459f1E7939D522503B81AFAaC1014CE6F6",_GOVERNANCE_ALPHA_V1_;_GOVERNANCE_BRAVO_ADD={},_GOVERNANCE_BRAVO_ADD[ChainId$1.MAINNET]="0x408ED6354d4973f66138C91495F2f2FCbd8724C3",_GOVERNANCE_BRAVO_ADD;_MERKLE_DISTRIBUTOR_A$1={},_MERKLE_DISTRIBUTOR_A$1[ChainId$1.MAINNET]="0x090D4613473dEE047c3f2706764f49E0821D256e",_MERKLE_DISTRIBUTOR_A$1;_ARGENT_WALLET_DETECT={},_ARGENT_WALLET_DETECT[ChainId$1.MAINNET]="0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8",_ARGENT_WALLET_DETECT;_SOCKS_CONTROLLER_ADD={},_SOCKS_CONTROLLER_ADD[ChainId$1.MAINNET]="0x65770b5283117639760beA3F867b69b3697a91dd",_SOCKS_CONTROLLER_ADD;var SWAP_ROUTER_02_ADDRESSES$1=function SWAP_ROUTER_02_ADDRESSES(chainId){if(SUPPORTED_CHAINS.includes(chainId)){var _CHAIN_TO_ADDRESSES_M2;var id=chainId;return(_CHAIN_TO_ADDRESSES_M2=CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address)!=null?_CHAIN_TO_ADDRESSES_M2:"0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"}return""};var TradeType$2;(function(TradeType){TradeType[TradeType["EXACT_INPUT"]=0]="EXACT_INPUT";TradeType[TradeType["EXACT_OUTPUT"]=1]="EXACT_OUTPUT"})(TradeType$2||(TradeType$2={}));var Rounding$1;(function(Rounding){Rounding[Rounding["ROUND_DOWN"]=0]="ROUND_DOWN";Rounding[Rounding["ROUND_HALF_UP"]=1]="ROUND_HALF_UP";Rounding[Rounding["ROUND_UP"]=2]="ROUND_UP"})(Rounding$1||(Rounding$1={}));var MaxUint256$3=JSBI.BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");var _toSignificantRoundin$1,_toFixedRounding$1;var Decimal$2=toFormat(_Decimal);var Big$3=toFormat(_Big);var toSignificantRounding$1=(_toSignificantRoundin$1={},_toSignificantRoundin$1[Rounding$1.ROUND_DOWN]=Decimal$2.ROUND_DOWN,_toSignificantRoundin$1[Rounding$1.ROUND_HALF_UP]=Decimal$2.ROUND_HALF_UP,_toSignificantRoundin$1[Rounding$1.ROUND_UP]=Decimal$2.ROUND_UP,_toSignificantRoundin$1);var toFixedRounding$1=(_toFixedRounding$1={},_toFixedRounding$1[Rounding$1.ROUND_DOWN]=0,_toFixedRounding$1[Rounding$1.ROUND_HALF_UP]=1,_toFixedRounding$1[Rounding$1.ROUND_UP]=3,_toFixedRounding$1);var Fraction$1=function(){function Fraction(numerator,denominator){if(denominator===void 0){denominator=JSBI.BigInt(1)}this.numerator=JSBI.BigInt(numerator);this.denominator=JSBI.BigInt(denominator)}Fraction.tryParseFraction=function tryParseFraction(fractionish){if(fractionish instanceof JSBI||typeof fractionish==="number"||typeof fractionish==="string")return new Fraction(fractionish);if("numerator"in fractionish&&"denominator"in fractionish)return fractionish;throw new Error("Could not parse fraction")};var _proto=Fraction.prototype;_proto.invert=function invert(){return new Fraction(this.denominator,this.numerator)};_proto.add=function add(other){var otherParsed=Fraction.tryParseFraction(other);if(JSBI.equal(this.denominator,otherParsed.denominator)){return new Fraction(JSBI.add(this.numerator,otherParsed.numerator),this.denominator)}return new Fraction(JSBI.add(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator)),JSBI.multiply(this.denominator,otherParsed.denominator))};_proto.subtract=function subtract(other){var otherParsed=Fraction.tryParseFraction(other);if(JSBI.equal(this.denominator,otherParsed.denominator)){return new Fraction(JSBI.subtract(this.numerator,otherParsed.numerator),this.denominator)}return new Fraction(JSBI.subtract(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator)),JSBI.multiply(this.denominator,otherParsed.denominator))};_proto.lessThan=function lessThan(other){var otherParsed=Fraction.tryParseFraction(other);return JSBI.lessThan(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator))};_proto.equalTo=function equalTo(other){var otherParsed=Fraction.tryParseFraction(other);return JSBI.equal(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator))};_proto.greaterThan=function greaterThan(other){var otherParsed=Fraction.tryParseFraction(other);return JSBI.greaterThan(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator))};_proto.multiply=function multiply(other){var otherParsed=Fraction.tryParseFraction(other);return new Fraction(JSBI.multiply(this.numerator,otherParsed.numerator),JSBI.multiply(this.denominator,otherParsed.denominator))};_proto.divide=function divide(other){var otherParsed=Fraction.tryParseFraction(other);return new Fraction(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(this.denominator,otherParsed.numerator))};_proto.toSignificant=function toSignificant(significantDigits,format,rounding){if(format===void 0){format={groupSeparator:""}}if(rounding===void 0){rounding=Rounding$1.ROUND_HALF_UP}!Number.isInteger(significantDigits)?process.env.NODE_ENV!=="production"?invariant(false,significantDigits+" is not an integer."):invariant(false):void 0;!(significantDigits>0)?process.env.NODE_ENV!=="production"?invariant(false,significantDigits+" is not positive."):invariant(false):void 0;Decimal$2.set({precision:significantDigits+1,rounding:toSignificantRounding$1[rounding]});var quotient=new Decimal$2(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);return quotient.toFormat(quotient.decimalPlaces(),format)};_proto.toFixed=function toFixed(decimalPlaces,format,rounding){if(format===void 0){format={groupSeparator:""}}if(rounding===void 0){rounding=Rounding$1.ROUND_HALF_UP}!Number.isInteger(decimalPlaces)?process.env.NODE_ENV!=="production"?invariant(false,decimalPlaces+" is not an integer."):invariant(false):void 0;!(decimalPlaces>=0)?process.env.NODE_ENV!=="production"?invariant(false,decimalPlaces+" is negative."):invariant(false):void 0;Big$3.DP=decimalPlaces;Big$3.RM=toFixedRounding$1[rounding];return new Big$3(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces,format)};_createClass$3(Fraction,[{key:"quotient",get:function get(){return JSBI.divide(this.numerator,this.denominator)}},{key:"remainder",get:function get(){return new Fraction(JSBI.remainder(this.numerator,this.denominator),this.denominator)}},{key:"asFraction",get:function get(){return new Fraction(this.numerator,this.denominator)}}]);return Fraction}();var Big$1$1=toFormat(_Big);var CurrencyAmount$2=function(_Fraction){_inheritsLoose$2(CurrencyAmount,_Fraction);function CurrencyAmount(currency,numerator,denominator){var _this;_this=_Fraction.call(this,numerator,denominator)||this;!JSBI.lessThanOrEqual(_this.quotient,MaxUint256$3)?process.env.NODE_ENV!=="production"?invariant(false,"AMOUNT"):invariant(false):void 0;_this.currency=currency;_this.decimalScale=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(currency.decimals));return _this}CurrencyAmount.fromRawAmount=function fromRawAmount(currency,rawAmount){return new CurrencyAmount(currency,rawAmount)};CurrencyAmount.fromFractionalAmount=function fromFractionalAmount(currency,numerator,denominator){return new CurrencyAmount(currency,numerator,denominator)};var _proto=CurrencyAmount.prototype;_proto.add=function add(other){!this.currency.equals(other.currency)?process.env.NODE_ENV!=="production"?invariant(false,"CURRENCY"):invariant(false):void 0;var added=_Fraction.prototype.add.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,added.numerator,added.denominator)};_proto.subtract=function subtract(other){!this.currency.equals(other.currency)?process.env.NODE_ENV!=="production"?invariant(false,"CURRENCY"):invariant(false):void 0;var subtracted=_Fraction.prototype.subtract.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,subtracted.numerator,subtracted.denominator)};_proto.multiply=function multiply(other){var multiplied=_Fraction.prototype.multiply.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,multiplied.numerator,multiplied.denominator)};_proto.divide=function divide(other){var divided=_Fraction.prototype.divide.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,divided.numerator,divided.denominator)};_proto.toSignificant=function toSignificant(significantDigits,format,rounding){if(significantDigits===void 0){significantDigits=6}if(rounding===void 0){rounding=Rounding$1.ROUND_DOWN}return _Fraction.prototype.divide.call(this,this.decimalScale).toSignificant(significantDigits,format,rounding)};_proto.toFixed=function toFixed(decimalPlaces,format,rounding){if(decimalPlaces===void 0){decimalPlaces=this.currency.decimals}if(rounding===void 0){rounding=Rounding$1.ROUND_DOWN}!(decimalPlaces<=this.currency.decimals)?process.env.NODE_ENV!=="production"?invariant(false,"DECIMALS"):invariant(false):void 0;return _Fraction.prototype.divide.call(this,this.decimalScale).toFixed(decimalPlaces,format,rounding)};_proto.toExact=function toExact(format){if(format===void 0){format={groupSeparator:""}}Big$1$1.DP=this.currency.decimals;return new Big$1$1(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)};_createClass$3(CurrencyAmount,[{key:"wrapped",get:function get(){if(this.currency.isToken)return this;return CurrencyAmount.fromFractionalAmount(this.currency.wrapped,this.numerator,this.denominator)}}]);return CurrencyAmount}(Fraction$1);var ONE_HUNDRED$1=new Fraction$1(JSBI.BigInt(100));function toPercent$2(fraction){return new Percent$1(fraction.numerator,fraction.denominator)}var Percent$1=function(_Fraction){_inheritsLoose$2(Percent,_Fraction);function Percent(){var _this;_this=_Fraction.apply(this,arguments)||this;_this.isPercent=true;return _this}var _proto=Percent.prototype;_proto.add=function add(other){return toPercent$2(_Fraction.prototype.add.call(this,other))};_proto.subtract=function subtract(other){return toPercent$2(_Fraction.prototype.subtract.call(this,other))};_proto.multiply=function multiply(other){return toPercent$2(_Fraction.prototype.multiply.call(this,other))};_proto.divide=function divide(other){return toPercent$2(_Fraction.prototype.divide.call(this,other))};_proto.toSignificant=function toSignificant(significantDigits,format,rounding){if(significantDigits===void 0){significantDigits=5}return _Fraction.prototype.multiply.call(this,ONE_HUNDRED$1).toSignificant(significantDigits,format,rounding)};_proto.toFixed=function toFixed(decimalPlaces,format,rounding){if(decimalPlaces===void 0){decimalPlaces=2}return _Fraction.prototype.multiply.call(this,ONE_HUNDRED$1).toFixed(decimalPlaces,format,rounding)};return Percent}(Fraction$1);var Price=function(_Fraction){_inheritsLoose$2(Price,_Fraction);function Price(){var _this;var baseCurrency,quoteCurrency,denominator,numerator;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key]}if(args.length===4){baseCurrency=args[0];quoteCurrency=args[1];denominator=args[2];numerator=args[3]}else{var result=args[0].quoteAmount.divide(args[0].baseAmount);var _ref=[args[0].baseAmount.currency,args[0].quoteAmount.currency,result.denominator,result.numerator];baseCurrency=_ref[0];quoteCurrency=_ref[1];denominator=_ref[2];numerator=_ref[3]}_this=_Fraction.call(this,numerator,denominator)||this;_this.baseCurrency=baseCurrency;_this.quoteCurrency=quoteCurrency;_this.scalar=new Fraction$1(JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(baseCurrency.decimals)),JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(quoteCurrency.decimals)));return _this}var _proto=Price.prototype;_proto.invert=function invert(){return new Price(this.quoteCurrency,this.baseCurrency,this.numerator,this.denominator)};_proto.multiply=function multiply(other){!this.quoteCurrency.equals(other.baseCurrency)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;var fraction=_Fraction.prototype.multiply.call(this,other);return new Price(this.baseCurrency,other.quoteCurrency,fraction.denominator,fraction.numerator)};_proto.quote=function quote(currencyAmount){!currencyAmount.currency.equals(this.baseCurrency)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;var result=_Fraction.prototype.multiply.call(this,currencyAmount);return CurrencyAmount$2.fromFractionalAmount(this.quoteCurrency,result.numerator,result.denominator)};_proto.toSignificant=function toSignificant(significantDigits,format,rounding){if(significantDigits===void 0){significantDigits=6}return this.adjustedForDecimals.toSignificant(significantDigits,format,rounding)};_proto.toFixed=function toFixed(decimalPlaces,format,rounding){if(decimalPlaces===void 0){decimalPlaces=4}return this.adjustedForDecimals.toFixed(decimalPlaces,format,rounding)};_createClass$3(Price,[{key:"adjustedForDecimals",get:function get(){return _Fraction.prototype.multiply.call(this,this.scalar)}}]);return Price}(Fraction$1);var BaseCurrency=function BaseCurrency(chainId,decimals,symbol,name){!Number.isSafeInteger(chainId)?process.env.NODE_ENV!=="production"?invariant(false,"CHAIN_ID"):invariant(false):void 0;!(decimals>=0&&decimals<255&&Number.isInteger(decimals))?process.env.NODE_ENV!=="production"?invariant(false,"DECIMALS"):invariant(false):void 0;this.chainId=chainId;this.decimals=decimals;this.symbol=symbol;this.name=name};var NativeCurrency$1=function(_BaseCurrency){_inheritsLoose$2(NativeCurrency,_BaseCurrency);function NativeCurrency(){var _this;_this=_BaseCurrency.apply(this,arguments)||this;_this.isNative=true;_this.isToken=false;return _this}return NativeCurrency}(BaseCurrency);function validateAndParseAddress$1(address){try{return getAddress$1(address)}catch(error){throw new Error(address+" is not a valid address.")}}var startsWith0xLen42HexRegex=/^0x[0-9a-fA-F]{40}$/;function checkValidAddress(address){if(startsWith0xLen42HexRegex.test(address)){return address}throw new Error(address+" is not a valid address.")}var Token$1=function(_BaseCurrency){_inheritsLoose$2(Token,_BaseCurrency);function Token(chainId,address,decimals,symbol,name,bypassChecksum,buyFeeBps,sellFeeBps){var _this;_this=_BaseCurrency.call(this,chainId,decimals,symbol,name)||this;_this.isNative=false;_this.isToken=true;if(bypassChecksum){_this.address=checkValidAddress(address)}else{_this.address=validateAndParseAddress$1(address)}if(buyFeeBps){!buyFeeBps.gte(BigNumber$1.from(0))?process.env.NODE_ENV!=="production"?invariant(false,"NON-NEGATIVE FOT FEES"):invariant(false):void 0}if(sellFeeBps){!sellFeeBps.gte(BigNumber$1.from(0))?process.env.NODE_ENV!=="production"?invariant(false,"NON-NEGATIVE FOT FEES"):invariant(false):void 0}_this.buyFeeBps=buyFeeBps;_this.sellFeeBps=sellFeeBps;return _this}var _proto=Token.prototype;_proto.equals=function equals(other){return other.isToken&&this.chainId===other.chainId&&this.address.toLowerCase()===other.address.toLowerCase()};_proto.sortsBefore=function sortsBefore(other){!(this.chainId===other.chainId)?process.env.NODE_ENV!=="production"?invariant(false,"CHAIN_IDS"):invariant(false):void 0;!(this.address.toLowerCase()!==other.address.toLowerCase())?process.env.NODE_ENV!=="production"?invariant(false,"ADDRESSES"):invariant(false):void 0;return this.address.toLowerCase()<other.address.toLowerCase()};_createClass$3(Token,[{key:"wrapped",get:function get(){return this}}]);return Token}(BaseCurrency);var _WETH$1;var WETH9$1=(_WETH$1={},_WETH$1[1]=new Token$1(1,"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",18,"WETH","Wrapped Ether"),_WETH$1[3]=new Token$1(3,"0xc778417E063141139Fce010982780140Aa0cD5Ab",18,"WETH","Wrapped Ether"),_WETH$1[4]=new Token$1(4,"0xc778417E063141139Fce010982780140Aa0cD5Ab",18,"WETH","Wrapped Ether"),_WETH$1[5]=new Token$1(5,"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",18,"WETH","Wrapped Ether"),_WETH$1[42]=new Token$1(42,"0xd0A1E359811322d97991E03f863a0C30C2cF029C",18,"WETH","Wrapped Ether"),_WETH$1[10]=new Token$1(10,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),_WETH$1[69]=new Token$1(69,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),_WETH$1[11155420]=new Token$1(11155420,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),_WETH$1[42161]=new Token$1(42161,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),_WETH$1[421611]=new Token$1(421611,"0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681",18,"WETH","Wrapped Ether"),_WETH$1[421614]=new Token$1(421614,"0x980B62Da83eFf3D4576C647993b0c1D7faf17c73",18,"WETH","Wrapped Ether"),_WETH$1[8453]=new Token$1(8453,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),_WETH$1[56]=new Token$1(56,"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",18,"WBNB","Wrapped BNB"),_WETH$1[137]=new Token$1(137,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC"),_WETH$1[43114]=new Token$1(43114,"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",18,"WAVAX","Wrapped AVAX"),_WETH$1);var Ether$1=function(_NativeCurrency){_inheritsLoose$2(Ether,_NativeCurrency);function Ether(chainId){return _NativeCurrency.call(this,chainId,18,"ETH","Ether")||this}Ether.onChain=function onChain(chainId){var _this$_etherCache$cha;return(_this$_etherCache$cha=this._etherCache[chainId])!=null?_this$_etherCache$cha:this._etherCache[chainId]=new Ether(chainId)};var _proto=Ether.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass$3(Ether,[{key:"wrapped",get:function get(){var weth9=WETH9$1[this.chainId];!!!weth9?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return weth9}}]);return Ether}(NativeCurrency$1);Ether$1._etherCache={};var MAX_SAFE_INTEGER$2=JSBI.BigInt(Number.MAX_SAFE_INTEGER);var ZERO$2=JSBI.BigInt(0);var ONE$2=JSBI.BigInt(1);var TWO$1=JSBI.BigInt(2);function sqrt$1(value){!JSBI.greaterThanOrEqual(value,ZERO$2)?process.env.NODE_ENV!=="production"?invariant(false,"NEGATIVE"):invariant(false):void 0;if(JSBI.lessThan(value,MAX_SAFE_INTEGER$2)){return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))}var z;var x;z=value;x=JSBI.add(JSBI.divide(value,TWO$1),ONE$2);while(JSBI.lessThan(x,z)){z=x;x=JSBI.divide(JSBI.add(JSBI.divide(value,x),x),TWO$1)}return z}const version$l="properties/5.7.0";var __awaiter$1f=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$E=new Logger(version$l);function defineReadOnly(object,name,value){Object.defineProperty(object,name,{enumerable:true,value:value,writable:false})}function getStatic(ctor,key){for(let i=0;i<32;i++){if(ctor[key]){return ctor[key]}if(!ctor.prototype||typeof ctor.prototype!=="object"){break}ctor=Object.getPrototypeOf(ctor.prototype).constructor}return null}function resolveProperties(object){return __awaiter$1f(this,void 0,void 0,function*(){const promises=Object.keys(object).map(key=>{const value=object[key];return Promise.resolve(value).then(v=>({key:key,value:v}))});const results=yield Promise.all(promises);return results.reduce((accum,result)=>{accum[result.key]=result.value;return accum},{})})}function checkProperties(object,properties){if(!object||typeof object!=="object"){logger$E.throwArgumentError("invalid object","object",object)}Object.keys(object).forEach(key=>{if(!properties[key]){logger$E.throwArgumentError("invalid object key - "+key,"transaction:"+key,object)}})}function shallowCopy(object){const result={};for(const key in object){result[key]=object[key]}return result}const opaque={bigint:true,boolean:true,function:true,number:true,string:true};function _isFrozen(object){if(object===undefined||object===null||opaque[typeof object]){return true}if(Array.isArray(object)||typeof object==="object"){if(!Object.isFrozen(object)){return false}const keys=Object.keys(object);for(let i=0;i<keys.length;i++){let value=null;try{value=object[keys[i]]}catch(error){continue}if(!_isFrozen(value)){return false}}return true}return logger$E.throwArgumentError(`Cannot deepCopy ${typeof object}`,"object",object)}function _deepCopy(object){if(_isFrozen(object)){return object}if(Array.isArray(object)){return Object.freeze(object.map(item=>deepCopy(item)))}if(typeof object==="object"){const result={};for(const key in object){const value=object[key];if(value===undefined){continue}defineReadOnly(result,key,deepCopy(value))}return result}return logger$E.throwArgumentError(`Cannot deepCopy ${typeof object}`,"object",object)}function deepCopy(object){return _deepCopy(object)}class Description{constructor(info){for(const key in info){this[key]=deepCopy(info[key])}}}const version$k="abi/5.7.0";const logger$D=new Logger(version$k);const _constructorGuard$2={};let ModifiersBytes={calldata:true,memory:true,storage:true};let ModifiersNest={calldata:true,memory:true};function checkModifier(type,name){if(type==="bytes"||type==="string"){if(ModifiersBytes[name]){return true}}else if(type==="address"){if(name==="payable"){return true}}else if(type.indexOf("[")>=0||type==="tuple"){if(ModifiersNest[name]){return true}}if(ModifiersBytes[name]||name==="payable"){logger$D.throwArgumentError("invalid modifier","name",name)}return false}function parseParamType(param,allowIndexed){let originalParam=param;function throwError(i){logger$D.throwArgumentError(`unexpected character at position ${i}`,"param",param)}param=param.replace(/\s/g," ");function newNode(parent){let node={type:"",name:"",parent:parent,state:{allowType:true}};if(allowIndexed){node.indexed=false}return node}let parent={type:"",name:"",state:{allowType:true}};let node=parent;for(let i=0;i<param.length;i++){let c=param[i];switch(c){case"(":if(node.state.allowType&&node.type===""){node.type="tuple"}else if(!node.state.allowParams){throwError(i)}node.state.allowType=false;node.type=verifyType(node.type);node.components=[newNode(node)];node=node.components[0];break;case")":delete node.state;if(node.name==="indexed"){if(!allowIndexed){throwError(i)}node.indexed=true;node.name=""}if(checkModifier(node.type,node.name)){node.name=""}node.type=verifyType(node.type);let child=node;node=node.parent;if(!node){throwError(i)}delete child.parent;node.state.allowParams=false;node.state.allowName=true;node.state.allowArray=true;break;case",":delete node.state;if(node.name==="indexed"){if(!allowIndexed){throwError(i)}node.indexed=true;node.name=""}if(checkModifier(node.type,node.name)){node.name=""}node.type=verifyType(node.type);let sibling=newNode(node.parent);node.parent.components.push(sibling);delete node.parent;node=sibling;break;case" ":if(node.state.allowType){if(node.type!==""){node.type=verifyType(node.type);delete node.state.allowType;node.state.allowName=true;node.state.allowParams=true}}if(node.state.allowName){if(node.name!==""){if(node.name==="indexed"){if(!allowIndexed){throwError(i)}if(node.indexed){throwError(i)}node.indexed=true;node.name=""}else if(checkModifier(node.type,node.name)){node.name=""}else{node.state.allowName=false}}}break;case"[":if(!node.state.allowArray){throwError(i)}node.type+=c;node.state.allowArray=false;node.state.allowName=false;node.state.readArray=true;break;case"]":if(!node.state.readArray){throwError(i)}node.type+=c;node.state.readArray=false;node.state.allowArray=true;node.state.allowName=true;break;default:if(node.state.allowType){node.type+=c;node.state.allowParams=true;node.state.allowArray=true}else if(node.state.allowName){node.name+=c;delete node.state.allowArray}else if(node.state.readArray){node.type+=c}else{throwError(i)}}}if(node.parent){logger$D.throwArgumentError("unexpected eof","param",param)}delete parent.state;if(node.name==="indexed"){if(!allowIndexed){throwError(originalParam.length-7)}if(node.indexed){throwError(originalParam.length-7)}node.indexed=true;node.name=""}else if(checkModifier(node.type,node.name)){node.name=""}parent.type=verifyType(parent.type);return parent}function populate(object,params){for(let key in params){defineReadOnly(object,key,params[key])}}const FormatTypes=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"});const paramTypeArray=new RegExp(/^(.*)\[([0-9]*)\]$/);let ParamType$1=class ParamType{constructor(constructorGuard,params){if(constructorGuard!==_constructorGuard$2){logger$D.throwError("use fromString",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"})}populate(this,params);let match=this.type.match(paramTypeArray);if(match){populate(this,{arrayLength:parseInt(match[2]||"-1"),arrayChildren:ParamType.fromObject({type:match[1],components:this.components}),baseType:"array"})}else{populate(this,{arrayLength:null,arrayChildren:null,baseType:this.components!=null?"tuple":this.type})}this._isParamType=true;Object.freeze(this)}format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$D.throwArgumentError("invalid format type","format",format)}if(format===FormatTypes.json){let result={type:this.baseType==="tuple"?"tuple":this.type,name:this.name||undefined};if(typeof this.indexed==="boolean"){result.indexed=this.indexed}if(this.components){result.components=this.components.map(comp=>JSON.parse(comp.format(format)))}return JSON.stringify(result)}let result="";if(this.baseType==="array"){result+=this.arrayChildren.format(format);result+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"}else{if(this.baseType==="tuple"){if(format!==FormatTypes.sighash){result+=this.type}result+="("+this.components.map(comp=>comp.format(format)).join(format===FormatTypes.full?", ":",")+")"}else{result+=this.type}}if(format!==FormatTypes.sighash){if(this.indexed===true){result+=" indexed"}if(format===FormatTypes.full&&this.name){result+=" "+this.name}}return result}static from(value,allowIndexed){if(typeof value==="string"){return ParamType.fromString(value,allowIndexed)}return ParamType.fromObject(value)}static fromObject(value){if(ParamType.isParamType(value)){return value}return new ParamType(_constructorGuard$2,{name:value.name||null,type:verifyType(value.type),indexed:value.indexed==null?null:!!value.indexed,components:value.components?value.components.map(ParamType.fromObject):null})}static fromString(value,allowIndexed){function ParamTypify(node){return ParamType.fromObject({name:node.name,type:node.type,indexed:node.indexed,components:node.components})}return ParamTypify(parseParamType(value,!!allowIndexed))}static isParamType(value){return!!(value!=null&&value._isParamType)}};function parseParams(value,allowIndex){return splitNesting(value).map(param=>ParamType$1.fromString(param,allowIndex))}class Fragment{constructor(constructorGuard,params){if(constructorGuard!==_constructorGuard$2){logger$D.throwError("use a static from method",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"})}populate(this,params);this._isFragment=true;Object.freeze(this)}static from(value){if(Fragment.isFragment(value)){return value}if(typeof value==="string"){return Fragment.fromString(value)}return Fragment.fromObject(value)}static fromObject(value){if(Fragment.isFragment(value)){return value}switch(value.type){case"function":return FunctionFragment.fromObject(value);case"event":return EventFragment.fromObject(value);case"constructor":return ConstructorFragment.fromObject(value);case"error":return ErrorFragment.fromObject(value);case"fallback":case"receive":return null}return logger$D.throwArgumentError("invalid fragment object","value",value)}static fromString(value){value=value.replace(/\s/g," ");value=value.replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," ");value=value.trim();if(value.split(" ")[0]==="event"){return EventFragment.fromString(value.substring(5).trim())}else if(value.split(" ")[0]==="function"){return FunctionFragment.fromString(value.substring(8).trim())}else if(value.split("(")[0].trim()==="constructor"){return ConstructorFragment.fromString(value.trim())}else if(value.split(" ")[0]==="error"){return ErrorFragment.fromString(value.substring(5).trim())}return logger$D.throwArgumentError("unsupported fragment","value",value)}static isFragment(value){return!!(value&&value._isFragment)}}class EventFragment extends Fragment{format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$D.throwArgumentError("invalid format type","format",format)}if(format===FormatTypes.json){return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))})}let result="";if(format!==FormatTypes.sighash){result+="event "}result+=this.name+"("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ";if(format!==FormatTypes.sighash){if(this.anonymous){result+="anonymous "}}return result.trim()}static from(value){if(typeof value==="string"){return EventFragment.fromString(value)}return EventFragment.fromObject(value)}static fromObject(value){if(EventFragment.isEventFragment(value)){return value}if(value.type!=="event"){logger$D.throwArgumentError("invalid event object","value",value)}const params={name:verifyIdentifier(value.name),anonymous:value.anonymous,inputs:value.inputs?value.inputs.map(ParamType$1.fromObject):[],type:"event"};return new EventFragment(_constructorGuard$2,params)}static fromString(value){let match=value.match(regexParen);if(!match){logger$D.throwArgumentError("invalid event string","value",value)}let anonymous=false;match[3].split(" ").forEach(modifier=>{switch(modifier.trim()){case"anonymous":anonymous=true;break;case"":break;default:logger$D.warn("unknown modifier: "+modifier)}});return EventFragment.fromObject({name:match[1].trim(),anonymous:anonymous,inputs:parseParams(match[2],true),type:"event"})}static isEventFragment(value){return value&&value._isFragment&&value.type==="event"}}function parseGas(value,params){params.gas=null;let comps=value.split("@");if(comps.length!==1){if(comps.length>2){logger$D.throwArgumentError("invalid human-readable ABI signature","value",value)}if(!comps[1].match(/^[0-9]+$/)){logger$D.throwArgumentError("invalid human-readable ABI signature gas","value",value)}params.gas=BigNumber$1.from(comps[1]);return comps[0]}return value}function parseModifiers(value,params){params.constant=false;params.payable=false;params.stateMutability="nonpayable";value.split(" ").forEach(modifier=>{switch(modifier.trim()){case"constant":params.constant=true;break;case"payable":params.payable=true;params.stateMutability="payable";break;case"nonpayable":params.payable=false;params.stateMutability="nonpayable";break;case"pure":params.constant=true;params.stateMutability="pure";break;case"view":params.constant=true;params.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+modifier)}})}function verifyState(value){let result={constant:false,payable:true,stateMutability:"payable"};if(value.stateMutability!=null){result.stateMutability=value.stateMutability;result.constant=result.stateMutability==="view"||result.stateMutability==="pure";if(value.constant!=null){if(!!value.constant!==result.constant){logger$D.throwArgumentError("cannot have constant function with mutability "+result.stateMutability,"value",value)}}result.payable=result.stateMutability==="payable";if(value.payable!=null){if(!!value.payable!==result.payable){logger$D.throwArgumentError("cannot have payable function with mutability "+result.stateMutability,"value",value)}}}else if(value.payable!=null){result.payable=!!value.payable;if(value.constant==null&&!result.payable&&value.type!=="constructor"){logger$D.throwArgumentError("unable to determine stateMutability","value",value)}result.constant=!!value.constant;if(result.constant){result.stateMutability="view"}else{result.stateMutability=result.payable?"payable":"nonpayable"}if(result.payable&&result.constant){logger$D.throwArgumentError("cannot have constant payable function","value",value)}}else if(value.constant!=null){result.constant=!!value.constant;result.payable=!result.constant;result.stateMutability=result.constant?"view":"payable"}else if(value.type!=="constructor"){logger$D.throwArgumentError("unable to determine stateMutability","value",value)}return result}class ConstructorFragment extends Fragment{format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$D.throwArgumentError("invalid format type","format",format)}if(format===FormatTypes.json){return JSON.stringify({type:"constructor",stateMutability:this.stateMutability!=="nonpayable"?this.stateMutability:undefined,payable:this.payable,gas:this.gas?this.gas.toNumber():undefined,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))})}if(format===FormatTypes.sighash){logger$D.throwError("cannot format a constructor for sighash",Logger.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"})}let result="constructor("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ";if(this.stateMutability&&this.stateMutability!=="nonpayable"){result+=this.stateMutability+" "}return result.trim()}static from(value){if(typeof value==="string"){return ConstructorFragment.fromString(value)}return ConstructorFragment.fromObject(value)}static fromObject(value){if(ConstructorFragment.isConstructorFragment(value)){return value}if(value.type!=="constructor"){logger$D.throwArgumentError("invalid constructor object","value",value)}let state=verifyState(value);if(state.constant){logger$D.throwArgumentError("constructor cannot be constant","value",value)}const params={name:null,type:value.type,inputs:value.inputs?value.inputs.map(ParamType$1.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?BigNumber$1.from(value.gas):null};return new ConstructorFragment(_constructorGuard$2,params)}static fromString(value){let params={type:"constructor"};value=parseGas(value,params);let parens=value.match(regexParen);if(!parens||parens[1].trim()!=="constructor"){logger$D.throwArgumentError("invalid constructor string","value",value)}params.inputs=parseParams(parens[2].trim(),false);parseModifiers(parens[3].trim(),params);return ConstructorFragment.fromObject(params)}static isConstructorFragment(value){return value&&value._isFragment&&value.type==="constructor"}}class FunctionFragment extends ConstructorFragment{format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$D.throwArgumentError("invalid format type","format",format)}if(format===FormatTypes.json){return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:this.stateMutability!=="nonpayable"?this.stateMutability:undefined,payable:this.payable,gas:this.gas?this.gas.toNumber():undefined,inputs:this.inputs.map(input=>JSON.parse(input.format(format))),outputs:this.outputs.map(output=>JSON.parse(output.format(format)))})}let result="";if(format!==FormatTypes.sighash){result+="function "}result+=this.name+"("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ";if(format!==FormatTypes.sighash){if(this.stateMutability){if(this.stateMutability!=="nonpayable"){result+=this.stateMutability+" "}}else if(this.constant){result+="view "}if(this.outputs&&this.outputs.length){result+="returns ("+this.outputs.map(output=>output.format(format)).join(", ")+") "}if(this.gas!=null){result+="@"+this.gas.toString()+" "}}return result.trim()}static from(value){if(typeof value==="string"){return FunctionFragment.fromString(value)}return FunctionFragment.fromObject(value)}static fromObject(value){if(FunctionFragment.isFunctionFragment(value)){return value}if(value.type!=="function"){logger$D.throwArgumentError("invalid function object","value",value)}let state=verifyState(value);const params={type:value.type,name:verifyIdentifier(value.name),constant:state.constant,inputs:value.inputs?value.inputs.map(ParamType$1.fromObject):[],outputs:value.outputs?value.outputs.map(ParamType$1.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?BigNumber$1.from(value.gas):null};return new FunctionFragment(_constructorGuard$2,params)}static fromString(value){let params={type:"function"};value=parseGas(value,params);let comps=value.split(" returns ");if(comps.length>2){logger$D.throwArgumentError("invalid function string","value",value)}let parens=comps[0].match(regexParen);if(!parens){logger$D.throwArgumentError("invalid function signature","value",value)}params.name=parens[1].trim();if(params.name){verifyIdentifier(params.name)}params.inputs=parseParams(parens[2],false);parseModifiers(parens[3].trim(),params);if(comps.length>1){let returns=comps[1].match(regexParen);if(returns[1].trim()!=""||returns[3].trim()!=""){logger$D.throwArgumentError("unexpected tokens","value",value)}params.outputs=parseParams(returns[2],false)}else{params.outputs=[]}return FunctionFragment.fromObject(params)}static isFunctionFragment(value){return value&&value._isFragment&&value.type==="function"}}function checkForbidden(fragment){const sig=fragment.format();if(sig==="Error(string)"||sig==="Panic(uint256)"){logger$D.throwArgumentError(`cannot specify user defined ${sig} error`,"fragment",fragment)}return fragment}class ErrorFragment extends Fragment{format(format){if(!format){format=FormatTypes.sighash}if(!FormatTypes[format]){logger$D.throwArgumentError("invalid format type","format",format)}if(format===FormatTypes.json){return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))})}let result="";if(format!==FormatTypes.sighash){result+="error "}result+=this.name+"("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ";return result.trim()}static from(value){if(typeof value==="string"){return ErrorFragment.fromString(value)}return ErrorFragment.fromObject(value)}static fromObject(value){if(ErrorFragment.isErrorFragment(value)){return value}if(value.type!=="error"){logger$D.throwArgumentError("invalid error object","value",value)}const params={type:value.type,name:verifyIdentifier(value.name),inputs:value.inputs?value.inputs.map(ParamType$1.fromObject):[]};return checkForbidden(new ErrorFragment(_constructorGuard$2,params))}static fromString(value){let params={type:"error"};let parens=value.match(regexParen);if(!parens){logger$D.throwArgumentError("invalid error signature","value",value)}params.name=parens[1].trim();if(params.name){verifyIdentifier(params.name)}params.inputs=parseParams(parens[2],false);return checkForbidden(ErrorFragment.fromObject(params))}static isErrorFragment(value){return value&&value._isFragment&&value.type==="error"}}function verifyType(type){if(type.match(/^uint($|[^1-9])/)){type="uint256"+type.substring(4)}else if(type.match(/^int($|[^1-9])/)){type="int256"+type.substring(3)}return type}const regexIdentifier=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function verifyIdentifier(value){if(!value||!value.match(regexIdentifier)){logger$D.throwArgumentError(`invalid identifier "${value}"`,"value",value)}return value}const regexParen=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");function splitNesting(value){value=value.trim();let result=[];let accum="";let depth=0;for(let offset=0;offset<value.length;offset++){let c=value[offset];if(c===","&&depth===0){result.push(accum);accum=""}else{accum+=c;if(c==="("){depth++}else if(c===")"){depth--;if(depth===-1){logger$D.throwArgumentError("unbalanced parenthesis","value",value)}}}}if(accum){result.push(accum)}return result}const logger$C=new Logger(version$k);function checkResultErrors(result){const errors=[];const checkErrors=function(path,object){if(!Array.isArray(object)){return}for(let key in object){const childPath=path.slice();childPath.push(key);try{checkErrors(childPath,object[key])}catch(error){errors.push({path:childPath,error:error})}}};checkErrors([],result);return errors}class Coder{constructor(name,type,localName,dynamic){this.name=name;this.type=type;this.localName=localName;this.dynamic=dynamic}_throwError(message,value){logger$C.throwArgumentError(message,this.localName,value)}}class Writer{constructor(wordSize){defineReadOnly(this,"wordSize",wordSize||32);this._data=[];this._dataLength=0;this._padding=new Uint8Array(wordSize)}get data(){return hexConcat(this._data)}get length(){return this._dataLength}_writeData(data){this._data.push(data);this._dataLength+=data.length;return data.length}appendWriter(writer){return this._writeData(concat$1(writer._data))}writeBytes(value){let bytes=arrayify(value);const paddingOffset=bytes.length%this.wordSize;if(paddingOffset){bytes=concat$1([bytes,this._padding.slice(paddingOffset)])}return this._writeData(bytes)}_getValue(value){let bytes=arrayify(BigNumber$1.from(value));if(bytes.length>this.wordSize){logger$C.throwError("value out-of-bounds",Logger.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:bytes.length})}if(bytes.length%this.wordSize){bytes=concat$1([this._padding.slice(bytes.length%this.wordSize),bytes])}return bytes}writeValue(value){return this._writeData(this._getValue(value))}writeUpdatableValue(){const offset=this._data.length;this._data.push(this._padding);this._dataLength+=this.wordSize;return value=>{this._data[offset]=this._getValue(value)}}}class Reader{constructor(data,wordSize,coerceFunc,allowLoose){defineReadOnly(this,"_data",arrayify(data));defineReadOnly(this,"wordSize",wordSize||32);defineReadOnly(this,"_coerceFunc",coerceFunc);defineReadOnly(this,"allowLoose",allowLoose);this._offset=0}get data(){return hexlify(this._data)}get consumed(){return this._offset}static coerce(name,value){let match=name.match("^u?int([0-9]+)$");if(match&&parseInt(match[1])<=48){value=value.toNumber()}return value}coerce(name,value){if(this._coerceFunc){return this._coerceFunc(name,value)}return Reader.coerce(name,value)}_peekBytes(offset,length,loose){let alignedLength=Math.ceil(length/this.wordSize)*this.wordSize;if(this._offset+alignedLength>this._data.length){if(this.allowLoose&&loose&&this._offset+length<=this._data.length){alignedLength=length}else{logger$C.throwError("data out-of-bounds",Logger.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+alignedLength})}}return this._data.slice(this._offset,this._offset+alignedLength)}subReader(offset){return new Reader(this._data.slice(this._offset+offset),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(length,loose){let bytes=this._peekBytes(0,length,!!loose);this._offset+=bytes.length;return bytes.slice(0,length)}readValue(){return BigNumber$1.from(this.readBytes(this.wordSize))}}class AddressCoder extends Coder{constructor(localName){super("address","address",localName,false)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(writer,value){try{value=getAddress$1(value)}catch(error){this._throwError(error.message,value)}return writer.writeValue(value)}decode(reader){return getAddress$1(hexZeroPad(reader.readValue().toHexString(),20))}}class AnonymousCoder extends Coder{constructor(coder){super(coder.name,coder.type,undefined,coder.dynamic);this.coder=coder}defaultValue(){return this.coder.defaultValue()}encode(writer,value){return this.coder.encode(writer,value)}decode(reader){return this.coder.decode(reader)}}const logger$B=new Logger(version$k);function pack$1(writer,coders,values){let arrayValues=null;if(Array.isArray(values)){arrayValues=values}else if(values&&typeof values==="object"){let unique={};arrayValues=coders.map(coder=>{const name=coder.localName;if(!name){logger$B.throwError("cannot encode object for signature with missing names",Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:coder,value:values})}if(unique[name]){logger$B.throwError("cannot encode object for signature with duplicate names",Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:coder,value:values})}unique[name]=true;return values[name]})}else{logger$B.throwArgumentError("invalid tuple value","tuple",values)}if(coders.length!==arrayValues.length){logger$B.throwArgumentError("types/value length mismatch","tuple",values)}let staticWriter=new Writer(writer.wordSize);let dynamicWriter=new Writer(writer.wordSize);let updateFuncs=[];coders.forEach((coder,index)=>{let value=arrayValues[index];if(coder.dynamic){let dynamicOffset=dynamicWriter.length;coder.encode(dynamicWriter,value);let updateFunc=staticWriter.writeUpdatableValue();updateFuncs.push(baseOffset=>{updateFunc(baseOffset+dynamicOffset)})}else{coder.encode(staticWriter,value)}});updateFuncs.forEach(func=>{func(staticWriter.length)});let length=writer.appendWriter(staticWriter);length+=writer.appendWriter(dynamicWriter);return length}function unpack(reader,coders){let values=[];let baseReader=reader.subReader(0);coders.forEach(coder=>{let value=null;if(coder.dynamic){let offset=reader.readValue();let offsetReader=baseReader.subReader(offset.toNumber());try{value=coder.decode(offsetReader)}catch(error){if(error.code===Logger.errors.BUFFER_OVERRUN){throw error}value=error;value.baseType=coder.name;value.name=coder.localName;value.type=coder.type}}else{try{value=coder.decode(reader)}catch(error){if(error.code===Logger.errors.BUFFER_OVERRUN){throw error}value=error;value.baseType=coder.name;value.name=coder.localName;value.type=coder.type}}if(value!=undefined){values.push(value)}});const uniqueNames=coders.reduce((accum,coder)=>{const name=coder.localName;if(name){if(!accum[name]){accum[name]=0}accum[name]++}return accum},{});coders.forEach((coder,index)=>{let name=coder.localName;if(!name||uniqueNames[name]!==1){return}if(name==="length"){name="_length"}if(values[name]!=null){return}const value=values[index];if(value instanceof Error){Object.defineProperty(values,name,{enumerable:true,get:()=>{throw value}})}else{values[name]=value}});for(let i=0;i<values.length;i++){const value=values[i];if(value instanceof Error){Object.defineProperty(values,i,{enumerable:true,get:()=>{throw value}})}}return Object.freeze(values)}class ArrayCoder extends Coder{constructor(coder,length,localName){const type=coder.type+"["+(length>=0?length:"")+"]";const dynamic=length===-1||coder.dynamic;super("array",type,localName,dynamic);this.coder=coder;this.length=length}defaultValue(){const defaultChild=this.coder.defaultValue();const result=[];for(let i=0;i<this.length;i++){result.push(defaultChild)}return result}encode(writer,value){if(!Array.isArray(value)){this._throwError("expected array value",value)}let count=this.length;if(count===-1){count=value.length;writer.writeValue(value.length)}logger$B.checkArgumentCount(value.length,count,"coder array"+(this.localName?" "+this.localName:""));let coders=[];for(let i=0;i<value.length;i++){coders.push(this.coder)}return pack$1(writer,coders,value)}decode(reader){let count=this.length;if(count===-1){count=reader.readValue().toNumber();if(count*32>reader._data.length){logger$B.throwError("insufficient data length",Logger.errors.BUFFER_OVERRUN,{length:reader._data.length,count:count})}}let coders=[];for(let i=0;i<count;i++){coders.push(new AnonymousCoder(this.coder))}return reader.coerce(this.name,unpack(reader,coders))}}class BooleanCoder extends Coder{constructor(localName){super("bool","bool",localName,false)}defaultValue(){return false}encode(writer,value){return writer.writeValue(value?1:0)}decode(reader){return reader.coerce(this.type,!reader.readValue().isZero())}}class DynamicBytesCoder extends Coder{constructor(type,localName){super(type,type,localName,true)}defaultValue(){return"0x"}encode(writer,value){value=arrayify(value);let length=writer.writeValue(value.length);length+=writer.writeBytes(value);return length}decode(reader){return reader.readBytes(reader.readValue().toNumber(),true)}}class BytesCoder extends DynamicBytesCoder{constructor(localName){super("bytes",localName)}decode(reader){return reader.coerce(this.name,hexlify(super.decode(reader)))}}class FixedBytesCoder extends Coder{constructor(size,localName){let name="bytes"+String(size);super(name,name,localName,false);this.size=size}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+this.size*2)}encode(writer,value){let data=arrayify(value);if(data.length!==this.size){this._throwError("incorrect data length",value)}return writer.writeBytes(data)}decode(reader){return reader.coerce(this.name,hexlify(reader.readBytes(this.size)))}}class NullCoder extends Coder{constructor(localName){super("null","",localName,false)}defaultValue(){return null}encode(writer,value){if(value!=null){this._throwError("not null",value)}return writer.writeBytes([])}decode(reader){reader.readBytes(0);return reader.coerce(this.name,null)}}const AddressZero$2="0x0000000000000000000000000000000000000000";const NegativeOne$1=BigNumber$1.from(-1);const Zero$1=BigNumber$1.from(0);const One$1=BigNumber$1.from(1);const Two=BigNumber$1.from(2);const WeiPerEther=BigNumber$1.from("1000000000000000000");const MaxUint256$2=BigNumber$1.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");const MinInt256=BigNumber$1.from("-0x8000000000000000000000000000000000000000000000000000000000000000");const MaxInt256=BigNumber$1.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");const HashZero="0x0000000000000000000000000000000000000000000000000000000000000000";const EtherSymbol="Ξ";var index$6=Object.freeze({__proto__:null,AddressZero:AddressZero$2,EtherSymbol:EtherSymbol,HashZero:HashZero,MaxInt256:MaxInt256,MaxUint256:MaxUint256$2,MinInt256:MinInt256,NegativeOne:NegativeOne$1,One:One$1,Two:Two,WeiPerEther:WeiPerEther,Zero:Zero$1});class NumberCoder extends Coder{constructor(size,signed,localName){const name=(signed?"int":"uint")+size*8;super(name,name,localName,false);this.size=size;this.signed=signed}defaultValue(){return 0}encode(writer,value){let v=BigNumber$1.from(value);let maxUintValue=MaxUint256$2.mask(writer.wordSize*8);if(this.signed){let bounds=maxUintValue.mask(this.size*8-1);if(v.gt(bounds)||v.lt(bounds.add(One$1).mul(NegativeOne$1))){this._throwError("value out-of-bounds",value)}}else if(v.lt(Zero$1)||v.gt(maxUintValue.mask(this.size*8))){this._throwError("value out-of-bounds",value)}v=v.toTwos(this.size*8).mask(this.size*8);if(this.signed){v=v.fromTwos(this.size*8).toTwos(8*writer.wordSize)}return writer.writeValue(v)}decode(reader){let value=reader.readValue().mask(this.size*8);if(this.signed){value=value.fromTwos(this.size*8)}return reader.coerce(this.name,value)}}const version$j="strings/5.7.0";const logger$A=new Logger(version$j);var UnicodeNormalizationForm;(function(UnicodeNormalizationForm){UnicodeNormalizationForm["current"]="";UnicodeNormalizationForm["NFC"]="NFC";UnicodeNormalizationForm["NFD"]="NFD";UnicodeNormalizationForm["NFKC"]="NFKC";UnicodeNormalizationForm["NFKD"]="NFKD"})(UnicodeNormalizationForm||(UnicodeNormalizationForm={}));var Utf8ErrorReason;(function(Utf8ErrorReason){Utf8ErrorReason["UNEXPECTED_CONTINUE"]="unexpected continuation byte";Utf8ErrorReason["BAD_PREFIX"]="bad codepoint prefix";Utf8ErrorReason["OVERRUN"]="string overrun";Utf8ErrorReason["MISSING_CONTINUE"]="missing continuation byte";Utf8ErrorReason["OUT_OF_RANGE"]="out of UTF-8 range";Utf8ErrorReason["UTF16_SURROGATE"]="UTF-16 surrogate";Utf8ErrorReason["OVERLONG"]="overlong representation"})(Utf8ErrorReason||(Utf8ErrorReason={}));function errorFunc(reason,offset,bytes,output,badCodepoint){return logger$A.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`,"bytes",bytes)}function ignoreFunc(reason,offset,bytes,output,badCodepoint){if(reason===Utf8ErrorReason.BAD_PREFIX||reason===Utf8ErrorReason.UNEXPECTED_CONTINUE){let i=0;for(let o=offset+1;o<bytes.length;o++){if(bytes[o]>>6!==2){break}i++}return i}if(reason===Utf8ErrorReason.OVERRUN){return bytes.length-offset-1}return 0}function replaceFunc(reason,offset,bytes,output,badCodepoint){if(reason===Utf8ErrorReason.OVERLONG){output.push(badCodepoint);return 0}output.push(65533);return ignoreFunc(reason,offset,bytes)}const Utf8ErrorFuncs=Object.freeze({error:errorFunc,ignore:ignoreFunc,replace:replaceFunc});function getUtf8CodePoints(bytes,onError){if(onError==null){onError=Utf8ErrorFuncs.error}bytes=arrayify(bytes);const result=[];let i=0;while(i<bytes.length){const c=bytes[i++];if(c>>7===0){result.push(c);continue}let extraLength=null;let overlongMask=null;if((c&224)===192){extraLength=1;overlongMask=127}else if((c&240)===224){extraLength=2;overlongMask=2047}else if((c&248)===240){extraLength=3;overlongMask=65535}else{if((c&192)===128){i+=onError(Utf8ErrorReason.UNEXPECTED_CONTINUE,i-1,bytes,result)}else{i+=onError(Utf8ErrorReason.BAD_PREFIX,i-1,bytes,result)}continue}if(i-1+extraLength>=bytes.length){i+=onError(Utf8ErrorReason.OVERRUN,i-1,bytes,result);continue}let res=c&(1<<8-extraLength-1)-1;for(let j=0;j<extraLength;j++){let nextChar=bytes[i];if((nextChar&192)!=128){i+=onError(Utf8ErrorReason.MISSING_CONTINUE,i,bytes,result);res=null;break}res=res<<6|nextChar&63;i++}if(res===null){continue}if(res>1114111){i+=onError(Utf8ErrorReason.OUT_OF_RANGE,i-1-extraLength,bytes,result,res);continue}if(res>=55296&&res<=57343){i+=onError(Utf8ErrorReason.UTF16_SURROGATE,i-1-extraLength,bytes,result,res);continue}if(res<=overlongMask){i+=onError(Utf8ErrorReason.OVERLONG,i-1-extraLength,bytes,result,res);continue}result.push(res)}return result}function toUtf8Bytes$1(str,form=UnicodeNormalizationForm.current){if(form!=UnicodeNormalizationForm.current){logger$A.checkNormalize();str=str.normalize(form)}let result=[];for(let i=0;i<str.length;i++){const c=str.charCodeAt(i);if(c<128){result.push(c)}else if(c<2048){result.push(c>>6|192);result.push(c&63|128)}else if((c&64512)==55296){i++;const c2=str.charCodeAt(i);if(i>=str.length||(c2&64512)!==56320){throw new Error("invalid utf-8 string")}const pair=65536+((c&1023)<<10)+(c2&1023);result.push(pair>>18|240);result.push(pair>>12&63|128);result.push(pair>>6&63|128);result.push(pair&63|128)}else{result.push(c>>12|224);result.push(c>>6&63|128);result.push(c&63|128)}}return arrayify(result)}function escapeChar(value){const hex="0000"+value.toString(16);return"\\u"+hex.substring(hex.length-4)}function _toEscapedUtf8String(bytes,onError){return'"'+getUtf8CodePoints(bytes,onError).map(codePoint=>{if(codePoint<256){switch(codePoint){case 8:return"\\b";case 9:return"\\t";case 10:return"\\n";case 13:return"\\r";case 34:return'\\"';case 92:return"\\\\"}if(codePoint>=32&&codePoint<127){return String.fromCharCode(codePoint)}}if(codePoint<=65535){return escapeChar(codePoint)}codePoint-=65536;return escapeChar((codePoint>>10&1023)+55296)+escapeChar((codePoint&1023)+56320)}).join("")+'"'}function _toUtf8String(codePoints){return codePoints.map(codePoint=>{if(codePoint<=65535){return String.fromCharCode(codePoint)}codePoint-=65536;return String.fromCharCode((codePoint>>10&1023)+55296,(codePoint&1023)+56320)}).join("")}function toUtf8String(bytes,onError){return _toUtf8String(getUtf8CodePoints(bytes,onError))}function toUtf8CodePoints(str,form=UnicodeNormalizationForm.current){return getUtf8CodePoints(toUtf8Bytes$1(str,form))}function formatBytes32String(text){const bytes=toUtf8Bytes$1(text);if(bytes.length>31){throw new Error("bytes32 string must be less than 32 bytes")}return hexlify(concat$1([bytes,HashZero]).slice(0,32))}function parseBytes32String(bytes){const data=arrayify(bytes);if(data.length!==32){throw new Error("invalid bytes32 - not 32 bytes long")}if(data[31]!==0){throw new Error("invalid bytes32 string - no null terminator")}let length=31;while(data[length-1]===0){length--}return toUtf8String(data.slice(0,length))}function bytes2(data){if(data.length%4!==0){throw new Error("bad data")}let result=[];for(let i=0;i<data.length;i+=4){result.push(parseInt(data.substring(i,i+4),16))}return result}function createTable(data,func){if(!func){func=function(value){return[parseInt(value,16)]}}let lo=0;let result={};data.split(",").forEach(pair=>{let comps=pair.split(":");lo+=parseInt(comps[0],16);result[lo]=func(comps[1])});return result}function createRangeTable(data){let hi=0;return data.split(",").map(v=>{let comps=v.split("-");if(comps.length===1){comps[1]="0"}else if(comps[1]===""){comps[1]="1"}let lo=hi+parseInt(comps[0],16);hi=parseInt(comps[1],16);return{l:lo,h:hi}})}function matchMap(value,ranges){let lo=0;for(let i=0;i<ranges.length;i++){let range=ranges[i];lo+=range.l;if(value>=lo&&value<=lo+range.h&&(value-lo)%(range.d||1)===0){if(range.e&&range.e.indexOf(value-lo)!==-1){continue}return range}}return null}const Table_A_1_ranges=createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d");const Table_B_1_flags="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(v=>parseInt(v,16));const Table_B_2_ranges=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}];const Table_B_2_lut_abs=createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");const Table_B_2_lut_rel=createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");const Table_B_2_complex=createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",bytes2);const Table_C_ranges=createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function flatten(values){return values.reduce((accum,value)=>{value.forEach(value=>{accum.push(value)});return accum},[])}function _nameprepTableA1(codepoint){return!!matchMap(codepoint,Table_A_1_ranges)}function _nameprepTableB2(codepoint){let range=matchMap(codepoint,Table_B_2_ranges);if(range){return[codepoint+range.s]}let codes=Table_B_2_lut_abs[codepoint];if(codes){return codes}let shift=Table_B_2_lut_rel[codepoint];if(shift){return[codepoint+shift[0]]}let complex=Table_B_2_complex[codepoint];if(complex){return complex}return null}function _nameprepTableC(codepoint){return!!matchMap(codepoint,Table_C_ranges)}function nameprep(value){if(value.match(/^[a-z0-9-]*$/i)&&value.length<=59){return value.toLowerCase()}let codes=toUtf8CodePoints(value);codes=flatten(codes.map(code=>{if(Table_B_1_flags.indexOf(code)>=0){return[]}if(code>=65024&&code<=65039){return[]}let codesTableB2=_nameprepTableB2(code);if(codesTableB2){return codesTableB2}return[code]}));codes=toUtf8CodePoints(_toUtf8String(codes),UnicodeNormalizationForm.NFKC);codes.forEach(code=>{if(_nameprepTableC(code)){throw new Error("STRINGPREP_CONTAINS_PROHIBITED")}});codes.forEach(code=>{if(_nameprepTableA1(code)){throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")}});let name=_toUtf8String(codes);if(name.substring(0,1)==="-"||name.substring(2,4)==="--"||name.substring(name.length-1)==="-"){throw new Error("invalid hyphen")}return name}class StringCoder extends DynamicBytesCoder{constructor(localName){super("string",localName)}defaultValue(){return""}encode(writer,value){return super.encode(writer,toUtf8Bytes$1(value))}decode(reader){return toUtf8String(super.decode(reader))}}class TupleCoder extends Coder{constructor(coders,localName){let dynamic=false;const types=[];coders.forEach(coder=>{if(coder.dynamic){dynamic=true}types.push(coder.type)});const type="tuple("+types.join(",")+")";super("tuple",type,localName,dynamic);this.coders=coders}defaultValue(){const values=[];this.coders.forEach(coder=>{values.push(coder.defaultValue())});const uniqueNames=this.coders.reduce((accum,coder)=>{const name=coder.localName;if(name){if(!accum[name]){accum[name]=0}accum[name]++}return accum},{});this.coders.forEach((coder,index)=>{let name=coder.localName;if(!name||uniqueNames[name]!==1){return}if(name==="length"){name="_length"}if(values[name]!=null){return}values[name]=values[index]});return Object.freeze(values)}encode(writer,value){return pack$1(writer,this.coders,value)}decode(reader){return reader.coerce(this.name,unpack(reader,this.coders))}}const logger$z=new Logger(version$k);const paramTypeBytes=new RegExp(/^bytes([0-9]*)$/);const paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/);class AbiCoder{constructor(coerceFunc){defineReadOnly(this,"coerceFunc",coerceFunc||null)}_getCoder(param){switch(param.baseType){case"address":return new AddressCoder(param.name);case"bool":return new BooleanCoder(param.name);case"string":return new StringCoder(param.name);case"bytes":return new BytesCoder(param.name);case"array":return new ArrayCoder(this._getCoder(param.arrayChildren),param.arrayLength,param.name);case"tuple":return new TupleCoder((param.components||[]).map(component=>{return this._getCoder(component)}),param.name);case"":return new NullCoder(param.name)}let match=param.type.match(paramTypeNumber);if(match){let size=parseInt(match[2]||"256");if(size===0||size>256||size%8!==0){logger$z.throwArgumentError("invalid "+match[1]+" bit length","param",param)}return new NumberCoder(size/8,match[1]==="int",param.name)}match=param.type.match(paramTypeBytes);if(match){let size=parseInt(match[1]);if(size===0||size>32){logger$z.throwArgumentError("invalid bytes length","param",param)}return new FixedBytesCoder(size,param.name)}return logger$z.throwArgumentError("invalid type","type",param.type)}_getWordSize(){return 32}_getReader(data,allowLoose){return new Reader(data,this._getWordSize(),this.coerceFunc,allowLoose)}_getWriter(){return new Writer(this._getWordSize())}getDefaultValue(types){const coders=types.map(type=>this._getCoder(ParamType$1.from(type)));const coder=new TupleCoder(coders,"_");return coder.defaultValue()}encode(types,values){if(types.length!==values.length){logger$z.throwError("types/values length mismatch",Logger.errors.INVALID_ARGUMENT,{count:{types:types.length,values:values.length},value:{types:types,values:values}})}const coders=types.map(type=>this._getCoder(ParamType$1.from(type)));const coder=new TupleCoder(coders,"_");const writer=this._getWriter();coder.encode(writer,values);return writer.data}decode(types,data,loose){const coders=types.map(type=>this._getCoder(ParamType$1.from(type)));const coder=new TupleCoder(coders,"_");return coder.decode(this._getReader(arrayify(data),loose))}}const defaultAbiCoder=new AbiCoder;function id$2(text){return keccak256$3(toUtf8Bytes$1(text))}const version$i="hash/5.7.0";function decode(textData){textData=atob(textData);const data=[];for(let i=0;i<textData.length;i++){data.push(textData.charCodeAt(i))}return arrayify(data)}function encode(data){data=arrayify(data);let textData="";for(let i=0;i<data.length;i++){textData+=String.fromCharCode(data[i])}return btoa(textData)}var index$5=Object.freeze({__proto__:null,decode:decode,encode:encode});function flat(array,depth){if(depth==null){depth=1}const result=[];const forEach=result.forEach;const flatDeep=function(arr,depth){forEach.call(arr,function(val){if(depth>0&&Array.isArray(val)){flatDeep(val,depth-1)}else{result.push(val)}})};flatDeep(array,depth);return result}function fromEntries(array){const result={};for(let i=0;i<array.length;i++){const value=array[i];result[value[0]]=value[1]}return result}function decode_arithmetic(bytes){let pos=0;function u16(){return bytes[pos++]<<8|bytes[pos++]}let symbol_count=u16();let total=1;let acc=[0,1];for(let i=1;i<symbol_count;i++){acc.push(total+=u16())}let skip=u16();let pos_payload=pos;pos+=skip;let read_width=0;let read_buffer=0;function read_bit(){if(read_width==0){read_buffer=read_buffer<<8|bytes[pos++];read_width=8}return read_buffer>>--read_width&1}const N=31;const FULL=Math.pow(2,N);const HALF=FULL>>>1;const QRTR=HALF>>1;const MASK=FULL-1;let register=0;for(let i=0;i<N;i++)register=register<<1|read_bit();let symbols=[];let low=0;let range=FULL;while(true){let value=Math.floor(((register-low+1)*total-1)/range);let start=0;let end=symbol_count;while(end-start>1){let mid=start+end>>>1;if(value<acc[mid]){end=mid}else{start=mid}}if(start==0)break;symbols.push(start);let a=low+Math.floor(range*acc[start]/total);let b=low+Math.floor(range*acc[start+1]/total)-1;while(((a^b)&HALF)==0){register=register<<1&MASK|read_bit();a=a<<1&MASK;b=b<<1&MASK|1}while(a&~b&QRTR){register=register&HALF|register<<1&MASK>>>1|read_bit();a=a<<1^HALF;b=(b^HALF)<<1|HALF|1}low=a;range=1+b-a}let offset=symbol_count-4;return symbols.map(x=>{switch(x-offset){case 3:return offset+65792+(bytes[pos_payload++]<<16|bytes[pos_payload++]<<8|bytes[pos_payload++]);case 2:return offset+256+(bytes[pos_payload++]<<8|bytes[pos_payload++]);case 1:return offset+bytes[pos_payload++];default:return x-1}})}function read_payload(v){let pos=0;return()=>v[pos++]}function read_compressed_payload(bytes){return read_payload(decode_arithmetic(bytes))}function signed(i){return i&1?~i>>1:i>>1}function read_counts(n,next){let v=Array(n);for(let i=0;i<n;i++)v[i]=1+next();return v}function read_ascending(n,next){let v=Array(n);for(let i=0,x=-1;i<n;i++)v[i]=x+=1+next();return v}function read_deltas(n,next){let v=Array(n);for(let i=0,x=0;i<n;i++)v[i]=x+=signed(next());return v}function read_member_array(next,lookup){let v=read_ascending(next(),next);let n=next();let vX=read_ascending(n,next);let vN=read_counts(n,next);for(let i=0;i<n;i++){for(let j=0;j<vN[i];j++){v.push(vX[i]+j)}}return lookup?v.map(x=>lookup[x]):v}function read_mapped_map(next){let ret=[];while(true){let w=next();if(w==0)break;ret.push(read_linear_table(w,next))}while(true){let w=next()-1;if(w<0)break;ret.push(read_replacement_table(w,next))}return fromEntries(flat(ret))}function read_zero_terminated_array(next){let v=[];while(true){let i=next();if(i==0)break;v.push(i)}return v}function read_transposed(n,w,next){let m=Array(n).fill(undefined).map(()=>[]);for(let i=0;i<w;i++){read_deltas(n,next).forEach((x,j)=>m[j].push(x))}return m}function read_linear_table(w,next){let dx=1+next();let dy=next();let vN=read_zero_terminated_array(next);let m=read_transposed(vN.length,1+w,next);return flat(m.map((v,i)=>{const x=v[0],ys=v.slice(1);return Array(vN[i]).fill(undefined).map((_,j)=>{let j_dy=j*dy;return[x+j*dx,ys.map(y=>y+j_dy)]})}))}function read_replacement_table(w,next){let n=1+next();let m=read_transposed(n,1+w,next);return m.map(v=>[v[0],v.slice(1)])}function read_emoji_trie(next){let sorted=read_member_array(next).sort((a,b)=>a-b);return read();function read(){let branches=[];while(true){let keys=read_member_array(next,sorted);if(keys.length==0)break;branches.push({set:new Set(keys),node:read()})}branches.sort((a,b)=>b.set.size-a.set.size);let temp=next();let valid=temp%3;temp=temp/3|0;let fe0f=!!(temp&1);temp>>=1;let save=temp==1;let check=temp==2;return{branches:branches,valid:valid,fe0f:fe0f,save:save,check:check}}}function getData$1(){return read_compressed_payload(decode(""))}const r=getData$1();const VALID=new Set(read_member_array(r));const IGNORED=new Set(read_member_array(r));const MAPPED=read_mapped_map(r);const EMOJI_ROOT=read_emoji_trie(r);const HYPHEN=45;const UNDERSCORE=95;function explode_cp(name){return toUtf8CodePoints(name)}function filter_fe0f(cps){return cps.filter(cp=>cp!=65039)}function ens_normalize_post_check(name){for(let label of name.split(".")){let cps=explode_cp(label);try{for(let i=cps.lastIndexOf(UNDERSCORE)-1;i>=0;i--){if(cps[i]!==UNDERSCORE){throw new Error(`underscore only allowed at start`)}}if(cps.length>=4&&cps.every(cp=>cp<128)&&cps[2]===HYPHEN&&cps[3]===HYPHEN){throw new Error(`invalid label extension`)}}catch(err){throw new Error(`Invalid label "${label}": ${err.message}`)}}return name}function ens_normalize(name){return ens_normalize_post_check(normalize$1(name,filter_fe0f))}function normalize$1(name,emoji_filter){let input=explode_cp(name).reverse();let output=[];while(input.length){let emoji=consume_emoji_reversed(input);if(emoji){output.push(...emoji_filter(emoji));continue}let cp=input.pop();if(VALID.has(cp)){output.push(cp);continue}if(IGNORED.has(cp)){continue}let cps=MAPPED[cp];if(cps){output.push(...cps);continue}throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`)}return ens_normalize_post_check(nfc(String.fromCodePoint(...output)))}function nfc(s){return s.normalize("NFC")}function consume_emoji_reversed(cps,eaten){var _a;let node=EMOJI_ROOT;let emoji;let saved;let stack=[];let pos=cps.length;if(eaten)eaten.length=0;while(pos){let cp=cps[--pos];node=(_a=node.branches.find(x=>x.set.has(cp)))===null||_a===void 0?void 0:_a.node;if(!node)break;if(node.save){saved=cp}else if(node.check){if(cp===saved)break}stack.push(cp);if(node.fe0f){stack.push(65039);if(pos>0&&cps[pos-1]==65039)pos--}if(node.valid){emoji=stack.slice();if(node.valid==2)emoji.splice(1,1);if(eaten)eaten.push(...cps.slice(pos).reverse());cps.length=pos}}return emoji}const logger$y=new Logger(version$i);const Zeros$1=new Uint8Array(32);Zeros$1.fill(0);function checkComponent(comp){if(comp.length===0){throw new Error("invalid ENS name; empty component")}return comp}function ensNameSplit(name){const bytes=toUtf8Bytes$1(ens_normalize(name));const comps=[];if(name.length===0){return comps}let last=0;for(let i=0;i<bytes.length;i++){const d=bytes[i];if(d===46){comps.push(checkComponent(bytes.slice(last,i)));last=i+1}}if(last>=bytes.length){throw new Error("invalid ENS name; empty component")}comps.push(checkComponent(bytes.slice(last)));return comps}function isValidName(name){try{return ensNameSplit(name).length!==0}catch(error){}return false}function namehash$1(name){if(typeof name!=="string"){logger$y.throwArgumentError("invalid ENS name; not a string","name",name)}let result=Zeros$1;const comps=ensNameSplit(name);while(comps.length){result=keccak256$3(concat$1([result,keccak256$3(comps.pop())]))}return hexlify(result)}function dnsEncode(name){return hexlify(concat$1(ensNameSplit(name).map(comp=>{if(comp.length>63){throw new Error("invalid DNS encoded entry; length exceeds 63 bytes")}const bytes=new Uint8Array(comp.length+1);bytes.set(comp,1);bytes[0]=bytes.length-1;return bytes})))+"00"}const messagePrefix="Ethereum Signed Message:\n";function hashMessage$1(message){if(typeof message==="string"){message=toUtf8Bytes$1(message)}return keccak256$3(concat$1([toUtf8Bytes$1(messagePrefix),toUtf8Bytes$1(String(message.length)),message]))}var __awaiter$1e=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$x=new Logger(version$i);const padding=new Uint8Array(32);padding.fill(0);const NegativeOne=BigNumber$1.from(-1);const Zero=BigNumber$1.from(0);const One=BigNumber$1.from(1);const MaxUint256$1=BigNumber$1.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function hexPadRight(value){const bytes=arrayify(value);const padOffset=bytes.length%32;if(padOffset){return hexConcat([bytes,padding.slice(padOffset)])}return hexlify(bytes)}const hexTrue=hexZeroPad(One.toHexString(),32);const hexFalse=hexZeroPad(Zero.toHexString(),32);const domainFieldTypes={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"};const domainFieldNames=["name","version","chainId","verifyingContract","salt"];function checkString(key){return function(value){if(typeof value!=="string"){logger$x.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`,`domain.${key}`,value)}return value}}const domainChecks={name:checkString("name"),version:checkString("version"),chainId:function(value){try{return BigNumber$1.from(value).toString()}catch(error){}return logger$x.throwArgumentError(`invalid domain value for "chainId"`,"domain.chainId",value)},verifyingContract:function(value){try{return getAddress$1(value).toLowerCase()}catch(error){}return logger$x.throwArgumentError(`invalid domain value "verifyingContract"`,"domain.verifyingContract",value)},salt:function(value){try{const bytes=arrayify(value);if(bytes.length!==32){throw new Error("bad length")}return hexlify(bytes)}catch(error){}return logger$x.throwArgumentError(`invalid domain value "salt"`,"domain.salt",value)}};function getBaseEncoder(type){{const match=type.match(/^(u?)int(\d*)$/);if(match){const signed=match[1]==="";const width=parseInt(match[2]||"256");if(width%8!==0||width>256||match[2]&&match[2]!==String(width)){logger$x.throwArgumentError("invalid numeric width","type",type)}const boundsUpper=MaxUint256$1.mask(signed?width-1:width);const boundsLower=signed?boundsUpper.add(One).mul(NegativeOne):Zero;return function(value){const v=BigNumber$1.from(value);if(v.lt(boundsLower)||v.gt(boundsUpper)){logger$x.throwArgumentError(`value out-of-bounds for ${type}`,"value",value)}return hexZeroPad(v.toTwos(256).toHexString(),32)}}}{const match=type.match(/^bytes(\d+)$/);if(match){const width=parseInt(match[1]);if(width===0||width>32||match[1]!==String(width)){logger$x.throwArgumentError("invalid bytes width","type",type)}return function(value){const bytes=arrayify(value);if(bytes.length!==width){logger$x.throwArgumentError(`invalid length for ${type}`,"value",value)}return hexPadRight(value)}}}switch(type){case"address":return function(value){return hexZeroPad(getAddress$1(value),32)};case"bool":return function(value){return!value?hexFalse:hexTrue};case"bytes":return function(value){return keccak256$3(value)};case"string":return function(value){return id$2(value)}}return null}function encodeType$1(name,fields){return`${name}(${fields.map(({name,type})=>type+" "+name).join(",")})`}class TypedDataEncoder{constructor(types){defineReadOnly(this,"types",Object.freeze(deepCopy(types)));defineReadOnly(this,"_encoderCache",{});defineReadOnly(this,"_types",{});const links={};const parents={};const subtypes={};Object.keys(types).forEach(type=>{links[type]={};parents[type]=[];subtypes[type]={}});for(const name in types){const uniqueNames={};types[name].forEach(field=>{if(uniqueNames[field.name]){logger$x.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`,"types",types)}uniqueNames[field.name]=true;const baseType=field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];if(baseType===name){logger$x.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`,"types",types)}const encoder=getBaseEncoder(baseType);if(encoder){return}if(!parents[baseType]){logger$x.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`,"types",types)}parents[baseType].push(name);links[name][baseType]=true})}const primaryTypes=Object.keys(parents).filter(n=>parents[n].length===0);if(primaryTypes.length===0){logger$x.throwArgumentError("missing primary type","types",types)}else if(primaryTypes.length>1){logger$x.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map(t=>JSON.stringify(t)).join(", ")}`,"types",types)}defineReadOnly(this,"primaryType",primaryTypes[0]);function checkCircular(type,found){if(found[type]){logger$x.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`,"types",types)}found[type]=true;Object.keys(links[type]).forEach(child=>{if(!parents[child]){return}checkCircular(child,found);Object.keys(found).forEach(subtype=>{subtypes[subtype][child]=true})});delete found[type]}checkCircular(this.primaryType,{});for(const name in subtypes){const st=Object.keys(subtypes[name]);st.sort();this._types[name]=encodeType$1(name,types[name])+st.map(t=>encodeType$1(t,types[t])).join("")}}getEncoder(type){let encoder=this._encoderCache[type];if(!encoder){encoder=this._encoderCache[type]=this._getEncoder(type)}return encoder}_getEncoder(type){{const encoder=getBaseEncoder(type);if(encoder){return encoder}}const match=type.match(/^(.*)(\x5b(\d*)\x5d)$/);if(match){const subtype=match[1];const subEncoder=this.getEncoder(subtype);const length=parseInt(match[3]);return value=>{if(length>=0&&value.length!==length){logger$x.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",value)}let result=value.map(subEncoder);if(this._types[subtype]){result=result.map(keccak256$3)}return keccak256$3(hexConcat(result))}}const fields=this.types[type];if(fields){const encodedType=id$2(this._types[type]);return value=>{const values=fields.map(({name,type})=>{const result=this.getEncoder(type)(value[name]);if(this._types[type]){return keccak256$3(result)}return result});values.unshift(encodedType);return hexConcat(values)}}return logger$x.throwArgumentError(`unknown type: ${type}`,"type",type)}encodeType(name){const result=this._types[name];if(!result){logger$x.throwArgumentError(`unknown type: ${JSON.stringify(name)}`,"name",name)}return result}encodeData(type,value){return this.getEncoder(type)(value)}hashStruct(name,value){return keccak256$3(this.encodeData(name,value))}encode(value){return this.encodeData(this.primaryType,value)}hash(value){return this.hashStruct(this.primaryType,value)}_visit(type,value,callback){{const encoder=getBaseEncoder(type);if(encoder){return callback(type,value)}}const match=type.match(/^(.*)(\x5b(\d*)\x5d)$/);if(match){const subtype=match[1];const length=parseInt(match[3]);if(length>=0&&value.length!==length){logger$x.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",value)}return value.map(v=>this._visit(subtype,v,callback))}const fields=this.types[type];if(fields){return fields.reduce((accum,{name,type})=>{accum[name]=this._visit(type,value[name],callback);return accum},{})}return logger$x.throwArgumentError(`unknown type: ${type}`,"type",type)}visit(value,callback){return this._visit(this.primaryType,value,callback)}static from(types){return new TypedDataEncoder(types)}static getPrimaryType(types){return TypedDataEncoder.from(types).primaryType}static hashStruct(name,types,value){return TypedDataEncoder.from(types).hashStruct(name,value)}static hashDomain(domain){const domainFields=[];for(const name in domain){const type=domainFieldTypes[name];if(!type){logger$x.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`,"domain",domain)}domainFields.push({name:name,type:type})}domainFields.sort((a,b)=>{return domainFieldNames.indexOf(a.name)-domainFieldNames.indexOf(b.name)});return TypedDataEncoder.hashStruct("EIP712Domain",{EIP712Domain:domainFields},domain)}static encode(domain,types,value){return hexConcat(["0x1901",TypedDataEncoder.hashDomain(domain),TypedDataEncoder.from(types).hash(value)])}static hash(domain,types,value){return keccak256$3(TypedDataEncoder.encode(domain,types,value))}static resolveNames(domain,types,value,resolveName){return __awaiter$1e(this,void 0,void 0,function*(){domain=shallowCopy(domain);const ensCache={};if(domain.verifyingContract&&!isHexString(domain.verifyingContract,20)){ensCache[domain.verifyingContract]="0x"}const encoder=TypedDataEncoder.from(types);encoder.visit(value,(type,value)=>{if(type==="address"&&!isHexString(value,20)){ensCache[value]="0x"}return value});for(const name in ensCache){ensCache[name]=yield resolveName(name)}if(domain.verifyingContract&&ensCache[domain.verifyingContract]){domain.verifyingContract=ensCache[domain.verifyingContract]}value=encoder.visit(value,(type,value)=>{if(type==="address"&&ensCache[value]){return ensCache[value]}return value});return{domain:domain,value:value}})}static getPayload(domain,types,value){TypedDataEncoder.hashDomain(domain);const domainValues={};const domainTypes=[];domainFieldNames.forEach(name=>{const value=domain[name];if(value==null){return}domainValues[name]=domainChecks[name](value);domainTypes.push({name:name,type:domainFieldTypes[name]})});const encoder=TypedDataEncoder.from(types);const typesWithDomain=shallowCopy(types);if(typesWithDomain.EIP712Domain){logger$x.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",types)}else{typesWithDomain.EIP712Domain=domainTypes}encoder.encode(value);return{types:typesWithDomain,domain:domainValues,primaryType:encoder.primaryType,message:encoder.visit(value,(type,value)=>{if(type.match(/^bytes(\d*)/)){return hexlify(arrayify(value))}if(type.match(/^u?int/)){return BigNumber$1.from(value).toString()}switch(type){case"address":return value.toLowerCase();case"bool":return!!value;case"string":if(typeof value!=="string"){logger$x.throwArgumentError(`invalid string`,"value",value)}return value}return logger$x.throwArgumentError("unsupported type","type",type)})}}}const logger$w=new Logger(version$k);class LogDescription extends Description{}class TransactionDescription extends Description{}class ErrorDescription extends Description{}class Indexed extends Description{static isIndexed(value){return!!(value&&value._isIndexed)}}const BuiltinErrors={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:true},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"]}};function wrapAccessError(property,error){const wrap=new Error(`deferred error during ABI decoding triggered accessing ${property}`);wrap.error=error;return wrap}class Interface{constructor(fragments){let abi=[];if(typeof fragments==="string"){abi=JSON.parse(fragments)}else{abi=fragments}defineReadOnly(this,"fragments",abi.map(fragment=>{return Fragment.from(fragment)}).filter(fragment=>fragment!=null));defineReadOnly(this,"_abiCoder",getStatic(new.target,"getAbiCoder")());defineReadOnly(this,"functions",{});defineReadOnly(this,"errors",{});defineReadOnly(this,"events",{});defineReadOnly(this,"structs",{});this.fragments.forEach(fragment=>{let bucket=null;switch(fragment.type){case"constructor":if(this.deploy){logger$w.warn("duplicate definition - constructor");return}defineReadOnly(this,"deploy",fragment);return;case"function":bucket=this.functions;break;case"event":bucket=this.events;break;case"error":bucket=this.errors;break;default:return}let signature=fragment.format();if(bucket[signature]){logger$w.warn("duplicate definition - "+signature);return}bucket[signature]=fragment});if(!this.deploy){defineReadOnly(this,"deploy",ConstructorFragment.from({payable:false,type:"constructor"}))}defineReadOnly(this,"_isInterface",true)}format(format){if(!format){format=FormatTypes.full}if(format===FormatTypes.sighash){logger$w.throwArgumentError("interface does not support formatting sighash","format",format)}const abi=this.fragments.map(fragment=>fragment.format(format));if(format===FormatTypes.json){return JSON.stringify(abi.map(j=>JSON.parse(j)))}return abi}static getAbiCoder(){return defaultAbiCoder}static getAddress(address){return getAddress$1(address)}static getSighash(fragment){return hexDataSlice(id$2(fragment.format()),0,4)}static getEventTopic(eventFragment){return id$2(eventFragment.format())}getFunction(nameOrSignatureOrSighash){if(isHexString(nameOrSignatureOrSighash)){for(const name in this.functions){if(nameOrSignatureOrSighash===this.getSighash(name)){return this.functions[name]}}logger$w.throwArgumentError("no matching function","sighash",nameOrSignatureOrSighash)}if(nameOrSignatureOrSighash.indexOf("(")===-1){const name=nameOrSignatureOrSighash.trim();const matching=Object.keys(this.functions).filter(f=>f.split("(")[0]===name);if(matching.length===0){logger$w.throwArgumentError("no matching function","name",name)}else if(matching.length>1){logger$w.throwArgumentError("multiple matching functions","name",name)}return this.functions[matching[0]]}const result=this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];if(!result){logger$w.throwArgumentError("no matching function","signature",nameOrSignatureOrSighash)}return result}getEvent(nameOrSignatureOrTopic){if(isHexString(nameOrSignatureOrTopic)){const topichash=nameOrSignatureOrTopic.toLowerCase();for(const name in this.events){if(topichash===this.getEventTopic(name)){return this.events[name]}}logger$w.throwArgumentError("no matching event","topichash",topichash)}if(nameOrSignatureOrTopic.indexOf("(")===-1){const name=nameOrSignatureOrTopic.trim();const matching=Object.keys(this.events).filter(f=>f.split("(")[0]===name);if(matching.length===0){logger$w.throwArgumentError("no matching event","name",name)}else if(matching.length>1){logger$w.throwArgumentError("multiple matching events","name",name)}return this.events[matching[0]]}const result=this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];if(!result){logger$w.throwArgumentError("no matching event","signature",nameOrSignatureOrTopic)}return result}getError(nameOrSignatureOrSighash){if(isHexString(nameOrSignatureOrSighash)){const getSighash=getStatic(this.constructor,"getSighash");for(const name in this.errors){const error=this.errors[name];if(nameOrSignatureOrSighash===getSighash(error)){return this.errors[name]}}logger$w.throwArgumentError("no matching error","sighash",nameOrSignatureOrSighash)}if(nameOrSignatureOrSighash.indexOf("(")===-1){const name=nameOrSignatureOrSighash.trim();const matching=Object.keys(this.errors).filter(f=>f.split("(")[0]===name);if(matching.length===0){logger$w.throwArgumentError("no matching error","name",name)}else if(matching.length>1){logger$w.throwArgumentError("multiple matching errors","name",name)}return this.errors[matching[0]]}const result=this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];if(!result){logger$w.throwArgumentError("no matching error","signature",nameOrSignatureOrSighash)}return result}getSighash(fragment){if(typeof fragment==="string"){try{fragment=this.getFunction(fragment)}catch(error){try{fragment=this.getError(fragment)}catch(_){throw error}}}return getStatic(this.constructor,"getSighash")(fragment)}getEventTopic(eventFragment){if(typeof eventFragment==="string"){eventFragment=this.getEvent(eventFragment)}return getStatic(this.constructor,"getEventTopic")(eventFragment)}_decodeParams(params,data){return this._abiCoder.decode(params,data)}_encodeParams(params,values){return this._abiCoder.encode(params,values)}encodeDeploy(values){return this._encodeParams(this.deploy.inputs,values||[])}decodeErrorResult(fragment,data){if(typeof fragment==="string"){fragment=this.getError(fragment)}const bytes=arrayify(data);if(hexlify(bytes.slice(0,4))!==this.getSighash(fragment)){logger$w.throwArgumentError(`data signature does not match error ${fragment.name}.`,"data",hexlify(bytes))}return this._decodeParams(fragment.inputs,bytes.slice(4))}encodeErrorResult(fragment,values){if(typeof fragment==="string"){fragment=this.getError(fragment)}return hexlify(concat$1([this.getSighash(fragment),this._encodeParams(fragment.inputs,values||[])]))}decodeFunctionData(functionFragment,data){if(typeof functionFragment==="string"){functionFragment=this.getFunction(functionFragment)}const bytes=arrayify(data);if(hexlify(bytes.slice(0,4))!==this.getSighash(functionFragment)){logger$w.throwArgumentError(`data signature does not match function ${functionFragment.name}.`,"data",hexlify(bytes))}return this._decodeParams(functionFragment.inputs,bytes.slice(4))}encodeFunctionData(functionFragment,values){if(typeof functionFragment==="string"){functionFragment=this.getFunction(functionFragment)}return hexlify(concat$1([this.getSighash(functionFragment),this._encodeParams(functionFragment.inputs,values||[])]))}decodeFunctionResult(functionFragment,data){if(typeof functionFragment==="string"){functionFragment=this.getFunction(functionFragment)}let bytes=arrayify(data);let reason=null;let message="";let errorArgs=null;let errorName=null;let errorSignature=null;switch(bytes.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(functionFragment.outputs,bytes)}catch(error){}break;case 4:{const selector=hexlify(bytes.slice(0,4));const builtin=BuiltinErrors[selector];if(builtin){errorArgs=this._abiCoder.decode(builtin.inputs,bytes.slice(4));errorName=builtin.name;errorSignature=builtin.signature;if(builtin.reason){reason=errorArgs[0]}if(errorName==="Error"){message=`; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`}else if(errorName==="Panic"){message=`; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`}}else{try{const error=this.getError(selector);errorArgs=this._abiCoder.decode(error.inputs,bytes.slice(4));errorName=error.name;errorSignature=error.format()}catch(error){}}break}}return logger$w.throwError("call revert exception"+message,Logger.errors.CALL_EXCEPTION,{method:functionFragment.format(),data:hexlify(data),errorArgs:errorArgs,errorName:errorName,errorSignature:errorSignature,reason:reason})}encodeFunctionResult(functionFragment,values){if(typeof functionFragment==="string"){functionFragment=this.getFunction(functionFragment)}return hexlify(this._abiCoder.encode(functionFragment.outputs,values||[]))}encodeFilterTopics(eventFragment,values){if(typeof eventFragment==="string"){eventFragment=this.getEvent(eventFragment)}if(values.length>eventFragment.inputs.length){logger$w.throwError("too many arguments for "+eventFragment.format(),Logger.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:values})}let topics=[];if(!eventFragment.anonymous){topics.push(this.getEventTopic(eventFragment))}const encodeTopic=(param,value)=>{if(param.type==="string"){return id$2(value)}else if(param.type==="bytes"){return keccak256$3(hexlify(value))}if(param.type==="bool"&&typeof value==="boolean"){value=value?"0x01":"0x00"}if(param.type.match(/^u?int/)){value=BigNumber$1.from(value).toHexString()}if(param.type==="address"){this._abiCoder.encode(["address"],[value])}return hexZeroPad(hexlify(value),32)};values.forEach((value,index)=>{let param=eventFragment.inputs[index];if(!param.indexed){if(value!=null){logger$w.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+param.name,value)}return}if(value==null){topics.push(null)}else if(param.baseType==="array"||param.baseType==="tuple"){logger$w.throwArgumentError("filtering with tuples or arrays not supported","contract."+param.name,value)}else if(Array.isArray(value)){topics.push(value.map(value=>encodeTopic(param,value)))}else{topics.push(encodeTopic(param,value))}});while(topics.length&&topics[topics.length-1]===null){topics.pop()}return topics}encodeEventLog(eventFragment,values){if(typeof eventFragment==="string"){eventFragment=this.getEvent(eventFragment)}const topics=[];const dataTypes=[];const dataValues=[];if(!eventFragment.anonymous){topics.push(this.getEventTopic(eventFragment))}if(values.length!==eventFragment.inputs.length){logger$w.throwArgumentError("event arguments/values mismatch","values",values)}eventFragment.inputs.forEach((param,index)=>{const value=values[index];if(param.indexed){if(param.type==="string"){topics.push(id$2(value))}else if(param.type==="bytes"){topics.push(keccak256$3(value))}else if(param.baseType==="tuple"||param.baseType==="array"){throw new Error("not implemented")}else{topics.push(this._abiCoder.encode([param.type],[value]))}}else{dataTypes.push(param);dataValues.push(value)}});return{data:this._abiCoder.encode(dataTypes,dataValues),topics:topics}}decodeEventLog(eventFragment,data,topics){if(typeof eventFragment==="string"){eventFragment=this.getEvent(eventFragment)}if(topics!=null&&!eventFragment.anonymous){let topicHash=this.getEventTopic(eventFragment);if(!isHexString(topics[0],32)||topics[0].toLowerCase()!==topicHash){logger$w.throwError("fragment/topic mismatch",Logger.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:topicHash,value:topics[0]})}topics=topics.slice(1)}let indexed=[];let nonIndexed=[];let dynamic=[];eventFragment.inputs.forEach((param,index)=>{if(param.indexed){if(param.type==="string"||param.type==="bytes"||param.baseType==="tuple"||param.baseType==="array"){indexed.push(ParamType$1.fromObject({type:"bytes32",name:param.name}));dynamic.push(true)}else{indexed.push(param);dynamic.push(false)}}else{nonIndexed.push(param);dynamic.push(false)}});let resultIndexed=topics!=null?this._abiCoder.decode(indexed,concat$1(topics)):null;let resultNonIndexed=this._abiCoder.decode(nonIndexed,data,true);let result=[];let nonIndexedIndex=0,indexedIndex=0;eventFragment.inputs.forEach((param,index)=>{if(param.indexed){if(resultIndexed==null){result[index]=new Indexed({_isIndexed:true,hash:null})}else if(dynamic[index]){result[index]=new Indexed({_isIndexed:true,hash:resultIndexed[indexedIndex++]})}else{try{result[index]=resultIndexed[indexedIndex++]}catch(error){result[index]=error}}}else{try{result[index]=resultNonIndexed[nonIndexedIndex++]}catch(error){result[index]=error}}if(param.name&&result[param.name]==null){const value=result[index];if(value instanceof Error){Object.defineProperty(result,param.name,{enumerable:true,get:()=>{throw wrapAccessError(`property ${JSON.stringify(param.name)}`,value)}})}else{result[param.name]=value}}});for(let i=0;i<result.length;i++){const value=result[i];if(value instanceof Error){Object.defineProperty(result,i,{enumerable:true,get:()=>{throw wrapAccessError(`index ${i}`,value)}})}}return Object.freeze(result)}parseTransaction(tx){let fragment=this.getFunction(tx.data.substring(0,10).toLowerCase());if(!fragment){return null}return new TransactionDescription({args:this._abiCoder.decode(fragment.inputs,"0x"+tx.data.substring(10)),functionFragment:fragment,name:fragment.name,signature:fragment.format(),sighash:this.getSighash(fragment),value:BigNumber$1.from(tx.value||"0")})}parseLog(log){let fragment=this.getEvent(log.topics[0]);if(!fragment||fragment.anonymous){return null}return new LogDescription({eventFragment:fragment,name:fragment.name,signature:fragment.format(),topic:this.getEventTopic(fragment),args:this.decodeEventLog(fragment,log.data,log.topics)})}parseError(data){const hexData=hexlify(data);let fragment=this.getError(hexData.substring(0,10).toLowerCase());if(!fragment){return null}return new ErrorDescription({args:this._abiCoder.decode(fragment.inputs,"0x"+hexData.substring(10)),errorFragment:fragment,name:fragment.name,signature:fragment.format(),sighash:this.getSighash(fragment)})}static isInterface(value){return!!(value&&value._isInterface)}}var SupportedAlgorithm;(function(SupportedAlgorithm){SupportedAlgorithm["sha256"]="sha256";SupportedAlgorithm["sha512"]="sha512"})(SupportedAlgorithm||(SupportedAlgorithm={}));const version$h="sha2/5.7.0";const logger$v=new Logger(version$h);function ripemd160(data){return"0x"+hash$2.ripemd160().update(arrayify(data)).digest("hex")}function sha256$1(data){return"0x"+hash$2.sha256().update(arrayify(data)).digest("hex")}function sha512(data){return"0x"+hash$2.sha512().update(arrayify(data)).digest("hex")}function computeHmac(algorithm,key,data){if(!SupportedAlgorithm[algorithm]){logger$v.throwError("unsupported algorithm "+algorithm,Logger.errors.UNSUPPORTED_OPERATION,{operation:"hmac",algorithm:algorithm})}return"0x"+hash$2.hmac(hash$2[algorithm],arrayify(key)).update(arrayify(data)).digest("hex")}const version$g="solidity/5.7.0";const regexBytes=new RegExp("^bytes([0-9]+)$");const regexNumber=new RegExp("^(u?int)([0-9]*)$");const regexArray=new RegExp("^(.*)\\[([0-9]*)\\]$");const Zeros="0000000000000000000000000000000000000000000000000000000000000000";const logger$u=new Logger(version$g);function _pack(type,value,isArray){switch(type){case"address":if(isArray){return zeroPad(value,32)}return arrayify(value);case"string":return toUtf8Bytes$1(value);case"bytes":return arrayify(value);case"bool":value=value?"0x01":"0x00";if(isArray){return zeroPad(value,32)}return arrayify(value)}let match=type.match(regexNumber);if(match){let size=parseInt(match[2]||"256");if(match[2]&&String(size)!==match[2]||size%8!==0||size===0||size>256){logger$u.throwArgumentError("invalid number type","type",type)}if(isArray){size=256}value=BigNumber$1.from(value).toTwos(size);return zeroPad(value,size/8)}match=type.match(regexBytes);if(match){const size=parseInt(match[1]);if(String(size)!==match[1]||size===0||size>32){logger$u.throwArgumentError("invalid bytes type","type",type)}if(arrayify(value).byteLength!==size){logger$u.throwArgumentError(`invalid value for ${type}`,"value",value)}if(isArray){return arrayify((value+Zeros).substring(0,66))}return value}match=type.match(regexArray);if(match&&Array.isArray(value)){const baseType=match[1];const count=parseInt(match[2]||String(value.length));if(count!=value.length){logger$u.throwArgumentError(`invalid array length for ${type}`,"value",value)}const result=[];value.forEach(function(value){result.push(_pack(baseType,value,true))});return concat$1(result)}return logger$u.throwArgumentError("invalid type","type",type)}function pack(types,values){if(types.length!=values.length){logger$u.throwArgumentError("wrong number of values; expected ${ types.length }","values",values)}const tight=[];types.forEach(function(type,index){tight.push(_pack(type,values[index]))});return hexlify(concat$1(tight))}function keccak256$2(types,values){return keccak256$3(pack(types,values))}function sha256(types,values){return sha256$1(pack(types,values))}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}function _defineProperties$2(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass$2(Constructor,protoProps,staticProps){if(protoProps)_defineProperties$2(Constructor.prototype,protoProps);if(staticProps)_defineProperties$2(Constructor,staticProps);return Constructor}function _extends$1(){_extends$1=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends$1.apply(this,arguments)}function _unsupportedIterableToArray$1(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray$1(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray$1(o,minLen)}function _arrayLikeToArray$1(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _createForOfIteratorHelperLoose$1(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray$1(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}it=o[Symbol.iterator]();return it.next.bind(it)}function createCommonjsModule$2(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}var runtime_1=createCommonjsModule$2(function(module){var runtime=function(exports){var Op=Object.prototype;var hasOwn=Op.hasOwnProperty;var defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value};var undefined$1;var $Symbol=typeof Symbol==="function"?Symbol:{};var iteratorSymbol=$Symbol.iterator||"@@iterator";var asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator";var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});return obj[key]}try{define({},"")}catch(err){define=function(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator;var generator=Object.create(protoGenerator.prototype);var context=new Context(tryLocsList||[]);defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)});return generator}exports.wrap=wrap;function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}var GenStateSuspendedStart="suspendedStart";var GenStateSuspendedYield="suspendedYield";var GenStateExecuting="executing";var GenStateCompleted="completed";var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,function(){return this});var getProto=Object.getPrototypeOf;var NativeIteratorPrototype=getProto&&getProto(getProto(values([])));if(NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)){IteratorPrototype=NativeIteratorPrototype}var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);GeneratorFunction.prototype=GeneratorFunctionPrototype;defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:true});defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:true});GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction");function defineIteratorMethods(prototype){["next","throw","return"].forEach(function(method){define(prototype,method,function(arg){return this._invoke(method,arg)})})}exports.isGeneratorFunction=function(genFun){var ctor=typeof genFun==="function"&&genFun.constructor;return ctor?ctor===GeneratorFunction||(ctor.displayName||ctor.name)==="GeneratorFunction":false};exports.mark=function(genFun){if(Object.setPrototypeOf){Object.setPrototypeOf(genFun,GeneratorFunctionPrototype)}else{genFun.__proto__=GeneratorFunctionPrototype;define(genFun,toStringTagSymbol,"GeneratorFunction")}genFun.prototype=Object.create(Gp);return genFun};exports.awrap=function(arg){return{__await:arg}};function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(record.type==="throw"){reject(record.arg)}else{var result=record.arg;var value=result.value;if(value&&typeof value==="object"&&hasOwn.call(value,"__await")){return PromiseImpl.resolve(value.__await).then(function(value){invoke("next",value,resolve,reject)},function(err){invoke("throw",err,resolve,reject)})}return PromiseImpl.resolve(value).then(function(unwrapped){result.value=unwrapped;resolve(result)},function(error){return invoke("throw",error,resolve,reject)})}}var previousPromise;function enqueue(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl(function(resolve,reject){invoke(method,arg,resolve,reject)})}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}defineProperty(this,"_invoke",{value:enqueue})}defineIteratorMethods(AsyncIterator.prototype);define(AsyncIterator.prototype,asyncIteratorSymbol,function(){return this});exports.AsyncIterator=AsyncIterator;exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){if(PromiseImpl===void 0)PromiseImpl=Promise;var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next()})};function makeInvokeMethod(innerFn,self,context){var state=GenStateSuspendedStart;return function invoke(method,arg){if(state===GenStateExecuting){throw new Error("Generator is already running")}if(state===GenStateCompleted){if(method==="throw"){throw arg}return doneResult()}context.method=method;context.arg=arg;while(true){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if(context.method==="next"){context.sent=context._sent=context.arg}else if(context.method==="throw"){if(state===GenStateSuspendedStart){state=GenStateCompleted;throw context.arg}context.dispatchException(context.arg)}else if(context.method==="return"){context.abrupt("return",context.arg)}state=GenStateExecuting;var record=tryCatch(innerFn,self,context);if(record.type==="normal"){state=context.done?GenStateCompleted:GenStateSuspendedYield;if(record.arg===ContinueSentinel){continue}return{value:record.arg,done:context.done}}else if(record.type==="throw"){state=GenStateCompleted;context.method="throw";context.arg=record.arg}}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method;var method=delegate.iterator[methodName];if(method===undefined$1){context.delegate=null;if(methodName==="throw"&&delegate.iterator["return"]){context.method="return";context.arg=undefined$1;maybeInvokeDelegate(delegate,context);if(context.method==="throw"){return ContinueSentinel}}if(methodName!=="return"){context.method="throw";context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")}return ContinueSentinel}var record=tryCatch(method,delegate.iterator,context.arg);if(record.type==="throw"){context.method="throw";context.arg=record.arg;context.delegate=null;return ContinueSentinel}var info=record.arg;if(!info){context.method="throw";context.arg=new TypeError("iterator result is not an object");context.delegate=null;return ContinueSentinel}if(info.done){context[delegate.resultName]=info.value;context.next=delegate.nextLoc;if(context.method!=="return"){context.method="next";context.arg=undefined$1}}else{return info}context.delegate=null;return ContinueSentinel}defineIteratorMethods(Gp);define(Gp,toStringTagSymbol,"Generator");define(Gp,iteratorSymbol,function(){return this});define(Gp,"toString",function(){return"[object Generator]"});function pushTryEntry(locs){var entry={tryLoc:locs[0]};if(1 in locs){entry.catchLoc=locs[1]}if(2 in locs){entry.finallyLoc=locs[2];entry.afterLoc=locs[3]}this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal";delete record.arg;entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}];tryLocsList.forEach(pushTryEntry,this);this.reset(true)}exports.keys=function(val){var object=Object(val);var keys=[];for(var key in object){keys.push(key)}keys.reverse();return function next(){while(keys.length){var key=keys.pop();if(key in object){next.value=key;next.done=false;return next}}next.done=true;return next}};function values(iterable){if(iterable!=null){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod){return iteratorMethod.call(iterable)}if(typeof iterable.next==="function"){return iterable}if(!isNaN(iterable.length)){var i=-1,next=function next(){while(++i<iterable.length){if(hasOwn.call(iterable,i)){next.value=iterable[i];next.done=false;return next}}next.value=undefined$1;next.done=true;return next};return next.next=next}}throw new TypeError(typeof iterable+" is not iterable")}exports.values=values;function doneResult(){return{value:undefined$1,done:true}}Context.prototype={constructor:Context,reset:function(skipTempReset){this.prev=0;this.next=0;this.sent=this._sent=undefined$1;this.done=false;this.delegate=null;this.method="next";this.arg=undefined$1;this.tryEntries.forEach(resetTryEntry);if(!skipTempReset){for(var name in this){if(name.charAt(0)==="t"&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))){this[name]=undefined$1}}}},stop:function(){this.done=true;var rootEntry=this.tryEntries[0];var rootRecord=rootEntry.completion;if(rootRecord.type==="throw"){throw rootRecord.arg}return this.rval},dispatchException:function(exception){if(this.done){throw exception}var context=this;function handle(loc,caught){record.type="throw";record.arg=exception;context.next=loc;if(caught){context.method="next";context.arg=undefined$1}return!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];var record=entry.completion;if(entry.tryLoc==="root"){return handle("end")}if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc");var hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true)}else if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc)}}else if(hasCatch){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true)}}else if(hasFinally){if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc)}}else{throw new Error("try statement without catch or finally")}}}},abrupt:function(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}if(finallyEntry&&(type==="break"||type==="continue")&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc){finallyEntry=null}var record=finallyEntry?finallyEntry.completion:{};record.type=type;record.arg=arg;if(finallyEntry){this.method="next";this.next=finallyEntry.finallyLoc;return ContinueSentinel}return this.complete(record)},complete:function(record,afterLoc){if(record.type==="throw"){throw record.arg}if(record.type==="break"||record.type==="continue"){this.next=record.arg}else if(record.type==="return"){this.rval=this.arg=record.arg;this.method="return";this.next="end"}else if(record.type==="normal"&&afterLoc){this.next=afterLoc}return ContinueSentinel},finish:function(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc){this.complete(entry.completion,entry.afterLoc);resetTryEntry(entry);return ContinueSentinel}}},catch:function(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(record.type==="throw"){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function(iterable,resultName,nextLoc){this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc};if(this.method==="next"){this.arg=undefined$1}return ContinueSentinel}};return exports}(module.exports);try{regeneratorRuntime=runtime}catch(accidentalStrictMode){if(typeof globalThis==="object"){globalThis.regeneratorRuntime=runtime}else{Function("r","regeneratorRuntime = r")(runtime)}}});var _TICK_SPACINGS;var FACTORY_ADDRESS$3="0x1F98431c8aD98523631AE4a59f267346ea31F984";var POOL_INIT_CODE_HASH="0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54";var FeeAmount;(function(FeeAmount){FeeAmount[FeeAmount["LOWEST"]=100]="LOWEST";FeeAmount[FeeAmount["LOW"]=500]="LOW";FeeAmount[FeeAmount["MEDIUM"]=3e3]="MEDIUM";FeeAmount[FeeAmount["HIGH"]=1e4]="HIGH"})(FeeAmount||(FeeAmount={}));var TICK_SPACINGS=(_TICK_SPACINGS={},_TICK_SPACINGS[FeeAmount.LOWEST]=1,_TICK_SPACINGS[FeeAmount.LOW]=10,_TICK_SPACINGS[FeeAmount.MEDIUM]=60,_TICK_SPACINGS[FeeAmount.HIGH]=200,_TICK_SPACINGS);var NEGATIVE_ONE=JSBI.BigInt(-1);var ZERO$1=JSBI.BigInt(0);var ONE$1=JSBI.BigInt(1);var Q96=JSBI.exponentiate(JSBI.BigInt(2),JSBI.BigInt(96));var Q192=JSBI.exponentiate(Q96,JSBI.BigInt(2));function computePoolAddress(_ref){var factoryAddress=_ref.factoryAddress,tokenA=_ref.tokenA,tokenB=_ref.tokenB,fee=_ref.fee,initCodeHashManualOverride=_ref.initCodeHashManualOverride;var _ref2=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA],token0=_ref2[0],token1=_ref2[1];return getCreate2Address(factoryAddress,keccak256$2(["bytes"],[defaultAbiCoder.encode(["address","address","uint24"],[token0.address,token1.address,fee])]),initCodeHashManualOverride!=null?initCodeHashManualOverride:POOL_INIT_CODE_HASH)}var LiquidityMath=function(){function LiquidityMath(){}LiquidityMath.addDelta=function addDelta(x,y){if(JSBI.lessThan(y,ZERO$1)){return JSBI.subtract(x,JSBI.multiply(y,NEGATIVE_ONE))}else{return JSBI.add(x,y)}};return LiquidityMath}();var FullMath=function(){function FullMath(){}FullMath.mulDivRoundingUp=function mulDivRoundingUp(a,b,denominator){var product=JSBI.multiply(a,b);var result=JSBI.divide(product,denominator);if(JSBI.notEqual(JSBI.remainder(product,denominator),ZERO$1))result=JSBI.add(result,ONE$1);return result};return FullMath}();var MaxUint160=JSBI.subtract(JSBI.exponentiate(JSBI.BigInt(2),JSBI.BigInt(160)),ONE$1);function multiplyIn256(x,y){var product=JSBI.multiply(x,y);return JSBI.bitwiseAnd(product,MaxUint256$3)}function addIn256(x,y){var sum=JSBI.add(x,y);return JSBI.bitwiseAnd(sum,MaxUint256$3)}var SqrtPriceMath=function(){function SqrtPriceMath(){}SqrtPriceMath.getAmount0Delta=function getAmount0Delta(sqrtRatioAX96,sqrtRatioBX96,liquidity,roundUp){if(JSBI.greaterThan(sqrtRatioAX96,sqrtRatioBX96)){var _ref=[sqrtRatioBX96,sqrtRatioAX96];sqrtRatioAX96=_ref[0];sqrtRatioBX96=_ref[1]}var numerator1=JSBI.leftShift(liquidity,JSBI.BigInt(96));var numerator2=JSBI.subtract(sqrtRatioBX96,sqrtRatioAX96);return roundUp?FullMath.mulDivRoundingUp(FullMath.mulDivRoundingUp(numerator1,numerator2,sqrtRatioBX96),ONE$1,sqrtRatioAX96):JSBI.divide(JSBI.divide(JSBI.multiply(numerator1,numerator2),sqrtRatioBX96),sqrtRatioAX96)};SqrtPriceMath.getAmount1Delta=function getAmount1Delta(sqrtRatioAX96,sqrtRatioBX96,liquidity,roundUp){if(JSBI.greaterThan(sqrtRatioAX96,sqrtRatioBX96)){var _ref2=[sqrtRatioBX96,sqrtRatioAX96];sqrtRatioAX96=_ref2[0];sqrtRatioBX96=_ref2[1]}return roundUp?FullMath.mulDivRoundingUp(liquidity,JSBI.subtract(sqrtRatioBX96,sqrtRatioAX96),Q96):JSBI.divide(JSBI.multiply(liquidity,JSBI.subtract(sqrtRatioBX96,sqrtRatioAX96)),Q96)};SqrtPriceMath.getNextSqrtPriceFromInput=function getNextSqrtPriceFromInput(sqrtPX96,liquidity,amountIn,zeroForOne){!JSBI.greaterThan(sqrtPX96,ZERO$1)?process.env.NODE_ENV!=="production"?invariant(false):invariant(false):void 0;!JSBI.greaterThan(liquidity,ZERO$1)?process.env.NODE_ENV!=="production"?invariant(false):invariant(false):void 0;return zeroForOne?this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96,liquidity,amountIn,true):this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96,liquidity,amountIn,true)};SqrtPriceMath.getNextSqrtPriceFromOutput=function getNextSqrtPriceFromOutput(sqrtPX96,liquidity,amountOut,zeroForOne){!JSBI.greaterThan(sqrtPX96,ZERO$1)?process.env.NODE_ENV!=="production"?invariant(false):invariant(false):void 0;!JSBI.greaterThan(liquidity,ZERO$1)?process.env.NODE_ENV!=="production"?invariant(false):invariant(false):void 0;return zeroForOne?this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96,liquidity,amountOut,false):this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96,liquidity,amountOut,false)};SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp=function getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96,liquidity,amount,add){if(JSBI.equal(amount,ZERO$1))return sqrtPX96;var numerator1=JSBI.leftShift(liquidity,JSBI.BigInt(96));if(add){var product=multiplyIn256(amount,sqrtPX96);if(JSBI.equal(JSBI.divide(product,amount),sqrtPX96)){var denominator=addIn256(numerator1,product);if(JSBI.greaterThanOrEqual(denominator,numerator1)){return FullMath.mulDivRoundingUp(numerator1,sqrtPX96,denominator)}}return FullMath.mulDivRoundingUp(numerator1,ONE$1,JSBI.add(JSBI.divide(numerator1,sqrtPX96),amount))}else{var _product=multiplyIn256(amount,sqrtPX96);!JSBI.equal(JSBI.divide(_product,amount),sqrtPX96)?process.env.NODE_ENV!=="production"?invariant(false):invariant(false):void 0;!JSBI.greaterThan(numerator1,_product)?process.env.NODE_ENV!=="production"?invariant(false):invariant(false):void 0;var _denominator=JSBI.subtract(numerator1,_product);return FullMath.mulDivRoundingUp(numerator1,sqrtPX96,_denominator)}};SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown=function getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96,liquidity,amount,add){if(add){var quotient=JSBI.lessThanOrEqual(amount,MaxUint160)?JSBI.divide(JSBI.leftShift(amount,JSBI.BigInt(96)),liquidity):JSBI.divide(JSBI.multiply(amount,Q96),liquidity);return JSBI.add(sqrtPX96,quotient)}else{var _quotient=FullMath.mulDivRoundingUp(amount,Q96,liquidity);!JSBI.greaterThan(sqrtPX96,_quotient)?process.env.NODE_ENV!=="production"?invariant(false):invariant(false):void 0;return JSBI.subtract(sqrtPX96,_quotient)}};return SqrtPriceMath}();var MAX_FEE=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(6));var SwapMath=function(){function SwapMath(){}SwapMath.computeSwapStep=function computeSwapStep(sqrtRatioCurrentX96,sqrtRatioTargetX96,liquidity,amountRemaining,feePips){var returnValues={};var zeroForOne=JSBI.greaterThanOrEqual(sqrtRatioCurrentX96,sqrtRatioTargetX96);var exactIn=JSBI.greaterThanOrEqual(amountRemaining,ZERO$1);if(exactIn){var amountRemainingLessFee=JSBI.divide(JSBI.multiply(amountRemaining,JSBI.subtract(MAX_FEE,JSBI.BigInt(feePips))),MAX_FEE);returnValues.amountIn=zeroForOne?SqrtPriceMath.getAmount0Delta(sqrtRatioTargetX96,sqrtRatioCurrentX96,liquidity,true):SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96,sqrtRatioTargetX96,liquidity,true);if(JSBI.greaterThanOrEqual(amountRemainingLessFee,returnValues.amountIn)){returnValues.sqrtRatioNextX96=sqrtRatioTargetX96}else{returnValues.sqrtRatioNextX96=SqrtPriceMath.getNextSqrtPriceFromInput(sqrtRatioCurrentX96,liquidity,amountRemainingLessFee,zeroForOne)}}else{returnValues.amountOut=zeroForOne?SqrtPriceMath.getAmount1Delta(sqrtRatioTargetX96,sqrtRatioCurrentX96,liquidity,false):SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96,sqrtRatioTargetX96,liquidity,false);if(JSBI.greaterThanOrEqual(JSBI.multiply(amountRemaining,NEGATIVE_ONE),returnValues.amountOut)){returnValues.sqrtRatioNextX96=sqrtRatioTargetX96}else{returnValues.sqrtRatioNextX96=SqrtPriceMath.getNextSqrtPriceFromOutput(sqrtRatioCurrentX96,liquidity,JSBI.multiply(amountRemaining,NEGATIVE_ONE),zeroForOne)}}var max=JSBI.equal(sqrtRatioTargetX96,returnValues.sqrtRatioNextX96);if(zeroForOne){returnValues.amountIn=max&&exactIn?returnValues.amountIn:SqrtPriceMath.getAmount0Delta(returnValues.sqrtRatioNextX96,sqrtRatioCurrentX96,liquidity,true);returnValues.amountOut=max&&!exactIn?returnValues.amountOut:SqrtPriceMath.getAmount1Delta(returnValues.sqrtRatioNextX96,sqrtRatioCurrentX96,liquidity,false)}else{returnValues.amountIn=max&&exactIn?returnValues.amountIn:SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96,returnValues.sqrtRatioNextX96,liquidity,true);returnValues.amountOut=max&&!exactIn?returnValues.amountOut:SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96,returnValues.sqrtRatioNextX96,liquidity,false)}if(!exactIn&&JSBI.greaterThan(returnValues.amountOut,JSBI.multiply(amountRemaining,NEGATIVE_ONE))){returnValues.amountOut=JSBI.multiply(amountRemaining,NEGATIVE_ONE)}if(exactIn&&JSBI.notEqual(returnValues.sqrtRatioNextX96,sqrtRatioTargetX96)){returnValues.feeAmount=JSBI.subtract(amountRemaining,returnValues.amountIn)}else{returnValues.feeAmount=FullMath.mulDivRoundingUp(returnValues.amountIn,JSBI.BigInt(feePips),JSBI.subtract(MAX_FEE,JSBI.BigInt(feePips)))}return[returnValues.sqrtRatioNextX96,returnValues.amountIn,returnValues.amountOut,returnValues.feeAmount]};return SwapMath}();var TWO=JSBI.BigInt(2);var POWERS_OF_2=[128,64,32,16,8,4,2,1].map(function(pow){return[pow,JSBI.exponentiate(TWO,JSBI.BigInt(pow))]});function mostSignificantBit(x){!JSBI.greaterThan(x,ZERO$1)?process.env.NODE_ENV!=="production"?invariant(false,"ZERO"):invariant(false):void 0;!JSBI.lessThanOrEqual(x,MaxUint256$3)?process.env.NODE_ENV!=="production"?invariant(false,"MAX"):invariant(false):void 0;var msb=0;for(var _iterator=_createForOfIteratorHelperLoose$1(POWERS_OF_2),_step;!(_step=_iterator()).done;){var _step$value=_step.value,power=_step$value[0],min=_step$value[1];if(JSBI.greaterThanOrEqual(x,min)){x=JSBI.signedRightShift(x,JSBI.BigInt(power));msb+=power}}return msb}function mulShift(val,mulBy){return JSBI.signedRightShift(JSBI.multiply(val,JSBI.BigInt(mulBy)),JSBI.BigInt(128))}var Q32=JSBI.exponentiate(JSBI.BigInt(2),JSBI.BigInt(32));var TickMath=function(){function TickMath(){}TickMath.getSqrtRatioAtTick=function getSqrtRatioAtTick(tick){!(tick>=TickMath.MIN_TICK&&tick<=TickMath.MAX_TICK&&Number.isInteger(tick))?process.env.NODE_ENV!=="production"?invariant(false,"TICK"):invariant(false):void 0;var absTick=tick<0?tick*-1:tick;var ratio=(absTick&1)!=0?JSBI.BigInt("0xfffcb933bd6fad37aa2d162d1a594001"):JSBI.BigInt("0x100000000000000000000000000000000");if((absTick&2)!=0)ratio=mulShift(ratio,"0xfff97272373d413259a46990580e213a");if((absTick&4)!=0)ratio=mulShift(ratio,"0xfff2e50f5f656932ef12357cf3c7fdcc");if((absTick&8)!=0)ratio=mulShift(ratio,"0xffe5caca7e10e4e61c3624eaa0941cd0");if((absTick&16)!=0)ratio=mulShift(ratio,"0xffcb9843d60f6159c9db58835c926644");if((absTick&32)!=0)ratio=mulShift(ratio,"0xff973b41fa98c081472e6896dfb254c0");if((absTick&64)!=0)ratio=mulShift(ratio,"0xff2ea16466c96a3843ec78b326b52861");if((absTick&128)!=0)ratio=mulShift(ratio,"0xfe5dee046a99a2a811c461f1969c3053");if((absTick&256)!=0)ratio=mulShift(ratio,"0xfcbe86c7900a88aedcffc83b479aa3a4");if((absTick&512)!=0)ratio=mulShift(ratio,"0xf987a7253ac413176f2b074cf7815e54");if((absTick&1024)!=0)ratio=mulShift(ratio,"0xf3392b0822b70005940c7a398e4b70f3");if((absTick&2048)!=0)ratio=mulShift(ratio,"0xe7159475a2c29b7443b29c7fa6e889d9");if((absTick&4096)!=0)ratio=mulShift(ratio,"0xd097f3bdfd2022b8845ad8f792aa5825");if((absTick&8192)!=0)ratio=mulShift(ratio,"0xa9f746462d870fdf8a65dc1f90e061e5");if((absTick&16384)!=0)ratio=mulShift(ratio,"0x70d869a156d2a1b890bb3df62baf32f7");if((absTick&32768)!=0)ratio=mulShift(ratio,"0x31be135f97d08fd981231505542fcfa6");if((absTick&65536)!=0)ratio=mulShift(ratio,"0x9aa508b5b7a84e1c677de54f3e99bc9");if((absTick&131072)!=0)ratio=mulShift(ratio,"0x5d6af8dedb81196699c329225ee604");if((absTick&262144)!=0)ratio=mulShift(ratio,"0x2216e584f5fa1ea926041bedfe98");if((absTick&524288)!=0)ratio=mulShift(ratio,"0x48a170391f7dc42444e8fa2");if(tick>0)ratio=JSBI.divide(MaxUint256$3,ratio);return JSBI.greaterThan(JSBI.remainder(ratio,Q32),ZERO$1)?JSBI.add(JSBI.divide(ratio,Q32),ONE$1):JSBI.divide(ratio,Q32)};TickMath.getTickAtSqrtRatio=function getTickAtSqrtRatio(sqrtRatioX96){!(JSBI.greaterThanOrEqual(sqrtRatioX96,TickMath.MIN_SQRT_RATIO)&&JSBI.lessThan(sqrtRatioX96,TickMath.MAX_SQRT_RATIO))?process.env.NODE_ENV!=="production"?invariant(false,"SQRT_RATIO"):invariant(false):void 0;var sqrtRatioX128=JSBI.leftShift(sqrtRatioX96,JSBI.BigInt(32));var msb=mostSignificantBit(sqrtRatioX128);var r;if(JSBI.greaterThanOrEqual(JSBI.BigInt(msb),JSBI.BigInt(128))){r=JSBI.signedRightShift(sqrtRatioX128,JSBI.BigInt(msb-127))}else{r=JSBI.leftShift(sqrtRatioX128,JSBI.BigInt(127-msb))}var log_2=JSBI.leftShift(JSBI.subtract(JSBI.BigInt(msb),JSBI.BigInt(128)),JSBI.BigInt(64));for(var i=0;i<14;i++){r=JSBI.signedRightShift(JSBI.multiply(r,r),JSBI.BigInt(127));var f=JSBI.signedRightShift(r,JSBI.BigInt(128));log_2=JSBI.bitwiseOr(log_2,JSBI.leftShift(f,JSBI.BigInt(63-i)));r=JSBI.signedRightShift(r,f)}var log_sqrt10001=JSBI.multiply(log_2,JSBI.BigInt("255738958999603826347141"));var tickLow=JSBI.toNumber(JSBI.signedRightShift(JSBI.subtract(log_sqrt10001,JSBI.BigInt("3402992956809132418596140100660247210")),JSBI.BigInt(128)));var tickHigh=JSBI.toNumber(JSBI.signedRightShift(JSBI.add(log_sqrt10001,JSBI.BigInt("291339464771989622907027621153398088495")),JSBI.BigInt(128)));return tickLow===tickHigh?tickLow:JSBI.lessThanOrEqual(TickMath.getSqrtRatioAtTick(tickHigh),sqrtRatioX96)?tickHigh:tickLow};return TickMath}();TickMath.MIN_TICK=-887272;TickMath.MAX_TICK=-TickMath.MIN_TICK;TickMath.MIN_SQRT_RATIO=JSBI.BigInt("4295128739");TickMath.MAX_SQRT_RATIO=JSBI.BigInt("1461446703485210103287273052203988822378723970342");var NoTickDataProvider=function(){function NoTickDataProvider(){}var _proto=NoTickDataProvider.prototype;_proto.getTick=function(){var _getTick=_asyncToGenerator(runtime_1.mark(function _callee(_tick){return runtime_1.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:throw new Error(NoTickDataProvider.ERROR_MESSAGE);case 1:case"end":return _context.stop()}}},_callee)}));function getTick(_x){return _getTick.apply(this,arguments)}return getTick}();_proto.nextInitializedTickWithinOneWord=function(){var _nextInitializedTickWithinOneWord=_asyncToGenerator(runtime_1.mark(function _callee2(_tick,_lte,_tickSpacing){return runtime_1.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:throw new Error(NoTickDataProvider.ERROR_MESSAGE);case 1:case"end":return _context2.stop()}}},_callee2)}));function nextInitializedTickWithinOneWord(_x2,_x3,_x4){return _nextInitializedTickWithinOneWord.apply(this,arguments)}return nextInitializedTickWithinOneWord}();return NoTickDataProvider}();NoTickDataProvider.ERROR_MESSAGE="No tick data provider was given";function isSorted(list,comparator){for(var i=0;i<list.length-1;i++){if(comparator(list[i],list[i+1])>0){return false}}return true}function tickComparator(a,b){return a.index-b.index}var TickList=function(){function TickList(){}TickList.validateList=function validateList(ticks,tickSpacing){!(tickSpacing>0)?process.env.NODE_ENV!=="production"?invariant(false,"TICK_SPACING_NONZERO"):invariant(false):void 0;!ticks.every(function(_ref){var index=_ref.index;return index%tickSpacing===0})?process.env.NODE_ENV!=="production"?invariant(false,"TICK_SPACING"):invariant(false):void 0;!JSBI.equal(ticks.reduce(function(accumulator,_ref2){var liquidityNet=_ref2.liquidityNet;return JSBI.add(accumulator,liquidityNet)},ZERO$1),ZERO$1)?process.env.NODE_ENV!=="production"?invariant(false,"ZERO_NET"):invariant(false):void 0;!isSorted(ticks,tickComparator)?process.env.NODE_ENV!=="production"?invariant(false,"SORTED"):invariant(false):void 0};TickList.isBelowSmallest=function isBelowSmallest(ticks,tick){!(ticks.length>0)?process.env.NODE_ENV!=="production"?invariant(false,"LENGTH"):invariant(false):void 0;return tick<ticks[0].index};TickList.isAtOrAboveLargest=function isAtOrAboveLargest(ticks,tick){!(ticks.length>0)?process.env.NODE_ENV!=="production"?invariant(false,"LENGTH"):invariant(false):void 0;return tick>=ticks[ticks.length-1].index};TickList.getTick=function getTick(ticks,index){var tick=ticks[this.binarySearch(ticks,index)];!(tick.index===index)?process.env.NODE_ENV!=="production"?invariant(false,"NOT_CONTAINED"):invariant(false):void 0;return tick};TickList.binarySearch=function binarySearch(ticks,tick){!!this.isBelowSmallest(ticks,tick)?process.env.NODE_ENV!=="production"?invariant(false,"BELOW_SMALLEST"):invariant(false):void 0;var l=0;var r=ticks.length-1;var i;while(true){i=Math.floor((l+r)/2);if(ticks[i].index<=tick&&(i===ticks.length-1||ticks[i+1].index>tick)){return i}if(ticks[i].index<tick){l=i+1}else{r=i-1}}};TickList.nextInitializedTick=function nextInitializedTick(ticks,tick,lte){if(lte){!!TickList.isBelowSmallest(ticks,tick)?process.env.NODE_ENV!=="production"?invariant(false,"BELOW_SMALLEST"):invariant(false):void 0;if(TickList.isAtOrAboveLargest(ticks,tick)){return ticks[ticks.length-1]}var index=this.binarySearch(ticks,tick);return ticks[index]}else{!!this.isAtOrAboveLargest(ticks,tick)?process.env.NODE_ENV!=="production"?invariant(false,"AT_OR_ABOVE_LARGEST"):invariant(false):void 0;if(this.isBelowSmallest(ticks,tick)){return ticks[0]}var _index=this.binarySearch(ticks,tick);return ticks[_index+1]}};TickList.nextInitializedTickWithinOneWord=function nextInitializedTickWithinOneWord(ticks,tick,lte,tickSpacing){var compressed=Math.floor(tick/tickSpacing);if(lte){var wordPos=compressed>>8;var minimum=(wordPos<<8)*tickSpacing;if(TickList.isBelowSmallest(ticks,tick)){return[minimum,false]}var index=TickList.nextInitializedTick(ticks,tick,lte).index;var nextInitializedTick=Math.max(minimum,index);return[nextInitializedTick,nextInitializedTick===index]}else{var _wordPos=compressed+1>>8;var maximum=((_wordPos+1<<8)-1)*tickSpacing;if(this.isAtOrAboveLargest(ticks,tick)){return[maximum,false]}var _index2=this.nextInitializedTick(ticks,tick,lte).index;var _nextInitializedTick=Math.min(maximum,_index2);return[_nextInitializedTick,_nextInitializedTick===_index2]}};return TickList}();function encodeRouteToPath(route,exactOutput){var firstInputToken=route.input.wrapped;var _route$pools$reduce=route.pools.reduce(function(_ref,pool,index){var inputToken=_ref.inputToken,path=_ref.path,types=_ref.types;var outputToken=pool.token0.equals(inputToken)?pool.token1:pool.token0;if(index===0){return{inputToken:outputToken,types:["address","uint24","address"],path:[inputToken.address,pool.fee,outputToken.address]}}else{return{inputToken:outputToken,types:[].concat(types,["uint24","address"]),path:[].concat(path,[pool.fee,outputToken.address])}}},{inputToken:firstInputToken,path:[],types:[]}),path=_route$pools$reduce.path,types=_route$pools$reduce.types;return exactOutput?pack(types.reverse(),path.reverse()):pack(types,path)}function encodeSqrtRatioX96(amount1,amount0){var numerator=JSBI.leftShift(JSBI.BigInt(amount1),JSBI.BigInt(192));var denominator=JSBI.BigInt(amount0);var ratioX192=JSBI.divide(numerator,denominator);return sqrt$1(ratioX192)}function maxLiquidityForAmount0Imprecise(sqrtRatioAX96,sqrtRatioBX96,amount0){if(JSBI.greaterThan(sqrtRatioAX96,sqrtRatioBX96)){var _ref=[sqrtRatioBX96,sqrtRatioAX96];sqrtRatioAX96=_ref[0];sqrtRatioBX96=_ref[1]}var intermediate=JSBI.divide(JSBI.multiply(sqrtRatioAX96,sqrtRatioBX96),Q96);return JSBI.divide(JSBI.multiply(JSBI.BigInt(amount0),intermediate),JSBI.subtract(sqrtRatioBX96,sqrtRatioAX96))}function maxLiquidityForAmount0Precise(sqrtRatioAX96,sqrtRatioBX96,amount0){if(JSBI.greaterThan(sqrtRatioAX96,sqrtRatioBX96)){var _ref2=[sqrtRatioBX96,sqrtRatioAX96];sqrtRatioAX96=_ref2[0];sqrtRatioBX96=_ref2[1]}var numerator=JSBI.multiply(JSBI.multiply(JSBI.BigInt(amount0),sqrtRatioAX96),sqrtRatioBX96);var denominator=JSBI.multiply(Q96,JSBI.subtract(sqrtRatioBX96,sqrtRatioAX96));return JSBI.divide(numerator,denominator)}function maxLiquidityForAmount1(sqrtRatioAX96,sqrtRatioBX96,amount1){if(JSBI.greaterThan(sqrtRatioAX96,sqrtRatioBX96)){var _ref3=[sqrtRatioBX96,sqrtRatioAX96];sqrtRatioAX96=_ref3[0];sqrtRatioBX96=_ref3[1]}return JSBI.divide(JSBI.multiply(JSBI.BigInt(amount1),Q96),JSBI.subtract(sqrtRatioBX96,sqrtRatioAX96))}function maxLiquidityForAmounts(sqrtRatioCurrentX96,sqrtRatioAX96,sqrtRatioBX96,amount0,amount1,useFullPrecision){if(JSBI.greaterThan(sqrtRatioAX96,sqrtRatioBX96)){var _ref4=[sqrtRatioBX96,sqrtRatioAX96];sqrtRatioAX96=_ref4[0];sqrtRatioBX96=_ref4[1]}var maxLiquidityForAmount0=useFullPrecision?maxLiquidityForAmount0Precise:maxLiquidityForAmount0Imprecise;if(JSBI.lessThanOrEqual(sqrtRatioCurrentX96,sqrtRatioAX96)){return maxLiquidityForAmount0(sqrtRatioAX96,sqrtRatioBX96,amount0)}else if(JSBI.lessThan(sqrtRatioCurrentX96,sqrtRatioBX96)){var liquidity0=maxLiquidityForAmount0(sqrtRatioCurrentX96,sqrtRatioBX96,amount0);var liquidity1=maxLiquidityForAmount1(sqrtRatioAX96,sqrtRatioCurrentX96,amount1);return JSBI.lessThan(liquidity0,liquidity1)?liquidity0:liquidity1}else{return maxLiquidityForAmount1(sqrtRatioAX96,sqrtRatioBX96,amount1)}}function nearestUsableTick(tick,tickSpacing){!(Number.isInteger(tick)&&Number.isInteger(tickSpacing))?process.env.NODE_ENV!=="production"?invariant(false,"INTEGERS"):invariant(false):void 0;!(tickSpacing>0)?process.env.NODE_ENV!=="production"?invariant(false,"TICK_SPACING"):invariant(false):void 0;!(tick>=TickMath.MIN_TICK&&tick<=TickMath.MAX_TICK)?process.env.NODE_ENV!=="production"?invariant(false,"TICK_BOUND"):invariant(false):void 0;var rounded=Math.round(tick/tickSpacing)*tickSpacing;if(rounded<TickMath.MIN_TICK)return rounded+tickSpacing;else if(rounded>TickMath.MAX_TICK)return rounded-tickSpacing;else return rounded}function tickToPrice(baseToken,quoteToken,tick){var sqrtRatioX96=TickMath.getSqrtRatioAtTick(tick);var ratioX192=JSBI.multiply(sqrtRatioX96,sqrtRatioX96);return baseToken.sortsBefore(quoteToken)?new Price(baseToken,quoteToken,Q192,ratioX192):new Price(baseToken,quoteToken,ratioX192,Q192)}var Tick=function Tick(_ref){var index=_ref.index,liquidityGross=_ref.liquidityGross,liquidityNet=_ref.liquidityNet;!(index>=TickMath.MIN_TICK&&index<=TickMath.MAX_TICK)?process.env.NODE_ENV!=="production"?invariant(false,"TICK"):invariant(false):void 0;this.index=index;this.liquidityGross=JSBI.BigInt(liquidityGross);this.liquidityNet=JSBI.BigInt(liquidityNet)};var TickListDataProvider=function(){function TickListDataProvider(ticks,tickSpacing){var ticksMapped=ticks.map(function(t){return t instanceof Tick?t:new Tick(t)});TickList.validateList(ticksMapped,tickSpacing);this.ticks=ticksMapped}var _proto=TickListDataProvider.prototype;_proto.getTick=function(){var _getTick=_asyncToGenerator(runtime_1.mark(function _callee(tick){return runtime_1.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt("return",TickList.getTick(this.ticks,tick));case 1:case"end":return _context.stop()}}},_callee,this)}));function getTick(_x){return _getTick.apply(this,arguments)}return getTick}();_proto.nextInitializedTickWithinOneWord=function(){var _nextInitializedTickWithinOneWord=_asyncToGenerator(runtime_1.mark(function _callee2(tick,lte,tickSpacing){return runtime_1.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt("return",TickList.nextInitializedTickWithinOneWord(this.ticks,tick,lte,tickSpacing));case 1:case"end":return _context2.stop()}}},_callee2,this)}));function nextInitializedTickWithinOneWord(_x2,_x3,_x4){return _nextInitializedTickWithinOneWord.apply(this,arguments)}return nextInitializedTickWithinOneWord}();return TickListDataProvider}();var NO_TICK_DATA_PROVIDER_DEFAULT=new NoTickDataProvider;var Pool=function(){function Pool(tokenA,tokenB,fee,sqrtRatioX96,liquidity,tickCurrent,ticks){if(ticks===void 0){ticks=NO_TICK_DATA_PROVIDER_DEFAULT}!(Number.isInteger(fee)&&fee<1e6)?process.env.NODE_ENV!=="production"?invariant(false,"FEE"):invariant(false):void 0;var tickCurrentSqrtRatioX96=TickMath.getSqrtRatioAtTick(tickCurrent);var nextTickSqrtRatioX96=TickMath.getSqrtRatioAtTick(tickCurrent+1);!(JSBI.greaterThanOrEqual(JSBI.BigInt(sqrtRatioX96),tickCurrentSqrtRatioX96)&&JSBI.lessThanOrEqual(JSBI.BigInt(sqrtRatioX96),nextTickSqrtRatioX96))?process.env.NODE_ENV!=="production"?invariant(false,"PRICE_BOUNDS"):invariant(false):void 0;var _ref=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA];this.token0=_ref[0];this.token1=_ref[1];this.fee=fee;this.sqrtRatioX96=JSBI.BigInt(sqrtRatioX96);this.liquidity=JSBI.BigInt(liquidity);this.tickCurrent=tickCurrent;this.tickDataProvider=Array.isArray(ticks)?new TickListDataProvider(ticks,TICK_SPACINGS[fee]):ticks}Pool.getAddress=function getAddress(tokenA,tokenB,fee,initCodeHashManualOverride,factoryAddressOverride){return computePoolAddress({factoryAddress:factoryAddressOverride!=null?factoryAddressOverride:FACTORY_ADDRESS$3,fee:fee,tokenA:tokenA,tokenB:tokenB,initCodeHashManualOverride:initCodeHashManualOverride})};var _proto=Pool.prototype;_proto.involvesToken=function involvesToken(token){return token.equals(this.token0)||token.equals(this.token1)};_proto.priceOf=function priceOf(token){!this.involvesToken(token)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;return token.equals(this.token0)?this.token0Price:this.token1Price};_proto.getOutputAmount=function(){var _getOutputAmount=_asyncToGenerator(runtime_1.mark(function _callee(inputAmount,sqrtPriceLimitX96){var zeroForOne,_yield$this$swap,outputAmount,sqrtRatioX96,liquidity,tickCurrent,outputToken;return runtime_1.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:!this.involvesToken(inputAmount.currency)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;zeroForOne=inputAmount.currency.equals(this.token0);_context.next=4;return this.swap(zeroForOne,inputAmount.quotient,sqrtPriceLimitX96);case 4:_yield$this$swap=_context.sent;outputAmount=_yield$this$swap.amountCalculated;sqrtRatioX96=_yield$this$swap.sqrtRatioX96;liquidity=_yield$this$swap.liquidity;tickCurrent=_yield$this$swap.tickCurrent;outputToken=zeroForOne?this.token1:this.token0;return _context.abrupt("return",[CurrencyAmount$2.fromRawAmount(outputToken,JSBI.multiply(outputAmount,NEGATIVE_ONE)),new Pool(this.token0,this.token1,this.fee,sqrtRatioX96,liquidity,tickCurrent,this.tickDataProvider)]);case 11:case"end":return _context.stop()}}},_callee,this)}));function getOutputAmount(_x,_x2){return _getOutputAmount.apply(this,arguments)}return getOutputAmount}();_proto.getInputAmount=function(){var _getInputAmount=_asyncToGenerator(runtime_1.mark(function _callee2(outputAmount,sqrtPriceLimitX96){var zeroForOne,_yield$this$swap2,inputAmount,sqrtRatioX96,liquidity,tickCurrent,inputToken;return runtime_1.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:!(outputAmount.currency.isToken&&this.involvesToken(outputAmount.currency))?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;zeroForOne=outputAmount.currency.equals(this.token1);_context2.next=4;return this.swap(zeroForOne,JSBI.multiply(outputAmount.quotient,NEGATIVE_ONE),sqrtPriceLimitX96);case 4:_yield$this$swap2=_context2.sent;inputAmount=_yield$this$swap2.amountCalculated;sqrtRatioX96=_yield$this$swap2.sqrtRatioX96;liquidity=_yield$this$swap2.liquidity;tickCurrent=_yield$this$swap2.tickCurrent;inputToken=zeroForOne?this.token0:this.token1;return _context2.abrupt("return",[CurrencyAmount$2.fromRawAmount(inputToken,inputAmount),new Pool(this.token0,this.token1,this.fee,sqrtRatioX96,liquidity,tickCurrent,this.tickDataProvider)]);case 11:case"end":return _context2.stop()}}},_callee2,this)}));function getInputAmount(_x3,_x4){return _getInputAmount.apply(this,arguments)}return getInputAmount}();_proto.swap=function(){var _swap=_asyncToGenerator(runtime_1.mark(function _callee3(zeroForOne,amountSpecified,sqrtPriceLimitX96){var exactInput,state,step,_yield$this$tickDataP,_SwapMath$computeSwap,liquidityNet;return runtime_1.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!sqrtPriceLimitX96)sqrtPriceLimitX96=zeroForOne?JSBI.add(TickMath.MIN_SQRT_RATIO,ONE$1):JSBI.subtract(TickMath.MAX_SQRT_RATIO,ONE$1);if(zeroForOne){!JSBI.greaterThan(sqrtPriceLimitX96,TickMath.MIN_SQRT_RATIO)?process.env.NODE_ENV!=="production"?invariant(false,"RATIO_MIN"):invariant(false):void 0;!JSBI.lessThan(sqrtPriceLimitX96,this.sqrtRatioX96)?process.env.NODE_ENV!=="production"?invariant(false,"RATIO_CURRENT"):invariant(false):void 0}else{!JSBI.lessThan(sqrtPriceLimitX96,TickMath.MAX_SQRT_RATIO)?process.env.NODE_ENV!=="production"?invariant(false,"RATIO_MAX"):invariant(false):void 0;!JSBI.greaterThan(sqrtPriceLimitX96,this.sqrtRatioX96)?process.env.NODE_ENV!=="production"?invariant(false,"RATIO_CURRENT"):invariant(false):void 0}exactInput=JSBI.greaterThanOrEqual(amountSpecified,ZERO$1);state={amountSpecifiedRemaining:amountSpecified,amountCalculated:ZERO$1,sqrtPriceX96:this.sqrtRatioX96,tick:this.tickCurrent,liquidity:this.liquidity};case 4:if(!(JSBI.notEqual(state.amountSpecifiedRemaining,ZERO$1)&&state.sqrtPriceX96!=sqrtPriceLimitX96)){_context3.next=35;break}step={};step.sqrtPriceStartX96=state.sqrtPriceX96;_context3.next=9;return this.tickDataProvider.nextInitializedTickWithinOneWord(state.tick,zeroForOne,this.tickSpacing);case 9:_yield$this$tickDataP=_context3.sent;step.tickNext=_yield$this$tickDataP[0];step.initialized=_yield$this$tickDataP[1];if(step.tickNext<TickMath.MIN_TICK){step.tickNext=TickMath.MIN_TICK}else if(step.tickNext>TickMath.MAX_TICK){step.tickNext=TickMath.MAX_TICK}step.sqrtPriceNextX96=TickMath.getSqrtRatioAtTick(step.tickNext);_SwapMath$computeSwap=SwapMath.computeSwapStep(state.sqrtPriceX96,(zeroForOne?JSBI.lessThan(step.sqrtPriceNextX96,sqrtPriceLimitX96):JSBI.greaterThan(step.sqrtPriceNextX96,sqrtPriceLimitX96))?sqrtPriceLimitX96:step.sqrtPriceNextX96,state.liquidity,state.amountSpecifiedRemaining,this.fee);state.sqrtPriceX96=_SwapMath$computeSwap[0];step.amountIn=_SwapMath$computeSwap[1];step.amountOut=_SwapMath$computeSwap[2];step.feeAmount=_SwapMath$computeSwap[3];if(exactInput){state.amountSpecifiedRemaining=JSBI.subtract(state.amountSpecifiedRemaining,JSBI.add(step.amountIn,step.feeAmount));state.amountCalculated=JSBI.subtract(state.amountCalculated,step.amountOut)}else{state.amountSpecifiedRemaining=JSBI.add(state.amountSpecifiedRemaining,step.amountOut);state.amountCalculated=JSBI.add(state.amountCalculated,JSBI.add(step.amountIn,step.feeAmount))}if(!JSBI.equal(state.sqrtPriceX96,step.sqrtPriceNextX96)){_context3.next=32;break}if(!step.initialized){_context3.next=29;break}_context3.t0=JSBI;_context3.next=25;return this.tickDataProvider.getTick(step.tickNext);case 25:_context3.t1=_context3.sent.liquidityNet;liquidityNet=_context3.t0.BigInt.call(_context3.t0,_context3.t1);if(zeroForOne)liquidityNet=JSBI.multiply(liquidityNet,NEGATIVE_ONE);state.liquidity=LiquidityMath.addDelta(state.liquidity,liquidityNet);case 29:state.tick=zeroForOne?step.tickNext-1:step.tickNext;_context3.next=33;break;case 32:if(JSBI.notEqual(state.sqrtPriceX96,step.sqrtPriceStartX96)){state.tick=TickMath.getTickAtSqrtRatio(state.sqrtPriceX96)}case 33:_context3.next=4;break;case 35:return _context3.abrupt("return",{amountCalculated:state.amountCalculated,sqrtRatioX96:state.sqrtPriceX96,liquidity:state.liquidity,tickCurrent:state.tick});case 36:case"end":return _context3.stop()}}},_callee3,this)}));function swap(_x5,_x6,_x7){return _swap.apply(this,arguments)}return swap}();_createClass$2(Pool,[{key:"token0Price",get:function get(){var _this$_token0Price;return(_this$_token0Price=this._token0Price)!=null?_this$_token0Price:this._token0Price=new Price(this.token0,this.token1,Q192,JSBI.multiply(this.sqrtRatioX96,this.sqrtRatioX96))}},{key:"token1Price",get:function get(){var _this$_token1Price;return(_this$_token1Price=this._token1Price)!=null?_this$_token1Price:this._token1Price=new Price(this.token1,this.token0,JSBI.multiply(this.sqrtRatioX96,this.sqrtRatioX96),Q192)}},{key:"chainId",get:function get(){return this.token0.chainId}},{key:"tickSpacing",get:function get(){return TICK_SPACINGS[this.fee]}}]);return Pool}();var Position$1=function(){function Position(_ref){var pool=_ref.pool,liquidity=_ref.liquidity,tickLower=_ref.tickLower,tickUpper=_ref.tickUpper;this._token0Amount=null;this._token1Amount=null;this._mintAmounts=null;!(tickLower<tickUpper)?process.env.NODE_ENV!=="production"?invariant(false,"TICK_ORDER"):invariant(false):void 0;!(tickLower>=TickMath.MIN_TICK&&tickLower%pool.tickSpacing===0)?process.env.NODE_ENV!=="production"?invariant(false,"TICK_LOWER"):invariant(false):void 0;!(tickUpper<=TickMath.MAX_TICK&&tickUpper%pool.tickSpacing===0)?process.env.NODE_ENV!=="production"?invariant(false,"TICK_UPPER"):invariant(false):void 0;this.pool=pool;this.tickLower=tickLower;this.tickUpper=tickUpper;this.liquidity=JSBI.BigInt(liquidity)}var _proto=Position.prototype;_proto.ratiosAfterSlippage=function ratiosAfterSlippage(slippageTolerance){var priceLower=this.pool.token0Price.asFraction.multiply(new Percent$1(1).subtract(slippageTolerance));var priceUpper=this.pool.token0Price.asFraction.multiply(slippageTolerance.add(1));var sqrtRatioX96Lower=encodeSqrtRatioX96(priceLower.numerator,priceLower.denominator);if(JSBI.lessThanOrEqual(sqrtRatioX96Lower,TickMath.MIN_SQRT_RATIO)){sqrtRatioX96Lower=JSBI.add(TickMath.MIN_SQRT_RATIO,JSBI.BigInt(1))}var sqrtRatioX96Upper=encodeSqrtRatioX96(priceUpper.numerator,priceUpper.denominator);if(JSBI.greaterThanOrEqual(sqrtRatioX96Upper,TickMath.MAX_SQRT_RATIO)){sqrtRatioX96Upper=JSBI.subtract(TickMath.MAX_SQRT_RATIO,JSBI.BigInt(1))}return{sqrtRatioX96Lower:sqrtRatioX96Lower,sqrtRatioX96Upper:sqrtRatioX96Upper}};_proto.mintAmountsWithSlippage=function mintAmountsWithSlippage(slippageTolerance){var _this$ratiosAfterSlip=this.ratiosAfterSlippage(slippageTolerance),sqrtRatioX96Upper=_this$ratiosAfterSlip.sqrtRatioX96Upper,sqrtRatioX96Lower=_this$ratiosAfterSlip.sqrtRatioX96Lower;var poolLower=new Pool(this.pool.token0,this.pool.token1,this.pool.fee,sqrtRatioX96Lower,0,TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));var poolUpper=new Pool(this.pool.token0,this.pool.token1,this.pool.fee,sqrtRatioX96Upper,0,TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper));var positionThatWillBeCreated=Position.fromAmounts(_extends$1({pool:this.pool,tickLower:this.tickLower,tickUpper:this.tickUpper},this.mintAmounts,{useFullPrecision:false}));var amount0=new Position({pool:poolUpper,liquidity:positionThatWillBeCreated.liquidity,tickLower:this.tickLower,tickUpper:this.tickUpper}).mintAmounts.amount0;var amount1=new Position({pool:poolLower,liquidity:positionThatWillBeCreated.liquidity,tickLower:this.tickLower,tickUpper:this.tickUpper}).mintAmounts.amount1;return{amount0:amount0,amount1:amount1}};_proto.burnAmountsWithSlippage=function burnAmountsWithSlippage(slippageTolerance){var _this$ratiosAfterSlip2=this.ratiosAfterSlippage(slippageTolerance),sqrtRatioX96Upper=_this$ratiosAfterSlip2.sqrtRatioX96Upper,sqrtRatioX96Lower=_this$ratiosAfterSlip2.sqrtRatioX96Lower;var poolLower=new Pool(this.pool.token0,this.pool.token1,this.pool.fee,sqrtRatioX96Lower,0,TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));var poolUpper=new Pool(this.pool.token0,this.pool.token1,this.pool.fee,sqrtRatioX96Upper,0,TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper));var amount0=new Position({pool:poolUpper,liquidity:this.liquidity,tickLower:this.tickLower,tickUpper:this.tickUpper}).amount0;var amount1=new Position({pool:poolLower,liquidity:this.liquidity,tickLower:this.tickLower,tickUpper:this.tickUpper}).amount1;return{amount0:amount0.quotient,amount1:amount1.quotient}};Position.fromAmounts=function fromAmounts(_ref2){var pool=_ref2.pool,tickLower=_ref2.tickLower,tickUpper=_ref2.tickUpper,amount0=_ref2.amount0,amount1=_ref2.amount1,useFullPrecision=_ref2.useFullPrecision;var sqrtRatioAX96=TickMath.getSqrtRatioAtTick(tickLower);var sqrtRatioBX96=TickMath.getSqrtRatioAtTick(tickUpper);return new Position({pool:pool,tickLower:tickLower,tickUpper:tickUpper,liquidity:maxLiquidityForAmounts(pool.sqrtRatioX96,sqrtRatioAX96,sqrtRatioBX96,amount0,amount1,useFullPrecision)})};Position.fromAmount0=function fromAmount0(_ref3){var pool=_ref3.pool,tickLower=_ref3.tickLower,tickUpper=_ref3.tickUpper,amount0=_ref3.amount0,useFullPrecision=_ref3.useFullPrecision;return Position.fromAmounts({pool:pool,tickLower:tickLower,tickUpper:tickUpper,amount0:amount0,amount1:MaxUint256$3,useFullPrecision:useFullPrecision})};Position.fromAmount1=function fromAmount1(_ref4){var pool=_ref4.pool,tickLower=_ref4.tickLower,tickUpper=_ref4.tickUpper,amount1=_ref4.amount1;return Position.fromAmounts({pool:pool,tickLower:tickLower,tickUpper:tickUpper,amount0:MaxUint256$3,amount1:amount1,useFullPrecision:true})};_createClass$2(Position,[{key:"token0PriceLower",get:function get(){return tickToPrice(this.pool.token0,this.pool.token1,this.tickLower)}},{key:"token0PriceUpper",get:function get(){return tickToPrice(this.pool.token0,this.pool.token1,this.tickUpper)}},{key:"amount0",get:function get(){if(this._token0Amount===null){if(this.pool.tickCurrent<this.tickLower){this._token0Amount=CurrencyAmount$2.fromRawAmount(this.pool.token0,SqrtPriceMath.getAmount0Delta(TickMath.getSqrtRatioAtTick(this.tickLower),TickMath.getSqrtRatioAtTick(this.tickUpper),this.liquidity,false))}else if(this.pool.tickCurrent<this.tickUpper){this._token0Amount=CurrencyAmount$2.fromRawAmount(this.pool.token0,SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96,TickMath.getSqrtRatioAtTick(this.tickUpper),this.liquidity,false))}else{this._token0Amount=CurrencyAmount$2.fromRawAmount(this.pool.token0,ZERO$1)}}return this._token0Amount}},{key:"amount1",get:function get(){if(this._token1Amount===null){if(this.pool.tickCurrent<this.tickLower){this._token1Amount=CurrencyAmount$2.fromRawAmount(this.pool.token1,ZERO$1)}else if(this.pool.tickCurrent<this.tickUpper){this._token1Amount=CurrencyAmount$2.fromRawAmount(this.pool.token1,SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower),this.pool.sqrtRatioX96,this.liquidity,false))}else{this._token1Amount=CurrencyAmount$2.fromRawAmount(this.pool.token1,SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower),TickMath.getSqrtRatioAtTick(this.tickUpper),this.liquidity,false))}}return this._token1Amount}},{key:"mintAmounts",get:function get(){if(this._mintAmounts===null){if(this.pool.tickCurrent<this.tickLower){return{amount0:SqrtPriceMath.getAmount0Delta(TickMath.getSqrtRatioAtTick(this.tickLower),TickMath.getSqrtRatioAtTick(this.tickUpper),this.liquidity,true),amount1:ZERO$1}}else if(this.pool.tickCurrent<this.tickUpper){return{amount0:SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96,TickMath.getSqrtRatioAtTick(this.tickUpper),this.liquidity,true),amount1:SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower),this.pool.sqrtRatioX96,this.liquidity,true)}}else{return{amount0:ZERO$1,amount1:SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower),TickMath.getSqrtRatioAtTick(this.tickUpper),this.liquidity,true)}}}return this._mintAmounts}}]);return Position}();var Route$1=function(){function Route(pools,input,output){this._midPrice=null;!(pools.length>0)?process.env.NODE_ENV!=="production"?invariant(false,"POOLS"):invariant(false):void 0;var chainId=pools[0].chainId;var allOnSameChain=pools.every(function(pool){return pool.chainId===chainId});!allOnSameChain?process.env.NODE_ENV!=="production"?invariant(false,"CHAIN_IDS"):invariant(false):void 0;var wrappedInput=input.wrapped;!pools[0].involvesToken(wrappedInput)?process.env.NODE_ENV!=="production"?invariant(false,"INPUT"):invariant(false):void 0;!pools[pools.length-1].involvesToken(output.wrapped)?process.env.NODE_ENV!=="production"?invariant(false,"OUTPUT"):invariant(false):void 0;var tokenPath=[wrappedInput];for(var _iterator=_createForOfIteratorHelperLoose$1(pools.entries()),_step;!(_step=_iterator()).done;){var _step$value=_step.value,i=_step$value[0],pool=_step$value[1];var currentInputToken=tokenPath[i];!(currentInputToken.equals(pool.token0)||currentInputToken.equals(pool.token1))?process.env.NODE_ENV!=="production"?invariant(false,"PATH"):invariant(false):void 0;var nextToken=currentInputToken.equals(pool.token0)?pool.token1:pool.token0;tokenPath.push(nextToken)}this.pools=pools;this.tokenPath=tokenPath;this.input=input;this.output=output!=null?output:tokenPath[tokenPath.length-1]}_createClass$2(Route,[{key:"chainId",get:function get(){return this.pools[0].chainId}},{key:"midPrice",get:function get(){if(this._midPrice!==null)return this._midPrice;var price=this.pools.slice(1).reduce(function(_ref,pool){var nextInput=_ref.nextInput,price=_ref.price;return nextInput.equals(pool.token0)?{nextInput:pool.token1,price:price.multiply(pool.token0Price)}:{nextInput:pool.token0,price:price.multiply(pool.token1Price)}},this.pools[0].token0.equals(this.input.wrapped)?{nextInput:this.pools[0].token1,price:this.pools[0].token0Price}:{nextInput:this.pools[0].token0,price:this.pools[0].token1Price}).price;return this._midPrice=new Price(this.input,this.output,price.denominator,price.numerator)}}]);return Route}();new Interface(IMulticall.abi);new Interface(ISelfPermit.abi);new Interface(IPeripheryPaymentsWithFee.abi);new Interface(INonfungiblePositionManager.abi);new Interface(IQuoter.abi);new Interface(IQuoterV2.abi);new Interface(IUniswapV3Staker.abi);new Interface(ISwapRouter.abi);var _a$6;var SupportedChainId;(function(SupportedChainId){SupportedChainId[SupportedChainId["MAINNET"]=1]="MAINNET";SupportedChainId[SupportedChainId["ROPSTEN"]=3]="ROPSTEN";SupportedChainId[SupportedChainId["RINKEBY"]=4]="RINKEBY";SupportedChainId[SupportedChainId["GOERLI"]=5]="GOERLI";SupportedChainId[SupportedChainId["KOVAN"]=42]="KOVAN";SupportedChainId[SupportedChainId["ARBITRUM_ONE"]=42161]="ARBITRUM_ONE";SupportedChainId[SupportedChainId["ARBITRUM_RINKEBY"]=421611]="ARBITRUM_RINKEBY";SupportedChainId[SupportedChainId["ARBITRUM_GOERLI"]=421613]="ARBITRUM_GOERLI";SupportedChainId[SupportedChainId["OPTIMISM"]=10]="OPTIMISM";SupportedChainId[SupportedChainId["OPTIMISTIC_KOVAN"]=69]="OPTIMISTIC_KOVAN";SupportedChainId[SupportedChainId["POLYGON"]=137]="POLYGON";SupportedChainId[SupportedChainId["POLYGON_MUMBAI"]=80001]="POLYGON_MUMBAI"})(SupportedChainId||(SupportedChainId={}));_a$6={},_a$6[SupportedChainId.MAINNET]="mainnet",_a$6[SupportedChainId.ROPSTEN]="ropsten",_a$6[SupportedChainId.RINKEBY]="rinkeby",_a$6[SupportedChainId.GOERLI]="goerli",_a$6[SupportedChainId.KOVAN]="kovan",_a$6[SupportedChainId.POLYGON]="polygon",_a$6[SupportedChainId.POLYGON_MUMBAI]="polygon_mumbai",_a$6[SupportedChainId.ARBITRUM_ONE]="arbitrum",_a$6[SupportedChainId.ARBITRUM_RINKEBY]="arbitrum_rinkeby",_a$6[SupportedChainId.ARBITRUM_GOERLI]="arbitrum_goerli",_a$6[SupportedChainId.OPTIMISM]="optimism",_a$6[SupportedChainId.OPTIMISTIC_KOVAN]="optimistic_kovan",_a$6;Object.values(SupportedChainId).filter(function(id){return typeof id==="number"});[SupportedChainId.MAINNET,SupportedChainId.POLYGON,SupportedChainId.OPTIMISM,SupportedChainId.ARBITRUM_ONE];[SupportedChainId.MAINNET,SupportedChainId.ROPSTEN,SupportedChainId.RINKEBY,SupportedChainId.GOERLI,SupportedChainId.KOVAN,SupportedChainId.POLYGON,SupportedChainId.POLYGON_MUMBAI];var L2_CHAIN_IDS=[SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.ARBITRUM_GOERLI,SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN];var DEFAULT_NETWORKS=[SupportedChainId.MAINNET,SupportedChainId.ROPSTEN,SupportedChainId.RINKEBY,SupportedChainId.GOERLI,SupportedChainId.KOVAN];function constructSameAddressMap$1(address,additionalNetworks){if(additionalNetworks===void 0){additionalNetworks=[]}return DEFAULT_NETWORKS.concat(additionalNetworks).reduce(function(memo,chainId){memo[chainId]=address;return memo},{})}var __assign$s=undefined&&undefined.__assign||function(){__assign$s=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$s.apply(this,arguments)};var _a$5,_b$5,_c$3,_d$1,_e,_f,_g,_h;var UNI_ADDRESS=constructSameAddressMap$1("0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984");__assign$s(__assign$s({},constructSameAddressMap$1("0x1F98415757620B543A52E61c46B32eB19261F984",[SupportedChainId.OPTIMISTIC_KOVAN,SupportedChainId.OPTIMISM,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.POLYGON])),(_a$5={},_a$5[SupportedChainId.ARBITRUM_ONE]="0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB",_a$5[SupportedChainId.ARBITRUM_RINKEBY]="0xa501c031958F579dB7676fF1CE78AD305794d579",_a$5));var V2_ROUTER_ADDRESS=constructSameAddressMap$1("0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D");var V3_ROUTER_ADDRESS=constructSameAddressMap$1("0xE592427A0AEce92De3Edee1F18E0157C05861564",[SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN,SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.ARBITRUM_GOERLI,SupportedChainId.POLYGON,SupportedChainId.POLYGON_MUMBAI]);constructSameAddressMap$1("0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45",[SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN,SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.ARBITRUM_GOERLI,SupportedChainId.POLYGON,SupportedChainId.POLYGON_MUMBAI]);constructSameAddressMap$1("0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F");_b$5={},_b$5[SupportedChainId.MAINNET]="0xC4e172459f1E7939D522503B81AFAaC1014CE6F6",_b$5;_c$3={},_c$3[SupportedChainId.MAINNET]="0x408ED6354d4973f66138C91495F2f2FCbd8724C3",_c$3;constructSameAddressMap$1("0x1a9C8182C09F50C8318d769245beA52c32BE35BC");_d$1={},_d$1[SupportedChainId.MAINNET]="0x090D4613473dEE047c3f2706764f49E0821D256e",_d$1;_e={},_e[SupportedChainId.MAINNET]="0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8",_e;constructSameAddressMap$1(FACTORY_ADDRESS$3,[SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN,SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.ARBITRUM_GOERLI,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.POLYGON]);constructSameAddressMap$1("0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6",[SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN,SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.ARBITRUM_GOERLI,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.POLYGON]);var NONFUNGIBLE_POSITION_MANAGER_ADDRESSES$1=constructSameAddressMap$1("0xC36442b4a4522E871399CD717aBDD847Ab11FE88",[SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN,SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.ARBITRUM_GOERLI,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.POLYGON]);_f={},_f[SupportedChainId.MAINNET]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_f[SupportedChainId.ROPSTEN]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_f[SupportedChainId.GOERLI]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_f[SupportedChainId.RINKEBY]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_f;_g={},_g[SupportedChainId.MAINNET]="0x65770b5283117639760beA3F867b69b3697a91dd",_g;constructSameAddressMap$1("0xA5644E29708357803b5A882D272c41cC0dF92B34",[SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.ARBITRUM_GOERLI,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.POLYGON]);_h={},_h[SupportedChainId.ARBITRUM_ONE]="0xbfd8137f7d1516D3ea5cA83523914859ec47F573",_h[SupportedChainId.ARBITRUM_RINKEBY]="0xbfd8137f7d1516D3ea5cA83523914859ec47F573",_h;const version$f="abstract-provider/5.7.0";var __awaiter$1d=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$t=new Logger(version$f);class ForkEvent extends Description{static isForkEvent(value){return!!(value&&value._isForkEvent)}}class Provider{constructor(){logger$t.checkAbstract(new.target,Provider);defineReadOnly(this,"_isProvider",true)}getFeeData(){return __awaiter$1d(this,void 0,void 0,function*(){const{block,gasPrice}=yield resolveProperties({block:this.getBlock("latest"),gasPrice:this.getGasPrice().catch(error=>{return null})});let lastBaseFeePerGas=null,maxFeePerGas=null,maxPriorityFeePerGas=null;if(block&&block.baseFeePerGas){lastBaseFeePerGas=block.baseFeePerGas;maxPriorityFeePerGas=BigNumber$1.from("1500000000");maxFeePerGas=block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas)}return{lastBaseFeePerGas:lastBaseFeePerGas,maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas,gasPrice:gasPrice}})}addListener(eventName,listener){return this.on(eventName,listener)}removeListener(eventName,listener){return this.off(eventName,listener)}static isProvider(value){return!!(value&&value._isProvider)}}const version$e="abstract-signer/5.7.0";var __awaiter$1c=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$s=new Logger(version$e);const allowedTransactionKeys$3=["accessList","ccipReadEnabled","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"];const forwardErrors=[Logger.errors.INSUFFICIENT_FUNDS,Logger.errors.NONCE_EXPIRED,Logger.errors.REPLACEMENT_UNDERPRICED];class Signer{constructor(){logger$s.checkAbstract(new.target,Signer);defineReadOnly(this,"_isSigner",true)}getBalance(blockTag){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("getBalance");return yield this.provider.getBalance(this.getAddress(),blockTag)})}getTransactionCount(blockTag){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("getTransactionCount");return yield this.provider.getTransactionCount(this.getAddress(),blockTag)})}estimateGas(transaction){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("estimateGas");const tx=yield resolveProperties(this.checkTransaction(transaction));return yield this.provider.estimateGas(tx)})}call(transaction,blockTag){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("call");const tx=yield resolveProperties(this.checkTransaction(transaction));return yield this.provider.call(tx,blockTag)})}sendTransaction(transaction){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("sendTransaction");const tx=yield this.populateTransaction(transaction);const signedTx=yield this.signTransaction(tx);return yield this.provider.sendTransaction(signedTx)})}getChainId(){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("getChainId");const network=yield this.provider.getNetwork();return network.chainId})}getGasPrice(){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("getGasPrice");return yield this.provider.getGasPrice()})}getFeeData(){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("getFeeData");return yield this.provider.getFeeData()})}resolveName(name){return __awaiter$1c(this,void 0,void 0,function*(){this._checkProvider("resolveName");return yield this.provider.resolveName(name)})}checkTransaction(transaction){for(const key in transaction){if(allowedTransactionKeys$3.indexOf(key)===-1){logger$s.throwArgumentError("invalid transaction key: "+key,"transaction",transaction)}}const tx=shallowCopy(transaction);if(tx.from==null){tx.from=this.getAddress()}else{tx.from=Promise.all([Promise.resolve(tx.from),this.getAddress()]).then(result=>{if(result[0].toLowerCase()!==result[1].toLowerCase()){logger$s.throwArgumentError("from address mismatch","transaction",transaction)}return result[0]})}return tx}populateTransaction(transaction){return __awaiter$1c(this,void 0,void 0,function*(){const tx=yield resolveProperties(this.checkTransaction(transaction));if(tx.to!=null){tx.to=Promise.resolve(tx.to).then(to=>__awaiter$1c(this,void 0,void 0,function*(){if(to==null){return null}const address=yield this.resolveName(to);if(address==null){logger$s.throwArgumentError("provided ENS name resolves to null","tx.to",to)}return address}));tx.to.catch(error=>{})}const hasEip1559=tx.maxFeePerGas!=null||tx.maxPriorityFeePerGas!=null;if(tx.gasPrice!=null&&(tx.type===2||hasEip1559)){logger$s.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",transaction)}else if((tx.type===0||tx.type===1)&&hasEip1559){logger$s.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",transaction)}if((tx.type===2||tx.type==null)&&(tx.maxFeePerGas!=null&&tx.maxPriorityFeePerGas!=null)){tx.type=2}else if(tx.type===0||tx.type===1){if(tx.gasPrice==null){tx.gasPrice=this.getGasPrice()}}else{const feeData=yield this.getFeeData();if(tx.type==null){if(feeData.maxFeePerGas!=null&&feeData.maxPriorityFeePerGas!=null){tx.type=2;if(tx.gasPrice!=null){const gasPrice=tx.gasPrice;delete tx.gasPrice;tx.maxFeePerGas=gasPrice;tx.maxPriorityFeePerGas=gasPrice}else{if(tx.maxFeePerGas==null){tx.maxFeePerGas=feeData.maxFeePerGas}if(tx.maxPriorityFeePerGas==null){tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas}}}else if(feeData.gasPrice!=null){if(hasEip1559){logger$s.throwError("network does not support EIP-1559",Logger.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"})}if(tx.gasPrice==null){tx.gasPrice=feeData.gasPrice}tx.type=0}else{logger$s.throwError("failed to get consistent fee data",Logger.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"})}}else if(tx.type===2){if(tx.maxFeePerGas==null){tx.maxFeePerGas=feeData.maxFeePerGas}if(tx.maxPriorityFeePerGas==null){tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas}}}if(tx.nonce==null){tx.nonce=this.getTransactionCount("pending")}if(tx.gasLimit==null){tx.gasLimit=this.estimateGas(tx).catch(error=>{if(forwardErrors.indexOf(error.code)>=0){throw error}return logger$s.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:error,tx:tx})})}if(tx.chainId==null){tx.chainId=this.getChainId()}else{tx.chainId=Promise.all([Promise.resolve(tx.chainId),this.getChainId()]).then(results=>{if(results[1]!==0&&results[0]!==results[1]){logger$s.throwArgumentError("chainId address mismatch","transaction",transaction)}return results[0]})}return yield resolveProperties(tx)})}_checkProvider(operation){if(!this.provider){logger$s.throwError("missing provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:operation||"_checkProvider"})}}static isSigner(value){return!!(value&&value._isSigner)}}class VoidSigner extends Signer{constructor(address,provider){super();defineReadOnly(this,"address",address);defineReadOnly(this,"provider",provider||null)}getAddress(){return Promise.resolve(this.address)}_fail(message,operation){return Promise.resolve().then(()=>{logger$s.throwError(message,Logger.errors.UNSUPPORTED_OPERATION,{operation:operation})})}signMessage(message){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(transaction){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(domain,types,value){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(provider){return new VoidSigner(this.address,provider)}}function createCommonjsModule$1(fn,basedir,module){return module={path:basedir,exports:{},require:function(path,base){return commonjsRequire(path,base===undefined||base===null?module.path:base)}},fn(module,module.exports),module.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var minimalisticAssert=assert$1;function assert$1(val,msg){if(!val)throw new Error(msg||"Assertion failed")}assert$1.equal=function assertEqual(l,r,msg){if(l!=r)throw new Error(msg||"Assertion failed: "+l+" != "+r)};var utils_1=createCommonjsModule$1(function(module,exports){var utils=exports;function toArray(msg,enc){if(Array.isArray(msg))return msg.slice();if(!msg)return[];var res=[];if(typeof msg!=="string"){for(var i=0;i<msg.length;i++)res[i]=msg[i]|0;return res}if(enc==="hex"){msg=msg.replace(/[^a-z0-9]+/gi,"");if(msg.length%2!==0)msg="0"+msg;for(var i=0;i<msg.length;i+=2)res.push(parseInt(msg[i]+msg[i+1],16))}else{for(var i=0;i<msg.length;i++){var c=msg.charCodeAt(i);var hi=c>>8;var lo=c&255;if(hi)res.push(hi,lo);else res.push(lo)}}return res}utils.toArray=toArray;function zero2(word){if(word.length===1)return"0"+word;else return word}utils.zero2=zero2;function toHex(msg){var res="";for(var i=0;i<msg.length;i++)res+=zero2(msg[i].toString(16));return res}utils.toHex=toHex;utils.encode=function encode(arr,enc){if(enc==="hex")return toHex(arr);else return arr}});var utils_1$1=createCommonjsModule$1(function(module,exports){var utils=exports;utils.assert=minimalisticAssert;utils.toArray=utils_1.toArray;utils.zero2=utils_1.zero2;utils.toHex=utils_1.toHex;utils.encode=utils_1.encode;function getNAF(num,w,bits){var naf=new Array(Math.max(num.bitLength(),bits)+1);naf.fill(0);var ws=1<<w+1;var k=num.clone();for(var i=0;i<naf.length;i++){var z;var mod=k.andln(ws-1);if(k.isOdd()){if(mod>(ws>>1)-1)z=(ws>>1)-mod;else z=mod;k.isubn(z)}else{z=0}naf[i]=z;k.iushrn(1)}return naf}utils.getNAF=getNAF;function getJSF(k1,k2){var jsf=[[],[]];k1=k1.clone();k2=k2.clone();var d1=0;var d2=0;var m8;while(k1.cmpn(-d1)>0||k2.cmpn(-d2)>0){var m14=k1.andln(3)+d1&3;var m24=k2.andln(3)+d2&3;if(m14===3)m14=-1;if(m24===3)m24=-1;var u1;if((m14&1)===0){u1=0}else{m8=k1.andln(7)+d1&7;if((m8===3||m8===5)&&m24===2)u1=-m14;else u1=m14}jsf[0].push(u1);var u2;if((m24&1)===0){u2=0}else{m8=k2.andln(7)+d2&7;if((m8===3||m8===5)&&m14===2)u2=-m24;else u2=m24}jsf[1].push(u2);if(2*d1===u1+1)d1=1-d1;if(2*d2===u2+1)d2=1-d2;k1.iushrn(1);k2.iushrn(1)}return jsf}utils.getJSF=getJSF;function cachedProperty(obj,name,computer){var key="_"+name;obj.prototype[name]=function cachedProperty(){return this[key]!==undefined?this[key]:this[key]=computer.call(this)}}utils.cachedProperty=cachedProperty;function parseBytes(bytes){return typeof bytes==="string"?utils.toArray(bytes,"hex"):bytes}utils.parseBytes=parseBytes;function intFromLE(bytes){return new BN$1(bytes,"hex","le")}utils.intFromLE=intFromLE});var getNAF=utils_1$1.getNAF;var getJSF=utils_1$1.getJSF;var assert$1$1=utils_1$1.assert;function BaseCurve(type,conf){this.type=type;this.p=new BN$1(conf.p,16);this.red=conf.prime?BN$1.red(conf.prime):BN$1.mont(this.p);this.zero=new BN$1(0).toRed(this.red);this.one=new BN$1(1).toRed(this.red);this.two=new BN$1(2).toRed(this.red);this.n=conf.n&&new BN$1(conf.n,16);this.g=conf.g&&this.pointFromJSON(conf.g,conf.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;var adjustCount=this.n&&this.p.div(this.n);if(!adjustCount||adjustCount.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}var base=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error("Not implemented")};BaseCurve.prototype.validate=function validate(){throw new Error("Not implemented")};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(p,k){assert$1$1(p.precomputed);var doubles=p._getDoubles();var naf=getNAF(k,1,this._bitLength);var I=(1<<doubles.step+1)-(doubles.step%2===0?2:1);I/=3;var repr=[];var j;var nafW;for(j=0;j<naf.length;j+=doubles.step){nafW=0;for(var l=j+doubles.step-1;l>=j;l--)nafW=(nafW<<1)+naf[l];repr.push(nafW)}var a=this.jpoint(null,null,null);var b=this.jpoint(null,null,null);for(var i=I;i>0;i--){for(j=0;j<repr.length;j++){nafW=repr[j];if(nafW===i)b=b.mixedAdd(doubles.points[j]);else if(nafW===-i)b=b.mixedAdd(doubles.points[j].neg())}a=a.add(b)}return a.toP()};BaseCurve.prototype._wnafMul=function _wnafMul(p,k){var w=4;var nafPoints=p._getNAFPoints(w);w=nafPoints.wnd;var wnd=nafPoints.points;var naf=getNAF(k,w,this._bitLength);var acc=this.jpoint(null,null,null);for(var i=naf.length-1;i>=0;i--){for(var l=0;i>=0&&naf[i]===0;i--)l++;if(i>=0)l++;acc=acc.dblp(l);if(i<0)break;var z=naf[i];assert$1$1(z!==0);if(p.type==="affine"){if(z>0)acc=acc.mixedAdd(wnd[z-1>>1]);else acc=acc.mixedAdd(wnd[-z-1>>1].neg())}else{if(z>0)acc=acc.add(wnd[z-1>>1]);else acc=acc.add(wnd[-z-1>>1].neg())}}return p.type==="affine"?acc.toP():acc};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(defW,points,coeffs,len,jacobianResult){var wndWidth=this._wnafT1;var wnd=this._wnafT2;var naf=this._wnafT3;var max=0;var i;var j;var p;for(i=0;i<len;i++){p=points[i];var nafPoints=p._getNAFPoints(defW);wndWidth[i]=nafPoints.wnd;wnd[i]=nafPoints.points}for(i=len-1;i>=1;i-=2){var a=i-1;var b=i;if(wndWidth[a]!==1||wndWidth[b]!==1){naf[a]=getNAF(coeffs[a],wndWidth[a],this._bitLength);naf[b]=getNAF(coeffs[b],wndWidth[b],this._bitLength);max=Math.max(naf[a].length,max);max=Math.max(naf[b].length,max);continue}var comb=[points[a],null,null,points[b]];if(points[a].y.cmp(points[b].y)===0){comb[1]=points[a].add(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg())}else if(points[a].y.cmp(points[b].y.redNeg())===0){comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].add(points[b].neg())}else{comb[1]=points[a].toJ().mixedAdd(points[b]);comb[2]=points[a].toJ().mixedAdd(points[b].neg())}var index=[-3,-1,-5,-7,0,7,5,1,3];var jsf=getJSF(coeffs[a],coeffs[b]);max=Math.max(jsf[0].length,max);naf[a]=new Array(max);naf[b]=new Array(max);for(j=0;j<max;j++){var ja=jsf[0][j]|0;var jb=jsf[1][j]|0;naf[a][j]=index[(ja+1)*3+(jb+1)];naf[b][j]=0;wnd[a]=comb}}var acc=this.jpoint(null,null,null);var tmp=this._wnafT4;for(i=max;i>=0;i--){var k=0;while(i>=0){var zero=true;for(j=0;j<len;j++){tmp[j]=naf[j][i]|0;if(tmp[j]!==0)zero=false}if(!zero)break;k++;i--}if(i>=0)k++;acc=acc.dblp(k);if(i<0)break;for(j=0;j<len;j++){var z=tmp[j];if(z===0)continue;else if(z>0)p=wnd[j][z-1>>1];else if(z<0)p=wnd[j][-z-1>>1].neg();if(p.type==="affine")acc=acc.mixedAdd(p);else acc=acc.add(p)}}for(i=0;i<len;i++)wnd[i]=null;if(jacobianResult)return acc;else return acc.toP()};function BasePoint(curve,type){this.curve=curve;this.type=type;this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq(){throw new Error("Not implemented")};BasePoint.prototype.validate=function validate(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function decodePoint(bytes,enc){bytes=utils_1$1.toArray(bytes,enc);var len=this.p.byteLength();if((bytes[0]===4||bytes[0]===6||bytes[0]===7)&&bytes.length-1===2*len){if(bytes[0]===6)assert$1$1(bytes[bytes.length-1]%2===0);else if(bytes[0]===7)assert$1$1(bytes[bytes.length-1]%2===1);var res=this.point(bytes.slice(1,1+len),bytes.slice(1+len,1+2*len));return res}else if((bytes[0]===2||bytes[0]===3)&&bytes.length-1===len){return this.pointFromX(bytes.slice(1,1+len),bytes[0]===3)}throw new Error("Unknown point format")};BasePoint.prototype.encodeCompressed=function encodeCompressed(enc){return this.encode(enc,true)};BasePoint.prototype._encode=function _encode(compact){var len=this.curve.p.byteLength();var x=this.getX().toArray("be",len);if(compact)return[this.getY().isEven()?2:3].concat(x);return[4].concat(x,this.getY().toArray("be",len))};BasePoint.prototype.encode=function encode(enc,compact){return utils_1$1.encode(this._encode(compact),enc)};BasePoint.prototype.precompute=function precompute(power){if(this.precomputed)return this;var precomputed={doubles:null,naf:null,beta:null};precomputed.naf=this._getNAFPoints(8);precomputed.doubles=this._getDoubles(4,power);precomputed.beta=this._getBeta();this.precomputed=precomputed;return this};BasePoint.prototype._hasDoubles=function _hasDoubles(k){if(!this.precomputed)return false;var doubles=this.precomputed.doubles;if(!doubles)return false;return doubles.points.length>=Math.ceil((k.bitLength()+1)/doubles.step)};BasePoint.prototype._getDoubles=function _getDoubles(step,power){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var doubles=[this];var acc=this;for(var i=0;i<power;i+=step){for(var j=0;j<step;j++)acc=acc.dbl();doubles.push(acc)}return{step:step,points:doubles}};BasePoint.prototype._getNAFPoints=function _getNAFPoints(wnd){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var res=[this];var max=(1<<wnd)-1;var dbl=max===1?null:this.dbl();for(var i=1;i<max;i++)res[i]=res[i-1].add(dbl);return{wnd:wnd,points:res}};BasePoint.prototype._getBeta=function _getBeta(){return null};BasePoint.prototype.dblp=function dblp(k){var r=this;for(var i=0;i<k;i++)r=r.dbl();return r};var inherits_browser=createCommonjsModule$1(function(module){if(typeof Object.create==="function"){module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}}else{module.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}}});var assert$2=utils_1$1.assert;function ShortCurve(conf){base.call(this,"short",conf);this.a=new BN$1(conf.a,16).toRed(this.red);this.b=new BN$1(conf.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;this.endo=this._getEndomorphism(conf);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4)}inherits_browser(ShortCurve,base);var short_1=ShortCurve;ShortCurve.prototype._getEndomorphism=function _getEndomorphism(conf){if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;var beta;var lambda;if(conf.beta){beta=new BN$1(conf.beta,16).toRed(this.red)}else{var betas=this._getEndoRoots(this.p);beta=betas[0].cmp(betas[1])<0?betas[0]:betas[1];beta=beta.toRed(this.red)}if(conf.lambda){lambda=new BN$1(conf.lambda,16)}else{var lambdas=this._getEndoRoots(this.n);if(this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta))===0){lambda=lambdas[0]}else{lambda=lambdas[1];assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))===0)}}var basis;if(conf.basis){basis=conf.basis.map(function(vec){return{a:new BN$1(vec.a,16),b:new BN$1(vec.b,16)}})}else{basis=this._getEndoBasis(lambda)}return{beta:beta,lambda:lambda,basis:basis}};ShortCurve.prototype._getEndoRoots=function _getEndoRoots(num){var red=num===this.p?this.red:BN$1.mont(num);var tinv=new BN$1(2).toRed(red).redInvm();var ntinv=tinv.redNeg();var s=new BN$1(3).toRed(red).redNeg().redSqrt().redMul(tinv);var l1=ntinv.redAdd(s).fromRed();var l2=ntinv.redSub(s).fromRed();return[l1,l2]};ShortCurve.prototype._getEndoBasis=function _getEndoBasis(lambda){var aprxSqrt=this.n.ushrn(Math.floor(this.n.bitLength()/2));var u=lambda;var v=this.n.clone();var x1=new BN$1(1);var y1=new BN$1(0);var x2=new BN$1(0);var y2=new BN$1(1);var a0;var b0;var a1;var b1;var a2;var b2;var prevR;var i=0;var r;var x;while(u.cmpn(0)!==0){var q=v.div(u);r=v.sub(q.mul(u));x=x2.sub(q.mul(x1));var y=y2.sub(q.mul(y1));if(!a1&&r.cmp(aprxSqrt)<0){a0=prevR.neg();b0=x1;a1=r.neg();b1=x}else if(a1&&++i===2){break}prevR=r;v=u;u=r;x2=x1;x1=x;y2=y1;y1=y}a2=r.neg();b2=x;var len1=a1.sqr().add(b1.sqr());var len2=a2.sqr().add(b2.sqr());if(len2.cmp(len1)>=0){a2=a0;b2=b0}if(a1.negative){a1=a1.neg();b1=b1.neg()}if(a2.negative){a2=a2.neg();b2=b2.neg()}return[{a:a1,b:b1},{a:a2,b:b2}]};ShortCurve.prototype._endoSplit=function _endoSplit(k){var basis=this.endo.basis;var v1=basis[0];var v2=basis[1];var c1=v2.b.mul(k).divRound(this.n);var c2=v1.b.neg().mul(k).divRound(this.n);var p1=c1.mul(v1.a);var p2=c2.mul(v2.a);var q1=c1.mul(v1.b);var q2=c2.mul(v2.b);var k1=k.sub(p1).sub(p2);var k2=q1.add(q2).neg();return{k1:k1,k2:k2}};ShortCurve.prototype.pointFromX=function pointFromX(x,odd){x=new BN$1(x,16);if(!x.red)x=x.toRed(this.red);var y2=x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);var y=y2.redSqrt();if(y.redSqr().redSub(y2).cmp(this.zero)!==0)throw new Error("invalid point");var isOdd=y.fromRed().isOdd();if(odd&&!isOdd||!odd&&isOdd)y=y.redNeg();return this.point(x,y)};ShortCurve.prototype.validate=function validate(point){if(point.inf)return true;var x=point.x;var y=point.y;var ax=this.a.redMul(x);var rhs=x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);return y.redSqr().redISub(rhs).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function _endoWnafMulAdd(points,coeffs,jacobianResult){var npoints=this._endoWnafT1;var ncoeffs=this._endoWnafT2;for(var i=0;i<points.length;i++){var split=this._endoSplit(coeffs[i]);var p=points[i];var beta=p._getBeta();if(split.k1.negative){split.k1.ineg();p=p.neg(true)}if(split.k2.negative){split.k2.ineg();beta=beta.neg(true)}npoints[i*2]=p;npoints[i*2+1]=beta;ncoeffs[i*2]=split.k1;ncoeffs[i*2+1]=split.k2}var res=this._wnafMulAdd(1,npoints,ncoeffs,i*2,jacobianResult);for(var j=0;j<i*2;j++){npoints[j]=null;ncoeffs[j]=null}return res};function Point(curve,x,y,isRed){base.BasePoint.call(this,curve,"affine");if(x===null&&y===null){this.x=null;this.y=null;this.inf=true}else{this.x=new BN$1(x,16);this.y=new BN$1(y,16);if(isRed){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false}}inherits_browser(Point,base.BasePoint);ShortCurve.prototype.point=function point(x,y,isRed){return new Point(this,x,y,isRed)};ShortCurve.prototype.pointFromJSON=function pointFromJSON(obj,red){return Point.fromJSON(this,obj,red)};Point.prototype._getBeta=function _getBeta(){if(!this.curve.endo)return;var pre=this.precomputed;if(pre&&pre.beta)return pre.beta;var beta=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(pre){var curve=this.curve;var endoMul=function(p){return curve.point(p.x.redMul(curve.endo.beta),p.y)};pre.beta=beta;beta.precomputed={beta:null,naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(endoMul)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(endoMul)}}}return beta};Point.prototype.toJSON=function toJSON(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]};Point.fromJSON=function fromJSON(curve,obj,red){if(typeof obj==="string")obj=JSON.parse(obj);var res=curve.point(obj[0],obj[1],red);if(!obj[2])return res;function obj2point(obj){return curve.point(obj[0],obj[1],red)}var pre=obj[2];res.precomputed={beta:null,doubles:pre.doubles&&{step:pre.doubles.step,points:[res].concat(pre.doubles.points.map(obj2point))},naf:pre.naf&&{wnd:pre.naf.wnd,points:[res].concat(pre.naf.points.map(obj2point))}};return res};Point.prototype.inspect=function inspect(){if(this.isInfinity())return"<EC Point Infinity>";return"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"};Point.prototype.isInfinity=function isInfinity(){return this.inf};Point.prototype.add=function add(p){if(this.inf)return p;if(p.inf)return this;if(this.eq(p))return this.dbl();if(this.neg().eq(p))return this.curve.point(null,null);if(this.x.cmp(p.x)===0)return this.curve.point(null,null);var c=this.y.redSub(p.y);if(c.cmpn(0)!==0)c=c.redMul(this.x.redSub(p.x).redInvm());var nx=c.redSqr().redISub(this.x).redISub(p.x);var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.dbl=function dbl(){if(this.inf)return this;var ys1=this.y.redAdd(this.y);if(ys1.cmpn(0)===0)return this.curve.point(null,null);var a=this.curve.a;var x2=this.x.redSqr();var dyinv=ys1.redInvm();var c=x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);var nx=c.redSqr().redISub(this.x.redAdd(this.x));var ny=c.redMul(this.x.redSub(nx)).redISub(this.y);return this.curve.point(nx,ny)};Point.prototype.getX=function getX(){return this.x.fromRed()};Point.prototype.getY=function getY(){return this.y.fromRed()};Point.prototype.mul=function mul(k){k=new BN$1(k,16);if(this.isInfinity())return this;else if(this._hasDoubles(k))return this.curve._fixedNafMul(this,k);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[k]);else return this.curve._wnafMul(this,k)};Point.prototype.mulAdd=function mulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs);else return this.curve._wnafMulAdd(1,points,coeffs,2)};Point.prototype.jmulAdd=function jmulAdd(k1,p2,k2){var points=[this,p2];var coeffs=[k1,k2];if(this.curve.endo)return this.curve._endoWnafMulAdd(points,coeffs,true);else return this.curve._wnafMulAdd(1,points,coeffs,2,true)};Point.prototype.eq=function eq(p){return this===p||this.inf===p.inf&&(this.inf||this.x.cmp(p.x)===0&&this.y.cmp(p.y)===0)};Point.prototype.neg=function neg(_precompute){if(this.inf)return this;var res=this.curve.point(this.x,this.y.redNeg());if(_precompute&&this.precomputed){var pre=this.precomputed;var negate=function(p){return p.neg()};res.precomputed={naf:pre.naf&&{wnd:pre.naf.wnd,points:pre.naf.points.map(negate)},doubles:pre.doubles&&{step:pre.doubles.step,points:pre.doubles.points.map(negate)}}}return res};Point.prototype.toJ=function toJ(){if(this.inf)return this.curve.jpoint(null,null,null);var res=this.curve.jpoint(this.x,this.y,this.curve.one);return res};function JPoint(curve,x,y,z){base.BasePoint.call(this,curve,"jacobian");if(x===null&&y===null&&z===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new BN$1(0)}else{this.x=new BN$1(x,16);this.y=new BN$1(y,16);this.z=new BN$1(z,16)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one}inherits_browser(JPoint,base.BasePoint);ShortCurve.prototype.jpoint=function jpoint(x,y,z){return new JPoint(this,x,y,z)};JPoint.prototype.toP=function toP(){if(this.isInfinity())return this.curve.point(null,null);var zinv=this.z.redInvm();var zinv2=zinv.redSqr();var ax=this.x.redMul(zinv2);var ay=this.y.redMul(zinv2).redMul(zinv);return this.curve.point(ax,ay)};JPoint.prototype.neg=function neg(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function add(p){if(this.isInfinity())return p;if(p.isInfinity())return this;var pz2=p.z.redSqr();var z2=this.z.redSqr();var u1=this.x.redMul(pz2);var u2=p.x.redMul(z2);var s1=this.y.redMul(pz2.redMul(p.z));var s2=p.y.redMul(z2.redMul(this.z));var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(p.z).redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mixedAdd=function mixedAdd(p){if(this.isInfinity())return p.toJ();if(p.isInfinity())return this;var z2=this.z.redSqr();var u1=this.x;var u2=p.x.redMul(z2);var s1=this.y;var s2=p.y.redMul(z2).redMul(this.z);var h=u1.redSub(u2);var r=s1.redSub(s2);if(h.cmpn(0)===0){if(r.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h2=h.redSqr();var h3=h2.redMul(h);var v=u1.redMul(h2);var nx=r.redSqr().redIAdd(h3).redISub(v).redISub(v);var ny=r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));var nz=this.z.redMul(h);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.dblp=function dblp(pow){if(pow===0)return this;if(this.isInfinity())return this;if(!pow)return this.dbl();var i;if(this.curve.zeroA||this.curve.threeA){var r=this;for(i=0;i<pow;i++)r=r.dbl();return r}var a=this.curve.a;var tinv=this.curve.tinv;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jyd=jy.redAdd(jy);for(i=0;i<pow;i++){var jx2=jx.redSqr();var jyd2=jyd.redSqr();var jyd4=jyd2.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var t1=jx.redMul(jyd2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var dny=c.redMul(t2);dny=dny.redIAdd(dny).redISub(jyd4);var nz=jyd.redMul(jz);if(i+1<pow)jz4=jz4.redMul(jyd4);jx=nx;jz=nz;jyd=dny}return this.curve.jpoint(jx,jyd.redMul(tinv),jz)};JPoint.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl()};JPoint.prototype._zeroDbl=function _zeroDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx);var t=m.redSqr().redISub(s).redISub(s);var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);nx=t;ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var a=this.x.redSqr();var b=this.y.redSqr();var c=b.redSqr();var d=this.x.redAdd(b).redSqr().redISub(a).redISub(c);d=d.redIAdd(d);var e=a.redAdd(a).redIAdd(a);var f=e.redSqr();var c8=c.redIAdd(c);c8=c8.redIAdd(c8);c8=c8.redIAdd(c8);nx=f.redISub(d).redISub(d);ny=e.redMul(d.redISub(nx)).redISub(c8);nz=this.y.redMul(this.z);nz=nz.redIAdd(nz)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._threeDbl=function _threeDbl(){var nx;var ny;var nz;if(this.zOne){var xx=this.x.redSqr();var yy=this.y.redSqr();var yyyy=yy.redSqr();var s=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);s=s.redIAdd(s);var m=xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);var t=m.redSqr().redISub(s).redISub(s);nx=t;var yyyy8=yyyy.redIAdd(yyyy);yyyy8=yyyy8.redIAdd(yyyy8);yyyy8=yyyy8.redIAdd(yyyy8);ny=m.redMul(s.redISub(t)).redISub(yyyy8);nz=this.y.redAdd(this.y)}else{var delta=this.z.redSqr();var gamma=this.y.redSqr();var beta=this.x.redMul(gamma);var alpha=this.x.redSub(delta).redMul(this.x.redAdd(delta));alpha=alpha.redAdd(alpha).redIAdd(alpha);var beta4=beta.redIAdd(beta);beta4=beta4.redIAdd(beta4);var beta8=beta4.redAdd(beta4);nx=alpha.redSqr().redISub(beta8);nz=this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);var ggamma8=gamma.redSqr();ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ggamma8=ggamma8.redIAdd(ggamma8);ny=alpha.redMul(beta4.redISub(nx)).redISub(ggamma8)}return this.curve.jpoint(nx,ny,nz)};JPoint.prototype._dbl=function _dbl(){var a=this.curve.a;var jx=this.x;var jy=this.y;var jz=this.z;var jz4=jz.redSqr().redSqr();var jx2=jx.redSqr();var jy2=jy.redSqr();var c=jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));var jxd4=jx.redAdd(jx);jxd4=jxd4.redIAdd(jxd4);var t1=jxd4.redMul(jy2);var nx=c.redSqr().redISub(t1.redAdd(t1));var t2=t1.redISub(nx);var jyd8=jy2.redSqr();jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);jyd8=jyd8.redIAdd(jyd8);var ny=c.redMul(t2).redISub(jyd8);var nz=jy.redAdd(jy).redMul(jz);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.trpl=function trpl(){if(!this.curve.zeroA)return this.dbl().add(this);var xx=this.x.redSqr();var yy=this.y.redSqr();var zz=this.z.redSqr();var yyyy=yy.redSqr();var m=xx.redAdd(xx).redIAdd(xx);var mm=m.redSqr();var e=this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);e=e.redIAdd(e);e=e.redAdd(e).redIAdd(e);e=e.redISub(mm);var ee=e.redSqr();var t=yyyy.redIAdd(yyyy);t=t.redIAdd(t);t=t.redIAdd(t);t=t.redIAdd(t);var u=m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);var yyu4=yy.redMul(u);yyu4=yyu4.redIAdd(yyu4);yyu4=yyu4.redIAdd(yyu4);var nx=this.x.redMul(ee).redISub(yyu4);nx=nx.redIAdd(nx);nx=nx.redIAdd(nx);var ny=this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);ny=ny.redIAdd(ny);var nz=this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);return this.curve.jpoint(nx,ny,nz)};JPoint.prototype.mul=function mul(k,kbase){k=new BN$1(k,kbase);return this.curve._wnafMul(this,k)};JPoint.prototype.eq=function eq(p){if(p.type==="affine")return this.eq(p.toJ());if(this===p)return true;var z2=this.z.redSqr();var pz2=p.z.redSqr();if(this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)!==0)return false;var z3=z2.redMul(this.z);var pz3=pz2.redMul(p.z);return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0)===0};JPoint.prototype.eqXToP=function eqXToP(x){var zs=this.z.redSqr();var rx=x.toRed(this.curve.red).redMul(zs);if(this.x.cmp(rx)===0)return true;var xc=x.clone();var t=this.curve.redN.redMul(zs);for(;;){xc.iadd(this.curve.n);if(xc.cmp(this.curve.p)>=0)return false;rx.redIAdd(t);if(this.x.cmp(rx)===0)return true}};JPoint.prototype.inspect=function inspect(){if(this.isInfinity())return"<EC JPoint Infinity>";return"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"};JPoint.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0};var curve_1=createCommonjsModule$1(function(module,exports){var curve=exports;curve.base=base;curve.short=short_1;curve.mont=null;curve.edwards=null});var curves_1=createCommonjsModule$1(function(module,exports){var curves=exports;var assert=utils_1$1.assert;function PresetCurve(options){if(options.type==="short")this.curve=new curve_1.short(options);else if(options.type==="edwards")this.curve=new curve_1.edwards(options);else this.curve=new curve_1.mont(options);this.g=this.curve.g;this.n=this.curve.n;this.hash=options.hash;assert(this.g.validate(),"Invalid curve");assert(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}curves.PresetCurve=PresetCurve;function defineCurve(name,options){Object.defineProperty(curves,name,{configurable:true,enumerable:true,get:function(){var curve=new PresetCurve(options);Object.defineProperty(curves,name,{configurable:true,enumerable:true,value:curve});return curve}})}defineCurve("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:hash$2.sha256,gRed:false,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]});defineCurve("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:hash$2.sha256,gRed:false,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]});defineCurve("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:hash$2.sha256,gRed:false,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]});defineCurve("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f "+"5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 "+"f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:hash$2.sha384,gRed:false,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 "+"5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 "+"0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]});defineCurve("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b "+"99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd "+"3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff "+"ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 "+"f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:hash$2.sha512,gRed:false,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 "+"053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 "+"a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 "+"579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 "+"3fad0761 353c7086 a272c240 88be9476 9fd16650"]});defineCurve("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash$2.sha256,gRed:false,g:["9"]});defineCurve("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash$2.sha256,gRed:false,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var pre;try{pre=null.crash()}catch(e){pre=undefined}defineCurve("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:hash$2.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:false,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",pre]})});function HmacDRBG(options){if(!(this instanceof HmacDRBG))return new HmacDRBG(options);this.hash=options.hash;this.predResist=!!options.predResist;this.outLen=this.hash.outSize;this.minEntropy=options.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var entropy=utils_1.toArray(options.entropy,options.entropyEnc||"hex");var nonce=utils_1.toArray(options.nonce,options.nonceEnc||"hex");var pers=utils_1.toArray(options.pers,options.persEnc||"hex");minimalisticAssert(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._init(entropy,nonce,pers)}var hmacDrbg=HmacDRBG;HmacDRBG.prototype._init=function init(entropy,nonce,pers){var seed=entropy.concat(nonce).concat(pers);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++){this.K[i]=0;this.V[i]=1}this._update(seed);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function hmac(){return new hash$2.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function update(seed){var kmac=this._hmac().update(this.V).update([0]);if(seed)kmac=kmac.update(seed);this.K=kmac.digest();this.V=this._hmac().update(this.V).digest();if(!seed)return;this.K=this._hmac().update(this.V).update([1]).update(seed).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG.prototype.reseed=function reseed(entropy,entropyEnc,add,addEnc){if(typeof entropyEnc!=="string"){addEnc=add;add=entropyEnc;entropyEnc=null}entropy=utils_1.toArray(entropy,entropyEnc);add=utils_1.toArray(add,addEnc);minimalisticAssert(entropy.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._update(entropy.concat(add||[]));this._reseed=1};HmacDRBG.prototype.generate=function generate(len,enc,add,addEnc){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");if(typeof enc!=="string"){addEnc=add;add=enc;enc=null}if(add){add=utils_1.toArray(add,addEnc||"hex");this._update(add)}var temp=[];while(temp.length<len){this.V=this._hmac().update(this.V).digest();temp=temp.concat(this.V)}var res=temp.slice(0,len);this._update(add);this._reseed++;return utils_1.encode(res,enc)};var assert$3=utils_1$1.assert;function KeyPair(ec,options){this.ec=ec;this.priv=null;this.pub=null;if(options.priv)this._importPrivate(options.priv,options.privEnc);if(options.pub)this._importPublic(options.pub,options.pubEnc)}var key=KeyPair;KeyPair.fromPublic=function fromPublic(ec,pub,enc){if(pub instanceof KeyPair)return pub;return new KeyPair(ec,{pub:pub,pubEnc:enc})};KeyPair.fromPrivate=function fromPrivate(ec,priv,enc){if(priv instanceof KeyPair)return priv;return new KeyPair(ec,{priv:priv,privEnc:enc})};KeyPair.prototype.validate=function validate(){var pub=this.getPublic();if(pub.isInfinity())return{result:false,reason:"Invalid public key"};if(!pub.validate())return{result:false,reason:"Public key is not a point"};if(!pub.mul(this.ec.curve.n).isInfinity())return{result:false,reason:"Public key * N != O"};return{result:true,reason:null}};KeyPair.prototype.getPublic=function getPublic(compact,enc){if(typeof compact==="string"){enc=compact;compact=null}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!enc)return this.pub;return this.pub.encode(enc,compact)};KeyPair.prototype.getPrivate=function getPrivate(enc){if(enc==="hex")return this.priv.toString(16,2);else return this.priv};KeyPair.prototype._importPrivate=function _importPrivate(key,enc){this.priv=new BN$1(key,enc||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function _importPublic(key,enc){if(key.x||key.y){if(this.ec.curve.type==="mont"){assert$3(key.x,"Need x coordinate")}else if(this.ec.curve.type==="short"||this.ec.curve.type==="edwards"){assert$3(key.x&&key.y,"Need both x and y coordinate")}this.pub=this.ec.curve.point(key.x,key.y);return}this.pub=this.ec.curve.decodePoint(key,enc)};KeyPair.prototype.derive=function derive(pub){if(!pub.validate()){assert$3(pub.validate(),"public point not validated")}return pub.mul(this.priv).getX()};KeyPair.prototype.sign=function sign(msg,enc,options){return this.ec.sign(msg,this,enc,options)};KeyPair.prototype.verify=function verify(msg,signature){return this.ec.verify(msg,signature,this)};KeyPair.prototype.inspect=function inspect(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var assert$4=utils_1$1.assert;function Signature(options,enc){if(options instanceof Signature)return options;if(this._importDER(options,enc))return;assert$4(options.r&&options.s,"Signature without r or s");this.r=new BN$1(options.r,16);this.s=new BN$1(options.s,16);if(options.recoveryParam===undefined)this.recoveryParam=null;else this.recoveryParam=options.recoveryParam}var signature=Signature;function Position(){this.place=0}function getLength(buf,p){var initial=buf[p.place++];if(!(initial&128)){return initial}var octetLen=initial&15;if(octetLen===0||octetLen>4){return false}var val=0;for(var i=0,off=p.place;i<octetLen;i++,off++){val<<=8;val|=buf[off];val>>>=0}if(val<=127){return false}p.place=off;return val}function rmPadding(buf){var i=0;var len=buf.length-1;while(!buf[i]&&!(buf[i+1]&128)&&i<len){i++}if(i===0){return buf}return buf.slice(i)}Signature.prototype._importDER=function _importDER(data,enc){data=utils_1$1.toArray(data,enc);var p=new Position;if(data[p.place++]!==48){return false}var len=getLength(data,p);if(len===false){return false}if(len+p.place!==data.length){return false}if(data[p.place++]!==2){return false}var rlen=getLength(data,p);if(rlen===false){return false}var r=data.slice(p.place,rlen+p.place);p.place+=rlen;if(data[p.place++]!==2){return false}var slen=getLength(data,p);if(slen===false){return false}if(data.length!==slen+p.place){return false}var s=data.slice(p.place,slen+p.place);if(r[0]===0){if(r[1]&128){r=r.slice(1)}else{return false}}if(s[0]===0){if(s[1]&128){s=s.slice(1)}else{return false}}this.r=new BN$1(r);this.s=new BN$1(s);this.recoveryParam=null;return true};function constructLength(arr,len){if(len<128){arr.push(len);return}var octets=1+(Math.log(len)/Math.LN2>>>3);arr.push(octets|128);while(--octets){arr.push(len>>>(octets<<3)&255)}arr.push(len)}Signature.prototype.toDER=function toDER(enc){var r=this.r.toArray();var s=this.s.toArray();if(r[0]&128)r=[0].concat(r);if(s[0]&128)s=[0].concat(s);r=rmPadding(r);s=rmPadding(s);while(!s[0]&&!(s[1]&128)){s=s.slice(1)}var arr=[2];constructLength(arr,r.length);arr=arr.concat(r);arr.push(2);constructLength(arr,s.length);var backHalf=arr.concat(s);var res=[48];constructLength(res,backHalf.length);res=res.concat(backHalf);return utils_1$1.encode(res,enc)};var rand=function(){throw new Error("unsupported")};var assert$5=utils_1$1.assert;function EC(options){if(!(this instanceof EC))return new EC(options);if(typeof options==="string"){assert$5(Object.prototype.hasOwnProperty.call(curves_1,options),"Unknown curve "+options);options=curves_1[options]}if(options instanceof curves_1.PresetCurve)options={curve:options};this.curve=options.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=options.curve.g;this.g.precompute(options.curve.n.bitLength()+1);this.hash=options.hash||options.curve.hash}var ec=EC;EC.prototype.keyPair=function keyPair(options){return new key(this,options)};EC.prototype.keyFromPrivate=function keyFromPrivate(priv,enc){return key.fromPrivate(this,priv,enc)};EC.prototype.keyFromPublic=function keyFromPublic(pub,enc){return key.fromPublic(this,pub,enc)};EC.prototype.genKeyPair=function genKeyPair(options){if(!options)options={};var drbg=new hmacDrbg({hash:this.hash,pers:options.pers,persEnc:options.persEnc||"utf8",entropy:options.entropy||rand(this.hash.hmacStrength),entropyEnc:options.entropy&&options.entropyEnc||"utf8",nonce:this.n.toArray()});var bytes=this.n.byteLength();var ns2=this.n.sub(new BN$1(2));for(;;){var priv=new BN$1(drbg.generate(bytes));if(priv.cmp(ns2)>0)continue;priv.iaddn(1);return this.keyFromPrivate(priv)}};EC.prototype._truncateToN=function _truncateToN(msg,truncOnly){var delta=msg.byteLength()*8-this.n.bitLength();if(delta>0)msg=msg.ushrn(delta);if(!truncOnly&&msg.cmp(this.n)>=0)return msg.sub(this.n);else return msg};EC.prototype.sign=function sign(msg,key,enc,options){if(typeof enc==="object"){options=enc;enc=null}if(!options)options={};key=this.keyFromPrivate(key,enc);msg=this._truncateToN(new BN$1(msg,16));var bytes=this.n.byteLength();var bkey=key.getPrivate().toArray("be",bytes);var nonce=msg.toArray("be",bytes);var drbg=new hmacDrbg({hash:this.hash,entropy:bkey,nonce:nonce,pers:options.pers,persEnc:options.persEnc||"utf8"});var ns1=this.n.sub(new BN$1(1));for(var iter=0;;iter++){var k=options.k?options.k(iter):new BN$1(drbg.generate(this.n.byteLength()));k=this._truncateToN(k,true);if(k.cmpn(1)<=0||k.cmp(ns1)>=0)continue;var kp=this.g.mul(k);if(kp.isInfinity())continue;var kpX=kp.getX();var r=kpX.umod(this.n);if(r.cmpn(0)===0)continue;var s=k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));s=s.umod(this.n);if(s.cmpn(0)===0)continue;var recoveryParam=(kp.getY().isOdd()?1:0)|(kpX.cmp(r)!==0?2:0);if(options.canonical&&s.cmp(this.nh)>0){s=this.n.sub(s);recoveryParam^=1}return new signature({r:r,s:s,recoveryParam:recoveryParam})}};EC.prototype.verify=function verify(msg,signature$1,key,enc){msg=this._truncateToN(new BN$1(msg,16));key=this.keyFromPublic(key,enc);signature$1=new signature(signature$1,"hex");var r=signature$1.r;var s=signature$1.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var sinv=s.invm(this.n);var u1=sinv.mul(msg).umod(this.n);var u2=sinv.mul(r).umod(this.n);var p;if(!this.curve._maxwellTrick){p=this.g.mulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.getX().umod(this.n).cmp(r)===0}p=this.g.jmulAdd(u1,key.getPublic(),u2);if(p.isInfinity())return false;return p.eqXToP(r)};EC.prototype.recoverPubKey=function(msg,signature$1,j,enc){assert$5((3&j)===j,"The recovery param is more than two bits");signature$1=new signature(signature$1,enc);var n=this.n;var e=new BN$1(msg);var r=signature$1.r;var s=signature$1.s;var isYOdd=j&1;var isSecondKey=j>>1;if(r.cmp(this.curve.p.umod(this.curve.n))>=0&&isSecondKey)throw new Error("Unable to find sencond key candinate");if(isSecondKey)r=this.curve.pointFromX(r.add(this.curve.n),isYOdd);else r=this.curve.pointFromX(r,isYOdd);var rInv=signature$1.r.invm(n);var s1=n.sub(e).mul(rInv).umod(n);var s2=s.mul(rInv).umod(n);return this.g.mulAdd(s1,r,s2)};EC.prototype.getKeyRecoveryParam=function(e,signature$1,Q,enc){signature$1=new signature(signature$1,enc);if(signature$1.recoveryParam!==null)return signature$1.recoveryParam;for(var i=0;i<4;i++){var Qprime;try{Qprime=this.recoverPubKey(e,signature$1,i)}catch(e){continue}if(Qprime.eq(Q))return i}throw new Error("Unable to find valid recovery factor")};var elliptic_1=createCommonjsModule$1(function(module,exports){var elliptic=exports;elliptic.version={version:"6.5.4"}.version;elliptic.utils=utils_1$1;elliptic.rand=function(){throw new Error("unsupported")};elliptic.curve=curve_1;elliptic.curves=curves_1;elliptic.ec=ec;elliptic.eddsa=null});var EC$1=elliptic_1.ec;const version$d="signing-key/5.7.0";const logger$r=new Logger(version$d);let _curve=null;function getCurve(){if(!_curve){_curve=new EC$1("secp256k1")}return _curve}class SigningKey{constructor(privateKey){defineReadOnly(this,"curve","secp256k1");defineReadOnly(this,"privateKey",hexlify(privateKey));if(hexDataLength(this.privateKey)!==32){logger$r.throwArgumentError("invalid private key","privateKey","[[ REDACTED ]]")}const keyPair=getCurve().keyFromPrivate(arrayify(this.privateKey));defineReadOnly(this,"publicKey","0x"+keyPair.getPublic(false,"hex"));defineReadOnly(this,"compressedPublicKey","0x"+keyPair.getPublic(true,"hex"));defineReadOnly(this,"_isSigningKey",true)}_addPoint(other){const p0=getCurve().keyFromPublic(arrayify(this.publicKey));const p1=getCurve().keyFromPublic(arrayify(other));return"0x"+p0.pub.add(p1.pub).encodeCompressed("hex")}signDigest(digest){const keyPair=getCurve().keyFromPrivate(arrayify(this.privateKey));const digestBytes=arrayify(digest);if(digestBytes.length!==32){logger$r.throwArgumentError("bad digest length","digest",digest)}const signature=keyPair.sign(digestBytes,{canonical:true});return splitSignature({recoveryParam:signature.recoveryParam,r:hexZeroPad("0x"+signature.r.toString(16),32),s:hexZeroPad("0x"+signature.s.toString(16),32)})}computeSharedSecret(otherKey){const keyPair=getCurve().keyFromPrivate(arrayify(this.privateKey));const otherKeyPair=getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));return hexZeroPad("0x"+keyPair.derive(otherKeyPair.getPublic()).toString(16),32)}static isSigningKey(value){return!!(value&&value._isSigningKey)}}function recoverPublicKey(digest,signature){const sig=splitSignature(signature);const rs={r:arrayify(sig.r),s:arrayify(sig.s)};return"0x"+getCurve().recoverPubKey(arrayify(digest),rs,sig.recoveryParam).encode("hex",false)}function computePublicKey(key,compressed){const bytes=arrayify(key);if(bytes.length===32){const signingKey=new SigningKey(bytes);if(compressed){return"0x"+getCurve().keyFromPrivate(bytes).getPublic(true,"hex")}return signingKey.publicKey}else if(bytes.length===33){if(compressed){return hexlify(bytes)}return"0x"+getCurve().keyFromPublic(bytes).getPublic(false,"hex")}else if(bytes.length===65){if(!compressed){return hexlify(bytes)}return"0x"+getCurve().keyFromPublic(bytes).getPublic(true,"hex")}return logger$r.throwArgumentError("invalid public or private key","key","[REDACTED]")}const version$c="transactions/5.7.0";const logger$q=new Logger(version$c);var TransactionTypes;(function(TransactionTypes){TransactionTypes[TransactionTypes["legacy"]=0]="legacy";TransactionTypes[TransactionTypes["eip2930"]=1]="eip2930";TransactionTypes[TransactionTypes["eip1559"]=2]="eip1559"})(TransactionTypes||(TransactionTypes={}));function handleAddress(value){if(value==="0x"){return null}return getAddress$1(value)}function handleNumber(value){if(value==="0x"){return Zero$1}return BigNumber$1.from(value)}const transactionFields=[{name:"nonce",maxLength:32,numeric:true},{name:"gasPrice",maxLength:32,numeric:true},{name:"gasLimit",maxLength:32,numeric:true},{name:"to",length:20},{name:"value",maxLength:32,numeric:true},{name:"data"}];const allowedTransactionKeys$2={chainId:true,data:true,gasLimit:true,gasPrice:true,nonce:true,to:true,type:true,value:true};function computeAddress(key){const publicKey=computePublicKey(key);return getAddress$1(hexDataSlice(keccak256$3(hexDataSlice(publicKey,1)),12))}function recoverAddress(digest,signature){return computeAddress(recoverPublicKey(arrayify(digest),signature))}function formatNumber(value,name){const result=stripZeros(BigNumber$1.from(value).toHexString());if(result.length>32){logger$q.throwArgumentError("invalid length for "+name,"transaction:"+name,value)}return result}function accessSetify(addr,storageKeys){return{address:getAddress$1(addr),storageKeys:(storageKeys||[]).map((storageKey,index)=>{if(hexDataLength(storageKey)!==32){logger$q.throwArgumentError("invalid access list storageKey",`accessList[${addr}:${index}]`,storageKey)}return storageKey.toLowerCase()})}}function accessListify(value){if(Array.isArray(value)){return value.map((set,index)=>{if(Array.isArray(set)){if(set.length>2){logger$q.throwArgumentError("access list expected to be [ address, storageKeys[] ]",`value[${index}]`,set)}return accessSetify(set[0],set[1])}return accessSetify(set.address,set.storageKeys)})}const result=Object.keys(value).map(addr=>{const storageKeys=value[addr].reduce((accum,storageKey)=>{accum[storageKey]=true;return accum},{});return accessSetify(addr,Object.keys(storageKeys).sort())});result.sort((a,b)=>a.address.localeCompare(b.address));return result}function formatAccessList(value){return accessListify(value).map(set=>[set.address,set.storageKeys])}function _serializeEip1559(transaction,signature){if(transaction.gasPrice!=null){const gasPrice=BigNumber$1.from(transaction.gasPrice);const maxFeePerGas=BigNumber$1.from(transaction.maxFeePerGas||0);if(!gasPrice.eq(maxFeePerGas)){logger$q.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas","tx",{gasPrice:gasPrice,maxFeePerGas:maxFeePerGas})}}const fields=[formatNumber(transaction.chainId||0,"chainId"),formatNumber(transaction.nonce||0,"nonce"),formatNumber(transaction.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber(transaction.maxFeePerGas||0,"maxFeePerGas"),formatNumber(transaction.gasLimit||0,"gasLimit"),transaction.to!=null?getAddress$1(transaction.to):"0x",formatNumber(transaction.value||0,"value"),transaction.data||"0x",formatAccessList(transaction.accessList||[])];if(signature){const sig=splitSignature(signature);fields.push(formatNumber(sig.recoveryParam,"recoveryParam"));fields.push(stripZeros(sig.r));fields.push(stripZeros(sig.s))}return hexConcat(["0x02",encode$1(fields)])}function _serializeEip2930(transaction,signature){const fields=[formatNumber(transaction.chainId||0,"chainId"),formatNumber(transaction.nonce||0,"nonce"),formatNumber(transaction.gasPrice||0,"gasPrice"),formatNumber(transaction.gasLimit||0,"gasLimit"),transaction.to!=null?getAddress$1(transaction.to):"0x",formatNumber(transaction.value||0,"value"),transaction.data||"0x",formatAccessList(transaction.accessList||[])];if(signature){const sig=splitSignature(signature);fields.push(formatNumber(sig.recoveryParam,"recoveryParam"));fields.push(stripZeros(sig.r));fields.push(stripZeros(sig.s))}return hexConcat(["0x01",encode$1(fields)])}function _serialize(transaction,signature){checkProperties(transaction,allowedTransactionKeys$2);const raw=[];transactionFields.forEach(function(fieldInfo){let value=transaction[fieldInfo.name]||[];const options={};if(fieldInfo.numeric){options.hexPad="left"}value=arrayify(hexlify(value,options));if(fieldInfo.length&&value.length!==fieldInfo.length&&value.length>0){logger$q.throwArgumentError("invalid length for "+fieldInfo.name,"transaction:"+fieldInfo.name,value)}if(fieldInfo.maxLength){value=stripZeros(value);if(value.length>fieldInfo.maxLength){logger$q.throwArgumentError("invalid length for "+fieldInfo.name,"transaction:"+fieldInfo.name,value)}}raw.push(hexlify(value))});let chainId=0;if(transaction.chainId!=null){chainId=transaction.chainId;if(typeof chainId!=="number"){logger$q.throwArgumentError("invalid transaction.chainId","transaction",transaction)}}else if(signature&&!isBytesLike(signature)&&signature.v>28){chainId=Math.floor((signature.v-35)/2)}if(chainId!==0){raw.push(hexlify(chainId));raw.push("0x");raw.push("0x")}if(!signature){return encode$1(raw)}const sig=splitSignature(signature);let v=27+sig.recoveryParam;if(chainId!==0){raw.pop();raw.pop();raw.pop();v+=chainId*2+8;if(sig.v>28&&sig.v!==v){logger$q.throwArgumentError("transaction.chainId/signature.v mismatch","signature",signature)}}else if(sig.v!==v){logger$q.throwArgumentError("transaction.chainId/signature.v mismatch","signature",signature)}raw.push(hexlify(v));raw.push(stripZeros(arrayify(sig.r)));raw.push(stripZeros(arrayify(sig.s)));return encode$1(raw)}function serialize$1(transaction,signature){if(transaction.type==null||transaction.type===0){if(transaction.accessList!=null){logger$q.throwArgumentError("untyped transactions do not support accessList; include type: 1","transaction",transaction)}return _serialize(transaction,signature)}switch(transaction.type){case 1:return _serializeEip2930(transaction,signature);case 2:return _serializeEip1559(transaction,signature)}return logger$q.throwError(`unsupported transaction type: ${transaction.type}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"serializeTransaction",transactionType:transaction.type})}function _parseEipSignature(tx,fields,serialize){try{const recid=handleNumber(fields[0]).toNumber();if(recid!==0&&recid!==1){throw new Error("bad recid")}tx.v=recid}catch(error){logger$q.throwArgumentError("invalid v for transaction type: 1","v",fields[0])}tx.r=hexZeroPad(fields[1],32);tx.s=hexZeroPad(fields[2],32);try{const digest=keccak256$3(serialize(tx));tx.from=recoverAddress(digest,{r:tx.r,s:tx.s,recoveryParam:tx.v})}catch(error){}}function _parseEip1559(payload){const transaction=decode$1(payload.slice(1));if(transaction.length!==9&&transaction.length!==12){logger$q.throwArgumentError("invalid component count for transaction type: 2","payload",hexlify(payload))}const maxPriorityFeePerGas=handleNumber(transaction[2]);const maxFeePerGas=handleNumber(transaction[3]);const tx={type:2,chainId:handleNumber(transaction[0]).toNumber(),nonce:handleNumber(transaction[1]).toNumber(),maxPriorityFeePerGas:maxPriorityFeePerGas,maxFeePerGas:maxFeePerGas,gasPrice:null,gasLimit:handleNumber(transaction[4]),to:handleAddress(transaction[5]),value:handleNumber(transaction[6]),data:transaction[7],accessList:accessListify(transaction[8])};if(transaction.length===9){return tx}tx.hash=keccak256$3(payload);_parseEipSignature(tx,transaction.slice(9),_serializeEip1559);return tx}function _parseEip2930(payload){const transaction=decode$1(payload.slice(1));if(transaction.length!==8&&transaction.length!==11){logger$q.throwArgumentError("invalid component count for transaction type: 1","payload",hexlify(payload))}const tx={type:1,chainId:handleNumber(transaction[0]).toNumber(),nonce:handleNumber(transaction[1]).toNumber(),gasPrice:handleNumber(transaction[2]),gasLimit:handleNumber(transaction[3]),to:handleAddress(transaction[4]),value:handleNumber(transaction[5]),data:transaction[6],accessList:accessListify(transaction[7])};if(transaction.length===8){return tx}tx.hash=keccak256$3(payload);_parseEipSignature(tx,transaction.slice(8),_serializeEip2930);return tx}function _parse(rawTransaction){const transaction=decode$1(rawTransaction);if(transaction.length!==9&&transaction.length!==6){logger$q.throwArgumentError("invalid raw transaction","rawTransaction",rawTransaction)}const tx={nonce:handleNumber(transaction[0]).toNumber(),gasPrice:handleNumber(transaction[1]),gasLimit:handleNumber(transaction[2]),to:handleAddress(transaction[3]),value:handleNumber(transaction[4]),data:transaction[5],chainId:0};if(transaction.length===6){return tx}try{tx.v=BigNumber$1.from(transaction[6]).toNumber()}catch(error){return tx}tx.r=hexZeroPad(transaction[7],32);tx.s=hexZeroPad(transaction[8],32);if(BigNumber$1.from(tx.r).isZero()&&BigNumber$1.from(tx.s).isZero()){tx.chainId=tx.v;tx.v=0}else{tx.chainId=Math.floor((tx.v-35)/2);if(tx.chainId<0){tx.chainId=0}let recoveryParam=tx.v-27;const raw=transaction.slice(0,6);if(tx.chainId!==0){raw.push(hexlify(tx.chainId));raw.push("0x");raw.push("0x");recoveryParam-=tx.chainId*2+8}const digest=keccak256$3(encode$1(raw));try{tx.from=recoverAddress(digest,{r:hexlify(tx.r),s:hexlify(tx.s),recoveryParam:recoveryParam})}catch(error){}tx.hash=keccak256$3(rawTransaction)}tx.type=null;return tx}function parse$1(rawTransaction){const payload=arrayify(rawTransaction);if(payload[0]>127){return _parse(payload)}switch(payload[0]){case 1:return _parseEip2930(payload);case 2:return _parseEip1559(payload)}return logger$q.throwError(`unsupported transaction type: ${payload[0]}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"parseTransaction",transactionType:payload[0]})}const version$b="contracts/5.7.0";var __awaiter$1b=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$p=new Logger(version$b);const allowedTransactionKeys$1={chainId:true,data:true,from:true,gasLimit:true,gasPrice:true,nonce:true,to:true,value:true,type:true,accessList:true,maxFeePerGas:true,maxPriorityFeePerGas:true,customData:true,ccipReadEnabled:true};function resolveName(resolver,nameOrPromise){return __awaiter$1b(this,void 0,void 0,function*(){const name=yield nameOrPromise;if(typeof name!=="string"){logger$p.throwArgumentError("invalid address or ENS name","name",name)}try{return getAddress$1(name)}catch(error){}if(!resolver){logger$p.throwError("a provider or signer is needed to resolve ENS names",Logger.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"})}const address=yield resolver.resolveName(name);if(address==null){logger$p.throwArgumentError("resolver or addr is not configured for ENS name","name",name)}return address})}function resolveAddresses(resolver,value,paramType){return __awaiter$1b(this,void 0,void 0,function*(){if(Array.isArray(paramType)){return yield Promise.all(paramType.map((paramType,index)=>{return resolveAddresses(resolver,Array.isArray(value)?value[index]:value[paramType.name],paramType)}))}if(paramType.type==="address"){return yield resolveName(resolver,value)}if(paramType.type==="tuple"){return yield resolveAddresses(resolver,value,paramType.components)}if(paramType.baseType==="array"){if(!Array.isArray(value)){return Promise.reject(logger$p.makeError("invalid value for array",Logger.errors.INVALID_ARGUMENT,{argument:"value",value:value}))}return yield Promise.all(value.map(v=>resolveAddresses(resolver,v,paramType.arrayChildren)))}return value})}function populateTransaction(contract,fragment,args){return __awaiter$1b(this,void 0,void 0,function*(){let overrides={};if(args.length===fragment.inputs.length+1&&typeof args[args.length-1]==="object"){overrides=shallowCopy(args.pop())}logger$p.checkArgumentCount(args.length,fragment.inputs.length,"passed to contract");if(contract.signer){if(overrides.from){overrides.from=resolveProperties({override:resolveName(contract.signer,overrides.from),signer:contract.signer.getAddress()}).then(check=>__awaiter$1b(this,void 0,void 0,function*(){if(getAddress$1(check.signer)!==check.override){logger$p.throwError("Contract with a Signer cannot override from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"})}return check.override}))}else{overrides.from=contract.signer.getAddress()}}else if(overrides.from){overrides.from=resolveName(contract.provider,overrides.from)}const resolved=yield resolveProperties({args:resolveAddresses(contract.signer||contract.provider,args,fragment.inputs),address:contract.resolvedAddress,overrides:resolveProperties(overrides)||{}});const data=contract.interface.encodeFunctionData(fragment,resolved.args);const tx={data:data,to:resolved.address};const ro=resolved.overrides;if(ro.nonce!=null){tx.nonce=BigNumber$1.from(ro.nonce).toNumber()}if(ro.gasLimit!=null){tx.gasLimit=BigNumber$1.from(ro.gasLimit)}if(ro.gasPrice!=null){tx.gasPrice=BigNumber$1.from(ro.gasPrice)}if(ro.maxFeePerGas!=null){tx.maxFeePerGas=BigNumber$1.from(ro.maxFeePerGas)}if(ro.maxPriorityFeePerGas!=null){tx.maxPriorityFeePerGas=BigNumber$1.from(ro.maxPriorityFeePerGas)}if(ro.from!=null){tx.from=ro.from}if(ro.type!=null){tx.type=ro.type}if(ro.accessList!=null){tx.accessList=accessListify(ro.accessList)}if(tx.gasLimit==null&&fragment.gas!=null){let intrinsic=21e3;const bytes=arrayify(data);for(let i=0;i<bytes.length;i++){intrinsic+=4;if(bytes[i]){intrinsic+=64}}tx.gasLimit=BigNumber$1.from(fragment.gas).add(intrinsic)}if(ro.value){const roValue=BigNumber$1.from(ro.value);if(!roValue.isZero()&&!fragment.payable){logger$p.throwError("non-payable method cannot override value",Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:overrides.value})}tx.value=roValue}if(ro.customData){tx.customData=shallowCopy(ro.customData)}if(ro.ccipReadEnabled){tx.ccipReadEnabled=!!ro.ccipReadEnabled}delete overrides.nonce;delete overrides.gasLimit;delete overrides.gasPrice;delete overrides.from;delete overrides.value;delete overrides.type;delete overrides.accessList;delete overrides.maxFeePerGas;delete overrides.maxPriorityFeePerGas;delete overrides.customData;delete overrides.ccipReadEnabled;const leftovers=Object.keys(overrides).filter(key=>overrides[key]!=null);if(leftovers.length){logger$p.throwError(`cannot override ${leftovers.map(l=>JSON.stringify(l)).join(",")}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:leftovers})}return tx})}function buildPopulate(contract,fragment){return function(...args){return populateTransaction(contract,fragment,args)}}function buildEstimate(contract,fragment){const signerOrProvider=contract.signer||contract.provider;return function(...args){return __awaiter$1b(this,void 0,void 0,function*(){if(!signerOrProvider){logger$p.throwError("estimate require a provider or signer",Logger.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"})}const tx=yield populateTransaction(contract,fragment,args);return yield signerOrProvider.estimateGas(tx)})}}function addContractWait(contract,tx){const wait=tx.wait.bind(tx);tx.wait=confirmations=>{return wait(confirmations).then(receipt=>{receipt.events=receipt.logs.map(log=>{let event=deepCopy(log);let parsed=null;try{parsed=contract.interface.parseLog(log)}catch(e){}if(parsed){event.args=parsed.args;event.decode=(data,topics)=>{return contract.interface.decodeEventLog(parsed.eventFragment,data,topics)};event.event=parsed.name;event.eventSignature=parsed.signature}event.removeListener=()=>{return contract.provider};event.getBlock=()=>{return contract.provider.getBlock(receipt.blockHash)};event.getTransaction=()=>{return contract.provider.getTransaction(receipt.transactionHash)};event.getTransactionReceipt=()=>{return Promise.resolve(receipt)};return event});return receipt})}}function buildCall(contract,fragment,collapseSimple){const signerOrProvider=contract.signer||contract.provider;return function(...args){return __awaiter$1b(this,void 0,void 0,function*(){let blockTag=undefined;if(args.length===fragment.inputs.length+1&&typeof args[args.length-1]==="object"){const overrides=shallowCopy(args.pop());if(overrides.blockTag!=null){blockTag=yield overrides.blockTag}delete overrides.blockTag;args.push(overrides)}if(contract.deployTransaction!=null){yield contract._deployed(blockTag)}const tx=yield populateTransaction(contract,fragment,args);const result=yield signerOrProvider.call(tx,blockTag);try{let value=contract.interface.decodeFunctionResult(fragment,result);if(collapseSimple&&fragment.outputs.length===1){value=value[0]}return value}catch(error){if(error.code===Logger.errors.CALL_EXCEPTION){error.address=contract.address;error.args=args;error.transaction=tx}throw error}})}}function buildSend(contract,fragment){return function(...args){return __awaiter$1b(this,void 0,void 0,function*(){if(!contract.signer){logger$p.throwError("sending a transaction requires a signer",Logger.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"})}if(contract.deployTransaction!=null){yield contract._deployed()}const txRequest=yield populateTransaction(contract,fragment,args);const tx=yield contract.signer.sendTransaction(txRequest);addContractWait(contract,tx);return tx})}}function buildDefault(contract,fragment,collapseSimple){if(fragment.constant){return buildCall(contract,fragment,collapseSimple)}return buildSend(contract,fragment)}function getEventTag$1(filter){if(filter.address&&(filter.topics==null||filter.topics.length===0)){return"*"}return(filter.address||"*")+"@"+(filter.topics?filter.topics.map(topic=>{if(Array.isArray(topic)){return topic.join("|")}return topic}).join(":"):"")}class RunningEvent{constructor(tag,filter){defineReadOnly(this,"tag",tag);defineReadOnly(this,"filter",filter);this._listeners=[]}addListener(listener,once){this._listeners.push({listener:listener,once:once})}removeListener(listener){let done=false;this._listeners=this._listeners.filter(item=>{if(done||item.listener!==listener){return true}done=true;return false})}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map(i=>i.listener)}listenerCount(){return this._listeners.length}run(args){const listenerCount=this.listenerCount();this._listeners=this._listeners.filter(item=>{const argsCopy=args.slice();setTimeout(()=>{item.listener.apply(this,argsCopy)},0);return!item.once});return listenerCount}prepareEvent(event){}getEmit(event){return[event]}}class ErrorRunningEvent extends RunningEvent{constructor(){super("error",null)}}class FragmentRunningEvent extends RunningEvent{constructor(address,contractInterface,fragment,topics){const filter={address:address};let topic=contractInterface.getEventTopic(fragment);if(topics){if(topic!==topics[0]){logger$p.throwArgumentError("topic mismatch","topics",topics)}filter.topics=topics.slice()}else{filter.topics=[topic]}super(getEventTag$1(filter),filter);defineReadOnly(this,"address",address);defineReadOnly(this,"interface",contractInterface);defineReadOnly(this,"fragment",fragment)}prepareEvent(event){super.prepareEvent(event);event.event=this.fragment.name;event.eventSignature=this.fragment.format();event.decode=(data,topics)=>{return this.interface.decodeEventLog(this.fragment,data,topics)};try{event.args=this.interface.decodeEventLog(this.fragment,event.data,event.topics)}catch(error){event.args=null;event.decodeError=error}}getEmit(event){const errors=checkResultErrors(event.args);if(errors.length){throw errors[0].error}const args=(event.args||[]).slice();args.push(event);return args}}class WildcardRunningEvent extends RunningEvent{constructor(address,contractInterface){super("*",{address:address});defineReadOnly(this,"address",address);defineReadOnly(this,"interface",contractInterface)}prepareEvent(event){super.prepareEvent(event);try{const parsed=this.interface.parseLog(event);event.event=parsed.name;event.eventSignature=parsed.signature;event.decode=(data,topics)=>{return this.interface.decodeEventLog(parsed.eventFragment,data,topics)};event.args=parsed.args}catch(error){}}}class BaseContract{constructor(addressOrName,contractInterface,signerOrProvider){defineReadOnly(this,"interface",getStatic(new.target,"getInterface")(contractInterface));if(signerOrProvider==null){defineReadOnly(this,"provider",null);defineReadOnly(this,"signer",null)}else if(Signer.isSigner(signerOrProvider)){defineReadOnly(this,"provider",signerOrProvider.provider||null);defineReadOnly(this,"signer",signerOrProvider)}else if(Provider.isProvider(signerOrProvider)){defineReadOnly(this,"provider",signerOrProvider);defineReadOnly(this,"signer",null)}else{logger$p.throwArgumentError("invalid signer or provider","signerOrProvider",signerOrProvider)}defineReadOnly(this,"callStatic",{});defineReadOnly(this,"estimateGas",{});defineReadOnly(this,"functions",{});defineReadOnly(this,"populateTransaction",{});defineReadOnly(this,"filters",{});{const uniqueFilters={};Object.keys(this.interface.events).forEach(eventSignature=>{const event=this.interface.events[eventSignature];defineReadOnly(this.filters,eventSignature,(...args)=>{return{address:this.address,topics:this.interface.encodeFilterTopics(event,args)}});if(!uniqueFilters[event.name]){uniqueFilters[event.name]=[]}uniqueFilters[event.name].push(eventSignature)});Object.keys(uniqueFilters).forEach(name=>{const filters=uniqueFilters[name];if(filters.length===1){defineReadOnly(this.filters,name,this.filters[filters[0]])}else{logger$p.warn(`Duplicate definition of ${name} (${filters.join(", ")})`)}})}defineReadOnly(this,"_runningEvents",{});defineReadOnly(this,"_wrappedEmits",{});if(addressOrName==null){logger$p.throwArgumentError("invalid contract address or ENS name","addressOrName",addressOrName)}defineReadOnly(this,"address",addressOrName);if(this.provider){defineReadOnly(this,"resolvedAddress",resolveName(this.provider,addressOrName))}else{try{defineReadOnly(this,"resolvedAddress",Promise.resolve(getAddress$1(addressOrName)))}catch(error){logger$p.throwError("provider is required to use ENS name as contract address",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"})}}this.resolvedAddress.catch(e=>{});const uniqueNames={};const uniqueSignatures={};Object.keys(this.interface.functions).forEach(signature=>{const fragment=this.interface.functions[signature];if(uniqueSignatures[signature]){logger$p.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);return}uniqueSignatures[signature]=true;{const name=fragment.name;if(!uniqueNames[`%${name}`]){uniqueNames[`%${name}`]=[]}uniqueNames[`%${name}`].push(signature)}if(this[signature]==null){defineReadOnly(this,signature,buildDefault(this,fragment,true))}if(this.functions[signature]==null){defineReadOnly(this.functions,signature,buildDefault(this,fragment,false))}if(this.callStatic[signature]==null){defineReadOnly(this.callStatic,signature,buildCall(this,fragment,true))}if(this.populateTransaction[signature]==null){defineReadOnly(this.populateTransaction,signature,buildPopulate(this,fragment))}if(this.estimateGas[signature]==null){defineReadOnly(this.estimateGas,signature,buildEstimate(this,fragment))}});Object.keys(uniqueNames).forEach(name=>{const signatures=uniqueNames[name];if(signatures.length>1){return}name=name.substring(1);const signature=signatures[0];try{if(this[name]==null){defineReadOnly(this,name,this[signature])}}catch(e){}if(this.functions[name]==null){defineReadOnly(this.functions,name,this.functions[signature])}if(this.callStatic[name]==null){defineReadOnly(this.callStatic,name,this.callStatic[signature])}if(this.populateTransaction[name]==null){defineReadOnly(this.populateTransaction,name,this.populateTransaction[signature])}if(this.estimateGas[name]==null){defineReadOnly(this.estimateGas,name,this.estimateGas[signature])}})}static getContractAddress(transaction){return getContractAddress$1(transaction)}static getInterface(contractInterface){if(Interface.isInterface(contractInterface)){return contractInterface}return new Interface(contractInterface)}deployed(){return this._deployed()}_deployed(blockTag){if(!this._deployedPromise){if(this.deployTransaction){this._deployedPromise=this.deployTransaction.wait().then(()=>{return this})}else{this._deployedPromise=this.provider.getCode(this.address,blockTag).then(code=>{if(code==="0x"){logger$p.throwError("contract not deployed",Logger.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"})}return this})}}return this._deployedPromise}fallback(overrides){if(!this.signer){logger$p.throwError("sending a transactions require a signer",Logger.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"})}const tx=shallowCopy(overrides||{});["from","to"].forEach(function(key){if(tx[key]==null){return}logger$p.throwError("cannot override "+key,Logger.errors.UNSUPPORTED_OPERATION,{operation:key})});tx.to=this.resolvedAddress;return this.deployed().then(()=>{return this.signer.sendTransaction(tx)})}connect(signerOrProvider){if(typeof signerOrProvider==="string"){signerOrProvider=new VoidSigner(signerOrProvider,this.provider)}const contract=new this.constructor(this.address,this.interface,signerOrProvider);if(this.deployTransaction){defineReadOnly(contract,"deployTransaction",this.deployTransaction)}return contract}attach(addressOrName){return new this.constructor(addressOrName,this.interface,this.signer||this.provider)}static isIndexed(value){return Indexed.isIndexed(value)}_normalizeRunningEvent(runningEvent){if(this._runningEvents[runningEvent.tag]){return this._runningEvents[runningEvent.tag]}return runningEvent}_getRunningEvent(eventName){if(typeof eventName==="string"){if(eventName==="error"){return this._normalizeRunningEvent(new ErrorRunningEvent)}if(eventName==="event"){return this._normalizeRunningEvent(new RunningEvent("event",null))}if(eventName==="*"){return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface))}const fragment=this.interface.getEvent(eventName);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,fragment))}if(eventName.topics&&eventName.topics.length>0){try{const topic=eventName.topics[0];if(typeof topic!=="string"){throw new Error("invalid topic")}const fragment=this.interface.getEvent(topic);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,fragment,eventName.topics))}catch(error){}const filter={address:this.address,topics:eventName.topics};return this._normalizeRunningEvent(new RunningEvent(getEventTag$1(filter),filter))}return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface))}_checkRunningEvents(runningEvent){if(runningEvent.listenerCount()===0){delete this._runningEvents[runningEvent.tag];const emit=this._wrappedEmits[runningEvent.tag];if(emit&&runningEvent.filter){this.provider.off(runningEvent.filter,emit);delete this._wrappedEmits[runningEvent.tag]}}}_wrapEvent(runningEvent,log,listener){const event=deepCopy(log);event.removeListener=()=>{if(!listener){return}runningEvent.removeListener(listener);this._checkRunningEvents(runningEvent)};event.getBlock=()=>{return this.provider.getBlock(log.blockHash)};event.getTransaction=()=>{return this.provider.getTransaction(log.transactionHash)};event.getTransactionReceipt=()=>{return this.provider.getTransactionReceipt(log.transactionHash)};runningEvent.prepareEvent(event);return event}_addEventListener(runningEvent,listener,once){if(!this.provider){logger$p.throwError("events require a provider or a signer with a provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"once"})}runningEvent.addListener(listener,once);this._runningEvents[runningEvent.tag]=runningEvent;if(!this._wrappedEmits[runningEvent.tag]){const wrappedEmit=log=>{let event=this._wrapEvent(runningEvent,log,listener);if(event.decodeError==null){try{const args=runningEvent.getEmit(event);this.emit(runningEvent.filter,...args)}catch(error){event.decodeError=error.error}}if(runningEvent.filter!=null){this.emit("event",event)}if(event.decodeError!=null){this.emit("error",event.decodeError,event)}};this._wrappedEmits[runningEvent.tag]=wrappedEmit;if(runningEvent.filter!=null){this.provider.on(runningEvent.filter,wrappedEmit)}}}queryFilter(event,fromBlockOrBlockhash,toBlock){const runningEvent=this._getRunningEvent(event);const filter=shallowCopy(runningEvent.filter);if(typeof fromBlockOrBlockhash==="string"&&isHexString(fromBlockOrBlockhash,32)){if(toBlock!=null){logger$p.throwArgumentError("cannot specify toBlock with blockhash","toBlock",toBlock)}filter.blockHash=fromBlockOrBlockhash}else{filter.fromBlock=fromBlockOrBlockhash!=null?fromBlockOrBlockhash:0;filter.toBlock=toBlock!=null?toBlock:"latest"}return this.provider.getLogs(filter).then(logs=>{return logs.map(log=>this._wrapEvent(runningEvent,log,null))})}on(event,listener){this._addEventListener(this._getRunningEvent(event),listener,false);return this}once(event,listener){this._addEventListener(this._getRunningEvent(event),listener,true);return this}emit(eventName,...args){if(!this.provider){return false}const runningEvent=this._getRunningEvent(eventName);const result=runningEvent.run(args)>0;this._checkRunningEvents(runningEvent);return result}listenerCount(eventName){if(!this.provider){return 0}if(eventName==null){return Object.keys(this._runningEvents).reduce((accum,key)=>{return accum+this._runningEvents[key].listenerCount()},0)}return this._getRunningEvent(eventName).listenerCount()}listeners(eventName){if(!this.provider){return[]}if(eventName==null){const result=[];for(let tag in this._runningEvents){this._runningEvents[tag].listeners().forEach(listener=>{result.push(listener)})}return result}return this._getRunningEvent(eventName).listeners()}removeAllListeners(eventName){if(!this.provider){return this}if(eventName==null){for(const tag in this._runningEvents){const runningEvent=this._runningEvents[tag];runningEvent.removeAllListeners();this._checkRunningEvents(runningEvent)}return this}const runningEvent=this._getRunningEvent(eventName);runningEvent.removeAllListeners();this._checkRunningEvents(runningEvent);return this}off(eventName,listener){if(!this.provider){return this}const runningEvent=this._getRunningEvent(eventName);runningEvent.removeListener(listener);this._checkRunningEvents(runningEvent);return this}removeListener(eventName,listener){return this.off(eventName,listener)}}class Contract extends BaseContract{}class ContractFactory{constructor(contractInterface,bytecode,signer){let bytecodeHex=null;if(typeof bytecode==="string"){bytecodeHex=bytecode}else if(isBytes(bytecode)){bytecodeHex=hexlify(bytecode)}else if(bytecode&&typeof bytecode.object==="string"){bytecodeHex=bytecode.object}else{bytecodeHex="!"}if(bytecodeHex.substring(0,2)!=="0x"){bytecodeHex="0x"+bytecodeHex}if(!isHexString(bytecodeHex)||bytecodeHex.length%2){logger$p.throwArgumentError("invalid bytecode","bytecode",bytecode)}if(signer&&!Signer.isSigner(signer)){logger$p.throwArgumentError("invalid signer","signer",signer)}defineReadOnly(this,"bytecode",bytecodeHex);defineReadOnly(this,"interface",getStatic(new.target,"getInterface")(contractInterface));defineReadOnly(this,"signer",signer||null)}getDeployTransaction(...args){let tx={};if(args.length===this.interface.deploy.inputs.length+1&&typeof args[args.length-1]==="object"){tx=shallowCopy(args.pop());for(const key in tx){if(!allowedTransactionKeys$1[key]){throw new Error("unknown transaction override "+key)}}}["data","from","to"].forEach(key=>{if(tx[key]==null){return}logger$p.throwError("cannot override "+key,Logger.errors.UNSUPPORTED_OPERATION,{operation:key})});if(tx.value){const value=BigNumber$1.from(tx.value);if(!value.isZero()&&!this.interface.deploy.payable){logger$p.throwError("non-payable constructor cannot override value",Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:tx.value})}}logger$p.checkArgumentCount(args.length,this.interface.deploy.inputs.length," in Contract constructor");tx.data=hexlify(concat$1([this.bytecode,this.interface.encodeDeploy(args)]));return tx}deploy(...args){return __awaiter$1b(this,void 0,void 0,function*(){let overrides={};if(args.length===this.interface.deploy.inputs.length+1){overrides=args.pop()}logger$p.checkArgumentCount(args.length,this.interface.deploy.inputs.length," in Contract constructor");const params=yield resolveAddresses(this.signer,args,this.interface.deploy.inputs);params.push(overrides);const unsignedTx=this.getDeployTransaction(...params);const tx=yield this.signer.sendTransaction(unsignedTx);const address=getStatic(this.constructor,"getContractAddress")(tx);const contract=getStatic(this.constructor,"getContract")(address,this.interface,this.signer);addContractWait(contract,tx);defineReadOnly(contract,"deployTransaction",tx);return contract})}attach(address){return this.constructor.getContract(address,this.interface,this.signer)}connect(signer){return new this.constructor(this.interface,this.bytecode,signer)}static fromSolidity(compilerOutput,signer){if(compilerOutput==null){logger$p.throwError("missing compiler output",Logger.errors.MISSING_ARGUMENT,{argument:"compilerOutput"})}if(typeof compilerOutput==="string"){compilerOutput=JSON.parse(compilerOutput)}const abi=compilerOutput.abi;let bytecode=null;if(compilerOutput.bytecode){bytecode=compilerOutput.bytecode}else if(compilerOutput.evm&&compilerOutput.evm.bytecode){bytecode=compilerOutput.evm.bytecode}return new this(abi,bytecode,signer)}static getInterface(contractInterface){return Contract.getInterface(contractInterface)}static getContractAddress(tx){return getContractAddress$1(tx)}static getContract(address,contractInterface,signer){return new Contract(address,contractInterface,signer)}}class BaseX{constructor(alphabet){defineReadOnly(this,"alphabet",alphabet);defineReadOnly(this,"base",alphabet.length);defineReadOnly(this,"_alphabetMap",{});defineReadOnly(this,"_leader",alphabet.charAt(0));for(let i=0;i<alphabet.length;i++){this._alphabetMap[alphabet.charAt(i)]=i}}encode(value){let source=arrayify(value);if(source.length===0){return""}let digits=[0];for(let i=0;i<source.length;++i){let carry=source[i];for(let j=0;j<digits.length;++j){carry+=digits[j]<<8;digits[j]=carry%this.base;carry=carry/this.base|0}while(carry>0){digits.push(carry%this.base);carry=carry/this.base|0}}let string="";for(let k=0;source[k]===0&&k<source.length-1;++k){string+=this._leader}for(let q=digits.length-1;q>=0;--q){string+=this.alphabet[digits[q]]}return string}decode(value){if(typeof value!=="string"){throw new TypeError("Expected String")}let bytes=[];if(value.length===0){return new Uint8Array(bytes)}bytes.push(0);for(let i=0;i<value.length;i++){let byte=this._alphabetMap[value[i]];if(byte===undefined){throw new Error("Non-base"+this.base+" character")}let carry=byte;for(let j=0;j<bytes.length;++j){carry+=bytes[j]*this.base;bytes[j]=carry&255;carry>>=8}while(carry>0){bytes.push(carry&255);carry>>=8}}for(let k=0;value[k]===this._leader&&k<value.length-1;++k){bytes.push(0)}return arrayify(new Uint8Array(bytes.reverse()))}}new BaseX("abcdefghijklmnopqrstuvwxyz234567");const Base58=new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");function pbkdf2$1(password,salt,iterations,keylen,hashAlgorithm){password=arrayify(password);salt=arrayify(salt);let hLen;let l=1;const DK=new Uint8Array(keylen);const block1=new Uint8Array(salt.length+4);block1.set(salt);let r;let T;for(let i=1;i<=l;i++){block1[salt.length]=i>>24&255;block1[salt.length+1]=i>>16&255;block1[salt.length+2]=i>>8&255;block1[salt.length+3]=i&255;let U=arrayify(computeHmac(hashAlgorithm,password,block1));if(!hLen){hLen=U.length;T=new Uint8Array(hLen);l=Math.ceil(keylen/hLen);r=keylen-(l-1)*hLen}T.set(U);for(let j=1;j<iterations;j++){U=arrayify(computeHmac(hashAlgorithm,password,U));for(let k=0;k<hLen;k++)T[k]^=U[k]}const destPos=(i-1)*hLen;const len=i===l?r:hLen;DK.set(arrayify(T).slice(0,len),destPos)}return hexlify(DK)}const version$a="wordlists/5.7.0";const logger$o=new Logger(version$a);class Wordlist{constructor(locale){logger$o.checkAbstract(new.target,Wordlist);defineReadOnly(this,"locale",locale)}split(mnemonic){return mnemonic.toLowerCase().split(/ +/g)}join(words){return words.join(" ")}static check(wordlist){const words=[];for(let i=0;i<2048;i++){const word=wordlist.getWord(i);if(i!==wordlist.getWordIndex(word)){return"0x"}words.push(word)}return id$2(words.join("\n")+"\n")}static register(lang,name){if(!name){name=lang.locale}}}const words="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";let wordlist=null;function loadWords(lang){if(wordlist!=null){return}wordlist=words.replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" ");if(Wordlist.check(lang)!=="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"){wordlist=null;throw new Error("BIP39 Wordlist for en (English) FAILED")}}class LangEn extends Wordlist{constructor(){super("en")}getWord(index){loadWords(this);return wordlist[index]}getWordIndex(word){loadWords(this);return wordlist.indexOf(word)}}const langEn=new LangEn;Wordlist.register(langEn);const wordlists={en:langEn};const version$9="hdnode/5.7.0";const logger$n=new Logger(version$9);const N=BigNumber$1.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");const MasterSecret=toUtf8Bytes$1("Bitcoin seed");const HardenedBit=2147483648;function getUpperMask(bits){return(1<<bits)-1<<8-bits}function getLowerMask(bits){return(1<<bits)-1}function bytes32(value){return hexZeroPad(hexlify(value),32)}function base58check(data){return Base58.encode(concat$1([data,hexDataSlice(sha256$1(sha256$1(data)),0,4)]))}function getWordlist(wordlist){if(wordlist==null){return wordlists["en"]}if(typeof wordlist==="string"){const words=wordlists[wordlist];if(words==null){logger$n.throwArgumentError("unknown locale","wordlist",wordlist)}return words}return wordlist}const _constructorGuard$1={};const defaultPath="m/44'/60'/0'/0/0";class HDNode{constructor(constructorGuard,privateKey,publicKey,parentFingerprint,chainCode,index,depth,mnemonicOrPath){if(constructorGuard!==_constructorGuard$1){throw new Error("HDNode constructor cannot be called directly")}if(privateKey){const signingKey=new SigningKey(privateKey);defineReadOnly(this,"privateKey",signingKey.privateKey);defineReadOnly(this,"publicKey",signingKey.compressedPublicKey)}else{defineReadOnly(this,"privateKey",null);defineReadOnly(this,"publicKey",hexlify(publicKey))}defineReadOnly(this,"parentFingerprint",parentFingerprint);defineReadOnly(this,"fingerprint",hexDataSlice(ripemd160(sha256$1(this.publicKey)),0,4));defineReadOnly(this,"address",computeAddress(this.publicKey));defineReadOnly(this,"chainCode",chainCode);defineReadOnly(this,"index",index);defineReadOnly(this,"depth",depth);if(mnemonicOrPath==null){defineReadOnly(this,"mnemonic",null);defineReadOnly(this,"path",null)}else if(typeof mnemonicOrPath==="string"){defineReadOnly(this,"mnemonic",null);defineReadOnly(this,"path",mnemonicOrPath)}else{defineReadOnly(this,"mnemonic",mnemonicOrPath);defineReadOnly(this,"path",mnemonicOrPath.path)}}get extendedKey(){if(this.depth>=256){throw new Error("Depth too large!")}return base58check(concat$1([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",hexlify(this.depth),this.parentFingerprint,hexZeroPad(hexlify(this.index),4),this.chainCode,this.privateKey!=null?concat$1(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new HDNode(_constructorGuard$1,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(index){if(index>4294967295){throw new Error("invalid index - "+String(index))}let path=this.path;if(path){path+="/"+(index&~HardenedBit)}const data=new Uint8Array(37);if(index&HardenedBit){if(!this.privateKey){throw new Error("cannot derive child of neutered node")}data.set(arrayify(this.privateKey),1);if(path){path+="'"}}else{data.set(arrayify(this.publicKey))}for(let i=24;i>=0;i-=8){data[33+(i>>3)]=index>>24-i&255}const I=arrayify(computeHmac(SupportedAlgorithm.sha512,this.chainCode,data));const IL=I.slice(0,32);const IR=I.slice(32);let ki=null;let Ki=null;if(this.privateKey){ki=bytes32(BigNumber$1.from(IL).add(this.privateKey).mod(N))}else{const ek=new SigningKey(hexlify(IL));Ki=ek._addPoint(this.publicKey)}let mnemonicOrPath=path;const srcMnemonic=this.mnemonic;if(srcMnemonic){mnemonicOrPath=Object.freeze({phrase:srcMnemonic.phrase,path:path,locale:srcMnemonic.locale||"en"})}return new HDNode(_constructorGuard$1,ki,Ki,this.fingerprint,bytes32(IR),index,this.depth+1,mnemonicOrPath)}derivePath(path){const components=path.split("/");if(components.length===0||components[0]==="m"&&this.depth!==0){throw new Error("invalid path - "+path)}if(components[0]==="m"){components.shift()}let result=this;for(let i=0;i<components.length;i++){const component=components[i];if(component.match(/^[0-9]+'$/)){const index=parseInt(component.substring(0,component.length-1));if(index>=HardenedBit){throw new Error("invalid path index - "+component)}result=result._derive(HardenedBit+index)}else if(component.match(/^[0-9]+$/)){const index=parseInt(component);if(index>=HardenedBit){throw new Error("invalid path index - "+component)}result=result._derive(index)}else{throw new Error("invalid path component - "+component)}}return result}static _fromSeed(seed,mnemonic){const seedArray=arrayify(seed);if(seedArray.length<16||seedArray.length>64){throw new Error("invalid seed")}const I=arrayify(computeHmac(SupportedAlgorithm.sha512,MasterSecret,seedArray));return new HDNode(_constructorGuard$1,bytes32(I.slice(0,32)),null,"0x00000000",bytes32(I.slice(32)),0,0,mnemonic)}static fromMnemonic(mnemonic,password,wordlist){wordlist=getWordlist(wordlist);mnemonic=entropyToMnemonic(mnemonicToEntropy(mnemonic,wordlist),wordlist);return HDNode._fromSeed(mnemonicToSeed(mnemonic,password),{phrase:mnemonic,path:"m",locale:wordlist.locale})}static fromSeed(seed){return HDNode._fromSeed(seed,null)}static fromExtendedKey(extendedKey){const bytes=Base58.decode(extendedKey);if(bytes.length!==82||base58check(bytes.slice(0,78))!==extendedKey){logger$n.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}const depth=bytes[4];const parentFingerprint=hexlify(bytes.slice(5,9));const index=parseInt(hexlify(bytes.slice(9,13)).substring(2),16);const chainCode=hexlify(bytes.slice(13,45));const key=bytes.slice(45,78);switch(hexlify(bytes.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new HDNode(_constructorGuard$1,null,hexlify(key),parentFingerprint,chainCode,index,depth,null);case"0x0488ade4":case"0x04358394 ":if(key[0]!==0){break}return new HDNode(_constructorGuard$1,hexlify(key.slice(1)),null,parentFingerprint,chainCode,index,depth,null)}return logger$n.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function mnemonicToSeed(mnemonic,password){if(!password){password=""}const salt=toUtf8Bytes$1("mnemonic"+password,UnicodeNormalizationForm.NFKD);return pbkdf2$1(toUtf8Bytes$1(mnemonic,UnicodeNormalizationForm.NFKD),salt,2048,64,"sha512")}function mnemonicToEntropy(mnemonic,wordlist){wordlist=getWordlist(wordlist);logger$n.checkNormalize();const words=wordlist.split(mnemonic);if(words.length%3!==0){throw new Error("invalid mnemonic")}const entropy=arrayify(new Uint8Array(Math.ceil(11*words.length/8)));let offset=0;for(let i=0;i<words.length;i++){let index=wordlist.getWordIndex(words[i].normalize("NFKD"));if(index===-1){throw new Error("invalid mnemonic")}for(let bit=0;bit<11;bit++){if(index&1<<10-bit){entropy[offset>>3]|=1<<7-offset%8}offset++}}const entropyBits=32*words.length/3;const checksumBits=words.length/3;const checksumMask=getUpperMask(checksumBits);const checksum=arrayify(sha256$1(entropy.slice(0,entropyBits/8)))[0]&checksumMask;if(checksum!==(entropy[entropy.length-1]&checksumMask)){throw new Error("invalid checksum")}return hexlify(entropy.slice(0,entropyBits/8))}function entropyToMnemonic(entropy,wordlist){wordlist=getWordlist(wordlist);entropy=arrayify(entropy);if(entropy.length%4!==0||entropy.length<16||entropy.length>32){throw new Error("invalid entropy")}const indices=[0];let remainingBits=11;for(let i=0;i<entropy.length;i++){if(remainingBits>8){indices[indices.length-1]<<=8;indices[indices.length-1]|=entropy[i];remainingBits-=8}else{indices[indices.length-1]<<=remainingBits;indices[indices.length-1]|=entropy[i]>>8-remainingBits;indices.push(entropy[i]&getLowerMask(8-remainingBits));remainingBits+=3}}const checksumBits=entropy.length/4;const checksum=arrayify(sha256$1(entropy))[0]&getUpperMask(checksumBits);indices[indices.length-1]<<=checksumBits;indices[indices.length-1]|=checksum>>8-checksumBits;return wordlist.join(indices.map(index=>wordlist.getWord(index)))}function isValidMnemonic(mnemonic,wordlist){try{mnemonicToEntropy(mnemonic,wordlist);return true}catch(error){}return false}function getAccountPath(index){if(typeof index!=="number"||index<0||index>=HardenedBit||index%1){logger$n.throwArgumentError("invalid account index","index",index)}return`m/44'/60'/${index}'/0/0`}const version$8="random/5.7.0";const logger$m=new Logger(version$8);function getGlobal(){if(typeof self!=="undefined"){return self}if(typeof window!=="undefined"){return window}if(typeof global!=="undefined"){return global}throw new Error("unable to locate global object")}const anyGlobal=getGlobal();let crypto$1=anyGlobal.crypto||anyGlobal.msCrypto;if(!crypto$1||!crypto$1.getRandomValues){logger$m.warn("WARNING: Missing strong random number source");crypto$1={getRandomValues:function(buffer){return logger$m.throwError("no secure random source avaialble",Logger.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}}}function randomBytes(length){if(length<=0||length>1024||length%1||length!=length){logger$m.throwArgumentError("invalid length","length",length)}const result=new Uint8Array(length);crypto$1.getRandomValues(result);return arrayify(result)}function shuffled(array){array=array.slice();for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));const tmp=array[i];array[i]=array[j];array[j]=tmp}return array}const version$7="json-wallets/5.7.0";function looseArrayify(hexString){if(typeof hexString==="string"&&hexString.substring(0,2)!=="0x"){hexString="0x"+hexString}return arrayify(hexString)}function zpad(value,length){value=String(value);while(value.length<length){value="0"+value}return value}function getPassword(password){if(typeof password==="string"){return toUtf8Bytes$1(password,UnicodeNormalizationForm.NFKC)}return arrayify(password)}function searchPath(object,path){let currentChild=object;const comps=path.toLowerCase().split("/");for(let i=0;i<comps.length;i++){let matchingChild=null;for(const key in currentChild){if(key.toLowerCase()===comps[i]){matchingChild=currentChild[key];break}}if(matchingChild===null){return null}currentChild=matchingChild}return currentChild}function uuidV4(randomBytes){const bytes=arrayify(randomBytes);bytes[6]=bytes[6]&15|64;bytes[8]=bytes[8]&63|128;const value=hexlify(bytes);return[value.substring(2,10),value.substring(10,14),value.substring(14,18),value.substring(18,22),value.substring(22,34)].join("-")}const logger$l=new Logger(version$7);class CrowdsaleAccount extends Description{isCrowdsaleAccount(value){return!!(value&&value._isCrowdsaleAccount)}}function decrypt$1(json,password){const data=JSON.parse(json);password=getPassword(password);const ethaddr=getAddress$1(searchPath(data,"ethaddr"));const encseed=looseArrayify(searchPath(data,"encseed"));if(!encseed||encseed.length%16!==0){logger$l.throwArgumentError("invalid encseed","json",json)}const key=arrayify(pbkdf2$1(password,password,2e3,32,"sha256")).slice(0,16);const iv=encseed.slice(0,16);const encryptedSeed=encseed.slice(16);const aesCbc=new aes.ModeOfOperation.cbc(key,iv);const seed=aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));let seedHex="";for(let i=0;i<seed.length;i++){seedHex+=String.fromCharCode(seed[i])}const seedHexBytes=toUtf8Bytes$1(seedHex);const privateKey=keccak256$3(seedHexBytes);return new CrowdsaleAccount({_isCrowdsaleAccount:true,address:ethaddr,privateKey:privateKey})}function isCrowdsaleWallet(json){let data=null;try{data=JSON.parse(json)}catch(error){return false}return data.encseed&&data.ethaddr}function isKeystoreWallet(json){let data=null;try{data=JSON.parse(json)}catch(error){return false}if(!data.version||parseInt(data.version)!==data.version||parseInt(data.version)!==3){return false}return true}function getJsonWalletAddress(json){if(isCrowdsaleWallet(json)){try{return getAddress$1(JSON.parse(json).ethaddr)}catch(error){return null}}if(isKeystoreWallet(json)){try{return getAddress$1(JSON.parse(json).address)}catch(error){return null}}return null}var __awaiter$1a=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$k=new Logger(version$7);function hasMnemonic$1(value){return value!=null&&value.mnemonic&&value.mnemonic.phrase}class KeystoreAccount extends Description{isKeystoreAccount(value){return!!(value&&value._isKeystoreAccount)}}function _decrypt(data,key,ciphertext){const cipher=searchPath(data,"crypto/cipher");if(cipher==="aes-128-ctr"){const iv=looseArrayify(searchPath(data,"crypto/cipherparams/iv"));const counter=new aes.Counter(iv);const aesCtr=new aes.ModeOfOperation.ctr(key,counter);return arrayify(aesCtr.decrypt(ciphertext))}return null}function _getAccount(data,key){const ciphertext=looseArrayify(searchPath(data,"crypto/ciphertext"));const computedMAC=hexlify(keccak256$3(concat$1([key.slice(16,32),ciphertext]))).substring(2);if(computedMAC!==searchPath(data,"crypto/mac").toLowerCase()){throw new Error("invalid password")}const privateKey=_decrypt(data,key.slice(0,16),ciphertext);if(!privateKey){logger$k.throwError("unsupported cipher",Logger.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"})}const mnemonicKey=key.slice(32,64);const address=computeAddress(privateKey);if(data.address){let check=data.address.toLowerCase();if(check.substring(0,2)!=="0x"){check="0x"+check}if(getAddress$1(check)!==address){throw new Error("address mismatch")}}const account={_isKeystoreAccount:true,address:address,privateKey:hexlify(privateKey)};if(searchPath(data,"x-ethers/version")==="0.1"){const mnemonicCiphertext=looseArrayify(searchPath(data,"x-ethers/mnemonicCiphertext"));const mnemonicIv=looseArrayify(searchPath(data,"x-ethers/mnemonicCounter"));const mnemonicCounter=new aes.Counter(mnemonicIv);const mnemonicAesCtr=new aes.ModeOfOperation.ctr(mnemonicKey,mnemonicCounter);const path=searchPath(data,"x-ethers/path")||defaultPath;const locale=searchPath(data,"x-ethers/locale")||"en";const entropy=arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));try{const mnemonic=entropyToMnemonic(entropy,locale);const node=HDNode.fromMnemonic(mnemonic,null,locale).derivePath(path);if(node.privateKey!=account.privateKey){throw new Error("mnemonic mismatch")}account.mnemonic=node.mnemonic}catch(error){if(error.code!==Logger.errors.INVALID_ARGUMENT||error.argument!=="wordlist"){throw error}}}return new KeystoreAccount(account)}function pbkdf2Sync(passwordBytes,salt,count,dkLen,prfFunc){return arrayify(pbkdf2$1(passwordBytes,salt,count,dkLen,prfFunc))}function pbkdf2(passwordBytes,salt,count,dkLen,prfFunc){return Promise.resolve(pbkdf2Sync(passwordBytes,salt,count,dkLen,prfFunc))}function _computeKdfKey(data,password,pbkdf2Func,scryptFunc,progressCallback){const passwordBytes=getPassword(password);const kdf=searchPath(data,"crypto/kdf");if(kdf&&typeof kdf==="string"){const throwError=function(name,value){return logger$k.throwArgumentError("invalid key-derivation function parameters",name,value)};if(kdf.toLowerCase()==="scrypt"){const salt=looseArrayify(searchPath(data,"crypto/kdfparams/salt"));const N=parseInt(searchPath(data,"crypto/kdfparams/n"));const r=parseInt(searchPath(data,"crypto/kdfparams/r"));const p=parseInt(searchPath(data,"crypto/kdfparams/p"));if(!N||!r||!p){throwError("kdf",kdf)}if((N&N-1)!==0){throwError("N",N)}const dkLen=parseInt(searchPath(data,"crypto/kdfparams/dklen"));if(dkLen!==32){throwError("dklen",dkLen)}return scryptFunc(passwordBytes,salt,N,r,p,64,progressCallback)}else if(kdf.toLowerCase()==="pbkdf2"){const salt=looseArrayify(searchPath(data,"crypto/kdfparams/salt"));let prfFunc=null;const prf=searchPath(data,"crypto/kdfparams/prf");if(prf==="hmac-sha256"){prfFunc="sha256"}else if(prf==="hmac-sha512"){prfFunc="sha512"}else{throwError("prf",prf)}const count=parseInt(searchPath(data,"crypto/kdfparams/c"));const dkLen=parseInt(searchPath(data,"crypto/kdfparams/dklen"));if(dkLen!==32){throwError("dklen",dkLen)}return pbkdf2Func(passwordBytes,salt,count,dkLen,prfFunc)}}return logger$k.throwArgumentError("unsupported key-derivation function","kdf",kdf)}function decryptSync(json,password){const data=JSON.parse(json);const key=_computeKdfKey(data,password,pbkdf2Sync,scrypt.syncScrypt);return _getAccount(data,key)}function decrypt(json,password,progressCallback){return __awaiter$1a(this,void 0,void 0,function*(){const data=JSON.parse(json);const key=yield _computeKdfKey(data,password,pbkdf2,scrypt.scrypt,progressCallback);return _getAccount(data,key)})}function encrypt(account,password,options,progressCallback){try{if(getAddress$1(account.address)!==computeAddress(account.privateKey)){throw new Error("address/privateKey mismatch")}if(hasMnemonic$1(account)){const mnemonic=account.mnemonic;const node=HDNode.fromMnemonic(mnemonic.phrase,null,mnemonic.locale).derivePath(mnemonic.path||defaultPath);if(node.privateKey!=account.privateKey){throw new Error("mnemonic mismatch")}}}catch(e){return Promise.reject(e)}if(typeof options==="function"&&!progressCallback){progressCallback=options;options={}}if(!options){options={}}const privateKey=arrayify(account.privateKey);const passwordBytes=getPassword(password);let entropy=null;let path=null;let locale=null;if(hasMnemonic$1(account)){const srcMnemonic=account.mnemonic;entropy=arrayify(mnemonicToEntropy(srcMnemonic.phrase,srcMnemonic.locale||"en"));path=srcMnemonic.path||defaultPath;locale=srcMnemonic.locale||"en"}let client=options.client;if(!client){client="ethers.js"}let salt=null;if(options.salt){salt=arrayify(options.salt)}else{salt=randomBytes(32)}let iv=null;if(options.iv){iv=arrayify(options.iv);if(iv.length!==16){throw new Error("invalid iv")}}else{iv=randomBytes(16)}let uuidRandom=null;if(options.uuid){uuidRandom=arrayify(options.uuid);if(uuidRandom.length!==16){throw new Error("invalid uuid")}}else{uuidRandom=randomBytes(16)}let N=1<<17,r=8,p=1;if(options.scrypt){if(options.scrypt.N){N=options.scrypt.N}if(options.scrypt.r){r=options.scrypt.r}if(options.scrypt.p){p=options.scrypt.p}}return scrypt.scrypt(passwordBytes,salt,N,r,p,64,progressCallback).then(key=>{key=arrayify(key);const derivedKey=key.slice(0,16);const macPrefix=key.slice(16,32);const mnemonicKey=key.slice(32,64);const counter=new aes.Counter(iv);const aesCtr=new aes.ModeOfOperation.ctr(derivedKey,counter);const ciphertext=arrayify(aesCtr.encrypt(privateKey));const mac=keccak256$3(concat$1([macPrefix,ciphertext]));const data={address:account.address.substring(2).toLowerCase(),id:uuidV4(uuidRandom),version:3,crypto:{cipher:"aes-128-ctr",cipherparams:{iv:hexlify(iv).substring(2)},ciphertext:hexlify(ciphertext).substring(2),kdf:"scrypt",kdfparams:{salt:hexlify(salt).substring(2),n:N,dklen:32,p:p,r:r},mac:mac.substring(2)}};if(entropy){const mnemonicIv=randomBytes(16);const mnemonicCounter=new aes.Counter(mnemonicIv);const mnemonicAesCtr=new aes.ModeOfOperation.ctr(mnemonicKey,mnemonicCounter);const mnemonicCiphertext=arrayify(mnemonicAesCtr.encrypt(entropy));const now=new Date;const timestamp=now.getUTCFullYear()+"-"+zpad(now.getUTCMonth()+1,2)+"-"+zpad(now.getUTCDate(),2)+"T"+zpad(now.getUTCHours(),2)+"-"+zpad(now.getUTCMinutes(),2)+"-"+zpad(now.getUTCSeconds(),2)+".0Z";data["x-ethers"]={client:client,gethFilename:"UTC--"+timestamp+"--"+data.address,mnemonicCounter:hexlify(mnemonicIv).substring(2),mnemonicCiphertext:hexlify(mnemonicCiphertext).substring(2),path:path,locale:locale,version:"0.1"}}return JSON.stringify(data)})}function decryptJsonWallet(json,password,progressCallback){if(isCrowdsaleWallet(json)){if(progressCallback){progressCallback(0)}const account=decrypt$1(json,password);if(progressCallback){progressCallback(1)}return Promise.resolve(account)}if(isKeystoreWallet(json)){return decrypt(json,password,progressCallback)}return Promise.reject(new Error("invalid JSON wallet"))}function decryptJsonWalletSync(json,password){if(isCrowdsaleWallet(json)){return decrypt$1(json,password)}if(isKeystoreWallet(json)){return decryptSync(json,password)}throw new Error("invalid JSON wallet")}const version$6="wallet/5.7.0";var __awaiter$19=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$j=new Logger(version$6);function isAccount(value){return value!=null&&isHexString(value.privateKey,32)&&value.address!=null}function hasMnemonic(value){const mnemonic=value.mnemonic;return mnemonic&&mnemonic.phrase}class Wallet extends Signer{constructor(privateKey,provider){super();if(isAccount(privateKey)){const signingKey=new SigningKey(privateKey.privateKey);defineReadOnly(this,"_signingKey",()=>signingKey);defineReadOnly(this,"address",computeAddress(this.publicKey));if(this.address!==getAddress$1(privateKey.address)){logger$j.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]")}if(hasMnemonic(privateKey)){const srcMnemonic=privateKey.mnemonic;defineReadOnly(this,"_mnemonic",()=>({phrase:srcMnemonic.phrase,path:srcMnemonic.path||defaultPath,locale:srcMnemonic.locale||"en"}));const mnemonic=this.mnemonic;const node=HDNode.fromMnemonic(mnemonic.phrase,null,mnemonic.locale).derivePath(mnemonic.path);if(computeAddress(node.privateKey)!==this.address){logger$j.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}}else{defineReadOnly(this,"_mnemonic",()=>null)}}else{if(SigningKey.isSigningKey(privateKey)){if(privateKey.curve!=="secp256k1"){logger$j.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]")}defineReadOnly(this,"_signingKey",()=>privateKey)}else{if(typeof privateKey==="string"){if(privateKey.match(/^[0-9a-f]*$/i)&&privateKey.length===64){privateKey="0x"+privateKey}}const signingKey=new SigningKey(privateKey);defineReadOnly(this,"_signingKey",()=>signingKey)}defineReadOnly(this,"_mnemonic",()=>null);defineReadOnly(this,"address",computeAddress(this.publicKey))}if(provider&&!Provider.isProvider(provider)){logger$j.throwArgumentError("invalid provider","provider",provider)}defineReadOnly(this,"provider",provider||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(provider){return new Wallet(this,provider)}signTransaction(transaction){return resolveProperties(transaction).then(tx=>{if(tx.from!=null){if(getAddress$1(tx.from)!==this.address){logger$j.throwArgumentError("transaction from address mismatch","transaction.from",transaction.from)}delete tx.from}const signature=this._signingKey().signDigest(keccak256$3(serialize$1(tx)));return serialize$1(tx,signature)})}signMessage(message){return __awaiter$19(this,void 0,void 0,function*(){return joinSignature(this._signingKey().signDigest(hashMessage$1(message)))})}_signTypedData(domain,types,value){return __awaiter$19(this,void 0,void 0,function*(){const populated=yield TypedDataEncoder.resolveNames(domain,types,value,name=>{if(this.provider==null){logger$j.throwError("cannot resolve ENS names without a provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:name})}return this.provider.resolveName(name)});return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain,types,populated.value)))})}encrypt(password,options,progressCallback){if(typeof options==="function"&&!progressCallback){progressCallback=options;options={}}if(progressCallback&&typeof progressCallback!=="function"){throw new Error("invalid callback")}if(!options){options={}}return encrypt(this,password,options,progressCallback)}static createRandom(options){let entropy=randomBytes(16);if(!options){options={}}if(options.extraEntropy){entropy=arrayify(hexDataSlice(keccak256$3(concat$1([entropy,options.extraEntropy])),0,16))}const mnemonic=entropyToMnemonic(entropy,options.locale);return Wallet.fromMnemonic(mnemonic,options.path,options.locale)}static fromEncryptedJson(json,password,progressCallback){return decryptJsonWallet(json,password,progressCallback).then(account=>{return new Wallet(account)})}static fromEncryptedJsonSync(json,password){return new Wallet(decryptJsonWalletSync(json,password))}static fromMnemonic(mnemonic,path,wordlist){if(!path){path=defaultPath}return new Wallet(HDNode.fromMnemonic(mnemonic,null,wordlist).derivePath(path))}}function verifyMessage$1(message,signature){return recoverAddress(hashMessage$1(message),signature)}function verifyTypedData$1(domain,types,value,signature){return recoverAddress(TypedDataEncoder.hash(domain,types,value),signature)}const version$5="networks/5.7.1";const logger$i=new Logger(version$5);function isRenetworkable(value){return value&&typeof value.renetwork==="function"}function ethDefaultProvider(network){const func=function(providers,options){if(options==null){options={}}const providerList=[];if(providers.InfuraProvider&&options.infura!=="-"){try{providerList.push(new providers.InfuraProvider(network,options.infura))}catch(error){}}if(providers.EtherscanProvider&&options.etherscan!=="-"){try{providerList.push(new providers.EtherscanProvider(network,options.etherscan))}catch(error){}}if(providers.AlchemyProvider&&options.alchemy!=="-"){try{providerList.push(new providers.AlchemyProvider(network,options.alchemy))}catch(error){}}if(providers.PocketProvider&&options.pocket!=="-"){const skip=["goerli","ropsten","rinkeby","sepolia"];try{const provider=new providers.PocketProvider(network,options.pocket);if(provider.network&&skip.indexOf(provider.network.name)===-1){providerList.push(provider)}}catch(error){}}if(providers.CloudflareProvider&&options.cloudflare!=="-"){try{providerList.push(new providers.CloudflareProvider(network))}catch(error){}}if(providers.AnkrProvider&&options.ankr!=="-"){try{const skip=["ropsten"];const provider=new providers.AnkrProvider(network,options.ankr);if(provider.network&&skip.indexOf(provider.network.name)===-1){providerList.push(provider)}}catch(error){}}if(providerList.length===0){return null}if(providers.FallbackProvider){let quorum=1;if(options.quorum!=null){quorum=options.quorum}else if(network==="homestead"){quorum=2}return new providers.FallbackProvider(providerList,quorum)}return providerList[0]};func.renetwork=function(network){return ethDefaultProvider(network)};return func}function etcDefaultProvider(url,network){const func=function(providers,options){if(providers.JsonRpcProvider){return new providers.JsonRpcProvider(url,network)}return null};func.renetwork=function(network){return etcDefaultProvider(url,network)};return func}const homestead={chainId:1,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"homestead",_defaultProvider:ethDefaultProvider("homestead")};const ropsten={chainId:3,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"ropsten",_defaultProvider:ethDefaultProvider("ropsten")};const classicMordor={chainId:63,name:"classicMordor",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/mordor","classicMordor")};const networks={unspecified:{chainId:0,name:"unspecified"},homestead:homestead,mainnet:homestead,morden:{chainId:2,name:"morden"},ropsten:ropsten,testnet:ropsten,rinkeby:{chainId:4,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"rinkeby",_defaultProvider:ethDefaultProvider("rinkeby")},kovan:{chainId:42,name:"kovan",_defaultProvider:ethDefaultProvider("kovan")},goerli:{chainId:5,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"goerli",_defaultProvider:ethDefaultProvider("goerli")},kintsugi:{chainId:1337702,name:"kintsugi"},sepolia:{chainId:11155111,name:"sepolia",_defaultProvider:ethDefaultProvider("sepolia")},classic:{chainId:61,name:"classic",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/etc","classic")},classicMorden:{chainId:62,name:"classicMorden"},classicMordor:classicMordor,classicTestnet:classicMordor,classicKotti:{chainId:6,name:"classicKotti",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/kotti","classicKotti")},xdai:{chainId:100,name:"xdai"},matic:{chainId:137,name:"matic",_defaultProvider:ethDefaultProvider("matic")},maticmum:{chainId:80001,name:"maticmum"},optimism:{chainId:10,name:"optimism",_defaultProvider:ethDefaultProvider("optimism")},"optimism-kovan":{chainId:69,name:"optimism-kovan"},"optimism-goerli":{chainId:420,name:"optimism-goerli"},arbitrum:{chainId:42161,name:"arbitrum"},"arbitrum-rinkeby":{chainId:421611,name:"arbitrum-rinkeby"},"arbitrum-goerli":{chainId:421613,name:"arbitrum-goerli"},bnb:{chainId:56,name:"bnb"},bnbt:{chainId:97,name:"bnbt"}};function getNetwork(network){if(network==null){return null}if(typeof network==="number"){for(const name in networks){const standard=networks[name];if(standard.chainId===network){return{name:standard.name,chainId:standard.chainId,ensAddress:standard.ensAddress||null,_defaultProvider:standard._defaultProvider||null}}}return{chainId:network,name:"unknown"}}if(typeof network==="string"){const standard=networks[network];if(standard==null){return null}return{name:standard.name,chainId:standard.chainId,ensAddress:standard.ensAddress,_defaultProvider:standard._defaultProvider||null}}const standard=networks[network.name];if(!standard){if(typeof network.chainId!=="number"){logger$i.throwArgumentError("invalid network chainId","network",network)}return network}if(network.chainId!==0&&network.chainId!==standard.chainId){logger$i.throwArgumentError("network chainId mismatch","network",network)}let defaultProvider=network._defaultProvider||null;if(defaultProvider==null&&standard._defaultProvider){if(isRenetworkable(standard._defaultProvider)){defaultProvider=standard._defaultProvider.renetwork(network)}else{defaultProvider=standard._defaultProvider}}return{name:network.name,chainId:standard.chainId,ensAddress:network.ensAddress||standard.ensAddress||null,_defaultProvider:defaultProvider}}const version$4="web/5.7.1";var __awaiter$18=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};function getUrl$1(href,options){return __awaiter$18(this,void 0,void 0,function*(){if(options==null){options={}}const request={method:options.method||"GET",headers:options.headers||{},body:options.body||undefined};if(options.skipFetchSetup!==true){request.mode="cors";request.cache="no-cache";request.credentials="same-origin";request.redirect="follow";request.referrer="client"}if(options.fetchOptions!=null){const opts=options.fetchOptions;if(opts.mode){request.mode=opts.mode}if(opts.cache){request.cache=opts.cache}if(opts.credentials){request.credentials=opts.credentials}if(opts.redirect){request.redirect=opts.redirect}if(opts.referrer){request.referrer=opts.referrer}}const response=yield fetch(href,request);const body=yield response.arrayBuffer();const headers={};if(response.headers.forEach){response.headers.forEach((value,key)=>{headers[key.toLowerCase()]=value})}else{response.headers.keys().forEach(key=>{headers[key.toLowerCase()]=response.headers.get(key)})}return{headers:headers,statusCode:response.status,statusMessage:response.statusText,body:arrayify(new Uint8Array(body))}})}var __awaiter$17=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$h=new Logger(version$4);function staller(duration){return new Promise(resolve=>{setTimeout(resolve,duration)})}function bodyify(value,type){if(value==null){return null}if(typeof value==="string"){return value}if(isBytesLike(value)){if(type&&(type.split("/")[0]==="text"||type.split(";")[0].trim()==="application/json")){try{return toUtf8String(value)}catch(error){}}return hexlify(value)}return value}function unpercent(value){return toUtf8Bytes$1(value.replace(/%([0-9a-f][0-9a-f])/gi,(all,code)=>{return String.fromCharCode(parseInt(code,16))}))}function _fetchData(connection,body,processFunc){const attemptLimit=typeof connection==="object"&&connection.throttleLimit!=null?connection.throttleLimit:12;logger$h.assertArgument(attemptLimit>0&&attemptLimit%1===0,"invalid connection throttle limit","connection.throttleLimit",attemptLimit);const throttleCallback=typeof connection==="object"?connection.throttleCallback:null;const throttleSlotInterval=typeof connection==="object"&&typeof connection.throttleSlotInterval==="number"?connection.throttleSlotInterval:100;logger$h.assertArgument(throttleSlotInterval>0&&throttleSlotInterval%1===0,"invalid connection throttle slot interval","connection.throttleSlotInterval",throttleSlotInterval);const errorPassThrough=typeof connection==="object"?!!connection.errorPassThrough:false;const headers={};let url=null;const options={method:"GET"};let allow304=false;let timeout=2*60*1e3;if(typeof connection==="string"){url=connection}else if(typeof connection==="object"){if(connection==null||connection.url==null){logger$h.throwArgumentError("missing URL","connection.url",connection)}url=connection.url;if(typeof connection.timeout==="number"&&connection.timeout>0){timeout=connection.timeout}if(connection.headers){for(const key in connection.headers){headers[key.toLowerCase()]={key:key,value:String(connection.headers[key])};if(["if-none-match","if-modified-since"].indexOf(key.toLowerCase())>=0){allow304=true}}}options.allowGzip=!!connection.allowGzip;if(connection.user!=null&&connection.password!=null){if(url.substring(0,6)!=="https:"&&connection.allowInsecureAuthentication!==true){logger$h.throwError("basic authentication requires a secure https url",Logger.errors.INVALID_ARGUMENT,{argument:"url",url:url,user:connection.user,password:"[REDACTED]"})}const authorization=connection.user+":"+connection.password;headers["authorization"]={key:"Authorization",value:"Basic "+encode(toUtf8Bytes$1(authorization))}}if(connection.skipFetchSetup!=null){options.skipFetchSetup=!!connection.skipFetchSetup}if(connection.fetchOptions!=null){options.fetchOptions=shallowCopy(connection.fetchOptions)}}const reData=new RegExp("^data:([^;:]*)?(;base64)?,(.*)$","i");const dataMatch=url?url.match(reData):null;if(dataMatch){try{const response={statusCode:200,statusMessage:"OK",headers:{"content-type":dataMatch[1]||"text/plain"},body:dataMatch[2]?decode(dataMatch[3]):unpercent(dataMatch[3])};let result=response.body;if(processFunc){result=processFunc(response.body,response)}return Promise.resolve(result)}catch(error){logger$h.throwError("processing response error",Logger.errors.SERVER_ERROR,{body:bodyify(dataMatch[1],dataMatch[2]),error:error,requestBody:null,requestMethod:"GET",url:url})}}if(body){options.method="POST";options.body=body;if(headers["content-type"]==null){headers["content-type"]={key:"Content-Type",value:"application/octet-stream"}}if(headers["content-length"]==null){headers["content-length"]={key:"Content-Length",value:String(body.length)}}}const flatHeaders={};Object.keys(headers).forEach(key=>{const header=headers[key];flatHeaders[header.key]=header.value});options.headers=flatHeaders;const runningTimeout=function(){let timer=null;const promise=new Promise(function(resolve,reject){if(timeout){timer=setTimeout(()=>{if(timer==null){return}timer=null;reject(logger$h.makeError("timeout",Logger.errors.TIMEOUT,{requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,timeout:timeout,url:url}))},timeout)}});const cancel=function(){if(timer==null){return}clearTimeout(timer);timer=null};return{promise:promise,cancel:cancel}}();const runningFetch=function(){return __awaiter$17(this,void 0,void 0,function*(){for(let attempt=0;attempt<attemptLimit;attempt++){let response=null;try{response=yield getUrl$1(url,options);if(attempt<attemptLimit){if(response.statusCode===301||response.statusCode===302){const location=response.headers.location||"";if(options.method==="GET"&&location.match(/^https:/)){url=response.headers.location;continue}}else if(response.statusCode===429){let tryAgain=true;if(throttleCallback){tryAgain=yield throttleCallback(attempt,url)}if(tryAgain){let stall=0;const retryAfter=response.headers["retry-after"];if(typeof retryAfter==="string"&&retryAfter.match(/^[1-9][0-9]*$/)){stall=parseInt(retryAfter)*1e3}else{stall=throttleSlotInterval*parseInt(String(Math.random()*Math.pow(2,attempt)))}yield staller(stall);continue}}}}catch(error){response=error.response;if(response==null){runningTimeout.cancel();logger$h.throwError("missing response",Logger.errors.SERVER_ERROR,{requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,serverError:error,url:url})}}let body=response.body;if(allow304&&response.statusCode===304){body=null}else if(!errorPassThrough&&(response.statusCode<200||response.statusCode>=300)){runningTimeout.cancel();logger$h.throwError("bad response",Logger.errors.SERVER_ERROR,{status:response.statusCode,headers:response.headers,body:bodyify(body,response.headers?response.headers["content-type"]:null),requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,url:url})}if(processFunc){try{const result=yield processFunc(body,response);runningTimeout.cancel();return result}catch(error){if(error.throttleRetry&&attempt<attemptLimit){let tryAgain=true;if(throttleCallback){tryAgain=yield throttleCallback(attempt,url)}if(tryAgain){const timeout=throttleSlotInterval*parseInt(String(Math.random()*Math.pow(2,attempt)));yield staller(timeout);continue}}runningTimeout.cancel();logger$h.throwError("processing response error",Logger.errors.SERVER_ERROR,{body:bodyify(body,response.headers?response.headers["content-type"]:null),error:error,requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,url:url})}}runningTimeout.cancel();return body}return logger$h.throwError("failed response",Logger.errors.SERVER_ERROR,{requestBody:bodyify(options.body,flatHeaders["content-type"]),requestMethod:options.method,url:url})})}();return Promise.race([runningTimeout.promise,runningFetch])}function fetchJson(connection,json,processFunc){let processJsonFunc=(value,response)=>{let result=null;if(value!=null){try{result=JSON.parse(toUtf8String(value))}catch(error){logger$h.throwError("invalid JSON",Logger.errors.SERVER_ERROR,{body:value,error:error})}}if(processFunc){result=processFunc(result,response)}return result};let body=null;if(json!=null){body=toUtf8Bytes$1(json);const updated=typeof connection==="string"?{url:connection}:shallowCopy(connection);if(updated.headers){const hasContentType=Object.keys(updated.headers).filter(k=>k.toLowerCase()==="content-type").length!==0;if(!hasContentType){updated.headers=shallowCopy(updated.headers);updated.headers["content-type"]="application/json"}}else{updated.headers={"content-type":"application/json"}}connection=updated}return _fetchData(connection,body,processJsonFunc)}function poll$1(func,options){if(!options){options={}}options=shallowCopy(options);if(options.floor==null){options.floor=0}if(options.ceiling==null){options.ceiling=1e4}if(options.interval==null){options.interval=250}return new Promise(function(resolve,reject){let timer=null;let done=false;const cancel=()=>{if(done){return false}done=true;if(timer){clearTimeout(timer)}return true};if(options.timeout){timer=setTimeout(()=>{if(cancel()){reject(new Error("timeout"))}},options.timeout)}const retryLimit=options.retryLimit;let attempt=0;function check(){return func().then(function(result){if(result!==undefined){if(cancel()){resolve(result)}}else if(options.oncePoll){options.oncePoll.once("poll",check)}else if(options.onceBlock){options.onceBlock.once("block",check)}else if(!done){attempt++;if(attempt>retryLimit){if(cancel()){reject(new Error("retry limit reached"))}return}let timeout=options.interval*parseInt(String(Math.random()*Math.pow(2,attempt)));if(timeout<options.floor){timeout=options.floor}if(timeout>options.ceiling){timeout=options.ceiling}setTimeout(check,timeout)}return null},function(error){if(cancel()){reject(error)}})}check()})}const version$3="providers/5.7.2";const logger$g=new Logger(version$3);class Formatter{constructor(){this.formats=this.getDefaultFormats()}getDefaultFormats(){const formats={};const address=this.address.bind(this);const bigNumber=this.bigNumber.bind(this);const blockTag=this.blockTag.bind(this);const data=this.data.bind(this);const hash=this.hash.bind(this);const hex=this.hex.bind(this);const number=this.number.bind(this);const type=this.type.bind(this);const strictData=v=>{return this.data(v,true)};formats.transaction={hash:hash,type:type,accessList:Formatter.allowNull(this.accessList.bind(this),null),blockHash:Formatter.allowNull(hash,null),blockNumber:Formatter.allowNull(number,null),transactionIndex:Formatter.allowNull(number,null),confirmations:Formatter.allowNull(number,null),from:address,gasPrice:Formatter.allowNull(bigNumber),maxPriorityFeePerGas:Formatter.allowNull(bigNumber),maxFeePerGas:Formatter.allowNull(bigNumber),gasLimit:bigNumber,to:Formatter.allowNull(address,null),value:bigNumber,nonce:number,data:data,r:Formatter.allowNull(this.uint256),s:Formatter.allowNull(this.uint256),v:Formatter.allowNull(number),creates:Formatter.allowNull(address,null),raw:Formatter.allowNull(data)};formats.transactionRequest={from:Formatter.allowNull(address),nonce:Formatter.allowNull(number),gasLimit:Formatter.allowNull(bigNumber),gasPrice:Formatter.allowNull(bigNumber),maxPriorityFeePerGas:Formatter.allowNull(bigNumber),maxFeePerGas:Formatter.allowNull(bigNumber),to:Formatter.allowNull(address),value:Formatter.allowNull(bigNumber),data:Formatter.allowNull(strictData),type:Formatter.allowNull(number),accessList:Formatter.allowNull(this.accessList.bind(this),null)};formats.receiptLog={transactionIndex:number,blockNumber:number,transactionHash:hash,address:address,topics:Formatter.arrayOf(hash),data:data,logIndex:number,blockHash:hash};formats.receipt={to:Formatter.allowNull(this.address,null),from:Formatter.allowNull(this.address,null),contractAddress:Formatter.allowNull(address,null),transactionIndex:number,root:Formatter.allowNull(hex),gasUsed:bigNumber,logsBloom:Formatter.allowNull(data),blockHash:hash,transactionHash:hash,logs:Formatter.arrayOf(this.receiptLog.bind(this)),blockNumber:number,confirmations:Formatter.allowNull(number,null),cumulativeGasUsed:bigNumber,effectiveGasPrice:Formatter.allowNull(bigNumber),status:Formatter.allowNull(number),type:type};formats.block={hash:Formatter.allowNull(hash),parentHash:hash,number:number,timestamp:number,nonce:Formatter.allowNull(hex),difficulty:this.difficulty.bind(this),gasLimit:bigNumber,gasUsed:bigNumber,miner:Formatter.allowNull(address),extraData:data,transactions:Formatter.allowNull(Formatter.arrayOf(hash)),baseFeePerGas:Formatter.allowNull(bigNumber)};formats.blockWithTransactions=shallowCopy(formats.block);formats.blockWithTransactions.transactions=Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));formats.filter={fromBlock:Formatter.allowNull(blockTag,undefined),toBlock:Formatter.allowNull(blockTag,undefined),blockHash:Formatter.allowNull(hash,undefined),address:Formatter.allowNull(address,undefined),topics:Formatter.allowNull(this.topics.bind(this),undefined)};formats.filterLog={blockNumber:Formatter.allowNull(number),blockHash:Formatter.allowNull(hash),transactionIndex:number,removed:Formatter.allowNull(this.boolean.bind(this)),address:address,data:Formatter.allowFalsish(data,"0x"),topics:Formatter.arrayOf(hash),transactionHash:hash,logIndex:number};return formats}accessList(accessList){return accessListify(accessList||[])}number(number){if(number==="0x"){return 0}return BigNumber$1.from(number).toNumber()}type(number){if(number==="0x"||number==null){return 0}return BigNumber$1.from(number).toNumber()}bigNumber(value){return BigNumber$1.from(value)}boolean(value){if(typeof value==="boolean"){return value}if(typeof value==="string"){value=value.toLowerCase();if(value==="true"){return true}if(value==="false"){return false}}throw new Error("invalid boolean - "+value)}hex(value,strict){if(typeof value==="string"){if(!strict&&value.substring(0,2)!=="0x"){value="0x"+value}if(isHexString(value)){return value.toLowerCase()}}return logger$g.throwArgumentError("invalid hash","value",value)}data(value,strict){const result=this.hex(value,strict);if(result.length%2!==0){throw new Error("invalid data; odd-length - "+value)}return result}address(value){return getAddress$1(value)}callAddress(value){if(!isHexString(value,32)){return null}const address=getAddress$1(hexDataSlice(value,12));return address===AddressZero$2?null:address}contractAddress(value){return getContractAddress$1(value)}blockTag(blockTag){if(blockTag==null){return"latest"}if(blockTag==="earliest"){return"0x0"}switch(blockTag){case"earliest":return"0x0";case"latest":case"pending":case"safe":case"finalized":return blockTag}if(typeof blockTag==="number"||isHexString(blockTag)){return hexValue(blockTag)}throw new Error("invalid blockTag")}hash(value,strict){const result=this.hex(value,strict);if(hexDataLength(result)!==32){return logger$g.throwArgumentError("invalid hash","value",value)}return result}difficulty(value){if(value==null){return null}const v=BigNumber$1.from(value);try{return v.toNumber()}catch(error){}return null}uint256(value){if(!isHexString(value)){throw new Error("invalid uint256")}return hexZeroPad(value,32)}_block(value,format){if(value.author!=null&&value.miner==null){value.miner=value.author}const difficulty=value._difficulty!=null?value._difficulty:value.difficulty;const result=Formatter.check(format,value);result._difficulty=difficulty==null?null:BigNumber$1.from(difficulty);return result}block(value){return this._block(value,this.formats.block)}blockWithTransactions(value){return this._block(value,this.formats.blockWithTransactions)}transactionRequest(value){return Formatter.check(this.formats.transactionRequest,value)}transactionResponse(transaction){if(transaction.gas!=null&&transaction.gasLimit==null){transaction.gasLimit=transaction.gas}if(transaction.to&&BigNumber$1.from(transaction.to).isZero()){transaction.to="0x0000000000000000000000000000000000000000"}if(transaction.input!=null&&transaction.data==null){transaction.data=transaction.input}if(transaction.to==null&&transaction.creates==null){transaction.creates=this.contractAddress(transaction)}if((transaction.type===1||transaction.type===2)&&transaction.accessList==null){transaction.accessList=[]}const result=Formatter.check(this.formats.transaction,transaction);if(transaction.chainId!=null){let chainId=transaction.chainId;if(isHexString(chainId)){chainId=BigNumber$1.from(chainId).toNumber()}result.chainId=chainId}else{let chainId=transaction.networkId;if(chainId==null&&result.v==null){chainId=transaction.chainId}if(isHexString(chainId)){chainId=BigNumber$1.from(chainId).toNumber()}if(typeof chainId!=="number"&&result.v!=null){chainId=(result.v-35)/2;if(chainId<0){chainId=0}chainId=parseInt(chainId)}if(typeof chainId!=="number"){chainId=0}result.chainId=chainId}if(result.blockHash&&result.blockHash.replace(/0/g,"")==="x"){result.blockHash=null}return result}transaction(value){return parse$1(value)}receiptLog(value){return Formatter.check(this.formats.receiptLog,value)}receipt(value){const result=Formatter.check(this.formats.receipt,value);if(result.root!=null){if(result.root.length<=4){const value=BigNumber$1.from(result.root).toNumber();if(value===0||value===1){if(result.status!=null&&result.status!==value){logger$g.throwArgumentError("alt-root-status/status mismatch","value",{root:result.root,status:result.status})}result.status=value;delete result.root}else{logger$g.throwArgumentError("invalid alt-root-status","value.root",result.root)}}else if(result.root.length!==66){logger$g.throwArgumentError("invalid root hash","value.root",result.root)}}if(result.status!=null){result.byzantium=true}return result}topics(value){if(Array.isArray(value)){return value.map(v=>this.topics(v))}else if(value!=null){return this.hash(value,true)}return null}filter(value){return Formatter.check(this.formats.filter,value)}filterLog(value){return Formatter.check(this.formats.filterLog,value)}static check(format,object){const result={};for(const key in format){try{const value=format[key](object[key]);if(value!==undefined){result[key]=value}}catch(error){error.checkKey=key;error.checkValue=object[key];throw error}}return result}static allowNull(format,nullValue){return function(value){if(value==null){return nullValue}return format(value)}}static allowFalsish(format,replaceValue){return function(value){if(!value){return replaceValue}return format(value)}}static arrayOf(format){return function(array){if(!Array.isArray(array)){throw new Error("not an array")}const result=[];array.forEach(function(value){result.push(format(value))});return result}}}function isCommunityResourcable(value){return value&&typeof value.isCommunityResource==="function"}function isCommunityResource(value){return isCommunityResourcable(value)&&value.isCommunityResource()}let throttleMessage=false;function showThrottleMessage(){if(throttleMessage){return}throttleMessage=true;console.log("========= NOTICE =========");console.log("Request-Rate Exceeded  (this message will not be repeated)");console.log("");console.log("The default API keys for each service are provided as a highly-throttled,");console.log("community resource for low-traffic projects and early prototyping.");console.log("");console.log("While your application will continue to function, we highly recommended");console.log("signing up for your own API keys to improve performance, increase your");console.log("request rate/limit and enable other perks, such as metrics and advanced APIs.");console.log("");console.log("For more details: https://docs.ethers.io/api-keys/");console.log("==========================")}var __awaiter$16=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$f=new Logger(version$3);const MAX_CCIP_REDIRECTS=10;function checkTopic(topic){if(topic==null){return"null"}if(hexDataLength(topic)!==32){logger$f.throwArgumentError("invalid topic","topic",topic)}return topic.toLowerCase()}function serializeTopics(topics){topics=topics.slice();while(topics.length>0&&topics[topics.length-1]==null){topics.pop()}return topics.map(topic=>{if(Array.isArray(topic)){const unique={};topic.forEach(topic=>{unique[checkTopic(topic)]=true});const sorted=Object.keys(unique);sorted.sort();return sorted.join("|")}else{return checkTopic(topic)}}).join("&")}function deserializeTopics(data){if(data===""){return[]}return data.split(/&/g).map(topic=>{if(topic===""){return[]}const comps=topic.split("|").map(topic=>{return topic==="null"?null:topic});return comps.length===1?comps[0]:comps})}function getEventTag(eventName){if(typeof eventName==="string"){eventName=eventName.toLowerCase();if(hexDataLength(eventName)===32){return"tx:"+eventName}if(eventName.indexOf(":")===-1){return eventName}}else if(Array.isArray(eventName)){return"filter:*:"+serializeTopics(eventName)}else if(ForkEvent.isForkEvent(eventName)){logger$f.warn("not implemented");throw new Error("not implemented")}else if(eventName&&typeof eventName==="object"){return"filter:"+(eventName.address||"*")+":"+serializeTopics(eventName.topics||[])}throw new Error("invalid event - "+eventName)}function getTime(){return(new Date).getTime()}function stall$1(duration){return new Promise(resolve=>{setTimeout(resolve,duration)})}const PollableEvents=["block","network","pending","poll"];class Event{constructor(tag,listener,once){defineReadOnly(this,"tag",tag);defineReadOnly(this,"listener",listener);defineReadOnly(this,"once",once);this._lastBlockNumber=-2;this._inflight=false}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter}return this.tag}get type(){return this.tag.split(":")[0]}get hash(){const comps=this.tag.split(":");if(comps[0]!=="tx"){return null}return comps[1]}get filter(){const comps=this.tag.split(":");if(comps[0]!=="filter"){return null}const address=comps[1];const topics=deserializeTopics(comps[2]);const filter={};if(topics.length>0){filter.topics=topics}if(address&&address!=="*"){filter.address=address}return filter}pollable(){return this.tag.indexOf(":")>=0||PollableEvents.indexOf(this.tag)>=0}}const coinInfos={0:{symbol:"btc",p2pkh:0,p2sh:5,prefix:"bc"},2:{symbol:"ltc",p2pkh:48,p2sh:50,prefix:"ltc"},3:{symbol:"doge",p2pkh:30,p2sh:22},60:{symbol:"eth",ilk:"eth"},61:{symbol:"etc",ilk:"eth"},700:{symbol:"xdai",ilk:"eth"}};function bytes32ify(value){return hexZeroPad(BigNumber$1.from(value).toHexString(),32)}function base58Encode(data){return Base58.encode(concat$1([data,hexDataSlice(sha256$1(sha256$1(data)),0,4)]))}const matcherIpfs=new RegExp("^(ipfs)://(.*)$","i");const matchers=[new RegExp("^(https)://(.*)$","i"),new RegExp("^(data):(.*)$","i"),matcherIpfs,new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];function _parseString(result,start){try{return toUtf8String(_parseBytes(result,start))}catch(error){}return null}function _parseBytes(result,start){if(result==="0x"){return null}const offset=BigNumber$1.from(hexDataSlice(result,start,start+32)).toNumber();const length=BigNumber$1.from(hexDataSlice(result,offset,offset+32)).toNumber();return hexDataSlice(result,offset+32,offset+32+length)}function getIpfsLink(link){if(link.match(/^ipfs:\/\/ipfs\//i)){link=link.substring(12)}else if(link.match(/^ipfs:\/\//i)){link=link.substring(7)}else{logger$f.throwArgumentError("unsupported IPFS format","link",link)}return`https:/\/gateway.ipfs.io/ipfs/${link}`}function numPad(value){const result=arrayify(value);if(result.length>32){throw new Error("internal; should not happen")}const padded=new Uint8Array(32);padded.set(result,32-result.length);return padded}function bytesPad(value){if(value.length%32===0){return value}const result=new Uint8Array(Math.ceil(value.length/32)*32);result.set(value);return result}function encodeBytes$1(datas){const result=[];let byteCount=0;for(let i=0;i<datas.length;i++){result.push(null);byteCount+=32}for(let i=0;i<datas.length;i++){const data=arrayify(datas[i]);result[i]=numPad(byteCount);result.push(numPad(data.length));result.push(bytesPad(data));byteCount+=32+Math.ceil(data.length/32)*32}return hexConcat(result)}class Resolver{constructor(provider,address,name,resolvedAddress){defineReadOnly(this,"provider",provider);defineReadOnly(this,"name",name);defineReadOnly(this,"address",provider.formatter.address(address));defineReadOnly(this,"_resolvedAddress",resolvedAddress)}supportsWildcard(){if(!this._supportsEip2544){this._supportsEip2544=this.provider.call({to:this.address,data:"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"}).then(result=>{return BigNumber$1.from(result).eq(1)}).catch(error=>{if(error.code===Logger.errors.CALL_EXCEPTION){return false}this._supportsEip2544=null;throw error})}return this._supportsEip2544}_fetch(selector,parameters){return __awaiter$16(this,void 0,void 0,function*(){const tx={to:this.address,ccipReadEnabled:true,data:hexConcat([selector,namehash$1(this.name),parameters||"0x"])};let parseBytes=false;if(yield this.supportsWildcard()){parseBytes=true;tx.data=hexConcat(["0x9061b923",encodeBytes$1([dnsEncode(this.name),tx.data])])}try{let result=yield this.provider.call(tx);if(arrayify(result).length%32===4){logger$f.throwError("resolver threw error",Logger.errors.CALL_EXCEPTION,{transaction:tx,data:result})}if(parseBytes){result=_parseBytes(result,0)}return result}catch(error){if(error.code===Logger.errors.CALL_EXCEPTION){return null}throw error}})}_fetchBytes(selector,parameters){return __awaiter$16(this,void 0,void 0,function*(){const result=yield this._fetch(selector,parameters);if(result!=null){return _parseBytes(result,0)}return null})}_getAddress(coinType,hexBytes){const coinInfo=coinInfos[String(coinType)];if(coinInfo==null){logger$f.throwError(`unsupported coin type: ${coinType}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${coinType})`})}if(coinInfo.ilk==="eth"){return this.provider.formatter.address(hexBytes)}const bytes=arrayify(hexBytes);if(coinInfo.p2pkh!=null){const p2pkh=hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(p2pkh){const length=parseInt(p2pkh[1],16);if(p2pkh[2].length===length*2&&length>=1&&length<=75){return base58Encode(concat$1([[coinInfo.p2pkh],"0x"+p2pkh[2]]))}}}if(coinInfo.p2sh!=null){const p2sh=hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(p2sh){const length=parseInt(p2sh[1],16);if(p2sh[2].length===length*2&&length>=1&&length<=75){return base58Encode(concat$1([[coinInfo.p2sh],"0x"+p2sh[2]]))}}}if(coinInfo.prefix!=null){const length=bytes[1];let version=bytes[0];if(version===0){if(length!==20&&length!==32){version=-1}}else{version=-1}if(version>=0&&bytes.length===2+length&&length>=1&&length<=75){const words=bech32.toWords(bytes.slice(2));words.unshift(version);return bech32.encode(coinInfo.prefix,words)}}return null}getAddress(coinType){return __awaiter$16(this,void 0,void 0,function*(){if(coinType==null){coinType=60}if(coinType===60){try{const result=yield this._fetch("0x3b3b57de");if(result==="0x"||result===HashZero){return null}return this.provider.formatter.callAddress(result)}catch(error){if(error.code===Logger.errors.CALL_EXCEPTION){return null}throw error}}const hexBytes=yield this._fetchBytes("0xf1cb7e06",bytes32ify(coinType));if(hexBytes==null||hexBytes==="0x"){return null}const address=this._getAddress(coinType,hexBytes);if(address==null){logger$f.throwError(`invalid or unsupported coin data`,Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${coinType})`,coinType:coinType,data:hexBytes})}return address})}getAvatar(){return __awaiter$16(this,void 0,void 0,function*(){const linkage=[{type:"name",content:this.name}];try{const avatar=yield this.getText("avatar");if(avatar==null){return null}for(let i=0;i<matchers.length;i++){const match=avatar.match(matchers[i]);if(match==null){continue}const scheme=match[1].toLowerCase();switch(scheme){case"https":linkage.push({type:"url",content:avatar});return{linkage:linkage,url:avatar};case"data":linkage.push({type:"data",content:avatar});return{linkage:linkage,url:avatar};case"ipfs":linkage.push({type:"ipfs",content:avatar});return{linkage:linkage,url:getIpfsLink(avatar)};case"erc721":case"erc1155":{const selector=scheme==="erc721"?"0xc87b56dd":"0x0e89341c";linkage.push({type:scheme,content:avatar});const owner=this._resolvedAddress||(yield this.getAddress());const comps=(match[2]||"").split("/");if(comps.length!==2){return null}const addr=yield this.provider.formatter.address(comps[0]);const tokenId=hexZeroPad(BigNumber$1.from(comps[1]).toHexString(),32);if(scheme==="erc721"){const tokenOwner=this.provider.formatter.callAddress(yield this.provider.call({to:addr,data:hexConcat(["0x6352211e",tokenId])}));if(owner!==tokenOwner){return null}linkage.push({type:"owner",content:tokenOwner})}else if(scheme==="erc1155"){const balance=BigNumber$1.from(yield this.provider.call({to:addr,data:hexConcat(["0x00fdd58e",hexZeroPad(owner,32),tokenId])}));if(balance.isZero()){return null}linkage.push({type:"balance",content:balance.toString()})}const tx={to:this.provider.formatter.address(comps[0]),data:hexConcat([selector,tokenId])};let metadataUrl=_parseString(yield this.provider.call(tx),0);if(metadataUrl==null){return null}linkage.push({type:"metadata-url-base",content:metadataUrl});if(scheme==="erc1155"){metadataUrl=metadataUrl.replace("{id}",tokenId.substring(2));linkage.push({type:"metadata-url-expanded",content:metadataUrl})}if(metadataUrl.match(/^ipfs:/i)){metadataUrl=getIpfsLink(metadataUrl)}linkage.push({type:"metadata-url",content:metadataUrl});const metadata=yield fetchJson(metadataUrl);if(!metadata){return null}linkage.push({type:"metadata",content:JSON.stringify(metadata)});let imageUrl=metadata.image;if(typeof imageUrl!=="string"){return null}if(imageUrl.match(/^(https:\/\/|data:)/i)){}else{const ipfs=imageUrl.match(matcherIpfs);if(ipfs==null){return null}linkage.push({type:"url-ipfs",content:imageUrl});imageUrl=getIpfsLink(imageUrl)}linkage.push({type:"url",content:imageUrl});return{linkage:linkage,url:imageUrl}}}}}catch(error){}return null})}getContentHash(){return __awaiter$16(this,void 0,void 0,function*(){const hexBytes=yield this._fetchBytes("0xbc1c58d1");if(hexBytes==null||hexBytes==="0x"){return null}const ipfs=hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(ipfs){const length=parseInt(ipfs[3],16);if(ipfs[4].length===length*2){return"ipfs://"+Base58.encode("0x"+ipfs[1])}}const ipns=hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(ipns){const length=parseInt(ipns[3],16);if(ipns[4].length===length*2){return"ipns://"+Base58.encode("0x"+ipns[1])}}const swarm=hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);if(swarm){if(swarm[1].length===32*2){return"bzz://"+swarm[1]}}const skynet=hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);if(skynet){if(skynet[1].length===34*2){const urlSafe={"=":"","+":"-","/":"_"};const hash=encode("0x"+skynet[1]).replace(/[=+\/]/g,a=>urlSafe[a]);return"sia://"+hash}}return logger$f.throwError(`invalid or unsupported content hash data`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"getContentHash()",data:hexBytes})})}getText(key){return __awaiter$16(this,void 0,void 0,function*(){let keyBytes=toUtf8Bytes$1(key);keyBytes=concat$1([bytes32ify(64),bytes32ify(keyBytes.length),keyBytes]);if(keyBytes.length%32!==0){keyBytes=concat$1([keyBytes,hexZeroPad("0x",32-key.length%32)])}const hexBytes=yield this._fetchBytes("0x59d1d43c",hexlify(keyBytes));if(hexBytes==null||hexBytes==="0x"){return null}return toUtf8String(hexBytes)})}}let defaultFormatter=null;let nextPollId=1;class BaseProvider extends Provider{constructor(network){super();this._events=[];this._emitted={block:-2};this.disableCcipRead=false;this.formatter=new.target.getFormatter();defineReadOnly(this,"anyNetwork",network==="any");if(this.anyNetwork){network=this.detectNetwork()}if(network instanceof Promise){this._networkPromise=network;network.catch(error=>{});this._ready().catch(error=>{})}else{const knownNetwork=getStatic(new.target,"getNetwork")(network);if(knownNetwork){defineReadOnly(this,"_network",knownNetwork);this.emit("network",knownNetwork,null)}else{logger$f.throwArgumentError("invalid network","network",network)}}this._maxInternalBlockNumber=-1024;this._lastBlockNumber=-2;this._maxFilterBlockRange=10;this._pollingInterval=4e3;this._fastQueryDate=0}_ready(){return __awaiter$16(this,void 0,void 0,function*(){if(this._network==null){let network=null;if(this._networkPromise){try{network=yield this._networkPromise}catch(error){}}if(network==null){network=yield this.detectNetwork()}if(!network){logger$f.throwError("no network detected",Logger.errors.UNKNOWN_ERROR,{})}if(this._network==null){if(this.anyNetwork){this._network=network}else{defineReadOnly(this,"_network",network)}this.emit("network",network,null)}}return this._network})}get ready(){return poll$1(()=>{return this._ready().then(network=>{return network},error=>{if(error.code===Logger.errors.NETWORK_ERROR&&error.event==="noNetwork"){return undefined}throw error})})}static getFormatter(){if(defaultFormatter==null){defaultFormatter=new Formatter}return defaultFormatter}static getNetwork(network){return getNetwork(network==null?"homestead":network)}ccipReadFetch(tx,calldata,urls){return __awaiter$16(this,void 0,void 0,function*(){if(this.disableCcipRead||urls.length===0){return null}const sender=tx.to.toLowerCase();const data=calldata.toLowerCase();const errorMessages=[];for(let i=0;i<urls.length;i++){const url=urls[i];const href=url.replace("{sender}",sender).replace("{data}",data);const json=url.indexOf("{data}")>=0?null:JSON.stringify({data:data,sender:sender});const result=yield fetchJson({url:href,errorPassThrough:true},json,(value,response)=>{value.status=response.statusCode;return value});if(result.data){return result.data}const errorMessage=result.message||"unknown error";if(result.status>=400&&result.status<500){return logger$f.throwError(`response not found during CCIP fetch: ${errorMessage}`,Logger.errors.SERVER_ERROR,{url:url,errorMessage:errorMessage})}errorMessages.push(errorMessage)}return logger$f.throwError(`error encountered during CCIP fetch: ${errorMessages.map(m=>JSON.stringify(m)).join(", ")}`,Logger.errors.SERVER_ERROR,{urls:urls,errorMessages:errorMessages})})}_getInternalBlockNumber(maxAge){return __awaiter$16(this,void 0,void 0,function*(){yield this._ready();if(maxAge>0){while(this._internalBlockNumber){const internalBlockNumber=this._internalBlockNumber;try{const result=yield internalBlockNumber;if(getTime()-result.respTime<=maxAge){return result.blockNumber}break}catch(error){if(this._internalBlockNumber===internalBlockNumber){break}}}}const reqTime=getTime();const checkInternalBlockNumber=resolveProperties({blockNumber:this.perform("getBlockNumber",{}),networkError:this.getNetwork().then(network=>null,error=>error)}).then(({blockNumber,networkError})=>{if(networkError){if(this._internalBlockNumber===checkInternalBlockNumber){this._internalBlockNumber=null}throw networkError}const respTime=getTime();blockNumber=BigNumber$1.from(blockNumber).toNumber();if(blockNumber<this._maxInternalBlockNumber){blockNumber=this._maxInternalBlockNumber}this._maxInternalBlockNumber=blockNumber;this._setFastBlockNumber(blockNumber);return{blockNumber:blockNumber,reqTime:reqTime,respTime:respTime}});this._internalBlockNumber=checkInternalBlockNumber;checkInternalBlockNumber.catch(error=>{if(this._internalBlockNumber===checkInternalBlockNumber){this._internalBlockNumber=null}});return(yield checkInternalBlockNumber).blockNumber})}poll(){return __awaiter$16(this,void 0,void 0,function*(){const pollId=nextPollId++;const runners=[];let blockNumber=null;try{blockNumber=yield this._getInternalBlockNumber(100+this.pollingInterval/2)}catch(error){this.emit("error",error);return}this._setFastBlockNumber(blockNumber);this.emit("poll",pollId,blockNumber);if(blockNumber===this._lastBlockNumber){this.emit("didPoll",pollId);return}if(this._emitted.block===-2){this._emitted.block=blockNumber-1}if(Math.abs(this._emitted.block-blockNumber)>1e3){logger$f.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);this.emit("error",logger$f.makeError("network block skew detected",Logger.errors.NETWORK_ERROR,{blockNumber:blockNumber,event:"blockSkew",previousBlockNumber:this._emitted.block}));this.emit("block",blockNumber)}else{for(let i=this._emitted.block+1;i<=blockNumber;i++){this.emit("block",i)}}if(this._emitted.block!==blockNumber){this._emitted.block=blockNumber;Object.keys(this._emitted).forEach(key=>{if(key==="block"){return}const eventBlockNumber=this._emitted[key];if(eventBlockNumber==="pending"){return}if(blockNumber-eventBlockNumber>12){delete this._emitted[key]}})}if(this._lastBlockNumber===-2){this._lastBlockNumber=blockNumber-1}this._events.forEach(event=>{switch(event.type){case"tx":{const hash=event.hash;let runner=this.getTransactionReceipt(hash).then(receipt=>{if(!receipt||receipt.blockNumber==null){return null}this._emitted["t:"+hash]=receipt.blockNumber;this.emit(hash,receipt);return null}).catch(error=>{this.emit("error",error)});runners.push(runner);break}case"filter":{if(!event._inflight){event._inflight=true;if(event._lastBlockNumber===-2){event._lastBlockNumber=blockNumber-1}const filter=event.filter;filter.fromBlock=event._lastBlockNumber+1;filter.toBlock=blockNumber;const minFromBlock=filter.toBlock-this._maxFilterBlockRange;if(minFromBlock>filter.fromBlock){filter.fromBlock=minFromBlock}if(filter.fromBlock<0){filter.fromBlock=0}const runner=this.getLogs(filter).then(logs=>{event._inflight=false;if(logs.length===0){return}logs.forEach(log=>{if(log.blockNumber>event._lastBlockNumber){event._lastBlockNumber=log.blockNumber}this._emitted["b:"+log.blockHash]=log.blockNumber;this._emitted["t:"+log.transactionHash]=log.blockNumber;this.emit(filter,log)})}).catch(error=>{this.emit("error",error);event._inflight=false});runners.push(runner)}break}}});this._lastBlockNumber=blockNumber;Promise.all(runners).then(()=>{this.emit("didPoll",pollId)}).catch(error=>{this.emit("error",error)});return})}resetEventsBlock(blockNumber){this._lastBlockNumber=blockNumber-1;if(this.polling){this.poll()}}get network(){return this._network}detectNetwork(){return __awaiter$16(this,void 0,void 0,function*(){return logger$f.throwError("provider does not support network detection",Logger.errors.UNSUPPORTED_OPERATION,{operation:"provider.detectNetwork"})})}getNetwork(){return __awaiter$16(this,void 0,void 0,function*(){const network=yield this._ready();const currentNetwork=yield this.detectNetwork();if(network.chainId!==currentNetwork.chainId){if(this.anyNetwork){this._network=currentNetwork;this._lastBlockNumber=-2;this._fastBlockNumber=null;this._fastBlockNumberPromise=null;this._fastQueryDate=0;this._emitted.block=-2;this._maxInternalBlockNumber=-1024;this._internalBlockNumber=null;this.emit("network",currentNetwork,network);yield stall$1(0);return this._network}const error=logger$f.makeError("underlying network changed",Logger.errors.NETWORK_ERROR,{event:"changed",network:network,detectedNetwork:currentNetwork});this.emit("error",error);throw error}return network})}get blockNumber(){this._getInternalBlockNumber(100+this.pollingInterval/2).then(blockNumber=>{this._setFastBlockNumber(blockNumber)},error=>{});return this._fastBlockNumber!=null?this._fastBlockNumber:-1}get polling(){return this._poller!=null}set polling(value){if(value&&!this._poller){this._poller=setInterval(()=>{this.poll()},this.pollingInterval);if(!this._bootstrapPoll){this._bootstrapPoll=setTimeout(()=>{this.poll();this._bootstrapPoll=setTimeout(()=>{if(!this._poller){this.poll()}this._bootstrapPoll=null},this.pollingInterval)},0)}}else if(!value&&this._poller){clearInterval(this._poller);this._poller=null}}get pollingInterval(){return this._pollingInterval}set pollingInterval(value){if(typeof value!=="number"||value<=0||parseInt(String(value))!=value){throw new Error("invalid polling interval")}this._pollingInterval=value;if(this._poller){clearInterval(this._poller);this._poller=setInterval(()=>{this.poll()},this._pollingInterval)}}_getFastBlockNumber(){const now=getTime();if(now-this._fastQueryDate>2*this._pollingInterval){this._fastQueryDate=now;this._fastBlockNumberPromise=this.getBlockNumber().then(blockNumber=>{if(this._fastBlockNumber==null||blockNumber>this._fastBlockNumber){this._fastBlockNumber=blockNumber}return this._fastBlockNumber})}return this._fastBlockNumberPromise}_setFastBlockNumber(blockNumber){if(this._fastBlockNumber!=null&&blockNumber<this._fastBlockNumber){return}this._fastQueryDate=getTime();if(this._fastBlockNumber==null||blockNumber>this._fastBlockNumber){this._fastBlockNumber=blockNumber;this._fastBlockNumberPromise=Promise.resolve(blockNumber)}}waitForTransaction(transactionHash,confirmations,timeout){return __awaiter$16(this,void 0,void 0,function*(){return this._waitForTransaction(transactionHash,confirmations==null?1:confirmations,timeout||0,null)})}_waitForTransaction(transactionHash,confirmations,timeout,replaceable){return __awaiter$16(this,void 0,void 0,function*(){const receipt=yield this.getTransactionReceipt(transactionHash);if((receipt?receipt.confirmations:0)>=confirmations){return receipt}return new Promise((resolve,reject)=>{const cancelFuncs=[];let done=false;const alreadyDone=function(){if(done){return true}done=true;cancelFuncs.forEach(func=>{func()});return false};const minedHandler=receipt=>{if(receipt.confirmations<confirmations){return}if(alreadyDone()){return}resolve(receipt)};this.on(transactionHash,minedHandler);cancelFuncs.push(()=>{this.removeListener(transactionHash,minedHandler)});if(replaceable){let lastBlockNumber=replaceable.startBlock;let scannedBlock=null;const replaceHandler=blockNumber=>__awaiter$16(this,void 0,void 0,function*(){if(done){return}yield stall$1(1e3);this.getTransactionCount(replaceable.from).then(nonce=>__awaiter$16(this,void 0,void 0,function*(){if(done){return}if(nonce<=replaceable.nonce){lastBlockNumber=blockNumber}else{{const mined=yield this.getTransaction(transactionHash);if(mined&&mined.blockNumber!=null){return}}if(scannedBlock==null){scannedBlock=lastBlockNumber-3;if(scannedBlock<replaceable.startBlock){scannedBlock=replaceable.startBlock}}while(scannedBlock<=blockNumber){if(done){return}const block=yield this.getBlockWithTransactions(scannedBlock);for(let ti=0;ti<block.transactions.length;ti++){const tx=block.transactions[ti];if(tx.hash===transactionHash){return}if(tx.from===replaceable.from&&tx.nonce===replaceable.nonce){if(done){return}const receipt=yield this.waitForTransaction(tx.hash,confirmations);if(alreadyDone()){return}let reason="replaced";if(tx.data===replaceable.data&&tx.to===replaceable.to&&tx.value.eq(replaceable.value)){reason="repriced"}else if(tx.data==="0x"&&tx.from===tx.to&&tx.value.isZero()){reason="cancelled"}reject(logger$f.makeError("transaction was replaced",Logger.errors.TRANSACTION_REPLACED,{cancelled:reason==="replaced"||reason==="cancelled",reason:reason,replacement:this._wrapTransaction(tx),hash:transactionHash,receipt:receipt}));return}}scannedBlock++}}if(done){return}this.once("block",replaceHandler)}),error=>{if(done){return}this.once("block",replaceHandler)})});if(done){return}this.once("block",replaceHandler);cancelFuncs.push(()=>{this.removeListener("block",replaceHandler)})}if(typeof timeout==="number"&&timeout>0){const timer=setTimeout(()=>{if(alreadyDone()){return}reject(logger$f.makeError("timeout exceeded",Logger.errors.TIMEOUT,{timeout:timeout}))},timeout);if(timer.unref){timer.unref()}cancelFuncs.push(()=>{clearTimeout(timer)})}})})}getBlockNumber(){return __awaiter$16(this,void 0,void 0,function*(){return this._getInternalBlockNumber(0)})}getGasPrice(){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const result=yield this.perform("getGasPrice",{});try{return BigNumber$1.from(result)}catch(error){return logger$f.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getGasPrice",result:result,error:error})}})}getBalance(addressOrName,blockTag){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)});const result=yield this.perform("getBalance",params);try{return BigNumber$1.from(result)}catch(error){return logger$f.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getBalance",params:params,result:result,error:error})}})}getTransactionCount(addressOrName,blockTag){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)});const result=yield this.perform("getTransactionCount",params);try{return BigNumber$1.from(result).toNumber()}catch(error){return logger$f.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getTransactionCount",params:params,result:result,error:error})}})}getCode(addressOrName,blockTag){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag)});const result=yield this.perform("getCode",params);try{return hexlify(result)}catch(error){return logger$f.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getCode",params:params,result:result,error:error})}})}getStorageAt(addressOrName,position,blockTag){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({address:this._getAddress(addressOrName),blockTag:this._getBlockTag(blockTag),position:Promise.resolve(position).then(p=>hexValue(p))});const result=yield this.perform("getStorageAt",params);try{return hexlify(result)}catch(error){return logger$f.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getStorageAt",params:params,result:result,error:error})}})}_wrapTransaction(tx,hash,startBlock){if(hash!=null&&hexDataLength(hash)!==32){throw new Error("invalid response - sendTransaction")}const result=tx;if(hash!=null&&tx.hash!==hash){logger$f.throwError("Transaction hash mismatch from Provider.sendTransaction.",Logger.errors.UNKNOWN_ERROR,{expectedHash:tx.hash,returnedHash:hash})}result.wait=(confirms,timeout)=>__awaiter$16(this,void 0,void 0,function*(){if(confirms==null){confirms=1}if(timeout==null){timeout=0}let replacement=undefined;if(confirms!==0&&startBlock!=null){replacement={data:tx.data,from:tx.from,nonce:tx.nonce,to:tx.to,value:tx.value,startBlock:startBlock}}const receipt=yield this._waitForTransaction(tx.hash,confirms,timeout,replacement);if(receipt==null&&confirms===0){return null}this._emitted["t:"+tx.hash]=receipt.blockNumber;if(receipt.status===0){logger$f.throwError("transaction failed",Logger.errors.CALL_EXCEPTION,{transactionHash:tx.hash,transaction:tx,receipt:receipt})}return receipt});return result}sendTransaction(signedTransaction){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const hexTx=yield Promise.resolve(signedTransaction).then(t=>hexlify(t));const tx=this.formatter.transaction(signedTransaction);if(tx.confirmations==null){tx.confirmations=0}const blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);try{const hash=yield this.perform("sendTransaction",{signedTransaction:hexTx});return this._wrapTransaction(tx,hash,blockNumber)}catch(error){error.transaction=tx;error.transactionHash=tx.hash;throw error}})}_getTransactionRequest(transaction){return __awaiter$16(this,void 0,void 0,function*(){const values=yield transaction;const tx={};["from","to"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v?this._getAddress(v):null)});["gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","value"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v?BigNumber$1.from(v):null)});["type"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v!=null?v:null)});if(values.accessList){tx.accessList=this.formatter.accessList(values.accessList)}["data"].forEach(key=>{if(values[key]==null){return}tx[key]=Promise.resolve(values[key]).then(v=>v?hexlify(v):null)});return this.formatter.transactionRequest(yield resolveProperties(tx))})}_getFilter(filter){return __awaiter$16(this,void 0,void 0,function*(){filter=yield filter;const result={};if(filter.address!=null){result.address=this._getAddress(filter.address)}["blockHash","topics"].forEach(key=>{if(filter[key]==null){return}result[key]=filter[key]});["fromBlock","toBlock"].forEach(key=>{if(filter[key]==null){return}result[key]=this._getBlockTag(filter[key])});return this.formatter.filter(yield resolveProperties(result))})}_call(transaction,blockTag,attempt){return __awaiter$16(this,void 0,void 0,function*(){if(attempt>=MAX_CCIP_REDIRECTS){logger$f.throwError("CCIP read exceeded maximum redirections",Logger.errors.SERVER_ERROR,{redirects:attempt,transaction:transaction})}const txSender=transaction.to;const result=yield this.perform("call",{transaction:transaction,blockTag:blockTag});if(attempt>=0&&blockTag==="latest"&&txSender!=null&&result.substring(0,10)==="0x556f1830"&&hexDataLength(result)%32===4){try{const data=hexDataSlice(result,4);const sender=hexDataSlice(data,0,32);if(!BigNumber$1.from(sender).eq(txSender)){logger$f.throwError("CCIP Read sender did not match",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result})}const urls=[];const urlsOffset=BigNumber$1.from(hexDataSlice(data,32,64)).toNumber();const urlsLength=BigNumber$1.from(hexDataSlice(data,urlsOffset,urlsOffset+32)).toNumber();const urlsData=hexDataSlice(data,urlsOffset+32);for(let u=0;u<urlsLength;u++){const url=_parseString(urlsData,u*32);if(url==null){logger$f.throwError("CCIP Read contained corrupt URL string",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result})}urls.push(url)}const calldata=_parseBytes(data,64);if(!BigNumber$1.from(hexDataSlice(data,100,128)).isZero()){logger$f.throwError("CCIP Read callback selector included junk",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result})}const callbackSelector=hexDataSlice(data,96,100);const extraData=_parseBytes(data,128);const ccipResult=yield this.ccipReadFetch(transaction,calldata,urls);if(ccipResult==null){logger$f.throwError("CCIP Read disabled or provided no URLs",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:transaction,data:result})}const tx={to:txSender,data:hexConcat([callbackSelector,encodeBytes$1([ccipResult,extraData])])};return this._call(tx,blockTag,attempt+1)}catch(error){if(error.code===Logger.errors.SERVER_ERROR){throw error}}}try{return hexlify(result)}catch(error){return logger$f.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"call",params:{transaction:transaction,blockTag:blockTag},result:result,error:error})}})}call(transaction,blockTag){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const resolved=yield resolveProperties({transaction:this._getTransactionRequest(transaction),blockTag:this._getBlockTag(blockTag),ccipReadEnabled:Promise.resolve(transaction.ccipReadEnabled)});return this._call(resolved.transaction,resolved.blockTag,resolved.ccipReadEnabled?0:-1)})}estimateGas(transaction){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({transaction:this._getTransactionRequest(transaction)});const result=yield this.perform("estimateGas",params);try{return BigNumber$1.from(result)}catch(error){return logger$f.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"estimateGas",params:params,result:result,error:error})}})}_getAddress(addressOrName){return __awaiter$16(this,void 0,void 0,function*(){addressOrName=yield addressOrName;if(typeof addressOrName!=="string"){logger$f.throwArgumentError("invalid address or ENS name","name",addressOrName)}const address=yield this.resolveName(addressOrName);if(address==null){logger$f.throwError("ENS name not configured",Logger.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(addressOrName)})`})}return address})}_getBlock(blockHashOrBlockTag,includeTransactions){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();blockHashOrBlockTag=yield blockHashOrBlockTag;let blockNumber=-128;const params={includeTransactions:!!includeTransactions};if(isHexString(blockHashOrBlockTag,32)){params.blockHash=blockHashOrBlockTag}else{try{params.blockTag=yield this._getBlockTag(blockHashOrBlockTag);if(isHexString(params.blockTag)){blockNumber=parseInt(params.blockTag.substring(2),16)}}catch(error){logger$f.throwArgumentError("invalid block hash or block tag","blockHashOrBlockTag",blockHashOrBlockTag)}}return poll$1(()=>__awaiter$16(this,void 0,void 0,function*(){const block=yield this.perform("getBlock",params);if(block==null){if(params.blockHash!=null){if(this._emitted["b:"+params.blockHash]==null){return null}}if(params.blockTag!=null){if(blockNumber>this._emitted.block){return null}}return undefined}if(includeTransactions){let blockNumber=null;for(let i=0;i<block.transactions.length;i++){const tx=block.transactions[i];if(tx.blockNumber==null){tx.confirmations=0}else if(tx.confirmations==null){if(blockNumber==null){blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval)}let confirmations=blockNumber-tx.blockNumber+1;if(confirmations<=0){confirmations=1}tx.confirmations=confirmations}}const blockWithTxs=this.formatter.blockWithTransactions(block);blockWithTxs.transactions=blockWithTxs.transactions.map(tx=>this._wrapTransaction(tx));return blockWithTxs}return this.formatter.block(block)}),{oncePoll:this})})}getBlock(blockHashOrBlockTag){return this._getBlock(blockHashOrBlockTag,false)}getBlockWithTransactions(blockHashOrBlockTag){return this._getBlock(blockHashOrBlockTag,true)}getTransaction(transactionHash){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();transactionHash=yield transactionHash;const params={transactionHash:this.formatter.hash(transactionHash,true)};return poll$1(()=>__awaiter$16(this,void 0,void 0,function*(){const result=yield this.perform("getTransaction",params);if(result==null){if(this._emitted["t:"+transactionHash]==null){return null}return undefined}const tx=this.formatter.transactionResponse(result);if(tx.blockNumber==null){tx.confirmations=0}else if(tx.confirmations==null){const blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);let confirmations=blockNumber-tx.blockNumber+1;if(confirmations<=0){confirmations=1}tx.confirmations=confirmations}return this._wrapTransaction(tx)}),{oncePoll:this})})}getTransactionReceipt(transactionHash){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();transactionHash=yield transactionHash;const params={transactionHash:this.formatter.hash(transactionHash,true)};return poll$1(()=>__awaiter$16(this,void 0,void 0,function*(){const result=yield this.perform("getTransactionReceipt",params);if(result==null){if(this._emitted["t:"+transactionHash]==null){return null}return undefined}if(result.blockHash==null){return undefined}const receipt=this.formatter.receipt(result);if(receipt.blockNumber==null){receipt.confirmations=0}else if(receipt.confirmations==null){const blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);let confirmations=blockNumber-receipt.blockNumber+1;if(confirmations<=0){confirmations=1}receipt.confirmations=confirmations}return receipt}),{oncePoll:this})})}getLogs(filter){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();const params=yield resolveProperties({filter:this._getFilter(filter)});const logs=yield this.perform("getLogs",params);logs.forEach(log=>{if(log.removed==null){log.removed=false}});return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)})}getEtherPrice(){return __awaiter$16(this,void 0,void 0,function*(){yield this.getNetwork();return this.perform("getEtherPrice",{})})}_getBlockTag(blockTag){return __awaiter$16(this,void 0,void 0,function*(){blockTag=yield blockTag;if(typeof blockTag==="number"&&blockTag<0){if(blockTag%1){logger$f.throwArgumentError("invalid BlockTag","blockTag",blockTag)}let blockNumber=yield this._getInternalBlockNumber(100+2*this.pollingInterval);blockNumber+=blockTag;if(blockNumber<0){blockNumber=0}return this.formatter.blockTag(blockNumber)}return this.formatter.blockTag(blockTag)})}getResolver(name){return __awaiter$16(this,void 0,void 0,function*(){let currentName=name;while(true){if(currentName===""||currentName==="."){return null}if(name!=="eth"&&currentName==="eth"){return null}const addr=yield this._getResolver(currentName,"getResolver");if(addr!=null){const resolver=new Resolver(this,addr,name);if(currentName!==name&&!(yield resolver.supportsWildcard())){return null}return resolver}currentName=currentName.split(".").slice(1).join(".")}})}_getResolver(name,operation){return __awaiter$16(this,void 0,void 0,function*(){if(operation==null){operation="ENS"}const network=yield this.getNetwork();if(!network.ensAddress){logger$f.throwError("network does not support ENS",Logger.errors.UNSUPPORTED_OPERATION,{operation:operation,network:network.name})}try{const addrData=yield this.call({to:network.ensAddress,data:"0x0178b8bf"+namehash$1(name).substring(2)});return this.formatter.callAddress(addrData)}catch(error){}return null})}resolveName(name){return __awaiter$16(this,void 0,void 0,function*(){name=yield name;try{return Promise.resolve(this.formatter.address(name))}catch(error){if(isHexString(name)){throw error}}if(typeof name!=="string"){logger$f.throwArgumentError("invalid ENS name","name",name)}const resolver=yield this.getResolver(name);if(!resolver){return null}return yield resolver.getAddress()})}lookupAddress(address){return __awaiter$16(this,void 0,void 0,function*(){address=yield address;address=this.formatter.address(address);const node=address.substring(2).toLowerCase()+".addr.reverse";const resolverAddr=yield this._getResolver(node,"lookupAddress");if(resolverAddr==null){return null}const name=_parseString(yield this.call({to:resolverAddr,data:"0x691f3431"+namehash$1(node).substring(2)}),0);const addr=yield this.resolveName(name);if(addr!=address){return null}return name})}getAvatar(nameOrAddress){return __awaiter$16(this,void 0,void 0,function*(){let resolver=null;if(isHexString(nameOrAddress)){const address=this.formatter.address(nameOrAddress);const node=address.substring(2).toLowerCase()+".addr.reverse";const resolverAddress=yield this._getResolver(node,"getAvatar");if(!resolverAddress){return null}resolver=new Resolver(this,resolverAddress,node);try{const avatar=yield resolver.getAvatar();if(avatar){return avatar.url}}catch(error){if(error.code!==Logger.errors.CALL_EXCEPTION){throw error}}try{const name=_parseString(yield this.call({to:resolverAddress,data:"0x691f3431"+namehash$1(node).substring(2)}),0);resolver=yield this.getResolver(name)}catch(error){if(error.code!==Logger.errors.CALL_EXCEPTION){throw error}return null}}else{resolver=yield this.getResolver(nameOrAddress);if(!resolver){return null}}const avatar=yield resolver.getAvatar();if(avatar==null){return null}return avatar.url})}perform(method,params){return logger$f.throwError(method+" not implemented",Logger.errors.NOT_IMPLEMENTED,{operation:method})}_startEvent(event){this.polling=this._events.filter(e=>e.pollable()).length>0}_stopEvent(event){this.polling=this._events.filter(e=>e.pollable()).length>0}_addEventListener(eventName,listener,once){const event=new Event(getEventTag(eventName),listener,once);this._events.push(event);this._startEvent(event);return this}on(eventName,listener){return this._addEventListener(eventName,listener,false)}once(eventName,listener){return this._addEventListener(eventName,listener,true)}emit(eventName,...args){let result=false;let stopped=[];let eventTag=getEventTag(eventName);this._events=this._events.filter(event=>{if(event.tag!==eventTag){return true}setTimeout(()=>{event.listener.apply(this,args)},0);result=true;if(event.once){stopped.push(event);return false}return true});stopped.forEach(event=>{this._stopEvent(event)});return result}listenerCount(eventName){if(!eventName){return this._events.length}let eventTag=getEventTag(eventName);return this._events.filter(event=>{return event.tag===eventTag}).length}listeners(eventName){if(eventName==null){return this._events.map(event=>event.listener)}let eventTag=getEventTag(eventName);return this._events.filter(event=>event.tag===eventTag).map(event=>event.listener)}off(eventName,listener){if(listener==null){return this.removeAllListeners(eventName)}const stopped=[];let found=false;let eventTag=getEventTag(eventName);this._events=this._events.filter(event=>{if(event.tag!==eventTag||event.listener!=listener){return true}if(found){return true}found=true;stopped.push(event);return false});stopped.forEach(event=>{this._stopEvent(event)});return this}removeAllListeners(eventName){let stopped=[];if(eventName==null){stopped=this._events;this._events=[]}else{const eventTag=getEventTag(eventName);this._events=this._events.filter(event=>{if(event.tag!==eventTag){return true}stopped.push(event);return false})}stopped.forEach(event=>{this._stopEvent(event)});return this}}var __awaiter$15=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$e=new Logger(version$3);const errorGas=["call","estimateGas"];function spelunk(value,requireData){if(value==null){return null}if(typeof value.message==="string"&&value.message.match("reverted")){const data=isHexString(value.data)?value.data:null;if(!requireData||data){return{message:value.message,data:data}}}if(typeof value==="object"){for(const key in value){const result=spelunk(value[key],requireData);if(result){return result}}return null}if(typeof value==="string"){try{return spelunk(JSON.parse(value),requireData)}catch(error){}}return null}function checkError$1(method,error,params){const transaction=params.transaction||params.signedTransaction;if(method==="call"){const result=spelunk(error,true);if(result){return result.data}logger$e.throwError("missing revert data in call exception; Transaction reverted without a reason string",Logger.errors.CALL_EXCEPTION,{data:"0x",transaction:transaction,error:error})}if(method==="estimateGas"){let result=spelunk(error.body,false);if(result==null){result=spelunk(error,false)}if(result){logger$e.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{reason:result.message,method:method,transaction:transaction,error:error})}}let message=error.message;if(error.code===Logger.errors.SERVER_ERROR&&error.error&&typeof error.error.message==="string"){message=error.error.message}else if(typeof error.body==="string"){message=error.body}else if(typeof error.responseText==="string"){message=error.responseText}message=(message||"").toLowerCase();if(message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)){logger$e.throwError("insufficient funds for intrinsic transaction cost",Logger.errors.INSUFFICIENT_FUNDS,{error:error,method:method,transaction:transaction})}if(message.match(/nonce (is )?too low/i)){logger$e.throwError("nonce has already been used",Logger.errors.NONCE_EXPIRED,{error:error,method:method,transaction:transaction})}if(message.match(/replacement transaction underpriced|transaction gas price.*too low/i)){logger$e.throwError("replacement fee too low",Logger.errors.REPLACEMENT_UNDERPRICED,{error:error,method:method,transaction:transaction})}if(message.match(/only replay-protected/i)){logger$e.throwError("legacy pre-eip-155 transactions not supported",Logger.errors.UNSUPPORTED_OPERATION,{error:error,method:method,transaction:transaction})}if(errorGas.indexOf(method)>=0&&message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)){logger$e.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:error,method:method,transaction:transaction})}throw error}function timer(timeout){return new Promise(function(resolve){setTimeout(resolve,timeout)})}function getResult$1(payload){if(payload.error){const error=new Error(payload.error.message);error.code=payload.error.code;error.data=payload.error.data;throw error}return payload.result}function getLowerCase(value){if(value){return value.toLowerCase()}return value}const _constructorGuard={};class JsonRpcSigner extends Signer{constructor(constructorGuard,provider,addressOrIndex){super();if(constructorGuard!==_constructorGuard){throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner")}defineReadOnly(this,"provider",provider);if(addressOrIndex==null){addressOrIndex=0}if(typeof addressOrIndex==="string"){defineReadOnly(this,"_address",this.provider.formatter.address(addressOrIndex));defineReadOnly(this,"_index",null)}else if(typeof addressOrIndex==="number"){defineReadOnly(this,"_index",addressOrIndex);defineReadOnly(this,"_address",null)}else{logger$e.throwArgumentError("invalid address or index","addressOrIndex",addressOrIndex)}}connect(provider){return logger$e.throwError("cannot alter JSON-RPC Signer connection",Logger.errors.UNSUPPORTED_OPERATION,{operation:"connect"})}connectUnchecked(){return new UncheckedJsonRpcSigner(_constructorGuard,this.provider,this._address||this._index)}getAddress(){if(this._address){return Promise.resolve(this._address)}return this.provider.send("eth_accounts",[]).then(accounts=>{if(accounts.length<=this._index){logger$e.throwError("unknown account #"+this._index,Logger.errors.UNSUPPORTED_OPERATION,{operation:"getAddress"})}return this.provider.formatter.address(accounts[this._index])})}sendUncheckedTransaction(transaction){transaction=shallowCopy(transaction);const fromAddress=this.getAddress().then(address=>{if(address){address=address.toLowerCase()}return address});if(transaction.gasLimit==null){const estimate=shallowCopy(transaction);estimate.from=fromAddress;transaction.gasLimit=this.provider.estimateGas(estimate)}if(transaction.to!=null){transaction.to=Promise.resolve(transaction.to).then(to=>__awaiter$15(this,void 0,void 0,function*(){if(to==null){return null}const address=yield this.provider.resolveName(to);if(address==null){logger$e.throwArgumentError("provided ENS name resolves to null","tx.to",to)}return address}))}return resolveProperties({tx:resolveProperties(transaction),sender:fromAddress}).then(({tx,sender})=>{if(tx.from!=null){if(tx.from.toLowerCase()!==sender){logger$e.throwArgumentError("from address mismatch","transaction",transaction)}}else{tx.from=sender}const hexTx=this.provider.constructor.hexlifyTransaction(tx,{from:true});return this.provider.send("eth_sendTransaction",[hexTx]).then(hash=>{return hash},error=>{if(typeof error.message==="string"&&error.message.match(/user denied/i)){logger$e.throwError("user rejected transaction",Logger.errors.ACTION_REJECTED,{action:"sendTransaction",transaction:tx})}return checkError$1("sendTransaction",error,hexTx)})})}signTransaction(transaction){return logger$e.throwError("signing transactions is unsupported",Logger.errors.UNSUPPORTED_OPERATION,{operation:"signTransaction"})}sendTransaction(transaction){return __awaiter$15(this,void 0,void 0,function*(){const blockNumber=yield this.provider._getInternalBlockNumber(100+2*this.provider.pollingInterval);const hash=yield this.sendUncheckedTransaction(transaction);try{return yield poll$1(()=>__awaiter$15(this,void 0,void 0,function*(){const tx=yield this.provider.getTransaction(hash);if(tx===null){return undefined}return this.provider._wrapTransaction(tx,hash,blockNumber)}),{oncePoll:this.provider})}catch(error){error.transactionHash=hash;throw error}})}signMessage(message){return __awaiter$15(this,void 0,void 0,function*(){const data=typeof message==="string"?toUtf8Bytes$1(message):message;const address=yield this.getAddress();try{return yield this.provider.send("personal_sign",[hexlify(data),address.toLowerCase()])}catch(error){if(typeof error.message==="string"&&error.message.match(/user denied/i)){logger$e.throwError("user rejected signing",Logger.errors.ACTION_REJECTED,{action:"signMessage",from:address,messageData:message})}throw error}})}_legacySignMessage(message){return __awaiter$15(this,void 0,void 0,function*(){const data=typeof message==="string"?toUtf8Bytes$1(message):message;const address=yield this.getAddress();try{return yield this.provider.send("eth_sign",[address.toLowerCase(),hexlify(data)])}catch(error){if(typeof error.message==="string"&&error.message.match(/user denied/i)){logger$e.throwError("user rejected signing",Logger.errors.ACTION_REJECTED,{action:"_legacySignMessage",from:address,messageData:message})}throw error}})}_signTypedData(domain,types,value){return __awaiter$15(this,void 0,void 0,function*(){const populated=yield TypedDataEncoder.resolveNames(domain,types,value,name=>{return this.provider.resolveName(name)});const address=yield this.getAddress();try{return yield this.provider.send("eth_signTypedData_v4",[address.toLowerCase(),JSON.stringify(TypedDataEncoder.getPayload(populated.domain,types,populated.value))])}catch(error){if(typeof error.message==="string"&&error.message.match(/user denied/i)){logger$e.throwError("user rejected signing",Logger.errors.ACTION_REJECTED,{action:"_signTypedData",from:address,messageData:{domain:populated.domain,types:types,value:populated.value}})}throw error}})}unlock(password){return __awaiter$15(this,void 0,void 0,function*(){const provider=this.provider;const address=yield this.getAddress();return provider.send("personal_unlockAccount",[address.toLowerCase(),password,null])})}}class UncheckedJsonRpcSigner extends JsonRpcSigner{sendTransaction(transaction){return this.sendUncheckedTransaction(transaction).then(hash=>{return{hash:hash,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:confirmations=>{return this.provider.waitForTransaction(hash,confirmations)}}})}}const allowedTransactionKeys={chainId:true,data:true,gasLimit:true,gasPrice:true,nonce:true,to:true,value:true,type:true,accessList:true,maxFeePerGas:true,maxPriorityFeePerGas:true};class JsonRpcProvider extends BaseProvider{constructor(url,network){let networkOrReady=network;if(networkOrReady==null){networkOrReady=new Promise((resolve,reject)=>{setTimeout(()=>{this.detectNetwork().then(network=>{resolve(network)},error=>{reject(error)})},0)})}super(networkOrReady);if(!url){url=getStatic(this.constructor,"defaultUrl")()}if(typeof url==="string"){defineReadOnly(this,"connection",Object.freeze({url:url}))}else{defineReadOnly(this,"connection",Object.freeze(shallowCopy(url)))}this._nextId=42}get _cache(){if(this._eventLoopCache==null){this._eventLoopCache={}}return this._eventLoopCache}static defaultUrl(){return"http://localhost:8545"}detectNetwork(){if(!this._cache["detectNetwork"]){this._cache["detectNetwork"]=this._uncachedDetectNetwork();setTimeout(()=>{this._cache["detectNetwork"]=null},0)}return this._cache["detectNetwork"]}_uncachedDetectNetwork(){return __awaiter$15(this,void 0,void 0,function*(){yield timer(0);let chainId=null;try{chainId=yield this.send("eth_chainId",[])}catch(error){try{chainId=yield this.send("net_version",[])}catch(error){}}if(chainId!=null){const getNetwork=getStatic(this.constructor,"getNetwork");try{return getNetwork(BigNumber$1.from(chainId).toNumber())}catch(error){return logger$e.throwError("could not detect network",Logger.errors.NETWORK_ERROR,{chainId:chainId,event:"invalidNetwork",serverError:error})}}return logger$e.throwError("could not detect network",Logger.errors.NETWORK_ERROR,{event:"noNetwork"})})}getSigner(addressOrIndex){return new JsonRpcSigner(_constructorGuard,this,addressOrIndex)}getUncheckedSigner(addressOrIndex){return this.getSigner(addressOrIndex).connectUnchecked()}listAccounts(){return this.send("eth_accounts",[]).then(accounts=>{return accounts.map(a=>this.formatter.address(a))})}send(method,params){const request={method:method,params:params,id:this._nextId++,jsonrpc:"2.0"};this.emit("debug",{action:"request",request:deepCopy(request),provider:this});const cache=["eth_chainId","eth_blockNumber"].indexOf(method)>=0;if(cache&&this._cache[method]){return this._cache[method]}const result=fetchJson(this.connection,JSON.stringify(request),getResult$1).then(result=>{this.emit("debug",{action:"response",request:request,response:result,provider:this});return result},error=>{this.emit("debug",{action:"response",error:error,request:request,provider:this});throw error});if(cache){this._cache[method]=result;setTimeout(()=>{this._cache[method]=null},0)}return result}prepareRequest(method,params){switch(method){case"getBlockNumber":return["eth_blockNumber",[]];case"getGasPrice":return["eth_gasPrice",[]];case"getBalance":return["eth_getBalance",[getLowerCase(params.address),params.blockTag]];case"getTransactionCount":return["eth_getTransactionCount",[getLowerCase(params.address),params.blockTag]];case"getCode":return["eth_getCode",[getLowerCase(params.address),params.blockTag]];case"getStorageAt":return["eth_getStorageAt",[getLowerCase(params.address),hexZeroPad(params.position,32),params.blockTag]];case"sendTransaction":return["eth_sendRawTransaction",[params.signedTransaction]];case"getBlock":if(params.blockTag){return["eth_getBlockByNumber",[params.blockTag,!!params.includeTransactions]]}else if(params.blockHash){return["eth_getBlockByHash",[params.blockHash,!!params.includeTransactions]]}return null;case"getTransaction":return["eth_getTransactionByHash",[params.transactionHash]];case"getTransactionReceipt":return["eth_getTransactionReceipt",[params.transactionHash]];case"call":{const hexlifyTransaction=getStatic(this.constructor,"hexlifyTransaction");return["eth_call",[hexlifyTransaction(params.transaction,{from:true}),params.blockTag]]}case"estimateGas":{const hexlifyTransaction=getStatic(this.constructor,"hexlifyTransaction");return["eth_estimateGas",[hexlifyTransaction(params.transaction,{from:true})]]}case"getLogs":if(params.filter&&params.filter.address!=null){params.filter.address=getLowerCase(params.filter.address)}return["eth_getLogs",[params.filter]]}return null}perform(method,params){return __awaiter$15(this,void 0,void 0,function*(){if(method==="call"||method==="estimateGas"){const tx=params.transaction;if(tx&&tx.type!=null&&BigNumber$1.from(tx.type).isZero()){if(tx.maxFeePerGas==null&&tx.maxPriorityFeePerGas==null){const feeData=yield this.getFeeData();if(feeData.maxFeePerGas==null&&feeData.maxPriorityFeePerGas==null){params=shallowCopy(params);params.transaction=shallowCopy(tx);delete params.transaction.type}}}}const args=this.prepareRequest(method,params);if(args==null){logger$e.throwError(method+" not implemented",Logger.errors.NOT_IMPLEMENTED,{operation:method})}try{return yield this.send(args[0],args[1])}catch(error){return checkError$1(method,error,params)}})}_startEvent(event){if(event.tag==="pending"){this._startPending()}super._startEvent(event)}_startPending(){if(this._pendingFilter!=null){return}const self=this;const pendingFilter=this.send("eth_newPendingTransactionFilter",[]);this._pendingFilter=pendingFilter;pendingFilter.then(function(filterId){function poll(){self.send("eth_getFilterChanges",[filterId]).then(function(hashes){if(self._pendingFilter!=pendingFilter){return null}let seq=Promise.resolve();hashes.forEach(function(hash){self._emitted["t:"+hash.toLowerCase()]="pending";seq=seq.then(function(){return self.getTransaction(hash).then(function(tx){self.emit("pending",tx);return null})})});return seq.then(function(){return timer(1e3)})}).then(function(){if(self._pendingFilter!=pendingFilter){self.send("eth_uninstallFilter",[filterId]);return}setTimeout(function(){poll()},0);return null}).catch(error=>{})}poll();return filterId}).catch(error=>{})}_stopEvent(event){if(event.tag==="pending"&&this.listenerCount("pending")===0){this._pendingFilter=null}super._stopEvent(event)}static hexlifyTransaction(transaction,allowExtra){const allowed=shallowCopy(allowedTransactionKeys);if(allowExtra){for(const key in allowExtra){if(allowExtra[key]){allowed[key]=true}}}checkProperties(transaction,allowed);const result={};["chainId","gasLimit","gasPrice","type","maxFeePerGas","maxPriorityFeePerGas","nonce","value"].forEach(function(key){if(transaction[key]==null){return}const value=hexValue(BigNumber$1.from(transaction[key]));if(key==="gasLimit"){key="gas"}result[key]=value});["from","to","data"].forEach(function(key){if(transaction[key]==null){return}result[key]=hexlify(transaction[key])});if(transaction.accessList){result["accessList"]=accessListify(transaction.accessList)}return result}}let WS=null;try{WS=WebSocket;if(WS==null){throw new Error("inject please")}}catch(error){const logger=new Logger(version$3);WS=function(){logger.throwError("WebSockets not supported in this environment",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new WebSocket()"})}}var __awaiter$14=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$d=new Logger(version$3);let NextId=1;class WebSocketProvider extends JsonRpcProvider{constructor(url,network){if(network==="any"){logger$d.throwError("WebSocketProvider does not support 'any' network yet",Logger.errors.UNSUPPORTED_OPERATION,{operation:"network:any"})}if(typeof url==="string"){super(url,network)}else{super("_websocket",network)}this._pollingInterval=-1;this._wsReady=false;if(typeof url==="string"){defineReadOnly(this,"_websocket",new WS(this.connection.url))}else{defineReadOnly(this,"_websocket",url)}defineReadOnly(this,"_requests",{});defineReadOnly(this,"_subs",{});defineReadOnly(this,"_subIds",{});defineReadOnly(this,"_detectNetwork",super.detectNetwork());this.websocket.onopen=()=>{this._wsReady=true;Object.keys(this._requests).forEach(id=>{this.websocket.send(this._requests[id].payload)})};this.websocket.onmessage=messageEvent=>{const data=messageEvent.data;const result=JSON.parse(data);if(result.id!=null){const id=String(result.id);const request=this._requests[id];delete this._requests[id];if(result.result!==undefined){request.callback(null,result.result);this.emit("debug",{action:"response",request:JSON.parse(request.payload),response:result.result,provider:this})}else{let error=null;if(result.error){error=new Error(result.error.message||"unknown error");defineReadOnly(error,"code",result.error.code||null);defineReadOnly(error,"response",data)}else{error=new Error("unknown error")}request.callback(error,undefined);this.emit("debug",{action:"response",error:error,request:JSON.parse(request.payload),provider:this})}}else if(result.method==="eth_subscription"){const sub=this._subs[result.params.subscription];if(sub){sub.processFunc(result.params.result)}}else{console.warn("this should not happen")}};const fauxPoll=setInterval(()=>{this.emit("poll")},1e3);if(fauxPoll.unref){fauxPoll.unref()}}get websocket(){return this._websocket}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(blockNumber){logger$d.throwError("cannot reset events block on WebSocketProvider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"resetEventBlock"})}set pollingInterval(value){logger$d.throwError("cannot set polling interval on WebSocketProvider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setPollingInterval"})}poll(){return __awaiter$14(this,void 0,void 0,function*(){return null})}set polling(value){if(!value){return}logger$d.throwError("cannot set polling on WebSocketProvider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setPolling"})}send(method,params){const rid=NextId++;return new Promise((resolve,reject)=>{function callback(error,result){if(error){return reject(error)}return resolve(result)}const payload=JSON.stringify({method:method,params:params,id:rid,jsonrpc:"2.0"});this.emit("debug",{action:"request",request:JSON.parse(payload),provider:this});this._requests[String(rid)]={callback:callback,payload:payload};if(this._wsReady){this.websocket.send(payload)}})}static defaultUrl(){return"ws://localhost:8546"}_subscribe(tag,param,processFunc){return __awaiter$14(this,void 0,void 0,function*(){let subIdPromise=this._subIds[tag];if(subIdPromise==null){subIdPromise=Promise.all(param).then(param=>{return this.send("eth_subscribe",param)});this._subIds[tag]=subIdPromise}const subId=yield subIdPromise;this._subs[subId]={tag:tag,processFunc:processFunc}})}_startEvent(event){switch(event.type){case"block":this._subscribe("block",["newHeads"],result=>{const blockNumber=BigNumber$1.from(result.number).toNumber();this._emitted.block=blockNumber;this.emit("block",blockNumber)});break;case"pending":this._subscribe("pending",["newPendingTransactions"],result=>{this.emit("pending",result)});break;case"filter":this._subscribe(event.tag,["logs",this._getFilter(event.filter)],result=>{if(result.removed==null){result.removed=false}this.emit(event.filter,this.formatter.filterLog(result))});break;case"tx":{const emitReceipt=event=>{const hash=event.hash;this.getTransactionReceipt(hash).then(receipt=>{if(!receipt){return}this.emit(hash,receipt)})};emitReceipt(event);this._subscribe("tx",["newHeads"],result=>{this._events.filter(e=>e.type==="tx").forEach(emitReceipt)});break}case"debug":case"poll":case"willPoll":case"didPoll":case"error":break;default:console.log("unhandled:",event);break}}_stopEvent(event){let tag=event.tag;if(event.type==="tx"){if(this._events.filter(e=>e.type==="tx").length){return}tag="tx"}else if(this.listenerCount(event.event)){return}const subId=this._subIds[tag];if(!subId){return}delete this._subIds[tag];subId.then(subId=>{if(!this._subs[subId]){return}delete this._subs[subId];this.send("eth_unsubscribe",[subId])})}destroy(){return __awaiter$14(this,void 0,void 0,function*(){if(this.websocket.readyState===WS.CONNECTING){yield new Promise(resolve=>{this.websocket.onopen=function(){resolve(true)};this.websocket.onerror=function(){resolve(false)}})}this.websocket.close(1e3)})}}var __awaiter$13=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$c=new Logger(version$3);class StaticJsonRpcProvider extends JsonRpcProvider{detectNetwork(){const _super=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return __awaiter$13(this,void 0,void 0,function*(){let network=this.network;if(network==null){network=yield _super.detectNetwork.call(this);if(!network){logger$c.throwError("no network detected",Logger.errors.UNKNOWN_ERROR,{})}if(this._network==null){defineReadOnly(this,"_network",network);this.emit("network",network,null)}}return network})}}class UrlJsonRpcProvider extends StaticJsonRpcProvider{constructor(network,apiKey){logger$c.checkAbstract(new.target,UrlJsonRpcProvider);network=getStatic(new.target,"getNetwork")(network);apiKey=getStatic(new.target,"getApiKey")(apiKey);const connection=getStatic(new.target,"getUrl")(network,apiKey);super(connection,network);if(typeof apiKey==="string"){defineReadOnly(this,"apiKey",apiKey)}else if(apiKey!=null){Object.keys(apiKey).forEach(key=>{defineReadOnly(this,key,apiKey[key])})}}_startPending(){logger$c.warn("WARNING: API provider does not support pending filters")}isCommunityResource(){return false}getSigner(address){return logger$c.throwError("API provider does not support signing",Logger.errors.UNSUPPORTED_OPERATION,{operation:"getSigner"})}listAccounts(){return Promise.resolve([])}static getApiKey(apiKey){return apiKey}static getUrl(network,apiKey){return logger$c.throwError("not implemented; sub-classes must override getUrl",Logger.errors.NOT_IMPLEMENTED,{operation:"getUrl"})}}const logger$b=new Logger(version$3);const defaultApiKey$2="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";class AlchemyWebSocketProvider extends WebSocketProvider{constructor(network,apiKey){const provider=new AlchemyProvider(network,apiKey);const url=provider.connection.url.replace(/^http/i,"ws").replace(".alchemyapi.",".ws.alchemyapi.");super(url,provider.network);defineReadOnly(this,"apiKey",provider.apiKey)}isCommunityResource(){return this.apiKey===defaultApiKey$2}}class AlchemyProvider extends UrlJsonRpcProvider{static getWebSocketProvider(network,apiKey){return new AlchemyWebSocketProvider(network,apiKey)}static getApiKey(apiKey){if(apiKey==null){return defaultApiKey$2}if(apiKey&&typeof apiKey!=="string"){logger$b.throwArgumentError("invalid apiKey","apiKey",apiKey)}return apiKey}static getUrl(network,apiKey){let host=null;switch(network.name){case"homestead":host="eth-mainnet.alchemyapi.io/v2/";break;case"goerli":host="eth-goerli.g.alchemy.com/v2/";break;case"matic":host="polygon-mainnet.g.alchemy.com/v2/";break;case"maticmum":host="polygon-mumbai.g.alchemy.com/v2/";break;case"arbitrum":host="arb-mainnet.g.alchemy.com/v2/";break;case"arbitrum-goerli":host="arb-goerli.g.alchemy.com/v2/";break;case"optimism":host="opt-mainnet.g.alchemy.com/v2/";break;case"optimism-goerli":host="opt-goerli.g.alchemy.com/v2/";break;default:logger$b.throwArgumentError("unsupported network","network",arguments[0])}return{allowGzip:true,url:"https:/"+"/"+host+apiKey,throttleCallback:(attempt,url)=>{if(apiKey===defaultApiKey$2){showThrottleMessage()}return Promise.resolve(true)}}}isCommunityResource(){return this.apiKey===defaultApiKey$2}}const logger$a=new Logger(version$3);const defaultApiKey$1="9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";function getHost(name){switch(name){case"homestead":return"rpc.ankr.com/eth/";case"ropsten":return"rpc.ankr.com/eth_ropsten/";case"rinkeby":return"rpc.ankr.com/eth_rinkeby/";case"goerli":return"rpc.ankr.com/eth_goerli/";case"matic":return"rpc.ankr.com/polygon/";case"arbitrum":return"rpc.ankr.com/arbitrum/"}return logger$a.throwArgumentError("unsupported network","name",name)}class AnkrProvider extends UrlJsonRpcProvider{isCommunityResource(){return this.apiKey===defaultApiKey$1}static getApiKey(apiKey){if(apiKey==null){return defaultApiKey$1}return apiKey}static getUrl(network,apiKey){if(apiKey==null){apiKey=defaultApiKey$1}const connection={allowGzip:true,url:"https://"+getHost(network.name)+apiKey,throttleCallback:(attempt,url)=>{if(apiKey.apiKey===defaultApiKey$1){showThrottleMessage()}return Promise.resolve(true)}};if(apiKey.projectSecret!=null){connection.user="";connection.password=apiKey.projectSecret}return connection}}var __awaiter$12=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$9=new Logger(version$3);class CloudflareProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){if(apiKey!=null){logger$9.throwArgumentError("apiKey not supported for cloudflare","apiKey",apiKey)}return null}static getUrl(network,apiKey){let host=null;switch(network.name){case"homestead":host="https://cloudflare-eth.com/";break;default:logger$9.throwArgumentError("unsupported network","network",arguments[0])}return host}perform(method,params){const _super=Object.create(null,{perform:{get:()=>super.perform}});return __awaiter$12(this,void 0,void 0,function*(){if(method==="getBlockNumber"){const block=yield _super.perform.call(this,"getBlock",{blockTag:"latest"});return block.number}return _super.perform.call(this,method,params)})}}var __awaiter$11=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$8=new Logger(version$3);function getTransactionPostData(transaction){const result={};for(let key in transaction){if(transaction[key]==null){continue}let value=transaction[key];if(key==="type"&&value===0){continue}if({type:true,gasLimit:true,gasPrice:true,maxFeePerGs:true,maxPriorityFeePerGas:true,nonce:true,value:true}[key]){value=hexValue(hexlify(value))}else if(key==="accessList"){value="["+accessListify(value).map(set=>{return`{address:"${set.address}",storageKeys:["${set.storageKeys.join('","')}"]}`}).join(",")+"]"}else{value=hexlify(value)}result[key]=value}return result}function getResult(result){if(result.status==0&&(result.message==="No records found"||result.message==="No transactions found")){return result.result}if(result.status!=1||typeof result.message!=="string"||!result.message.match(/^OK/)){const error=new Error("invalid response");error.result=JSON.stringify(result);if((result.result||"").toLowerCase().indexOf("rate limit")>=0){error.throttleRetry=true}throw error}return result.result}function getJsonResult(result){if(result&&result.status==0&&result.message=="NOTOK"&&(result.result||"").toLowerCase().indexOf("rate limit")>=0){const error=new Error("throttled response");error.result=JSON.stringify(result);error.throttleRetry=true;throw error}if(result.jsonrpc!="2.0"){const error=new Error("invalid response");error.result=JSON.stringify(result);throw error}if(result.error){const error=new Error(result.error.message||"unknown error");if(result.error.code){error.code=result.error.code}if(result.error.data){error.data=result.error.data}throw error}return result.result}function checkLogTag(blockTag){if(blockTag==="pending"){throw new Error("pending not supported")}if(blockTag==="latest"){return blockTag}return parseInt(blockTag.substring(2),16)}function checkError(method,error,transaction){if(method==="call"&&error.code===Logger.errors.SERVER_ERROR){const e=error.error;if(e&&(e.message.match(/reverted/i)||e.message.match(/VM execution error/i))){let data=e.data;if(data){data="0x"+data.replace(/^.*0x/i,"")}if(isHexString(data)){return data}logger$8.throwError("missing revert data in call exception",Logger.errors.CALL_EXCEPTION,{error:error,data:"0x"})}}let message=error.message;if(error.code===Logger.errors.SERVER_ERROR){if(error.error&&typeof error.error.message==="string"){message=error.error.message}else if(typeof error.body==="string"){message=error.body}else if(typeof error.responseText==="string"){message=error.responseText}}message=(message||"").toLowerCase();if(message.match(/insufficient funds/)){logger$8.throwError("insufficient funds for intrinsic transaction cost",Logger.errors.INSUFFICIENT_FUNDS,{error:error,method:method,transaction:transaction})}if(message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)){logger$8.throwError("nonce has already been used",Logger.errors.NONCE_EXPIRED,{error:error,method:method,transaction:transaction})}if(message.match(/another transaction with same nonce/)){logger$8.throwError("replacement fee too low",Logger.errors.REPLACEMENT_UNDERPRICED,{error:error,method:method,transaction:transaction})}if(message.match(/execution failed due to an exception|execution reverted/)){logger$8.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:error,method:method,transaction:transaction})}throw error}class EtherscanProvider extends BaseProvider{constructor(network,apiKey){super(network);defineReadOnly(this,"baseUrl",this.getBaseUrl());defineReadOnly(this,"apiKey",apiKey||null)}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"homestead":return"https://api.etherscan.io";case"goerli":return"https://api-goerli.etherscan.io";case"sepolia":return"https://api-sepolia.etherscan.io";case"matic":return"https://api.polygonscan.com";case"maticmum":return"https://api-testnet.polygonscan.com";case"arbitrum":return"https://api.arbiscan.io";case"arbitrum-goerli":return"https://api-goerli.arbiscan.io";case"optimism":return"https://api-optimistic.etherscan.io";case"optimism-goerli":return"https://api-goerli-optimistic.etherscan.io"}return logger$8.throwArgumentError("unsupported network","network",this.network.name)}getUrl(module,params){const query=Object.keys(params).reduce((accum,key)=>{const value=params[key];if(value!=null){accum+=`&${key}=${value}`}return accum},"");const apiKey=this.apiKey?`&apikey=${this.apiKey}`:"";return`${this.baseUrl}/api?module=${module}${query}${apiKey}`}getPostUrl(){return`${this.baseUrl}/api`}getPostData(module,params){params.module=module;params.apikey=this.apiKey;return params}fetch(module,params,post){return __awaiter$11(this,void 0,void 0,function*(){const url=post?this.getPostUrl():this.getUrl(module,params);const payload=post?this.getPostData(module,params):null;const procFunc=module==="proxy"?getJsonResult:getResult;this.emit("debug",{action:"request",request:url,provider:this});const connection={url:url,throttleSlotInterval:1e3,throttleCallback:(attempt,url)=>{if(this.isCommunityResource()){showThrottleMessage()}return Promise.resolve(true)}};let payloadStr=null;if(payload){connection.headers={"content-type":"application/x-www-form-urlencoded; charset=UTF-8"};payloadStr=Object.keys(payload).map(key=>{return`${key}=${payload[key]}`}).join("&")}const result=yield fetchJson(connection,payloadStr,procFunc||getJsonResult);this.emit("debug",{action:"response",request:url,response:deepCopy(result),provider:this});return result})}detectNetwork(){return __awaiter$11(this,void 0,void 0,function*(){return this.network})}perform(method,params){const _super=Object.create(null,{perform:{get:()=>super.perform}});return __awaiter$11(this,void 0,void 0,function*(){switch(method){case"getBlockNumber":return this.fetch("proxy",{action:"eth_blockNumber"});case"getGasPrice":return this.fetch("proxy",{action:"eth_gasPrice"});case"getBalance":return this.fetch("account",{action:"balance",address:params.address,tag:params.blockTag});case"getTransactionCount":return this.fetch("proxy",{action:"eth_getTransactionCount",address:params.address,tag:params.blockTag});case"getCode":return this.fetch("proxy",{action:"eth_getCode",address:params.address,tag:params.blockTag});case"getStorageAt":return this.fetch("proxy",{action:"eth_getStorageAt",address:params.address,position:params.position,tag:params.blockTag});case"sendTransaction":return this.fetch("proxy",{action:"eth_sendRawTransaction",hex:params.signedTransaction},true).catch(error=>{return checkError("sendTransaction",error,params.signedTransaction)});case"getBlock":if(params.blockTag){return this.fetch("proxy",{action:"eth_getBlockByNumber",tag:params.blockTag,boolean:params.includeTransactions?"true":"false"})}throw new Error("getBlock by blockHash not implemented");case"getTransaction":return this.fetch("proxy",{action:"eth_getTransactionByHash",txhash:params.transactionHash});case"getTransactionReceipt":return this.fetch("proxy",{action:"eth_getTransactionReceipt",txhash:params.transactionHash});case"call":{if(params.blockTag!=="latest"){throw new Error("EtherscanProvider does not support blockTag for call")}const postData=getTransactionPostData(params.transaction);postData.module="proxy";postData.action="eth_call";try{return yield this.fetch("proxy",postData,true)}catch(error){return checkError("call",error,params.transaction)}}case"estimateGas":{const postData=getTransactionPostData(params.transaction);postData.module="proxy";postData.action="eth_estimateGas";try{return yield this.fetch("proxy",postData,true)}catch(error){return checkError("estimateGas",error,params.transaction)}}case"getLogs":{const args={action:"getLogs"};if(params.filter.fromBlock){args.fromBlock=checkLogTag(params.filter.fromBlock)}if(params.filter.toBlock){args.toBlock=checkLogTag(params.filter.toBlock)}if(params.filter.address){args.address=params.filter.address}if(params.filter.topics&&params.filter.topics.length>0){if(params.filter.topics.length>1){logger$8.throwError("unsupported topic count",Logger.errors.UNSUPPORTED_OPERATION,{topics:params.filter.topics})}if(params.filter.topics.length===1){const topic0=params.filter.topics[0];if(typeof topic0!=="string"||topic0.length!==66){logger$8.throwError("unsupported topic format",Logger.errors.UNSUPPORTED_OPERATION,{topic0:topic0})}args.topic0=topic0}}const logs=yield this.fetch("logs",args);let blocks={};for(let i=0;i<logs.length;i++){const log=logs[i];if(log.blockHash!=null){continue}if(blocks[log.blockNumber]==null){const block=yield this.getBlock(log.blockNumber);if(block){blocks[log.blockNumber]=block.hash}}log.blockHash=blocks[log.blockNumber]}return logs}case"getEtherPrice":if(this.network.name!=="homestead"){return 0}return parseFloat((yield this.fetch("stats",{action:"ethprice"})).ethusd)}return _super.perform.call(this,method,params)})}getHistory(addressOrName,startBlock,endBlock){return __awaiter$11(this,void 0,void 0,function*(){const params={action:"txlist",address:yield this.resolveName(addressOrName),startblock:startBlock==null?0:startBlock,endblock:endBlock==null?99999999:endBlock,sort:"asc"};const result=yield this.fetch("account",params);return result.map(tx=>{["contractAddress","to"].forEach(function(key){if(tx[key]==""){delete tx[key]}});if(tx.creates==null&&tx.contractAddress!=null){tx.creates=tx.contractAddress}const item=this.formatter.transactionResponse(tx);if(tx.timeStamp){item.timestamp=parseInt(tx.timeStamp)}return item})})}isCommunityResource(){return this.apiKey==null}}var __awaiter$10=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const logger$7=new Logger(version$3);function now(){return(new Date).getTime()}function checkNetworks(networks){let result=null;for(let i=0;i<networks.length;i++){const network=networks[i];if(network==null){return null}if(result){if(!(result.name===network.name&&result.chainId===network.chainId&&(result.ensAddress===network.ensAddress||result.ensAddress==null&&network.ensAddress==null))){logger$7.throwArgumentError("provider mismatch","networks",networks)}}else{result=network}}return result}function median(values,maxDelta){values=values.slice().sort();const middle=Math.floor(values.length/2);if(values.length%2){return values[middle]}const a=values[middle-1],b=values[middle];if(maxDelta!=null&&Math.abs(a-b)>maxDelta){return null}return(a+b)/2}function serialize(value){if(value===null){return"null"}else if(typeof value==="number"||typeof value==="boolean"){return JSON.stringify(value)}else if(typeof value==="string"){return value}else if(BigNumber$1.isBigNumber(value)){return value.toString()}else if(Array.isArray(value)){return JSON.stringify(value.map(i=>serialize(i)))}else if(typeof value==="object"){const keys=Object.keys(value);keys.sort();return"{"+keys.map(key=>{let v=value[key];if(typeof v==="function"){v="[function]"}else{v=serialize(v)}return JSON.stringify(key)+":"+v}).join(",")+"}"}throw new Error("unknown value type: "+typeof value)}let nextRid=1;function stall(duration){let cancel=null;let timer=null;let promise=new Promise(resolve=>{cancel=function(){if(timer){clearTimeout(timer);timer=null}resolve()};timer=setTimeout(cancel,duration)});const wait=func=>{promise=promise.then(func);return promise};function getPromise(){return promise}return{cancel:cancel,getPromise:getPromise,wait:wait}}const ForwardErrors=[Logger.errors.CALL_EXCEPTION,Logger.errors.INSUFFICIENT_FUNDS,Logger.errors.NONCE_EXPIRED,Logger.errors.REPLACEMENT_UNDERPRICED,Logger.errors.UNPREDICTABLE_GAS_LIMIT];const ForwardProperties=["address","args","errorArgs","errorSignature","method","transaction"];function exposeDebugConfig(config,now){const result={weight:config.weight};Object.defineProperty(result,"provider",{get:()=>config.provider});if(config.start){result.start=config.start}if(now){result.duration=now-config.start}if(config.done){if(config.error){result.error=config.error}else{result.result=config.result||null}}return result}function normalizedTally(normalize,quorum){return function(configs){const tally={};configs.forEach(c=>{const value=normalize(c.result);if(!tally[value]){tally[value]={count:0,result:c.result}}tally[value].count++});const keys=Object.keys(tally);for(let i=0;i<keys.length;i++){const check=tally[keys[i]];if(check.count>=quorum){return check.result}}return undefined}}function getProcessFunc(provider,method,params){let normalize=serialize;switch(method){case"getBlockNumber":return function(configs){const values=configs.map(c=>c.result);let blockNumber=median(configs.map(c=>c.result),2);if(blockNumber==null){return undefined}blockNumber=Math.ceil(blockNumber);if(values.indexOf(blockNumber+1)>=0){blockNumber++}if(blockNumber>=provider._highestBlockNumber){provider._highestBlockNumber=blockNumber}return provider._highestBlockNumber};case"getGasPrice":return function(configs){const values=configs.map(c=>c.result);values.sort();return values[Math.floor(values.length/2)]};case"getEtherPrice":return function(configs){return median(configs.map(c=>c.result))};case"getBalance":case"getTransactionCount":case"getCode":case"getStorageAt":case"call":case"estimateGas":case"getLogs":break;case"getTransaction":case"getTransactionReceipt":normalize=function(tx){if(tx==null){return null}tx=shallowCopy(tx);tx.confirmations=-1;return serialize(tx)};break;case"getBlock":if(params.includeTransactions){normalize=function(block){if(block==null){return null}block=shallowCopy(block);block.transactions=block.transactions.map(tx=>{tx=shallowCopy(tx);tx.confirmations=-1;return tx});return serialize(block)}}else{normalize=function(block){if(block==null){return null}return serialize(block)}}break;default:throw new Error("unknown method: "+method)}return normalizedTally(normalize,provider.quorum)}function waitForSync(config,blockNumber){return __awaiter$10(this,void 0,void 0,function*(){const provider=config.provider;if(provider.blockNumber!=null&&provider.blockNumber>=blockNumber||blockNumber===-1){return provider}return poll$1(()=>{return new Promise((resolve,reject)=>{setTimeout(function(){if(provider.blockNumber>=blockNumber){return resolve(provider)}if(config.cancelled){return resolve(null)}return resolve(undefined)},0)})},{oncePoll:provider})})}function getRunner(config,currentBlockNumber,method,params){return __awaiter$10(this,void 0,void 0,function*(){let provider=config.provider;switch(method){case"getBlockNumber":case"getGasPrice":return provider[method]();case"getEtherPrice":if(provider.getEtherPrice){return provider.getEtherPrice()}break;case"getBalance":case"getTransactionCount":case"getCode":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}return provider[method](params.address,params.blockTag||"latest");case"getStorageAt":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}return provider.getStorageAt(params.address,params.position,params.blockTag||"latest");case"getBlock":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}return provider[params.includeTransactions?"getBlockWithTransactions":"getBlock"](params.blockTag||params.blockHash);case"call":case"estimateGas":if(params.blockTag&&isHexString(params.blockTag)){provider=yield waitForSync(config,currentBlockNumber)}if(method==="call"&&params.blockTag){return provider[method](params.transaction,params.blockTag)}return provider[method](params.transaction);case"getTransaction":case"getTransactionReceipt":return provider[method](params.transactionHash);case"getLogs":{let filter=params.filter;if(filter.fromBlock&&isHexString(filter.fromBlock)||filter.toBlock&&isHexString(filter.toBlock)){provider=yield waitForSync(config,currentBlockNumber)}return provider.getLogs(filter)}}return logger$7.throwError("unknown method error",Logger.errors.UNKNOWN_ERROR,{method:method,params:params})})}class FallbackProvider extends BaseProvider{constructor(providers,quorum){if(providers.length===0){logger$7.throwArgumentError("missing providers","providers",providers)}const providerConfigs=providers.map((configOrProvider,index)=>{if(Provider.isProvider(configOrProvider)){const stallTimeout=isCommunityResource(configOrProvider)?2e3:750;const priority=1;return Object.freeze({provider:configOrProvider,weight:1,stallTimeout:stallTimeout,priority:priority})}const config=shallowCopy(configOrProvider);if(config.priority==null){config.priority=1}if(config.stallTimeout==null){config.stallTimeout=isCommunityResource(configOrProvider)?2e3:750}if(config.weight==null){config.weight=1}const weight=config.weight;if(weight%1||weight>512||weight<1){logger$7.throwArgumentError("invalid weight; must be integer in [1, 512]",`providers[${index}].weight`,weight)}return Object.freeze(config)});const total=providerConfigs.reduce((accum,c)=>accum+c.weight,0);if(quorum==null){quorum=total/2}else if(quorum>total){logger$7.throwArgumentError("quorum will always fail; larger than total weight","quorum",quorum)}let networkOrReady=checkNetworks(providerConfigs.map(c=>c.provider.network));if(networkOrReady==null){networkOrReady=new Promise((resolve,reject)=>{setTimeout(()=>{this.detectNetwork().then(resolve,reject)},0)})}super(networkOrReady);defineReadOnly(this,"providerConfigs",Object.freeze(providerConfigs));defineReadOnly(this,"quorum",quorum);this._highestBlockNumber=-1}detectNetwork(){return __awaiter$10(this,void 0,void 0,function*(){const networks=yield Promise.all(this.providerConfigs.map(c=>c.provider.getNetwork()));return checkNetworks(networks)})}perform(method,params){return __awaiter$10(this,void 0,void 0,function*(){if(method==="sendTransaction"){const results=yield Promise.all(this.providerConfigs.map(c=>{return c.provider.sendTransaction(params.signedTransaction).then(result=>{return result.hash},error=>{return error})}));for(let i=0;i<results.length;i++){const result=results[i];if(typeof result==="string"){return result}}throw results[0]}if(this._highestBlockNumber===-1&&method!=="getBlockNumber"){yield this.getBlockNumber()}const processFunc=getProcessFunc(this,method,params);const configs=shuffled(this.providerConfigs.map(shallowCopy));configs.sort((a,b)=>a.priority-b.priority);const currentBlockNumber=this._highestBlockNumber;let i=0;let first=true;while(true){const t0=now();let inflightWeight=configs.filter(c=>c.runner&&t0-c.start<c.stallTimeout).reduce((accum,c)=>accum+c.weight,0);while(inflightWeight<this.quorum&&i<configs.length){const config=configs[i++];const rid=nextRid++;config.start=now();config.staller=stall(config.stallTimeout);config.staller.wait(()=>{config.staller=null});config.runner=getRunner(config,currentBlockNumber,method,params).then(result=>{config.done=true;config.result=result;if(this.listenerCount("debug")){this.emit("debug",{action:"request",rid:rid,backend:exposeDebugConfig(config,now()),request:{method:method,params:deepCopy(params)},provider:this})}},error=>{config.done=true;config.error=error;if(this.listenerCount("debug")){this.emit("debug",{action:"request",rid:rid,backend:exposeDebugConfig(config,now()),request:{method:method,params:deepCopy(params)},provider:this})}});if(this.listenerCount("debug")){this.emit("debug",{action:"request",rid:rid,backend:exposeDebugConfig(config,null),request:{method:method,params:deepCopy(params)},provider:this})}inflightWeight+=config.weight}const waiting=[];configs.forEach(c=>{if(c.done||!c.runner){return}waiting.push(c.runner);if(c.staller){waiting.push(c.staller.getPromise())}});if(waiting.length){yield Promise.race(waiting)}const results=configs.filter(c=>c.done&&c.error==null);if(results.length>=this.quorum){const result=processFunc(results);if(result!==undefined){configs.forEach(c=>{if(c.staller){c.staller.cancel()}c.cancelled=true});return result}if(!first){yield stall(100).getPromise()}first=false}const errors=configs.reduce((accum,c)=>{if(!c.done||c.error==null){return accum}const code=c.error.code;if(ForwardErrors.indexOf(code)>=0){if(!accum[code]){accum[code]={error:c.error,weight:0}}accum[code].weight+=c.weight}return accum},{});Object.keys(errors).forEach(errorCode=>{const tally=errors[errorCode];if(tally.weight<this.quorum){return}configs.forEach(c=>{if(c.staller){c.staller.cancel()}c.cancelled=true});const e=tally.error;const props={};ForwardProperties.forEach(name=>{if(e[name]==null){return}props[name]=e[name]});logger$7.throwError(e.reason||e.message,errorCode,props)});if(configs.filter(c=>!c.done).length===0){break}}configs.forEach(c=>{if(c.staller){c.staller.cancel()}c.cancelled=true});return logger$7.throwError("failed to meet quorum",Logger.errors.SERVER_ERROR,{method:method,params:params,results:configs.map(c=>exposeDebugConfig(c)),provider:this})})}}const IpcProvider=null;const logger$6=new Logger(version$3);const defaultProjectId="84842078b09946638c03157f83405213";class InfuraWebSocketProvider extends WebSocketProvider{constructor(network,apiKey){const provider=new InfuraProvider(network,apiKey);const connection=provider.connection;if(connection.password){logger$6.throwError("INFURA WebSocket project secrets unsupported",Logger.errors.UNSUPPORTED_OPERATION,{operation:"InfuraProvider.getWebSocketProvider()"})}const url=connection.url.replace(/^http/i,"ws").replace("/v3/","/ws/v3/");super(url,network);defineReadOnly(this,"apiKey",provider.projectId);defineReadOnly(this,"projectId",provider.projectId);defineReadOnly(this,"projectSecret",provider.projectSecret)}isCommunityResource(){return this.projectId===defaultProjectId}}class InfuraProvider extends UrlJsonRpcProvider{static getWebSocketProvider(network,apiKey){return new InfuraWebSocketProvider(network,apiKey)}static getApiKey(apiKey){const apiKeyObj={apiKey:defaultProjectId,projectId:defaultProjectId,projectSecret:null};if(apiKey==null){return apiKeyObj}if(typeof apiKey==="string"){apiKeyObj.projectId=apiKey}else if(apiKey.projectSecret!=null){logger$6.assertArgument(typeof apiKey.projectId==="string","projectSecret requires a projectId","projectId",apiKey.projectId);logger$6.assertArgument(typeof apiKey.projectSecret==="string","invalid projectSecret","projectSecret","[REDACTED]");apiKeyObj.projectId=apiKey.projectId;apiKeyObj.projectSecret=apiKey.projectSecret}else if(apiKey.projectId){apiKeyObj.projectId=apiKey.projectId}apiKeyObj.apiKey=apiKeyObj.projectId;return apiKeyObj}static getUrl(network,apiKey){let host=null;switch(network?network.name:"unknown"){case"homestead":host="mainnet.infura.io";break;case"goerli":host="goerli.infura.io";break;case"sepolia":host="sepolia.infura.io";break;case"matic":host="polygon-mainnet.infura.io";break;case"maticmum":host="polygon-mumbai.infura.io";break;case"optimism":host="optimism-mainnet.infura.io";break;case"optimism-goerli":host="optimism-goerli.infura.io";break;case"arbitrum":host="arbitrum-mainnet.infura.io";break;case"arbitrum-goerli":host="arbitrum-goerli.infura.io";break;default:logger$6.throwError("unsupported network",Logger.errors.INVALID_ARGUMENT,{argument:"network",value:network})}const connection={allowGzip:true,url:"https:/"+"/"+host+"/v3/"+apiKey.projectId,throttleCallback:(attempt,url)=>{if(apiKey.projectId===defaultProjectId){showThrottleMessage()}return Promise.resolve(true)}};if(apiKey.projectSecret!=null){connection.user="";connection.password=apiKey.projectSecret}return connection}isCommunityResource(){return this.projectId===defaultProjectId}}class JsonRpcBatchProvider extends JsonRpcProvider{send(method,params){const request={method:method,params:params,id:this._nextId++,jsonrpc:"2.0"};if(this._pendingBatch==null){this._pendingBatch=[]}const inflightRequest={request:request,resolve:null,reject:null};const promise=new Promise((resolve,reject)=>{inflightRequest.resolve=resolve;inflightRequest.reject=reject});this._pendingBatch.push(inflightRequest);if(!this._pendingBatchAggregator){this._pendingBatchAggregator=setTimeout(()=>{const batch=this._pendingBatch;this._pendingBatch=null;this._pendingBatchAggregator=null;const request=batch.map(inflight=>inflight.request);this.emit("debug",{action:"requestBatch",request:deepCopy(request),provider:this});return fetchJson(this.connection,JSON.stringify(request)).then(result=>{this.emit("debug",{action:"response",request:request,response:result,provider:this});batch.forEach((inflightRequest,index)=>{const payload=result[index];if(payload.error){const error=new Error(payload.error.message);error.code=payload.error.code;error.data=payload.error.data;inflightRequest.reject(error)}else{inflightRequest.resolve(payload.result)}})},error=>{this.emit("debug",{action:"response",error:error,request:request,provider:this});batch.forEach(inflightRequest=>{inflightRequest.reject(error)})})},10)}return promise}}const logger$5=new Logger(version$3);const defaultApiKey="ETHERS_JS_SHARED";class NodesmithProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){if(apiKey&&typeof apiKey!=="string"){logger$5.throwArgumentError("invalid apiKey","apiKey",apiKey)}return apiKey||defaultApiKey}static getUrl(network,apiKey){logger$5.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");let host=null;switch(network.name){case"homestead":host="https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";break;case"ropsten":host="https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";break;case"rinkeby":host="https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";break;case"goerli":host="https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";break;case"kovan":host="https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";break;default:logger$5.throwArgumentError("unsupported network","network",arguments[0])}return host+"?apiKey="+apiKey}}const logger$4=new Logger(version$3);const defaultApplicationId="62e1ad51b37b8e00394bda3b";class PocketProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){const apiKeyObj={applicationId:null,loadBalancer:true,applicationSecretKey:null};if(apiKey==null){apiKeyObj.applicationId=defaultApplicationId}else if(typeof apiKey==="string"){apiKeyObj.applicationId=apiKey}else if(apiKey.applicationSecretKey!=null){apiKeyObj.applicationId=apiKey.applicationId;apiKeyObj.applicationSecretKey=apiKey.applicationSecretKey}else if(apiKey.applicationId){apiKeyObj.applicationId=apiKey.applicationId}else{logger$4.throwArgumentError("unsupported PocketProvider apiKey","apiKey",apiKey)}return apiKeyObj}static getUrl(network,apiKey){let host=null;switch(network?network.name:"unknown"){case"goerli":host="eth-goerli.gateway.pokt.network";break;case"homestead":host="eth-mainnet.gateway.pokt.network";break;case"kovan":host="poa-kovan.gateway.pokt.network";break;case"matic":host="poly-mainnet.gateway.pokt.network";break;case"maticmum":host="polygon-mumbai-rpc.gateway.pokt.network";break;case"rinkeby":host="eth-rinkeby.gateway.pokt.network";break;case"ropsten":host="eth-ropsten.gateway.pokt.network";break;default:logger$4.throwError("unsupported network",Logger.errors.INVALID_ARGUMENT,{argument:"network",value:network})}const url=`https:/\/${host}/v1/lb/${apiKey.applicationId}`;const connection={headers:{},url:url};if(apiKey.applicationSecretKey!=null){connection.user="";connection.password=apiKey.applicationSecretKey}return connection}isCommunityResource(){return this.applicationId===defaultApplicationId}}const logger$3=new Logger(version$3);let _nextId=1;function buildWeb3LegacyFetcher(provider,sendFunc){const fetcher="Web3LegacyFetcher";return function(method,params){const request={method:method,params:params,id:_nextId++,jsonrpc:"2.0"};return new Promise((resolve,reject)=>{this.emit("debug",{action:"request",fetcher:fetcher,request:deepCopy(request),provider:this});sendFunc(request,(error,response)=>{if(error){this.emit("debug",{action:"response",fetcher:fetcher,error:error,request:request,provider:this});return reject(error)}this.emit("debug",{action:"response",fetcher:fetcher,request:request,response:response,provider:this});if(response.error){const error=new Error(response.error.message);error.code=response.error.code;error.data=response.error.data;return reject(error)}resolve(response.result)})})}}function buildEip1193Fetcher(provider){return function(method,params){if(params==null){params=[]}const request={method:method,params:params};this.emit("debug",{action:"request",fetcher:"Eip1193Fetcher",request:deepCopy(request),provider:this});return provider.request(request).then(response=>{this.emit("debug",{action:"response",fetcher:"Eip1193Fetcher",request:request,response:response,provider:this});return response},error=>{this.emit("debug",{action:"response",fetcher:"Eip1193Fetcher",request:request,error:error,provider:this});throw error})}}class Web3Provider extends JsonRpcProvider{constructor(provider,network){if(provider==null){logger$3.throwArgumentError("missing provider","provider",provider)}let path=null;let jsonRpcFetchFunc=null;let subprovider=null;if(typeof provider==="function"){path="unknown:";jsonRpcFetchFunc=provider}else{path=provider.host||provider.path||"";if(!path&&provider.isMetaMask){path="metamask"}subprovider=provider;if(provider.request){if(path===""){path="eip-1193:"}jsonRpcFetchFunc=buildEip1193Fetcher(provider)}else if(provider.sendAsync){jsonRpcFetchFunc=buildWeb3LegacyFetcher(provider,provider.sendAsync.bind(provider))}else if(provider.send){jsonRpcFetchFunc=buildWeb3LegacyFetcher(provider,provider.send.bind(provider))}else{logger$3.throwArgumentError("unsupported provider","provider",provider)}if(!path){path="unknown:"}}super(path,network);defineReadOnly(this,"jsonRpcFetchFunc",jsonRpcFetchFunc);defineReadOnly(this,"provider",subprovider)}send(method,params){return this.jsonRpcFetchFunc(method,params)}}const logger$2=new Logger(version$3);function getDefaultProvider(network,options){if(network==null){network="homestead"}if(typeof network==="string"){const match=network.match(/^(ws|http)s?:/i);if(match){switch(match[1].toLowerCase()){case"http":case"https":return new JsonRpcProvider(network);case"ws":case"wss":return new WebSocketProvider(network);default:logger$2.throwArgumentError("unsupported URL scheme","network",network)}}}const n=getNetwork(network);if(!n||!n._defaultProvider){logger$2.throwError("unsupported getDefaultProvider network",Logger.errors.NETWORK_ERROR,{operation:"getDefaultProvider",network:network})}return n._defaultProvider({FallbackProvider:FallbackProvider,AlchemyProvider:AlchemyProvider,AnkrProvider:AnkrProvider,CloudflareProvider:CloudflareProvider,EtherscanProvider:EtherscanProvider,InfuraProvider:InfuraProvider,JsonRpcProvider:JsonRpcProvider,NodesmithProvider:NodesmithProvider,PocketProvider:PocketProvider,Web3Provider:Web3Provider,IpcProvider:IpcProvider},options)}var index$4=Object.freeze({__proto__:null,AlchemyProvider:AlchemyProvider,AlchemyWebSocketProvider:AlchemyWebSocketProvider,AnkrProvider:AnkrProvider,BaseProvider:BaseProvider,CloudflareProvider:CloudflareProvider,EtherscanProvider:EtherscanProvider,FallbackProvider:FallbackProvider,Formatter:Formatter,InfuraProvider:InfuraProvider,InfuraWebSocketProvider:InfuraWebSocketProvider,IpcProvider:IpcProvider,JsonRpcBatchProvider:JsonRpcBatchProvider,JsonRpcProvider:JsonRpcProvider,JsonRpcSigner:JsonRpcSigner,NodesmithProvider:NodesmithProvider,PocketProvider:PocketProvider,Provider:Provider,Resolver:Resolver,StaticJsonRpcProvider:StaticJsonRpcProvider,UrlJsonRpcProvider:UrlJsonRpcProvider,Web3Provider:Web3Provider,WebSocketProvider:WebSocketProvider,getDefaultProvider:getDefaultProvider,getNetwork:getNetwork,isCommunityResourcable:isCommunityResourcable,isCommunityResource:isCommunityResource,showThrottleMessage:showThrottleMessage});const version$2="units/5.7.0";const logger$1=new Logger(version$2);const names=["wei","kwei","mwei","gwei","szabo","finney","ether"];function commify(value){const comps=String(value).split(".");if(comps.length>2||!comps[0].match(/^-?[0-9]*$/)||comps[1]&&!comps[1].match(/^[0-9]*$/)||value==="."||value==="-."){logger$1.throwArgumentError("invalid value","value",value)}let whole=comps[0];let negative="";if(whole.substring(0,1)==="-"){negative="-";whole=whole.substring(1)}while(whole.substring(0,1)==="0"){whole=whole.substring(1)}if(whole===""){whole="0"}let suffix="";if(comps.length===2){suffix="."+(comps[1]||"0")}while(suffix.length>2&&suffix[suffix.length-1]==="0"){suffix=suffix.substring(0,suffix.length-1)}const formatted=[];while(whole.length){if(whole.length<=3){formatted.unshift(whole);break}else{const index=whole.length-3;formatted.unshift(whole.substring(index));whole=whole.substring(0,index)}}return negative+formatted.join(",")+suffix}function formatUnits$1(value,unitName){if(typeof unitName==="string"){const index=names.indexOf(unitName);if(index!==-1){unitName=3*index}}return formatFixed(value,unitName!=null?unitName:18)}function parseUnits(value,unitName){if(typeof value!=="string"){logger$1.throwArgumentError("value must be a string","value",value)}if(typeof unitName==="string"){const index=names.indexOf(unitName);if(index!==-1){unitName=3*index}}return parseFixed(value,unitName!=null?unitName:18)}function formatEther$1(wei){return formatUnits$1(wei,18)}function parseEther(ether){return parseUnits(ether,18)}var utils$1=Object.freeze({__proto__:null,AbiCoder:AbiCoder,ConstructorFragment:ConstructorFragment,ErrorFragment:ErrorFragment,EventFragment:EventFragment,FormatTypes:FormatTypes,Fragment:Fragment,FunctionFragment:FunctionFragment,HDNode:HDNode,Indexed:Indexed,Interface:Interface,LogDescription:LogDescription,Logger:Logger,ParamType:ParamType$1,RLP:index$7,SigningKey:SigningKey,get SupportedAlgorithm(){return SupportedAlgorithm},TransactionDescription:TransactionDescription,get TransactionTypes(){return TransactionTypes},get UnicodeNormalizationForm(){return UnicodeNormalizationForm},Utf8ErrorFuncs:Utf8ErrorFuncs,get Utf8ErrorReason(){return Utf8ErrorReason},_TypedDataEncoder:TypedDataEncoder,_fetchData:_fetchData,_toEscapedUtf8String:_toEscapedUtf8String,accessListify:accessListify,arrayify:arrayify,base58:Base58,base64:index$5,checkProperties:checkProperties,checkResultErrors:checkResultErrors,commify:commify,computeAddress:computeAddress,computeHmac:computeHmac,computePublicKey:computePublicKey,concat:concat$1,deepCopy:deepCopy,defaultAbiCoder:defaultAbiCoder,defaultPath:defaultPath,defineReadOnly:defineReadOnly,dnsEncode:dnsEncode,entropyToMnemonic:entropyToMnemonic,fetchJson:fetchJson,formatBytes32String:formatBytes32String,formatEther:formatEther$1,formatUnits:formatUnits$1,getAccountPath:getAccountPath,getAddress:getAddress$1,getContractAddress:getContractAddress$1,getCreate2Address:getCreate2Address,getIcapAddress:getIcapAddress,getJsonWalletAddress:getJsonWalletAddress,getStatic:getStatic,hashMessage:hashMessage$1,hexConcat:hexConcat,hexDataLength:hexDataLength,hexDataSlice:hexDataSlice,hexStripZeros:hexStripZeros,hexValue:hexValue,hexZeroPad:hexZeroPad,hexlify:hexlify,id:id$2,isAddress:isAddress$4,isBytes:isBytes,isBytesLike:isBytesLike,isHexString:isHexString,isValidMnemonic:isValidMnemonic,isValidName:isValidName,joinSignature:joinSignature,keccak256:keccak256$3,mnemonicToEntropy:mnemonicToEntropy,mnemonicToSeed:mnemonicToSeed,namehash:namehash$1,nameprep:nameprep,parseBytes32String:parseBytes32String,parseEther:parseEther,parseTransaction:parse$1,parseUnits:parseUnits,poll:poll$1,randomBytes:randomBytes,recoverAddress:recoverAddress,recoverPublicKey:recoverPublicKey,resolveProperties:resolveProperties,ripemd160:ripemd160,serializeTransaction:serialize$1,sha256:sha256$1,sha512:sha512,shallowCopy:shallowCopy,shuffled:shuffled,solidityKeccak256:keccak256$2,solidityPack:pack,soliditySha256:sha256,splitSignature:splitSignature,stripZeros:stripZeros,toUtf8Bytes:toUtf8Bytes$1,toUtf8CodePoints:toUtf8CodePoints,toUtf8String:toUtf8String,verifyMessage:verifyMessage$1,verifyTypedData:verifyTypedData$1,zeroPad:zeroPad});const version$1="ethers/5.7.2";const logger=new Logger(version$1);var ethers=Object.freeze({__proto__:null,BaseContract:BaseContract,BigNumber:BigNumber$1,Contract:Contract,ContractFactory:ContractFactory,FixedNumber:FixedNumber,Signer:Signer,VoidSigner:VoidSigner,Wallet:Wallet,Wordlist:Wordlist,constants:index$6,get errors(){return ErrorCode},getDefaultProvider:getDefaultProvider,logger:logger,providers:index$4,utils:utils$1,version:version$1,wordlists:wordlists});config$1();var ALCHEMY_ID="9j9SdF5HiwChoVUJLk-DaKNxU4Xm6ok1";var RPCs={1:"https://eth-mainnet.g.alchemy.com/v2/".concat(ALCHEMY_ID),5:"https://eth-goerli.g.alchemy.com/v2/".concat(ALCHEMY_ID),42161:"https://rpc.ankr.com/arbitrum",421613:"https://goerli-rollup.arbitrum.io/rpc",11155111:"https://sepolia.gateway.tenderly.co/19XD817c4zNXz6xBFYnyLb"};var providerMainnet=new JsonRpcProvider(RPCs["1"]);var providerGoerli=new JsonRpcProvider(RPCs["5"]);var providerArbitrum=new JsonRpcProvider(RPCs["42161"]);var providerArbitrumTestnet=new JsonRpcProvider(RPCs["421613"]);var providerSepolia=new JsonRpcProvider(RPCs["11155111"]);var provider={1:providerMainnet,5:providerGoerli,42161:providerArbitrum,421613:providerArbitrumTestnet,11155111:providerSepolia};var __awaiter$$=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$$=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var DEFAULT_ADDRESS="0xD4a0281cEeebA1CEeFB4eAbF63ca6A608E143Fdc";var Config=function(){function Config(_a){var chainId=_a.chainId,account=_a.account,provider$1=_a.provider,signer=_a.signer;var _this=this;this.signer=undefined;this.setLibrary=function(_a){var chainId=_a.chainId,account=_a.account,provider$1=_a.provider;_this.chainId=Number(chainId);_this.library=provider$1||provider[chainId];if(!_this.library&&!provider[chainId]){console.error("Provider not found")}if(account&&_this.library){_this._account=account;_this.signer=_this.library.getSigner(account)}};this.setChainId=function(_a){var chainId=_a.chainId;_this.chainId=Number(chainId)};this.setAccount=function(_a){var account=_a.account;_this._account=account};this.getLastBlock=function(){return __awaiter$$(_this,void 0,void 0,function(){var blockNumber,block,blockTimestamp;return __generator$$(this,function(_a){switch(_a.label){case 0:return[4,this.library.getBlockNumber()];case 1:blockNumber=_a.sent();return[4,this.library.getBlock(blockNumber)];case 2:block=_a.sent();blockTimestamp=BigNumber$1.from(block.timestamp);return[2,{blockNumber:blockNumber,blockTimestamp:blockTimestamp}]}})})};this._account=account||DEFAULT_ADDRESS;this.chainId=Number(chainId);this.library=provider$1||provider[chainId];if(!this.library&&!provider[chainId]){console.error("Provider not found")}if(account&&this.library){this.signer=signer||this.library.getSigner(account)}}Object.defineProperty(Config.prototype,"account",{get:function(){return this._account},enumerable:false,configurable:true});return Config}();var FACTORY_ADDRESS$2="0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f";var FACTORY_ADDRESS_MAP=V2_FACTORY_ADDRESSES;var INIT_CODE_HASH$1="0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f";var MINIMUM_LIQUIDITY=JSBI.BigInt(1e3);var ZERO=JSBI.BigInt(0);var ONE=JSBI.BigInt(1);var FIVE=JSBI.BigInt(5);var _997=JSBI.BigInt(997);var _1000=JSBI.BigInt(1e3);var BASIS_POINTS=JSBI.BigInt(1e4);var ZERO_PERCENT=new Percent$1(ZERO);var ONE_HUNDRED_PERCENT=new Percent$1(ONE);function _defineProperties$1(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass$1(Constructor,protoProps,staticProps){if(protoProps)_defineProperties$1(Constructor.prototype,protoProps);if(staticProps)_defineProperties$1(Constructor,staticProps);return Constructor}function _inheritsLoose$1(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o)}function _setPrototypeOf$1(o,p){_setPrototypeOf$1=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o};return _setPrototypeOf$1(o,p)}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true}catch(e){return false}}function _construct(Parent,args,Class){if(_isNativeReflectConstruct()){_construct=Reflect.construct}else{_construct=function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var Constructor=Function.bind.apply(Parent,a);var instance=new Constructor;if(Class)_setPrototypeOf$1(instance,Class.prototype);return instance}}return _construct.apply(null,arguments)}function _isNativeFunction(fn){return Function.toString.call(fn).indexOf("[native code]")!==-1}function _wrapNativeSuper(Class){var _cache=typeof Map==="function"?new Map:undefined;_wrapNativeSuper=function _wrapNativeSuper(Class){if(Class===null||!_isNativeFunction(Class))return Class;if(typeof Class!=="function"){throw new TypeError("Super expression must either be null or a function")}if(typeof _cache!=="undefined"){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:false,writable:true,configurable:true}});return _setPrototypeOf$1(Wrapper,Class)};return _wrapNativeSuper(Class)}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return self}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _createForOfIteratorHelperLoose(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}it=o[Symbol.iterator]();return it.next.bind(it)}var CAN_SET_PROTOTYPE="setPrototypeOf"in Object;var InsufficientReservesError=function(_Error){_inheritsLoose$1(InsufficientReservesError,_Error);function InsufficientReservesError(){var _this;_this=_Error.call(this)||this;_this.isInsufficientReservesError=true;_this.name=_this.constructor.name;if(CAN_SET_PROTOTYPE)Object.setPrototypeOf(_assertThisInitialized(_this),(this instanceof InsufficientReservesError?this.constructor:void 0).prototype);return _this}return InsufficientReservesError}(_wrapNativeSuper(Error));var InsufficientInputAmountError=function(_Error2){_inheritsLoose$1(InsufficientInputAmountError,_Error2);function InsufficientInputAmountError(){var _this2;_this2=_Error2.call(this)||this;_this2.isInsufficientInputAmountError=true;_this2.name=_this2.constructor.name;if(CAN_SET_PROTOTYPE)Object.setPrototypeOf(_assertThisInitialized(_this2),(this instanceof InsufficientInputAmountError?this.constructor:void 0).prototype);return _this2}return InsufficientInputAmountError}(_wrapNativeSuper(Error));var computePairAddress=function computePairAddress(_ref){var factoryAddress=_ref.factoryAddress,tokenA=_ref.tokenA,tokenB=_ref.tokenB;var _ref2=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA],token0=_ref2[0],token1=_ref2[1];return getCreate2Address(factoryAddress,keccak256$2(["bytes"],[pack(["address","address"],[token0.address,token1.address])]),INIT_CODE_HASH$1)};var Pair=function(){function Pair(currencyAmountA,tokenAmountB){var tokenAmounts=currencyAmountA.currency.sortsBefore(tokenAmountB.currency)?[currencyAmountA,tokenAmountB]:[tokenAmountB,currencyAmountA];this.liquidityToken=new Token$1(tokenAmounts[0].currency.chainId,Pair.getAddress(tokenAmounts[0].currency,tokenAmounts[1].currency),18,"UNI-V2","Uniswap V2");this.tokenAmounts=tokenAmounts}Pair.getAddress=function getAddress(tokenA,tokenB){var _FACTORY_ADDRESS_MAP$;var factoryAddress=(_FACTORY_ADDRESS_MAP$=FACTORY_ADDRESS_MAP[tokenA.chainId])!=null?_FACTORY_ADDRESS_MAP$:FACTORY_ADDRESS$2;return computePairAddress({factoryAddress:factoryAddress,tokenA:tokenA,tokenB:tokenB})};var _proto=Pair.prototype;_proto.involvesToken=function involvesToken(token){return token.equals(this.token0)||token.equals(this.token1)};_proto.priceOf=function priceOf(token){!this.involvesToken(token)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;return token.equals(this.token0)?this.token0Price:this.token1Price};_proto.reserveOf=function reserveOf(token){!this.involvesToken(token)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;return token.equals(this.token0)?this.reserve0:this.reserve1};_proto.getOutputAmount=function getOutputAmount(inputAmount,calculateFotFees){if(calculateFotFees===void 0){calculateFotFees=true}!this.involvesToken(inputAmount.currency)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;if(JSBI.equal(this.reserve0.quotient,ZERO)||JSBI.equal(this.reserve1.quotient,ZERO)){throw new InsufficientReservesError}var inputReserve=this.reserveOf(inputAmount.currency);var outputReserve=this.reserveOf(inputAmount.currency.equals(this.token0)?this.token1:this.token0);var percentAfterSellFees=calculateFotFees?this.derivePercentAfterSellFees(inputAmount):ZERO_PERCENT;var inputAmountAfterTax=percentAfterSellFees.greaterThan(ZERO_PERCENT)?CurrencyAmount$2.fromRawAmount(inputAmount.currency,percentAfterSellFees.multiply(inputAmount).quotient):inputAmount;var inputAmountWithFeeAndAfterTax=JSBI.multiply(inputAmountAfterTax.quotient,_997);var numerator=JSBI.multiply(inputAmountWithFeeAndAfterTax,outputReserve.quotient);var denominator=JSBI.add(JSBI.multiply(inputReserve.quotient,_1000),inputAmountWithFeeAndAfterTax);var outputAmount=CurrencyAmount$2.fromRawAmount(inputAmount.currency.equals(this.token0)?this.token1:this.token0,JSBI.divide(numerator,denominator));if(JSBI.equal(outputAmount.quotient,ZERO)){throw new InsufficientInputAmountError}var percentAfterBuyFees=calculateFotFees?this.derivePercentAfterBuyFees(outputAmount):ZERO_PERCENT;var outputAmountAfterTax=percentAfterBuyFees.greaterThan(ZERO_PERCENT)?CurrencyAmount$2.fromRawAmount(outputAmount.currency,outputAmount.multiply(percentAfterBuyFees).quotient):outputAmount;if(JSBI.equal(outputAmountAfterTax.quotient,ZERO)){throw new InsufficientInputAmountError}return[outputAmountAfterTax,new Pair(inputReserve.add(inputAmountAfterTax),outputReserve.subtract(outputAmountAfterTax))]};_proto.getInputAmount=function getInputAmount(outputAmount,calculateFotFees){if(calculateFotFees===void 0){calculateFotFees=true}!this.involvesToken(outputAmount.currency)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;var percentAfterBuyFees=calculateFotFees?this.derivePercentAfterBuyFees(outputAmount):ZERO_PERCENT;var outputAmountBeforeTax=percentAfterBuyFees.greaterThan(ZERO_PERCENT)?CurrencyAmount$2.fromRawAmount(outputAmount.currency,JSBI.add(outputAmount.divide(percentAfterBuyFees).quotient,ONE)):outputAmount;if(JSBI.equal(this.reserve0.quotient,ZERO)||JSBI.equal(this.reserve1.quotient,ZERO)||JSBI.greaterThanOrEqual(outputAmount.quotient,this.reserveOf(outputAmount.currency).quotient)||JSBI.greaterThanOrEqual(outputAmountBeforeTax.quotient,this.reserveOf(outputAmount.currency).quotient)){throw new InsufficientReservesError}var outputReserve=this.reserveOf(outputAmount.currency);var inputReserve=this.reserveOf(outputAmount.currency.equals(this.token0)?this.token1:this.token0);var numerator=JSBI.multiply(JSBI.multiply(inputReserve.quotient,outputAmountBeforeTax.quotient),_1000);var denominator=JSBI.multiply(JSBI.subtract(outputReserve.quotient,outputAmountBeforeTax.quotient),_997);var inputAmount=CurrencyAmount$2.fromRawAmount(outputAmount.currency.equals(this.token0)?this.token1:this.token0,JSBI.add(JSBI.divide(numerator,denominator),ONE));var percentAfterSellFees=calculateFotFees?this.derivePercentAfterSellFees(inputAmount):ZERO_PERCENT;var inputAmountBeforeTax=percentAfterSellFees.greaterThan(ZERO_PERCENT)?CurrencyAmount$2.fromRawAmount(inputAmount.currency,JSBI.add(inputAmount.divide(percentAfterSellFees).quotient,ONE)):inputAmount;return[inputAmountBeforeTax,new Pair(inputReserve.add(inputAmount),outputReserve.subtract(outputAmount))]};_proto.getLiquidityMinted=function getLiquidityMinted(totalSupply,tokenAmountA,tokenAmountB){!totalSupply.currency.equals(this.liquidityToken)?process.env.NODE_ENV!=="production"?invariant(false,"LIQUIDITY"):invariant(false):void 0;var tokenAmounts=tokenAmountA.currency.sortsBefore(tokenAmountB.currency)?[tokenAmountA,tokenAmountB]:[tokenAmountB,tokenAmountA];!(tokenAmounts[0].currency.equals(this.token0)&&tokenAmounts[1].currency.equals(this.token1))?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;var liquidity;if(JSBI.equal(totalSupply.quotient,ZERO)){liquidity=JSBI.subtract(sqrt$1(JSBI.multiply(tokenAmounts[0].quotient,tokenAmounts[1].quotient)),MINIMUM_LIQUIDITY)}else{var amount0=JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient,totalSupply.quotient),this.reserve0.quotient);var amount1=JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient,totalSupply.quotient),this.reserve1.quotient);liquidity=JSBI.lessThanOrEqual(amount0,amount1)?amount0:amount1}if(!JSBI.greaterThan(liquidity,ZERO)){throw new InsufficientInputAmountError}return CurrencyAmount$2.fromRawAmount(this.liquidityToken,liquidity)};_proto.getLiquidityValue=function getLiquidityValue(token,totalSupply,liquidity,feeOn,kLast){if(feeOn===void 0){feeOn=false}!this.involvesToken(token)?process.env.NODE_ENV!=="production"?invariant(false,"TOKEN"):invariant(false):void 0;!totalSupply.currency.equals(this.liquidityToken)?process.env.NODE_ENV!=="production"?invariant(false,"TOTAL_SUPPLY"):invariant(false):void 0;!liquidity.currency.equals(this.liquidityToken)?process.env.NODE_ENV!=="production"?invariant(false,"LIQUIDITY"):invariant(false):void 0;!JSBI.lessThanOrEqual(liquidity.quotient,totalSupply.quotient)?process.env.NODE_ENV!=="production"?invariant(false,"LIQUIDITY"):invariant(false):void 0;var totalSupplyAdjusted;if(!feeOn){totalSupplyAdjusted=totalSupply}else{!!!kLast?process.env.NODE_ENV!=="production"?invariant(false,"K_LAST"):invariant(false):void 0;var kLastParsed=JSBI.BigInt(kLast);if(!JSBI.equal(kLastParsed,ZERO)){var rootK=sqrt$1(JSBI.multiply(this.reserve0.quotient,this.reserve1.quotient));var rootKLast=sqrt$1(kLastParsed);if(JSBI.greaterThan(rootK,rootKLast)){var numerator=JSBI.multiply(totalSupply.quotient,JSBI.subtract(rootK,rootKLast));var denominator=JSBI.add(JSBI.multiply(rootK,FIVE),rootKLast);var feeLiquidity=JSBI.divide(numerator,denominator);totalSupplyAdjusted=totalSupply.add(CurrencyAmount$2.fromRawAmount(this.liquidityToken,feeLiquidity))}else{totalSupplyAdjusted=totalSupply}}else{totalSupplyAdjusted=totalSupply}}return CurrencyAmount$2.fromRawAmount(token,JSBI.divide(JSBI.multiply(liquidity.quotient,this.reserveOf(token).quotient),totalSupplyAdjusted.quotient))};_proto.derivePercentAfterSellFees=function derivePercentAfterSellFees(inputAmount){var sellFeeBips=this.token0.wrapped.equals(inputAmount.wrapped.currency)?this.token0.wrapped.sellFeeBps:this.token1.wrapped.sellFeeBps;if(sellFeeBips!=null&&sellFeeBips.gt(BigNumber$1.from(0))){return ONE_HUNDRED_PERCENT.subtract(new Percent$1(JSBI.BigInt(sellFeeBips)).divide(BASIS_POINTS))}else{return ZERO_PERCENT}};_proto.derivePercentAfterBuyFees=function derivePercentAfterBuyFees(outputAmount){var buyFeeBps=this.token0.wrapped.equals(outputAmount.wrapped.currency)?this.token0.wrapped.buyFeeBps:this.token1.wrapped.buyFeeBps;if(buyFeeBps!=null&&buyFeeBps.gt(BigNumber$1.from(0))){return ONE_HUNDRED_PERCENT.subtract(new Percent$1(JSBI.BigInt(buyFeeBps)).divide(BASIS_POINTS))}else{return ZERO_PERCENT}};_createClass$1(Pair,[{key:"token0Price",get:function get(){var result=this.tokenAmounts[1].divide(this.tokenAmounts[0]);return new Price(this.token0,this.token1,result.denominator,result.numerator)}},{key:"token1Price",get:function get(){var result=this.tokenAmounts[0].divide(this.tokenAmounts[1]);return new Price(this.token1,this.token0,result.denominator,result.numerator)}},{key:"chainId",get:function get(){return this.token0.chainId}},{key:"token0",get:function get(){return this.tokenAmounts[0].currency}},{key:"token1",get:function get(){return this.tokenAmounts[1].currency}},{key:"reserve0",get:function get(){return this.tokenAmounts[0]}},{key:"reserve1",get:function get(){return this.tokenAmounts[1]}}]);return Pair}();var Route=function(){function Route(pairs,input,output){this._midPrice=null;!(pairs.length>0)?process.env.NODE_ENV!=="production"?invariant(false,"PAIRS"):invariant(false):void 0;var chainId=pairs[0].chainId;!pairs.every(function(pair){return pair.chainId===chainId})?process.env.NODE_ENV!=="production"?invariant(false,"CHAIN_IDS"):invariant(false):void 0;var wrappedInput=input.wrapped;!pairs[0].involvesToken(wrappedInput)?process.env.NODE_ENV!=="production"?invariant(false,"INPUT"):invariant(false):void 0;!(typeof output==="undefined"||pairs[pairs.length-1].involvesToken(output.wrapped))?process.env.NODE_ENV!=="production"?invariant(false,"OUTPUT"):invariant(false):void 0;var path=[wrappedInput];for(var _iterator=_createForOfIteratorHelperLoose(pairs.entries()),_step;!(_step=_iterator()).done;){var _step$value=_step.value,i=_step$value[0],pair=_step$value[1];var currentInput=path[i];!(currentInput.equals(pair.token0)||currentInput.equals(pair.token1))?process.env.NODE_ENV!=="production"?invariant(false,"PATH"):invariant(false):void 0;var _output=currentInput.equals(pair.token0)?pair.token1:pair.token0;path.push(_output)}this.pairs=pairs;this.path=path;this.input=input;this.output=output}_createClass$1(Route,[{key:"midPrice",get:function get(){if(this._midPrice!==null)return this._midPrice;var prices=[];for(var _iterator2=_createForOfIteratorHelperLoose(this.pairs.entries()),_step2;!(_step2=_iterator2()).done;){var _step2$value=_step2.value,i=_step2$value[0],pair=_step2$value[1];prices.push(this.path[i].equals(pair.token0)?new Price(pair.reserve0.currency,pair.reserve1.currency,pair.reserve0.quotient,pair.reserve1.quotient):new Price(pair.reserve1.currency,pair.reserve0.currency,pair.reserve1.quotient,pair.reserve0.quotient))}var reduced=prices.slice(1).reduce(function(accumulator,currentValue){return accumulator.multiply(currentValue)},prices[0]);return this._midPrice=new Price(this.input,this.output,reduced.denominator,reduced.numerator)}},{key:"chainId",get:function get(){return this.pairs[0].chainId}}]);return Route}();var uniswapV2PairContract=[{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:true,internalType:"address",name:"spender",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"sender",type:"address"},{indexed:false,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1",type:"uint256"},{indexed:true,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"sender",type:"address"},{indexed:false,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Mint",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"sender",type:"address"},{indexed:false,internalType:"uint256",name:"amount0In",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1In",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount0Out",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1Out",type:"uint256"},{indexed:true,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},{anonymous:false,inputs:[{indexed:false,internalType:"uint112",name:"reserve0",type:"uint112"},{indexed:false,internalType:"uint112",name:"reserve1",type:"uint112"}],name:"Sync",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"from",type:"address"},{indexed:true,internalType:"address",name:"to",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{constant:true,inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"pure",type:"function"},{constant:true,inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:false,stateMutability:"pure",type:"function"},{constant:true,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{internalType:"address",name:"to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:false,stateMutability:"pure",type:"function"},{constant:true,inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"reserve0",type:"uint112"},{internalType:"uint112",name:"reserve1",type:"uint112"},{internalType:"uint32",name:"blockTimestampLast",type:"uint32"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"initialize",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:false,stateMutability:"pure",type:"function"},{constant:true,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{internalType:"address",name:"to",type:"address"}],name:"skim",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{internalType:"uint256",name:"amount0Out",type:"uint256"},{internalType:"uint256",name:"amount1Out",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:false,stateMutability:"pure",type:"function"},{constant:false,inputs:[],name:"sync",outputs:[],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:false,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"}];var isNumeric=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,mathceil=Math.ceil,mathfloor$1=Math.floor,bignumberError="[BigNumber Error] ",tooManyDigits=bignumberError+"Number primitive has more than 15 significant digits: ",BASE$1=1e14,LOG_BASE$1=14,MAX_SAFE_INTEGER$1=9007199254740991,POWS_TEN=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],SQRT_BASE=1e7,MAX=1e9;function clone$1(configObject){var div,convertBase,parseNumeric,P=BigNumber.prototype={constructor:BigNumber,toString:null,valueOf:null},ONE=new BigNumber(1),DECIMAL_PLACES=20,ROUNDING_MODE=4,TO_EXP_NEG=-7,TO_EXP_POS=21,MIN_EXP=-1e7,MAX_EXP=1e7,CRYPTO=false,MODULO_MODE=1,POW_PRECISION=0,FORMAT={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz",alphabetHasNormalDecimalDigits=true;function BigNumber(v,b){var alphabet,c,caseChanged,e,i,isNum,len,str,x=this;if(!(x instanceof BigNumber))return new BigNumber(v,b);if(b==null){if(v&&v._isBigNumber===true){x.s=v.s;if(!v.c||v.e>MAX_EXP){x.c=x.e=null}else if(v.e<MIN_EXP){x.c=[x.e=0]}else{x.e=v.e;x.c=v.c.slice()}return}if((isNum=typeof v=="number")&&v*0==0){x.s=1/v<0?(v=-v,-1):1;if(v===~~v){for(e=0,i=v;i>=10;i/=10,e++);if(e>MAX_EXP){x.c=x.e=null}else{x.e=e;x.c=[v]}return}str=String(v)}else{if(!isNumeric.test(str=String(v)))return parseNumeric(x,str,isNum);x.s=str.charCodeAt(0)==45?(str=str.slice(1),-1):1}if((e=str.indexOf("."))>-1)str=str.replace(".","");if((i=str.search(/e/i))>0){if(e<0)e=i;e+=+str.slice(i+1);str=str.substring(0,i)}else if(e<0){e=str.length}}else{intCheck(b,2,ALPHABET.length,"Base");if(b==10&&alphabetHasNormalDecimalDigits){x=new BigNumber(v);return round(x,DECIMAL_PLACES+x.e+1,ROUNDING_MODE)}str=String(v);if(isNum=typeof v=="number"){if(v*0!=0)return parseNumeric(x,str,isNum,b);x.s=1/v<0?(str=str.slice(1),-1):1;if(BigNumber.DEBUG&&str.replace(/^0\.0*|\./,"").length>15){throw Error(tooManyDigits+v)}}else{x.s=str.charCodeAt(0)===45?(str=str.slice(1),-1):1}alphabet=ALPHABET.slice(0,b);e=i=0;for(len=str.length;i<len;i++){if(alphabet.indexOf(c=str.charAt(i))<0){if(c=="."){if(i>e){e=len;continue}}else if(!caseChanged){if(str==str.toUpperCase()&&(str=str.toLowerCase())||str==str.toLowerCase()&&(str=str.toUpperCase())){caseChanged=true;i=-1;e=0;continue}}return parseNumeric(x,String(v),isNum,b)}}isNum=false;str=convertBase(str,b,10,x.s);if((e=str.indexOf("."))>-1)str=str.replace(".","");else e=str.length}for(i=0;str.charCodeAt(i)===48;i++);for(len=str.length;str.charCodeAt(--len)===48;);if(str=str.slice(i,++len)){len-=i;if(isNum&&BigNumber.DEBUG&&len>15&&(v>MAX_SAFE_INTEGER$1||v!==mathfloor$1(v))){throw Error(tooManyDigits+x.s*v)}if((e=e-i-1)>MAX_EXP){x.c=x.e=null}else if(e<MIN_EXP){x.c=[x.e=0]}else{x.e=e;x.c=[];i=(e+1)%LOG_BASE$1;if(e<0)i+=LOG_BASE$1;if(i<len){if(i)x.c.push(+str.slice(0,i));for(len-=LOG_BASE$1;i<len;){x.c.push(+str.slice(i,i+=LOG_BASE$1))}i=LOG_BASE$1-(str=str.slice(i)).length}else{i-=len}for(;i--;str+="0");x.c.push(+str)}}else{x.c=[x.e=0]}}BigNumber.clone=clone$1;BigNumber.ROUND_UP=0;BigNumber.ROUND_DOWN=1;BigNumber.ROUND_CEIL=2;BigNumber.ROUND_FLOOR=3;BigNumber.ROUND_HALF_UP=4;BigNumber.ROUND_HALF_DOWN=5;BigNumber.ROUND_HALF_EVEN=6;BigNumber.ROUND_HALF_CEIL=7;BigNumber.ROUND_HALF_FLOOR=8;BigNumber.EUCLID=9;BigNumber.config=BigNumber.set=function(obj){var p,v;if(obj!=null){if(typeof obj=="object"){if(obj.hasOwnProperty(p="DECIMAL_PLACES")){v=obj[p];intCheck(v,0,MAX,p);DECIMAL_PLACES=v}if(obj.hasOwnProperty(p="ROUNDING_MODE")){v=obj[p];intCheck(v,0,8,p);ROUNDING_MODE=v}if(obj.hasOwnProperty(p="EXPONENTIAL_AT")){v=obj[p];if(v&&v.pop){intCheck(v[0],-MAX,0,p);intCheck(v[1],0,MAX,p);TO_EXP_NEG=v[0];TO_EXP_POS=v[1]}else{intCheck(v,-MAX,MAX,p);TO_EXP_NEG=-(TO_EXP_POS=v<0?-v:v)}}if(obj.hasOwnProperty(p="RANGE")){v=obj[p];if(v&&v.pop){intCheck(v[0],-MAX,-1,p);intCheck(v[1],1,MAX,p);MIN_EXP=v[0];MAX_EXP=v[1]}else{intCheck(v,-MAX,MAX,p);if(v){MIN_EXP=-(MAX_EXP=v<0?-v:v)}else{throw Error(bignumberError+p+" cannot be zero: "+v)}}}if(obj.hasOwnProperty(p="CRYPTO")){v=obj[p];if(v===!!v){if(v){if(typeof crypto!="undefined"&&crypto&&(crypto.getRandomValues||crypto.randomBytes)){CRYPTO=v}else{CRYPTO=!v;throw Error(bignumberError+"crypto unavailable")}}else{CRYPTO=v}}else{throw Error(bignumberError+p+" not true or false: "+v)}}if(obj.hasOwnProperty(p="MODULO_MODE")){v=obj[p];intCheck(v,0,9,p);MODULO_MODE=v}if(obj.hasOwnProperty(p="POW_PRECISION")){v=obj[p];intCheck(v,0,MAX,p);POW_PRECISION=v}if(obj.hasOwnProperty(p="FORMAT")){v=obj[p];if(typeof v=="object")FORMAT=v;else throw Error(bignumberError+p+" not an object: "+v)}if(obj.hasOwnProperty(p="ALPHABET")){v=obj[p];if(typeof v=="string"&&!/^.?$|[+\-.\s]|(.).*\1/.test(v)){alphabetHasNormalDecimalDigits=v.slice(0,10)=="0123456789";ALPHABET=v}else{throw Error(bignumberError+p+" invalid: "+v)}}}else{throw Error(bignumberError+"Object expected: "+obj)}}return{DECIMAL_PLACES:DECIMAL_PLACES,ROUNDING_MODE:ROUNDING_MODE,EXPONENTIAL_AT:[TO_EXP_NEG,TO_EXP_POS],RANGE:[MIN_EXP,MAX_EXP],CRYPTO:CRYPTO,MODULO_MODE:MODULO_MODE,POW_PRECISION:POW_PRECISION,FORMAT:FORMAT,ALPHABET:ALPHABET}};BigNumber.isBigNumber=function(v){if(!v||v._isBigNumber!==true)return false;if(!BigNumber.DEBUG)return true;var i,n,c=v.c,e=v.e,s=v.s;out:if({}.toString.call(c)=="[object Array]"){if((s===1||s===-1)&&e>=-MAX&&e<=MAX&&e===mathfloor$1(e)){if(c[0]===0){if(e===0&&c.length===1)return true;break out}i=(e+1)%LOG_BASE$1;if(i<1)i+=LOG_BASE$1;if(String(c[0]).length==i){for(i=0;i<c.length;i++){n=c[i];if(n<0||n>=BASE$1||n!==mathfloor$1(n))break out}if(n!==0)return true}}}else if(c===null&&e===null&&(s===null||s===1||s===-1)){return true}throw Error(bignumberError+"Invalid BigNumber: "+v)};BigNumber.maximum=BigNumber.max=function(){return maxOrMin(arguments,-1)};BigNumber.minimum=BigNumber.min=function(){return maxOrMin(arguments,1)};BigNumber.random=function(){var pow2_53=9007199254740992;var random53bitInt=Math.random()*pow2_53&2097151?function(){return mathfloor$1(Math.random()*pow2_53)}:function(){return(Math.random()*1073741824|0)*8388608+(Math.random()*8388608|0)};return function(dp){var a,b,e,k,v,i=0,c=[],rand=new BigNumber(ONE);if(dp==null)dp=DECIMAL_PLACES;else intCheck(dp,0,MAX);k=mathceil(dp/LOG_BASE$1);if(CRYPTO){if(crypto.getRandomValues){a=crypto.getRandomValues(new Uint32Array(k*=2));for(;i<k;){v=a[i]*131072+(a[i+1]>>>11);if(v>=9e15){b=crypto.getRandomValues(new Uint32Array(2));a[i]=b[0];a[i+1]=b[1]}else{c.push(v%1e14);i+=2}}i=k/2}else if(crypto.randomBytes){a=crypto.randomBytes(k*=7);for(;i<k;){v=(a[i]&31)*281474976710656+a[i+1]*1099511627776+a[i+2]*4294967296+a[i+3]*16777216+(a[i+4]<<16)+(a[i+5]<<8)+a[i+6];if(v>=9e15){crypto.randomBytes(7).copy(a,i)}else{c.push(v%1e14);i+=7}}i=k/7}else{CRYPTO=false;throw Error(bignumberError+"crypto unavailable")}}if(!CRYPTO){for(;i<k;){v=random53bitInt();if(v<9e15)c[i++]=v%1e14}}k=c[--i];dp%=LOG_BASE$1;if(k&&dp){v=POWS_TEN[LOG_BASE$1-dp];c[i]=mathfloor$1(k/v)*v}for(;c[i]===0;c.pop(),i--);if(i<0){c=[e=0]}else{for(e=-1;c[0]===0;c.splice(0,1),e-=LOG_BASE$1);for(i=1,v=c[0];v>=10;v/=10,i++);if(i<LOG_BASE$1)e-=LOG_BASE$1-i}rand.e=e;rand.c=c;return rand}}();BigNumber.sum=function(){var i=1,args=arguments,sum=new BigNumber(args[0]);for(;i<args.length;)sum=sum.plus(args[i++]);return sum};convertBase=function(){var decimal="0123456789";function toBaseOut(str,baseIn,baseOut,alphabet){var j,arr=[0],arrL,i=0,len=str.length;for(;i<len;){for(arrL=arr.length;arrL--;arr[arrL]*=baseIn);arr[0]+=alphabet.indexOf(str.charAt(i++));for(j=0;j<arr.length;j++){if(arr[j]>baseOut-1){if(arr[j+1]==null)arr[j+1]=0;arr[j+1]+=arr[j]/baseOut|0;arr[j]%=baseOut}}}return arr.reverse()}return function(str,baseIn,baseOut,sign,callerIsToString){var alphabet,d,e,k,r,x,xc,y,i=str.indexOf("."),dp=DECIMAL_PLACES,rm=ROUNDING_MODE;if(i>=0){k=POW_PRECISION;POW_PRECISION=0;str=str.replace(".","");y=new BigNumber(baseIn);x=y.pow(str.length-i);POW_PRECISION=k;y.c=toBaseOut(toFixedPoint(coeffToString(x.c),x.e,"0"),10,baseOut,decimal);y.e=y.c.length}xc=toBaseOut(str,baseIn,baseOut,callerIsToString?(alphabet=ALPHABET,decimal):(alphabet=decimal,ALPHABET));e=k=xc.length;for(;xc[--k]==0;xc.pop());if(!xc[0])return alphabet.charAt(0);if(i<0){--e}else{x.c=xc;x.e=e;x.s=sign;x=div(x,y,dp,rm,baseOut);xc=x.c;r=x.r;e=x.e}d=e+dp+1;i=xc[d];k=baseOut/2;r=r||d<0||xc[d+1]!=null;r=rm<4?(i!=null||r)&&(rm==0||rm==(x.s<0?3:2)):i>k||i==k&&(rm==4||r||rm==6&&xc[d-1]&1||rm==(x.s<0?8:7));if(d<1||!xc[0]){str=r?toFixedPoint(alphabet.charAt(1),-dp,alphabet.charAt(0)):alphabet.charAt(0)}else{xc.length=d;if(r){for(--baseOut;++xc[--d]>baseOut;){xc[d]=0;if(!d){++e;xc=[1].concat(xc)}}}for(k=xc.length;!xc[--k];);for(i=0,str="";i<=k;str+=alphabet.charAt(xc[i++]));str=toFixedPoint(str,e,alphabet.charAt(0))}return str}}();div=function(){function multiply(x,k,base){var m,temp,xlo,xhi,carry=0,i=x.length,klo=k%SQRT_BASE,khi=k/SQRT_BASE|0;for(x=x.slice();i--;){xlo=x[i]%SQRT_BASE;xhi=x[i]/SQRT_BASE|0;m=khi*xlo+xhi*klo;temp=klo*xlo+m%SQRT_BASE*SQRT_BASE+carry;carry=(temp/base|0)+(m/SQRT_BASE|0)+khi*xhi;x[i]=temp%base}if(carry)x=[carry].concat(x);return x}function compare(a,b,aL,bL){var i,cmp;if(aL!=bL){cmp=aL>bL?1:-1}else{for(i=cmp=0;i<aL;i++){if(a[i]!=b[i]){cmp=a[i]>b[i]?1:-1;break}}}return cmp}function subtract(a,b,aL,base){var i=0;for(;aL--;){a[aL]-=i;i=a[aL]<b[aL]?1:0;a[aL]=i*base+a[aL]-b[aL]}for(;!a[0]&&a.length>1;a.splice(0,1));}return function(x,y,dp,rm,base){var cmp,e,i,more,n,prod,prodL,q,qc,rem,remL,rem0,xi,xL,yc0,yL,yz,s=x.s==y.s?1:-1,xc=x.c,yc=y.c;if(!xc||!xc[0]||!yc||!yc[0]){return new BigNumber(!x.s||!y.s||(xc?yc&&xc[0]==yc[0]:!yc)?NaN:xc&&xc[0]==0||!yc?s*0:s/0)}q=new BigNumber(s);qc=q.c=[];e=x.e-y.e;s=dp+e+1;if(!base){base=BASE$1;e=bitFloor(x.e/LOG_BASE$1)-bitFloor(y.e/LOG_BASE$1);s=s/LOG_BASE$1|0}for(i=0;yc[i]==(xc[i]||0);i++);if(yc[i]>(xc[i]||0))e--;if(s<0){qc.push(1);more=true}else{xL=xc.length;yL=yc.length;i=0;s+=2;n=mathfloor$1(base/(yc[0]+1));if(n>1){yc=multiply(yc,n,base);xc=multiply(xc,n,base);yL=yc.length;xL=xc.length}xi=yL;rem=xc.slice(0,yL);remL=rem.length;for(;remL<yL;rem[remL++]=0);yz=yc.slice();yz=[0].concat(yz);yc0=yc[0];if(yc[1]>=base/2)yc0++;do{n=0;cmp=compare(yc,rem,yL,remL);if(cmp<0){rem0=rem[0];if(yL!=remL)rem0=rem0*base+(rem[1]||0);n=mathfloor$1(rem0/yc0);if(n>1){if(n>=base)n=base-1;prod=multiply(yc,n,base);prodL=prod.length;remL=rem.length;while(compare(prod,rem,prodL,remL)==1){n--;subtract(prod,yL<prodL?yz:yc,prodL,base);prodL=prod.length;cmp=1}}else{if(n==0){cmp=n=1}prod=yc.slice();prodL=prod.length}if(prodL<remL)prod=[0].concat(prod);subtract(rem,prod,remL,base);remL=rem.length;if(cmp==-1){while(compare(yc,rem,yL,remL)<1){n++;subtract(rem,yL<remL?yz:yc,remL,base);remL=rem.length}}}else if(cmp===0){n++;rem=[0]}qc[i++]=n;if(rem[0]){rem[remL++]=xc[xi]||0}else{rem=[xc[xi]];remL=1}}while((xi++<xL||rem[0]!=null)&&s--);more=rem[0]!=null;if(!qc[0])qc.splice(0,1)}if(base==BASE$1){for(i=1,s=qc[0];s>=10;s/=10,i++);round(q,dp+(q.e=i+e*LOG_BASE$1-1)+1,rm,more)}else{q.e=e;q.r=+more}return q}}();function format(n,i,rm,id){var c0,e,ne,len,str;if(rm==null)rm=ROUNDING_MODE;else intCheck(rm,0,8);if(!n.c)return n.toString();c0=n.c[0];ne=n.e;if(i==null){str=coeffToString(n.c);str=id==1||id==2&&(ne<=TO_EXP_NEG||ne>=TO_EXP_POS)?toExponential(str,ne):toFixedPoint(str,ne,"0")}else{n=round(new BigNumber(n),i,rm);e=n.e;str=coeffToString(n.c);len=str.length;if(id==1||id==2&&(i<=e||e<=TO_EXP_NEG)){for(;len<i;str+="0",len++);str=toExponential(str,e)}else{i-=ne;str=toFixedPoint(str,e,"0");if(e+1>len){if(--i>0)for(str+=".";i--;str+="0");}else{i+=e-len;if(i>0){if(e+1==len)str+=".";for(;i--;str+="0");}}}}return n.s<0&&c0?"-"+str:str}function maxOrMin(args,n){var k,y,i=1,x=new BigNumber(args[0]);for(;i<args.length;i++){y=new BigNumber(args[i]);if(!y.s||(k=compare(x,y))===n||k===0&&x.s===n){x=y}}return x}function normalise(n,c,e){var i=1,j=c.length;for(;!c[--j];c.pop());for(j=c[0];j>=10;j/=10,i++);if((e=i+e*LOG_BASE$1-1)>MAX_EXP){n.c=n.e=null}else if(e<MIN_EXP){n.c=[n.e=0]}else{n.e=e;n.c=c}return n}parseNumeric=function(){var basePrefix=/^(-?)0([xbo])(?=\w[\w.]*$)/i,dotAfter=/^([^.]+)\.$/,dotBefore=/^\.([^.]+)$/,isInfinityOrNaN=/^-?(Infinity|NaN)$/,whitespaceOrPlus=/^\s*\+(?=[\w.])|^\s+|\s+$/g;return function(x,str,isNum,b){var base,s=isNum?str:str.replace(whitespaceOrPlus,"");if(isInfinityOrNaN.test(s)){x.s=isNaN(s)?null:s<0?-1:1}else{if(!isNum){s=s.replace(basePrefix,function(m,p1,p2){base=(p2=p2.toLowerCase())=="x"?16:p2=="b"?2:8;return!b||b==base?p1:m});if(b){base=b;s=s.replace(dotAfter,"$1").replace(dotBefore,"0.$1")}if(str!=s)return new BigNumber(s,base)}if(BigNumber.DEBUG){throw Error(bignumberError+"Not a"+(b?" base "+b:"")+" number: "+str)}x.s=null}x.c=x.e=null}}();function round(x,sd,rm,r){var d,i,j,k,n,ni,rd,xc=x.c,pows10=POWS_TEN;if(xc){out:{for(d=1,k=xc[0];k>=10;k/=10,d++);i=sd-d;if(i<0){i+=LOG_BASE$1;j=sd;n=xc[ni=0];rd=mathfloor$1(n/pows10[d-j-1]%10)}else{ni=mathceil((i+1)/LOG_BASE$1);if(ni>=xc.length){if(r){for(;xc.length<=ni;xc.push(0));n=rd=0;d=1;i%=LOG_BASE$1;j=i-LOG_BASE$1+1}else{break out}}else{n=k=xc[ni];for(d=1;k>=10;k/=10,d++);i%=LOG_BASE$1;j=i-LOG_BASE$1+d;rd=j<0?0:mathfloor$1(n/pows10[d-j-1]%10)}}r=r||sd<0||xc[ni+1]!=null||(j<0?n:n%pows10[d-j-1]);r=rm<4?(rd||r)&&(rm==0||rm==(x.s<0?3:2)):rd>5||rd==5&&(rm==4||r||rm==6&&(i>0?j>0?n/pows10[d-j]:0:xc[ni-1])%10&1||rm==(x.s<0?8:7));if(sd<1||!xc[0]){xc.length=0;if(r){sd-=x.e+1;xc[0]=pows10[(LOG_BASE$1-sd%LOG_BASE$1)%LOG_BASE$1];x.e=-sd||0}else{xc[0]=x.e=0}return x}if(i==0){xc.length=ni;k=1;ni--}else{xc.length=ni+1;k=pows10[LOG_BASE$1-i];xc[ni]=j>0?mathfloor$1(n/pows10[d-j]%pows10[j])*k:0}if(r){for(;;){if(ni==0){for(i=1,j=xc[0];j>=10;j/=10,i++);j=xc[0]+=k;for(k=1;j>=10;j/=10,k++);if(i!=k){x.e++;if(xc[0]==BASE$1)xc[0]=1}break}else{xc[ni]+=k;if(xc[ni]!=BASE$1)break;xc[ni--]=0;k=1}}}for(i=xc.length;xc[--i]===0;xc.pop());}if(x.e>MAX_EXP){x.c=x.e=null}else if(x.e<MIN_EXP){x.c=[x.e=0]}}return x}function valueOf(n){var str,e=n.e;if(e===null)return n.toString();str=coeffToString(n.c);str=e<=TO_EXP_NEG||e>=TO_EXP_POS?toExponential(str,e):toFixedPoint(str,e,"0");return n.s<0?"-"+str:str}P.absoluteValue=P.abs=function(){var x=new BigNumber(this);if(x.s<0)x.s=1;return x};P.comparedTo=function(y,b){return compare(this,new BigNumber(y,b))};P.decimalPlaces=P.dp=function(dp,rm){var c,n,v,x=this;if(dp!=null){intCheck(dp,0,MAX);if(rm==null)rm=ROUNDING_MODE;else intCheck(rm,0,8);return round(new BigNumber(x),dp+x.e+1,rm)}if(!(c=x.c))return null;n=((v=c.length-1)-bitFloor(this.e/LOG_BASE$1))*LOG_BASE$1;if(v=c[v])for(;v%10==0;v/=10,n--);if(n<0)n=0;return n};P.dividedBy=P.div=function(y,b){return div(this,new BigNumber(y,b),DECIMAL_PLACES,ROUNDING_MODE)};P.dividedToIntegerBy=P.idiv=function(y,b){return div(this,new BigNumber(y,b),0,1)};P.exponentiatedBy=P.pow=function(n,m){var half,isModExp,i,k,more,nIsBig,nIsNeg,nIsOdd,y,x=this;n=new BigNumber(n);if(n.c&&!n.isInteger()){throw Error(bignumberError+"Exponent not an integer: "+valueOf(n))}if(m!=null)m=new BigNumber(m);nIsBig=n.e>14;if(!x.c||!x.c[0]||x.c[0]==1&&!x.e&&x.c.length==1||!n.c||!n.c[0]){y=new BigNumber(Math.pow(+valueOf(x),nIsBig?n.s*(2-isOdd$1(n)):+valueOf(n)));return m?y.mod(m):y}nIsNeg=n.s<0;if(m){if(m.c?!m.c[0]:!m.s)return new BigNumber(NaN);isModExp=!nIsNeg&&x.isInteger()&&m.isInteger();if(isModExp)x=x.mod(m)}else if(n.e>9&&(x.e>0||x.e<-1||(x.e==0?x.c[0]>1||nIsBig&&x.c[1]>=24e7:x.c[0]<8e13||nIsBig&&x.c[0]<=9999975e7))){k=x.s<0&&isOdd$1(n)?-0:0;if(x.e>-1)k=1/k;return new BigNumber(nIsNeg?1/k:k)}else if(POW_PRECISION){k=mathceil(POW_PRECISION/LOG_BASE$1+2)}if(nIsBig){half=new BigNumber(.5);if(nIsNeg)n.s=1;nIsOdd=isOdd$1(n)}else{i=Math.abs(+valueOf(n));nIsOdd=i%2}y=new BigNumber(ONE);for(;;){if(nIsOdd){y=y.times(x);if(!y.c)break;if(k){if(y.c.length>k)y.c.length=k}else if(isModExp){y=y.mod(m)}}if(i){i=mathfloor$1(i/2);if(i===0)break;nIsOdd=i%2}else{n=n.times(half);round(n,n.e+1,1);if(n.e>14){nIsOdd=isOdd$1(n)}else{i=+valueOf(n);if(i===0)break;nIsOdd=i%2}}x=x.times(x);if(k){if(x.c&&x.c.length>k)x.c.length=k}else if(isModExp){x=x.mod(m)}}if(isModExp)return y;if(nIsNeg)y=ONE.div(y);return m?y.mod(m):k?round(y,POW_PRECISION,ROUNDING_MODE,more):y};P.integerValue=function(rm){var n=new BigNumber(this);if(rm==null)rm=ROUNDING_MODE;else intCheck(rm,0,8);return round(n,n.e+1,rm)};P.isEqualTo=P.eq=function(y,b){return compare(this,new BigNumber(y,b))===0};P.isFinite=function(){return!!this.c};P.isGreaterThan=P.gt=function(y,b){return compare(this,new BigNumber(y,b))>0};P.isGreaterThanOrEqualTo=P.gte=function(y,b){return(b=compare(this,new BigNumber(y,b)))===1||b===0};P.isInteger=function(){return!!this.c&&bitFloor(this.e/LOG_BASE$1)>this.c.length-2};P.isLessThan=P.lt=function(y,b){return compare(this,new BigNumber(y,b))<0};P.isLessThanOrEqualTo=P.lte=function(y,b){return(b=compare(this,new BigNumber(y,b)))===-1||b===0};P.isNaN=function(){return!this.s};P.isNegative=function(){return this.s<0};P.isPositive=function(){return this.s>0};P.isZero=function(){return!!this.c&&this.c[0]==0};P.minus=function(y,b){var i,j,t,xLTy,x=this,a=x.s;y=new BigNumber(y,b);b=y.s;if(!a||!b)return new BigNumber(NaN);if(a!=b){y.s=-b;return x.plus(y)}var xe=x.e/LOG_BASE$1,ye=y.e/LOG_BASE$1,xc=x.c,yc=y.c;if(!xe||!ye){if(!xc||!yc)return xc?(y.s=-b,y):new BigNumber(yc?x:NaN);if(!xc[0]||!yc[0]){return yc[0]?(y.s=-b,y):new BigNumber(xc[0]?x:ROUNDING_MODE==3?-0:0)}}xe=bitFloor(xe);ye=bitFloor(ye);xc=xc.slice();if(a=xe-ye){if(xLTy=a<0){a=-a;t=xc}else{ye=xe;t=yc}t.reverse();for(b=a;b--;t.push(0));t.reverse()}else{j=(xLTy=(a=xc.length)<(b=yc.length))?a:b;for(a=b=0;b<j;b++){if(xc[b]!=yc[b]){xLTy=xc[b]<yc[b];break}}}if(xLTy){t=xc;xc=yc;yc=t;y.s=-y.s}b=(j=yc.length)-(i=xc.length);if(b>0)for(;b--;xc[i++]=0);b=BASE$1-1;for(;j>a;){if(xc[--j]<yc[j]){for(i=j;i&&!xc[--i];xc[i]=b);--xc[i];xc[j]+=BASE$1}xc[j]-=yc[j]}for(;xc[0]==0;xc.splice(0,1),--ye);if(!xc[0]){y.s=ROUNDING_MODE==3?-1:1;y.c=[y.e=0];return y}return normalise(y,xc,ye)};P.modulo=P.mod=function(y,b){var q,s,x=this;y=new BigNumber(y,b);if(!x.c||!y.s||y.c&&!y.c[0]){return new BigNumber(NaN)}else if(!y.c||x.c&&!x.c[0]){return new BigNumber(x)}if(MODULO_MODE==9){s=y.s;y.s=1;q=div(x,y,0,3);y.s=s;q.s*=s}else{q=div(x,y,0,MODULO_MODE)}y=x.minus(q.times(y));if(!y.c[0]&&MODULO_MODE==1)y.s=x.s;return y};P.multipliedBy=P.times=function(y,b){var c,e,i,j,k,m,xcL,xlo,xhi,ycL,ylo,yhi,zc,base,sqrtBase,x=this,xc=x.c,yc=(y=new BigNumber(y,b)).c;if(!xc||!yc||!xc[0]||!yc[0]){if(!x.s||!y.s||xc&&!xc[0]&&!yc||yc&&!yc[0]&&!xc){y.c=y.e=y.s=null}else{y.s*=x.s;if(!xc||!yc){y.c=y.e=null}else{y.c=[0];y.e=0}}return y}e=bitFloor(x.e/LOG_BASE$1)+bitFloor(y.e/LOG_BASE$1);y.s*=x.s;xcL=xc.length;ycL=yc.length;if(xcL<ycL){zc=xc;xc=yc;yc=zc;i=xcL;xcL=ycL;ycL=i}for(i=xcL+ycL,zc=[];i--;zc.push(0));base=BASE$1;sqrtBase=SQRT_BASE;for(i=ycL;--i>=0;){c=0;ylo=yc[i]%sqrtBase;yhi=yc[i]/sqrtBase|0;for(k=xcL,j=i+k;j>i;){xlo=xc[--k]%sqrtBase;xhi=xc[k]/sqrtBase|0;m=yhi*xlo+xhi*ylo;xlo=ylo*xlo+m%sqrtBase*sqrtBase+zc[j]+c;c=(xlo/base|0)+(m/sqrtBase|0)+yhi*xhi;zc[j--]=xlo%base}zc[j]=c}if(c){++e}else{zc.splice(0,1)}return normalise(y,zc,e)};P.negated=function(){var x=new BigNumber(this);x.s=-x.s||null;return x};P.plus=function(y,b){var t,x=this,a=x.s;y=new BigNumber(y,b);b=y.s;if(!a||!b)return new BigNumber(NaN);if(a!=b){y.s=-b;return x.minus(y)}var xe=x.e/LOG_BASE$1,ye=y.e/LOG_BASE$1,xc=x.c,yc=y.c;if(!xe||!ye){if(!xc||!yc)return new BigNumber(a/0);if(!xc[0]||!yc[0])return yc[0]?y:new BigNumber(xc[0]?x:a*0)}xe=bitFloor(xe);ye=bitFloor(ye);xc=xc.slice();if(a=xe-ye){if(a>0){ye=xe;t=yc}else{a=-a;t=xc}t.reverse();for(;a--;t.push(0));t.reverse()}a=xc.length;b=yc.length;if(a-b<0){t=yc;yc=xc;xc=t;b=a}for(a=0;b;){a=(xc[--b]=xc[b]+yc[b]+a)/BASE$1|0;xc[b]=BASE$1===xc[b]?0:xc[b]%BASE$1}if(a){xc=[a].concat(xc);++ye}return normalise(y,xc,ye)};P.precision=P.sd=function(sd,rm){var c,n,v,x=this;if(sd!=null&&sd!==!!sd){intCheck(sd,1,MAX);if(rm==null)rm=ROUNDING_MODE;else intCheck(rm,0,8);return round(new BigNumber(x),sd,rm)}if(!(c=x.c))return null;v=c.length-1;n=v*LOG_BASE$1+1;if(v=c[v]){for(;v%10==0;v/=10,n--);for(v=c[0];v>=10;v/=10,n++);}if(sd&&x.e+1>n)n=x.e+1;return n};P.shiftedBy=function(k){intCheck(k,-MAX_SAFE_INTEGER$1,MAX_SAFE_INTEGER$1);return this.times("1e"+k)};P.squareRoot=P.sqrt=function(){var m,n,r,rep,t,x=this,c=x.c,s=x.s,e=x.e,dp=DECIMAL_PLACES+4,half=new BigNumber("0.5");if(s!==1||!c||!c[0]){return new BigNumber(!s||s<0&&(!c||c[0])?NaN:c?x:1/0)}s=Math.sqrt(+valueOf(x));if(s==0||s==1/0){n=coeffToString(c);if((n.length+e)%2==0)n+="0";s=Math.sqrt(+n);e=bitFloor((e+1)/2)-(e<0||e%2);if(s==1/0){n="5e"+e}else{n=s.toExponential();n=n.slice(0,n.indexOf("e")+1)+e}r=new BigNumber(n)}else{r=new BigNumber(s+"")}if(r.c[0]){e=r.e;s=e+dp;if(s<3)s=0;for(;;){t=r;r=half.times(t.plus(div(x,t,dp,1)));if(coeffToString(t.c).slice(0,s)===(n=coeffToString(r.c)).slice(0,s)){if(r.e<e)--s;n=n.slice(s-3,s+1);if(n=="9999"||!rep&&n=="4999"){if(!rep){round(t,t.e+DECIMAL_PLACES+2,0);if(t.times(t).eq(x)){r=t;break}}dp+=4;s+=4;rep=1}else{if(!+n||!+n.slice(1)&&n.charAt(0)=="5"){round(r,r.e+DECIMAL_PLACES+2,1);m=!r.times(r).eq(x)}break}}}}return round(r,r.e+DECIMAL_PLACES+1,ROUNDING_MODE,m)};P.toExponential=function(dp,rm){if(dp!=null){intCheck(dp,0,MAX);dp++}return format(this,dp,rm,1)};P.toFixed=function(dp,rm){if(dp!=null){intCheck(dp,0,MAX);dp=dp+this.e+1}return format(this,dp,rm)};P.toFormat=function(dp,rm,format){var str,x=this;if(format==null){if(dp!=null&&rm&&typeof rm=="object"){format=rm;rm=null}else if(dp&&typeof dp=="object"){format=dp;dp=rm=null}else{format=FORMAT}}else if(typeof format!="object"){throw Error(bignumberError+"Argument not an object: "+format)}str=x.toFixed(dp,rm);if(x.c){var i,arr=str.split("."),g1=+format.groupSize,g2=+format.secondaryGroupSize,groupSeparator=format.groupSeparator||"",intPart=arr[0],fractionPart=arr[1],isNeg=x.s<0,intDigits=isNeg?intPart.slice(1):intPart,len=intDigits.length;if(g2){i=g1;g1=g2;g2=i;len-=i}if(g1>0&&len>0){i=len%g1||g1;intPart=intDigits.substr(0,i);for(;i<len;i+=g1)intPart+=groupSeparator+intDigits.substr(i,g1);if(g2>0)intPart+=groupSeparator+intDigits.slice(i);if(isNeg)intPart="-"+intPart}str=fractionPart?intPart+(format.decimalSeparator||"")+((g2=+format.fractionGroupSize)?fractionPart.replace(new RegExp("\\d{"+g2+"}\\B","g"),"$&"+(format.fractionGroupSeparator||"")):fractionPart):intPart}return(format.prefix||"")+str+(format.suffix||"")};P.toFraction=function(md){var d,d0,d1,d2,e,exp,n,n0,n1,q,r,s,x=this,xc=x.c;if(md!=null){n=new BigNumber(md);if(!n.isInteger()&&(n.c||n.s!==1)||n.lt(ONE)){throw Error(bignumberError+"Argument "+(n.isInteger()?"out of range: ":"not an integer: ")+valueOf(n))}}if(!xc)return new BigNumber(x);d=new BigNumber(ONE);n1=d0=new BigNumber(ONE);d1=n0=new BigNumber(ONE);s=coeffToString(xc);e=d.e=s.length-x.e-1;d.c[0]=POWS_TEN[(exp=e%LOG_BASE$1)<0?LOG_BASE$1+exp:exp];md=!md||n.comparedTo(d)>0?e>0?d:n1:n;exp=MAX_EXP;MAX_EXP=1/0;n=new BigNumber(s);n0.c[0]=0;for(;;){q=div(n,d,0,1);d2=d0.plus(q.times(d1));if(d2.comparedTo(md)==1)break;d0=d1;d1=d2;n1=n0.plus(q.times(d2=n1));n0=d2;d=n.minus(q.times(d2=d));n=d2}d2=div(md.minus(d0),d1,0,1);n0=n0.plus(d2.times(n1));d0=d0.plus(d2.times(d1));n0.s=n1.s=x.s;e=e*2;r=div(n1,d1,e,ROUNDING_MODE).minus(x).abs().comparedTo(div(n0,d0,e,ROUNDING_MODE).minus(x).abs())<1?[n1,d1]:[n0,d0];MAX_EXP=exp;return r};P.toNumber=function(){return+valueOf(this)};P.toPrecision=function(sd,rm){if(sd!=null)intCheck(sd,1,MAX);return format(this,sd,rm,2)};P.toString=function(b){var str,n=this,s=n.s,e=n.e;if(e===null){if(s){str="Infinity";if(s<0)str="-"+str}else{str="NaN"}}else{if(b==null){str=e<=TO_EXP_NEG||e>=TO_EXP_POS?toExponential(coeffToString(n.c),e):toFixedPoint(coeffToString(n.c),e,"0")}else if(b===10&&alphabetHasNormalDecimalDigits){n=round(new BigNumber(n),DECIMAL_PLACES+e+1,ROUNDING_MODE);str=toFixedPoint(coeffToString(n.c),n.e,"0")}else{intCheck(b,2,ALPHABET.length,"Base");str=convertBase(toFixedPoint(coeffToString(n.c),e,"0"),10,b,s,true)}if(s<0&&n.c[0])str="-"+str}return str};P.valueOf=P.toJSON=function(){return valueOf(this)};P._isBigNumber=true;P[Symbol.toStringTag]="BigNumber";P[Symbol.for("nodejs.util.inspect.custom")]=P.valueOf;if(configObject!=null)BigNumber.set(configObject);return BigNumber}function bitFloor(n){var i=n|0;return n>0||n===i?i:i-1}function coeffToString(a){var s,z,i=1,j=a.length,r=a[0]+"";for(;i<j;){s=a[i++]+"";z=LOG_BASE$1-s.length;for(;z--;s="0"+s);r+=s}for(j=r.length;r.charCodeAt(--j)===48;);return r.slice(0,j+1||1)}function compare(x,y){var a,b,xc=x.c,yc=y.c,i=x.s,j=y.s,k=x.e,l=y.e;if(!i||!j)return null;a=xc&&!xc[0];b=yc&&!yc[0];if(a||b)return a?b?0:-j:i;if(i!=j)return i;a=i<0;b=k==l;if(!xc||!yc)return b?0:!xc^a?1:-1;if(!b)return k>l^a?1:-1;j=(k=xc.length)<(l=yc.length)?k:l;for(i=0;i<j;i++)if(xc[i]!=yc[i])return xc[i]>yc[i]^a?1:-1;return k==l?0:k>l^a?1:-1}function intCheck(n,min,max,name){if(n<min||n>max||n!==mathfloor$1(n)){throw Error(bignumberError+(name||"Argument")+(typeof n=="number"?n<min||n>max?" out of range: ":" not an integer: ":" not a primitive number: ")+String(n))}}function isOdd$1(n){var k=n.c.length-1;return bitFloor(n.e/LOG_BASE$1)==k&&n.c[k]%2!=0}function toExponential(str,e){return(str.length>1?str.charAt(0)+"."+str.slice(1):str)+(e<0?"e":"e+")+e}function toFixedPoint(str,e,z){var len,zs;if(e<0){for(zs=z+".";++e;zs+=z);str=zs+str}else{len=str.length;if(++e>len){for(zs=z,e-=len;--e;zs+=z);str+=zs}else if(e<len){str=str.slice(0,e)+"."+str.slice(e)}}return str}var BigNumber=clone$1();var getPlugin$2=function(_a){var plugins=_a.plugins,methodName=_a.methodName;for(var pluginKey in plugins){var key=pluginKey;if(new plugins[key]({chainId:"1"}).method===methodName){return plugins[key]}}return};var MULTICALL_ADDRESS="0x5ba1e12693dc8f9c48aad8770482f4739beed696";var MULTICALL_ADDRESSES$1=[{address:MULTICALL_ADDRESS,chainId:1},{address:MULTICALL_ADDRESS,chainId:5},{address:"0xBF69a56D35B8d6f5A8e0e96B245a72F735751e54",chainId:42161},{address:"0x961E16D26D3f1fc042F192a2e5054120938c1CD5",chainId:421613}];var WETH_ADDRESSES=[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",chainId:1},{address:"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",chainId:5},{address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",chainId:42161},{address:"0x1757f2E7BEE5abE1A79532000d05e32D90dD79fF",chainId:421613}];var WETH_ADDRESS_MAP=WETH_ADDRESSES.reduce(function(map,_a){var address=_a.address,chainId=_a.chainId;map[chainId]=address;return map},{});function weiToCurrency(value,currency){if(!value||!currency){return undefined}try{var currecyAmount=CurrencyAmount$2.fromRawAmount(currency,JSBI.BigInt(value));return currecyAmount}catch(error){console.debug('Failed to parse input amount: "'.concat(value,'"'),error)}return undefined}function tryParseCurrencyAmount(value,currency){if(!value||!currency){return undefined}try{var typedValueParsed=parseUnits(value,currency.decimals).toString();var currecyAmount=CurrencyAmount$2.fromRawAmount(currency,JSBI.BigInt(typedValueParsed));return currecyAmount}catch(error){console.debug('Failed to parse input amount: "'.concat(value,'"'),error)}return undefined}const actions$o={defaultMerge:Symbol("deepmerge-ts: default merge"),skip:Symbol("deepmerge-ts: skip")};({defaultMerge:actions$o.defaultMerge});function defaultMetaDataUpdater(previousMeta,metaMeta){return metaMeta}function getObjectType(object){if(typeof object!=="object"||object===null){return 0}if(Array.isArray(object)){return 2}if(isRecord(object)){return 1}if(object instanceof Set){return 3}if(object instanceof Map){return 4}return 5}function getKeys(objects){const keys=new Set;for(const object of objects){for(const key of[...Object.keys(object),...Object.getOwnPropertySymbols(object)]){keys.add(key)}}return keys}function objectHasProperty(object,property){return typeof object==="object"&&Object.prototype.propertyIsEnumerable.call(object,property)}function getIterableOfIterables(iterables){return{*[Symbol.iterator](){for(const iterable of iterables){for(const value of iterable){yield value}}}}}const validRecordToStringValues=new Set(["[object Object]","[object Module]"]);function isRecord(value){if(!validRecordToStringValues.has(Object.prototype.toString.call(value))){return false}const{constructor}=value;if(constructor===undefined){return true}const prototype=constructor.prototype;if(prototype===null||typeof prototype!=="object"||!validRecordToStringValues.has(Object.prototype.toString.call(prototype))){return false}if(!prototype.hasOwnProperty("isPrototypeOf")){return false}return true}function mergeRecords$2(values,utils,meta){const result={};for(const key of getKeys(values)){const propValues=[];for(const value of values){if(objectHasProperty(value,key)){propValues.push(value[key])}}if(propValues.length===0){continue}const updatedMeta=utils.metaDataUpdater(meta,{key:key,parents:values});const propertyResult=mergeUnknowns(propValues,utils,updatedMeta);if(propertyResult===actions$o.skip){continue}if(key==="__proto__"){Object.defineProperty(result,key,{value:propertyResult,configurable:true,enumerable:true,writable:true})}else{result[key]=propertyResult}}return result}function mergeArrays$2(values){return values.flat()}function mergeSets$2(values){return new Set(getIterableOfIterables(values))}function mergeMaps$2(values){return new Map(getIterableOfIterables(values))}function mergeOthers$2(values){return values[values.length-1]}var defaultMergeFunctions=Object.freeze({__proto__:null,mergeRecords:mergeRecords$2,mergeArrays:mergeArrays$2,mergeSets:mergeSets$2,mergeMaps:mergeMaps$2,mergeOthers:mergeOthers$2});function deepmerge(...objects){return deepmergeCustom({})(...objects)}function deepmergeCustom(options,rootMetaData){const utils=getUtils(options,customizedDeepmerge);function customizedDeepmerge(...objects){return mergeUnknowns(objects,utils,rootMetaData)}return customizedDeepmerge}function getUtils(options,customizedDeepmerge){var _a,_b;return{defaultMergeFunctions:defaultMergeFunctions,mergeFunctions:{...defaultMergeFunctions,...Object.fromEntries(Object.entries(options).filter(([key,option])=>Object.prototype.hasOwnProperty.call(defaultMergeFunctions,key)).map(([key,option])=>option===false?[key,mergeOthers$2]:[key,option]))},metaDataUpdater:(_a=options.metaDataUpdater)!==null&&_a!==void 0?_a:defaultMetaDataUpdater,deepmerge:customizedDeepmerge,useImplicitDefaultMerging:(_b=options.enableImplicitDefaultMerging)!==null&&_b!==void 0?_b:false,actions:actions$o}}function mergeUnknowns(values,utils,meta){if(values.length===0){return undefined}if(values.length===1){return mergeOthers$1(values,utils,meta)}const type=getObjectType(values[0]);if(type!==0&&type!==5){for(let m_index=1;m_index<values.length;m_index++){if(getObjectType(values[m_index])===type){continue}return mergeOthers$1(values,utils,meta)}}switch(type){case 1:{return mergeRecords$1(values,utils,meta)}case 2:{return mergeArrays$1(values,utils,meta)}case 3:{return mergeSets$1(values,utils,meta)}case 4:{return mergeMaps$1(values,utils,meta)}default:{return mergeOthers$1(values,utils,meta)}}}function mergeRecords$1(values,utils,meta){const result=utils.mergeFunctions.mergeRecords(values,utils,meta);if(result===actions$o.defaultMerge||utils.useImplicitDefaultMerging&&result===undefined&&utils.mergeFunctions.mergeRecords!==utils.defaultMergeFunctions.mergeRecords){return utils.defaultMergeFunctions.mergeRecords(values,utils,meta)}return result}function mergeArrays$1(values,utils,meta){const result=utils.mergeFunctions.mergeArrays(values,utils,meta);if(result===actions$o.defaultMerge||utils.useImplicitDefaultMerging&&result===undefined&&utils.mergeFunctions.mergeArrays!==utils.defaultMergeFunctions.mergeArrays){return utils.defaultMergeFunctions.mergeArrays(values)}return result}function mergeSets$1(values,utils,meta){const result=utils.mergeFunctions.mergeSets(values,utils,meta);if(result===actions$o.defaultMerge||utils.useImplicitDefaultMerging&&result===undefined&&utils.mergeFunctions.mergeSets!==utils.defaultMergeFunctions.mergeSets){return utils.defaultMergeFunctions.mergeSets(values)}return result}function mergeMaps$1(values,utils,meta){const result=utils.mergeFunctions.mergeMaps(values,utils,meta);if(result===actions$o.defaultMerge||utils.useImplicitDefaultMerging&&result===undefined&&utils.mergeFunctions.mergeMaps!==utils.defaultMergeFunctions.mergeMaps){return utils.defaultMergeFunctions.mergeMaps(values)}return result}function mergeOthers$1(values,utils,meta){const result=utils.mergeFunctions.mergeOthers(values,utils,meta);if(result===actions$o.defaultMerge||utils.useImplicitDefaultMerging&&result===undefined&&utils.mergeFunctions.mergeOthers!==utils.defaultMergeFunctions.mergeOthers){return utils.defaultMergeFunctions.mergeOthers(values)}return result}var __extends$d=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign$r=undefined&&undefined.__assign||function(){__assign$r=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$r.apply(this,arguments)};var __rest$6=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};var __values$e=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var __read$g=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$b=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var maxValue="115792089237316195423570985008687907853269984665640564039457584007913129639935";var isVariable=function(value){if(!value)return false;if(typeof value!=="object")return false;if("id"in value){return true}return false};var getOutputVariable$1=function(_a){var innerIndex=_a.innerIndex,nodeId=_a.nodeId,pluginType=_a.pluginType;if(typeof innerIndex!=="number"){console.error("wrong output param");return undefined}if(pluginType==="COMPUTED_VARIABLE")return{id:nodeId,type:"computed"};var variable={type:"output",id:{innerIndex:innerIndex,nodeId:nodeId}};return variable};var tokenDestinations=["erc20","curve_pool","curve_gauge","yearn_vault","ctoken","curve_voting_escrow","aave_pool_v3","aave_lending_pool_v2"];var FctParam=function(){function FctParam(_a){var fctType=_a.fctType,appType=_a.appType,value=_a.value,mode=_a.mode,required=_a.required,innerIndex=_a.innerIndex,destination=_a.destination,description=_a.description,options=_a.options,risk=_a.risk,messageType=_a.messageType,readonly=_a.readonly,innerType=_a.innerType,decimals=_a.decimals,hidden=_a.hidden,key=_a.key,virtual=_a.virtual;var _this=this;this.mode="ALL";this.required=true;this.readonly=false;this.isMultiParam=false;this.subscribe=function(_a){var callback=_a.callback,id=_a.id;_this.observers.set(id,callback)};this.unsubscribe=function(_a){var id=_a.id;_this.observers.delete(id)};this.observers=new Map;this._isLoading=false;this._virtual=false;this._hidden=false;this.isConnectable=function(param){return isConnectable({from:param,to:_this})};this.getOutputVariable=function(nodeId,pluginType){if(typeof _this.innerIndex!=="number")return undefined;if(pluginType==="VALIDATION_VARIABLE")return{id:nodeId,type:"validation"};if(pluginType==="COMPUTED_VARIABLE")return{id:nodeId,type:"computed"};var variable={type:"output",id:{innerIndex:_this.innerIndex,nodeId:nodeId}};return variable};this.set=function(_a){var value=_a.value;_this.value=value;_this.updateSubsciptions()};this.setString=function(_a){var value=_a.value;return _this._setString({value:value})};this.getString=function(){if(!_this.value)return _this.value;if(isVariable(_this.value))return _this.value;if(typeof _this.value==="string")return _this.value;try{var stringValue=JSON.stringify(_this.value);return stringValue}catch(e){console.error(e);return _this.value}};this.setQuiet=function(_a){var value=_a.value;_this.value=value};this.get=function(){return _this.value};this.setEstimated=function(_a){var value=_a.value;_this.estimatedValue=value;_this.updateSubsciptions()};this.setEstimatedString=function(_a){var value=_a.value;if(isVariable(value))return;if(!value){_this.estimatedValue=value;_this.updateSubsciptions();return}if(_this.fctType==="string[]"||_this.fctType==="address[]"||_this.fctType==="bool"){try{_this.estimatedValue=JSON.parse(value)}catch(e){console.error({setParamError:e});_this.estimatedValue=value}_this.updateSubsciptions();return}_this.estimatedValue=value;_this.updateSubsciptions();return};this.getEstimated=function(){return _this.estimatedValue};this.isValid=function(){return true};this.reset=function(){_this.value=undefined};this.updateSubsciptions=function(){var e_1,_a;try{for(var _b=__values$e(_this.observers),_c=_b.next();!_c.done;_c=_b.next()){var observer=_c.value;observer[1](_this,_this.isLoading,undefined)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_1)throw e_1.error}}};this._setString=function(_a){var value=_a.value;if(!value){_this.value=value;_this.updateSubsciptions();return}if(isVariable(value)){_this.value=value;_this.updateSubsciptions();return}if(_this.appType==="string[]"||_this.appType==="integer[]"||_this.appType==="number[]"||_this.appType==="address[]"||_this.fctType==="tuple[]"){try{_this.value=JSON.parse(value)}catch(e){console.error({setParamError:e});_this.value=value}_this.updateSubsciptions();return}_this.value=value;_this.updateSubsciptions();return};this.value=value;this.appType=appType;this._fctType=fctType;this.innerIndex=innerIndex;this.destination=destination;this.description=description;this.innerType=innerType||fctType;this.risk=risk;this._messageType=messageType;if(key)this.key=key;if(mode)this.mode=mode;if(virtual)this.virtual=virtual;if(typeof required==="boolean")this.required=required;if(typeof readonly==="boolean")this.readonly=readonly;if(typeof hidden==="boolean")this.hidden=hidden;if(decimals)this.decimals=decimals;if(Array.isArray(options))this.options=options}Object.defineProperty(FctParam.prototype,"label",{get:function(){return this._label},set:function(label){this._label=label;this.updateSubsciptions()},enumerable:false,configurable:true});Object.defineProperty(FctParam.prototype,"isLoading",{get:function(){return this._isLoading},set:function(isLoading){this._isLoading=isLoading;this.updateSubsciptions()},enumerable:false,configurable:true});Object.defineProperty(FctParam.prototype,"hidden",{get:function(){return this._hidden},set:function(isHidden){this._hidden=isHidden;this.updateSubsciptions()},enumerable:false,configurable:true});Object.defineProperty(FctParam.prototype,"virtual",{get:function(){return this._virtual},set:function(isVirtual){this._virtual=isVirtual},enumerable:false,configurable:true});Object.defineProperty(FctParam.prototype,"decimals",{get:function(){return this._decimals},set:function(label){this._decimals=label;this.updateSubsciptions()},enumerable:false,configurable:true});FctParam.prototype.getJsonParam=function(_a){var key=_a.key,ioType=_a.ioType;var _b=this,fctType=_b.fctType,appType=_b.appType,label=_b.label,hidden=_b.hidden,required=_b.required,estimatedValue=_b.estimatedValue,decimals=_b.decimals,nodeId=_b.nodeId,mode=_b.mode,description=_b.description,destination=_b.destination,risk=_b.risk,readonly=_b.readonly,innerIndex=_b.innerIndex,isMultiParam=_b.isMultiParam,virtual=_b.virtual;return{get key(){return key},get ioType(){return ioType},get appType(){return appType},get fctType(){return fctType},value:this.getString(),label:label,hidden:hidden,required:required,estimatedValue:estimatedValue,messageType:this.getMessageType(),decimals:decimals,nodeId:nodeId,mode:mode,description:description,destination:destination,risk:risk,readonly:readonly,innerIndex:innerIndex,isMultiParam:isMultiParam,virtual:virtual}};FctParam.prototype.setJsonParam=function(param){var _this=this;param.key;param.fctType;param.appType;var value=param.value;param.ioType;var rest=__rest$6(param,["key","fctType","appType","value","ioType"]);this._setString({value:value});Object.keys(rest).forEach(function(key){var paramKey=key;if(paramKey in _this){_this[paramKey]=param[paramKey]}})};Object.defineProperty(FctParam.prototype,"fctType",{get:function(){return this._fctType},enumerable:false,configurable:true});Object.defineProperty(FctParam.prototype,"isVariable",{get:function(){var value=this.value;if(!value)return false;return isVariable(value)},enumerable:false,configurable:true});FctParam.prototype.getMessageType=function(){return this._messageType};return FctParam}();var isConnectable=function(_a){var from=_a.from,to=_a.to;if(to.pluginType==="COMPUTED_VARIABLE"&&to.key!=="value1"&&from.decimals!==to.decimals){return false}if(from.destination&&(to.destination||to.fctType==="bytes")){if(tokenDestinations.includes(from.destination)&&(to.destination==="erc20"||to.fctType==="bytes"))return true;return from.destination===to.destination}if(from.fctType==="bytes"){return true}if(to.fctType==="bytes"&&to.hashed){return true}if(from.fctType===to.fctType)return true;if(from.appType!==to.appType)return false;var isFromArray=from.fctType.includes("[]");var isToArray=to.fctType.includes("[]");if(isFromArray!==isToArray)return false;var getNumber=function(value){var parsedValue=value.match(/\d+/);return parsedValue?parsedValue[0]:undefined};var isLessEqual=function(value1,value2){var number1=getNumber(value1);var number2=getNumber(value2);if(!number1||!number2)return false;return Number(number1)<=Number(number2)};if(from.fctType.includes("uint")&&to.fctType.includes("uint")){return isLessEqual(from.fctType,to.fctType)}if(from.fctType.includes("int")&&to.fctType.includes("int")){if(to.fctType.includes("uint"))return from.fctType===to.fctType;return isLessEqual(from.fctType,to.fctType)}if(from.fctType.includes("bytes")&&to.fctType.includes("bytes")){if(!getNumber(to.fctType))return true;return isLessEqual(from.fctType,to.fctType)}return from.fctType===to.fctType};var FctAmount=function(_super){__extends$d(FctAmount,_super);function FctAmount(){var _this=_super.apply(this,__spreadArray$b([],__read$g(arguments),false))||this;_this.isValid=function(){if(!_this.value)return true;var value=_this.value;if(_this.isVariable)return true;try{JSBI.BigInt(value).toString();return true}catch(e){console.error({error:e});return false}};return _this}return FctAmount}(FctParam);var FctAmount128=function(_super){__extends$d(FctAmount128,_super);function FctAmount128(){var _this=_super.apply(this,__spreadArray$b([],__read$g(arguments),false))||this;_this.isValid=function(){if(!_this.value)return true;var value=_this.value;if(_this.isVariable)return true;try{JSBI.BigInt(value).toString();return true}catch(e){console.error({error:e});return false}};return _this}return FctAmount128}(FctParam);var FctInt256=function(_super){__extends$d(FctInt256,_super);function FctInt256(args){var _this=_super.call(this,__assign$r({fctType:"int256",appType:"integer"},args))||this;_this.isValid=function(){if(!_this.value)return true;var value=_this.value;if(_this.isVariable)return true;try{JSBI.BigInt(value).toString();return true}catch(e){console.error({error:e});return false}};return _this}return FctInt256}(FctParam);var FctValue=function(_super){__extends$d(FctValue,_super);function FctValue(args){return _super.call(this,__assign$r({fctType:"uint256",appType:"integer"},args))||this}return FctValue}(FctAmount);var FctTimestamp=function(_super){__extends$d(FctTimestamp,_super);function FctTimestamp(args){return _super.call(this,__assign$r({fctType:"uint256",appType:"timestamp"},args))||this}return FctTimestamp}(FctAmount);var FctDecimals=function(_super){__extends$d(FctDecimals,_super);function FctDecimals(args){return _super.call(this,__assign$r({fctType:"uint256",appType:"decimals"},args))||this}return FctDecimals}(FctAmount);var FctValue18=function(_super){__extends$d(FctValue18,_super);function FctValue18(args){var _this=_super.call(this,__assign$r({fctType:"uint256",appType:"integer18"},args))||this;_this.decimals=18;return _this}return FctValue18}(FctAmount);var FctValue27=function(_super){__extends$d(FctValue27,_super);function FctValue27(args){var _this=_super.call(this,__assign$r({fctType:"uint256",appType:"integer27"},args))||this;_this.decimals=27;return _this}return FctValue27}(FctAmount);var FctBps=function(_super){__extends$d(FctBps,_super);function FctBps(args){var _this=_super.call(this,__assign$r({fctType:"uint256",appType:"bps"},args))||this;_this.decimals=4;return _this}return FctBps}(FctAmount);var FctUinteger32Bps=function(_super){__extends$d(FctUinteger32Bps,_super);function FctUinteger32Bps(args){var _this=_super.call(this,__assign$r({fctType:"uint32",appType:"bps"},args))||this;_this.decimals=4;return _this}return FctUinteger32Bps}(FctParam);var FctPercent=function(_super){__extends$d(FctPercent,_super);function FctPercent(args){var _this=_super.call(this,__assign$r({fctType:"uint256",appType:"integer"},args))||this;_this.isValid=function(){if(!_this.value)return true;if(_this.isVariable)return true;try{var amount=parseFloat(_this.value);if(amount>=0){return true}return false}catch(e){console.error({error:e});return false}};return _this}return FctPercent}(FctParam);var FctValue8=function(_super){__extends$d(FctValue8,_super);function FctValue8(args){return _super.call(this,__assign$r({fctType:"uint8",appType:"integer"},args))||this}return FctValue8}(FctParam);var FctUInt80=function(_super){__extends$d(FctUInt80,_super);function FctUInt80(args){return _super.call(this,__assign$r({fctType:"uint80",appType:"integer"},args))||this}return FctUInt80}(FctParam);var FctValue16=function(_super){__extends$d(FctValue16,_super);function FctValue16(args){return _super.call(this,__assign$r({fctType:"uint16",appType:"integer"},args))||this}return FctValue16}(FctParam);var FctValue24=function(_super){__extends$d(FctValue24,_super);function FctValue24(args){return _super.call(this,__assign$r({fctType:"uint24",appType:"integer"},args))||this}return FctValue24}(FctParam);var FctValue40=function(_super){__extends$d(FctValue40,_super);function FctValue40(args){return _super.call(this,__assign$r({fctType:"uint40",appType:"integer"},args))||this}return FctValue40}(FctParam);var FctValue128=function(_super){__extends$d(FctValue128,_super);function FctValue128(args){return _super.call(this,__assign$r({fctType:"uint128",appType:"integer"},args))||this}return FctValue128}(FctParam);var FctValue128_27=function(_super){__extends$d(FctValue128_27,_super);function FctValue128_27(args){var _this=_super.call(this,__assign$r({fctType:"uint256",appType:"integer27"},args))||this;_this.decimals=27;return _this}return FctValue128_27}(FctAmount128);var FctValue160=function(_super){__extends$d(FctValue160,_super);function FctValue160(args){return _super.call(this,__assign$r({fctType:"uint160",appType:"integer"},args))||this}return FctValue160}(FctParam);var FctAddress=function(_super){__extends$d(FctAddress,_super);function FctAddress(args){var _this=_super.call(this,__assign$r({fctType:"address",appType:"address"},args))||this;_this.isValid=function(){if(!_this.value)return true;if(_this.isVariable)return true;var value=_this.value;if(value==="NATIVE")return true;if(!isAddress$4(value)){return false}return true};return _this}return FctAddress}(FctParam);var FctAddressList=function(_super){__extends$d(FctAddressList,_super);function FctAddressList(args){var _this=_super.call(this,__assign$r({fctType:"address[]",appType:"address[]"},args))||this;_this.paramFctType="address";_this.paramAppType="address";_this.setString=function(_a){var value=_a.value;if(!value){_this.value=value;return}if(isVariable(value)){return}if(typeof value!=="string")return;var params=[];try{JSON.parse(value);console.error("wrong value: ".concat(value," for ").concat(_this.key," param"))}catch(error){value.split(",").forEach(function(param){params.push(param)});_this.value=params}};return _this}return FctAddressList}(FctParam);var FctValueList=function(_super){__extends$d(FctValueList,_super);function FctValueList(args){var _this=_super.call(this,__assign$r({fctType:"uint256[]",appType:"integer[]"},args))||this;_this.paramFctType="uint256";_this.paramAppType="integer";_this.setString=function(_a){var value=_a.value;if(!value){_this.value=value;return}if(isVariable(value)){_this.value=value;return}if(typeof value!=="string")return;var params=[];try{JSON.parse(value);console.error("wrong value: ".concat(value," for ").concat(_this.key," param"))}catch(error){value.split(",").forEach(function(param){params.push(param)});_this.value=params}};return _this}return FctValueList}(FctParam);var FDBackBase$1="0xFDB0000000000000000000000000000000000000";var FDBackBaseBytes$1="0xFDB0000000000000000000000000000000000000000000000000000000000000";var FDBase$1="0xFD00000000000000000000000000000000000000";var FDBaseBytes$1="0xFD00000000000000000000000000000000000000000000000000000000000000";var getOutputVariableOnChain=function(_a){var index=_a.index,innerIndex=_a.innerIndex,_b=_a.type,type=_b===void 0?"uint256":_b;var outputIndexHex=(index+1).toString(16).padStart(4,"0");var base;var innerIndexHex;innerIndex=innerIndex!==null&&innerIndex!==void 0?innerIndex:0;if(innerIndex<0){innerIndexHex=((innerIndex+1)*-1).toString(16).padStart(4,"0");if(type.includes("bytes")){base=FDBackBaseBytes$1}else{base=FDBackBase$1}}else{innerIndexHex=innerIndex.toString(16).padStart(4,"0");if(type.includes("bytes")){base=FDBaseBytes$1}else{base=FDBase$1}}return(innerIndexHex+outputIndexHex).padStart(base.length,base)};var FctValueListN=function(_super){__extends$d(FctValueListN,_super);function FctValueListN(args){var _this=_super.call(this,__assign$r({fctType:"uint256[n]",appType:"integer[]"},args))||this;_this.setString=function(_a){var value=_a.value;if(!value){_this.value=value;return}if(isVariable(value)){return}if(typeof value!=="string")return;var params=[];try{JSON.parse(value);console.error("wrong value: ".concat(value," for ").concat(_this.key," param"))}catch(error){value.split(",").forEach(function(param){params.push(param)});_this.value=params}};return _this}Object.defineProperty(FctValueListN.prototype,"fctType",{get:function(){try{var value=this.value;var parsedValue=typeof value==="string"?JSON.parse(value):value;var length_1=parsedValue===null||parsedValue===void 0?void 0:parsedValue.length;if(length_1){return"uint256[".concat(length_1,"]")}return this._fctType}catch(e){return this._fctType}},enumerable:false,configurable:true});return FctValueListN}(FctParam);var FctBytes32=function(_super){__extends$d(FctBytes32,_super);function FctBytes32(args){var _this=_super.call(this,__assign$r({fctType:"bytes32",appType:"bytes32"},args))||this;if(args.messageType){_this.appType=args.messageType;return _this}_this.appType="bytes32";return _this}FctBytes32.prototype.getMessageType=function(){if((this._messageType==="stringOrBytes32"||this._messageType==="string")&&this.value&&typeof this.value==="string"){if(isBytesLike(this.value)){return"bytes32"}return"string"}return"bytes32"};return FctBytes32}(FctParam);var FctBytes32List=function(_super){__extends$d(FctBytes32List,_super);function FctBytes32List(args){return _super.call(this,__assign$r({fctType:"bytes32[]",appType:"string[]"},args))||this}return FctBytes32List}(FctParam);var FctBytes4=function(_super){__extends$d(FctBytes4,_super);function FctBytes4(args){return _super.call(this,__assign$r({fctType:"bytes4",appType:"string"},args))||this}return FctBytes4}(FctParam);var FctBytes=function(_super){__extends$d(FctBytes,_super);function FctBytes(args){var _this=_super.call(this,__assign$r({fctType:"bytes",appType:"bytes"},args))||this;if(args.messageType){_this.appType=args.messageType;return _this}_this.appType="bytes";return _this}FctBytes.prototype.getMessageType=function(){if((this._messageType==="stringOrBytes"||this._messageType==="string")&&this.value&&typeof this.value==="string"){if(isBytesLike(this.value)){return"bytes"}return"string"}return"bytes"};return FctBytes}(FctParam);var FctBytesList=function(_super){__extends$d(FctBytesList,_super);function FctBytesList(args){return _super.call(this,__assign$r({fctType:"bytes[]",appType:"string[]"},args))||this}return FctBytesList}(FctParam);var FctString=function(_super){__extends$d(FctString,_super);function FctString(args){return _super.call(this,__assign$r({fctType:"string",appType:"string"},args))||this}return FctString}(FctParam);var FctTupleArray=function(_super){__extends$d(FctTupleArray,_super);function FctTupleArray(args){var _this=this;var argParams=args.params;if(!argParams){return _this}var appTypes=Object.keys(argParams).map(function(key){var param=argParams[key];return"".concat(key," ").concat(param.paramAppType)});_this=_super.call(this,__assign$r({fctType:"tuple[]",appType:appTypes.join()},args))||this;_this.tupleInterface="";_this.tupleType="";_this.params={};_this.setString=function(_a){var value=_a.value;if(!value){_this.value=value;return}if(isVariable(value)){_this.value=value;return}if(typeof value!=="string")return;try{JSON.parse(value);console.error("wrong value: ".concat(value," for ").concat(_this.key," param"))}catch(error){var params_1=[];var subParam_1=[];Object.keys(_this.params).forEach(function(key){_this.params[key].set({value:[]})});value.split(",").forEach(function(param,i){var paramIndex=i%Object.keys(_this.params).length;var paramKey=Object.keys(_this.params)[paramIndex];var tupleParam=_this.params[paramKey];switch(tupleParam.paramFctType){case"address":if(!param)break;if(!isAddress$4(param)){console.error("wrong value: ".concat(param," should be ").concat(tupleParam.paramFctType," type"));return}break;case"uint256":if(!param)break;try{JSBI.BigInt(param).toString();break}catch(e){console.error("wrong value: ".concat(param," should be ").concat(tupleParam.paramFctType," type"));return}}if(paramIndex===0){if(subParam_1.length){params_1.push(subParam_1)}subParam_1=[]}var prevTupleValue=tupleParam.value||[];tupleParam.set({value:__spreadArray$b(__spreadArray$b([],__read$g(prevTupleValue),false),[param],false)});subParam_1.push({name:paramKey,type:tupleParam.paramFctType,value:param,virtual:tupleParam.virtual})});params_1.push(subParam_1);_this.value=params_1}};_this.getFctParams=function(){if(!_this.value)return _this.value;if(isVariable(_this.value))return _this.value;var value=_this.value;return value===null||value===void 0?void 0:value.map(function(p){return p.filter(function(p){return!p.virtual})})};_this.params=argParams;_this.tupleInterface="(";_this.tupleType="(";Object.keys(argParams).forEach(function(key){var param=argParams[key];if(param.virtual)return;_this.tupleInterface+="".concat(param.paramFctType," ").concat(param.key,",");_this.tupleType+="".concat(param.paramFctType,",")});_this.tupleInterface=_this.tupleInterface.slice(0,-1);_this.tupleInterface+=")[]";_this.tupleType=_this.tupleType.slice(0,-1);_this.tupleType+=")[]";return _this}return FctTupleArray}(FctParam);var FctBoolean=function(_super){__extends$d(FctBoolean,_super);function FctBoolean(args){return _super.call(this,__assign$r({fctType:"bool",appType:"string"},args))||this}return FctBoolean}(FctParam);var FctInteger24=function(_super){__extends$d(FctInteger24,_super);function FctInteger24(args){return _super.call(this,__assign$r({fctType:"int24",appType:"integer"},args))||this}return FctInteger24}(FctParam);var FctInteger64=function(_super){__extends$d(FctInteger64,_super);function FctInteger64(args){return _super.call(this,__assign$r({fctType:"int64",appType:"integer"},args))||this}return FctInteger64}(FctParam);var FctInteger32=function(_super){__extends$d(FctInteger32,_super);function FctInteger32(args){return _super.call(this,__assign$r({fctType:"int32",appType:"integer"},args))||this}return FctInteger32}(FctParam);var FctUinteger64=function(_super){__extends$d(FctUinteger64,_super);function FctUinteger64(args){return _super.call(this,__assign$r({fctType:"uint64",appType:"integer"},args))||this}return FctUinteger64}(FctParam);var FctUinteger32=function(_super){__extends$d(FctUinteger32,_super);function FctUinteger32(args){return _super.call(this,__assign$r({fctType:"uint32",appType:"integer"},args))||this}return FctUinteger32}(FctParam);var FctInteger128=function(_super){__extends$d(FctInteger128,_super);function FctInteger128(args){return _super.call(this,__assign$r({fctType:"int128",appType:"integer"},args))||this}return FctInteger128}(FctParam);var FctCustom=function(_super){__extends$d(FctCustom,_super);function FctCustom(args){return _super.call(this,__assign$r({fctType:"unknown",appType:"string"},args))||this}return FctCustom}(FctParam);var FctCustomArray=function(_super){__extends$d(FctCustomArray,_super);function FctCustomArray(args){var _this=_super.call(this,__assign$r({fctType:"unknown",appType:"string[]"},args))||this;_this.paramAppType="string";_this.paramFctType="unknown";return _this}return FctCustomArray}(FctParam);var paramsSchemas=[FctAddress,FctBytes32,FctBoolean,FctAddressList,FctValue,FctBytes,FctValueList,FctValue8,FctValue16,FctValue24,FctValue40,FctValue128,FctValue160,FctString,FctBytes4,FctBytes32List,FctInteger24,FctInteger32,FctInteger64,FctUinteger32,FctUinteger64,FctInteger128,FctValueListN,FctTimestamp,FctDecimals,FctBps,FctValue18,FctValue27,FctInt256,FctCustom,FctBytesList,FctUInt80,FctCustomArray,FctTupleArray,FctUinteger32Bps];var ERRORS;(function(ERRORS){ERRORS["PARAM_NOT_DEFINED"]="PARAM_NOT_DEFINED";ERRORS["INVALID_VALUE"]="INVALID_VALUE";ERRORS["RANGE_ERROR"]="RANGE_ERROR";ERRORS["INVALID_TRADE"]="INVALID_TRADE";ERRORS["PATH_NOT_FOUNDED"]="PATH_NOT_FOUNDED"})(ERRORS||(ERRORS={}));var __values$d=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var Input=function(){function Input(_fctParams,chainId){var _this=this;this._warnings=new Map;this._errors=new Map;this.subscribe=function(_a){var callback=_a.callback,id=_a.id;_this.observers.set(id,callback)};this.unsubscribe=function(_a){var id=_a.id;_this.observers.delete(id)};this.updateSubscriptions=function(){var e_1,_a;try{for(var _b=__values$d(_this.observers),_c=_b.next();!_c.done;_c=_b.next()){var observer=_c.value;observer[1](_this.params,_this._errors,_this.chainId)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_1)throw e_1.error}}};this.observers=new Map;this.get=function(){return _this.params};this.validate=function(params,errors){return true};this._params=_fctParams.input;this._methodParams=_fctParams.input.methodParams;this.paramsList.forEach(function(element){element.param.subscribe({callback:_this.updateSubscriptions,id:element.key})});this.chainId=chainId}Object.defineProperty(Input.prototype,"params",{get:function(){return this._params},enumerable:false,configurable:true});Object.defineProperty(Input.prototype,"paramsList",{get:function(){var list=[];var setParamsList=function(inputParams,prevKey){for(var key in inputParams){var name_1=key;var fctParam=inputParams[key];var uniqueKey=prevKey?"".concat(prevKey,".").concat(name_1):name_1;if(fctParam instanceof FctParam){list.push({param:fctParam,key:uniqueKey})}else{setParamsList(inputParams[key],uniqueKey?uniqueKey:undefined)}}};setParamsList(this.params);return list},enumerable:false,configurable:true});Object.defineProperty(Input.prototype,"methodParams",{get:function(){return this._methodParams},enumerable:false,configurable:true});Input.prototype.set=function(params){var setParams=function(params,inputParams){for(var key in params){var fctParam=inputParams[key];if(!fctParam)continue;if(fctParam instanceof FctParam){fctParam===null||fctParam===void 0?void 0:fctParam.set({value:params[key]})}else{setParams(params[key],inputParams[key])}}};setParams(params,this.params);return this.isValid};Input.prototype.setMethodParams=function(params){var _this=this;Object.keys(this.params.methodParams).forEach(function(paramKey,i){if(_this.params.methodParams[paramKey].fctType==="tuple[]"){var paramValue=params[i];if(!paramValue)return;if(typeof paramValue!=="object"||!("length"in paramValue))return;var tupleParam=_this.params.methodParams[paramKey];if(tupleParam.setString&&typeof tupleParam.setString==="function")tupleParam.setString({value:paramValue.join(",")});return}if(typeof params[i]==="boolean"){_this.params.methodParams[paramKey].value=String(params[i]);return}_this.params.methodParams[paramKey].value=params[i]})};Object.defineProperty(Input.prototype,"warnings",{get:function(){var e_2,_a;this._warnings.clear();try{for(var _b=__values$d(this.paramsList),_c=_b.next();!_c.done;_c=_b.next()){var _d=_c.value,param=_d.param,key=_d.key;var risk=param.risk;var isDanger=risk===null||risk===void 0?void 0:risk.isDanger(param.value);if(risk&&isDanger){this._warnings.set(key,risk.description);continue}this._warnings.delete(key);continue}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_2)throw e_2.error}}if(this._warnings.size>0)return this._warnings;return},enumerable:false,configurable:true});Object.defineProperty(Input.prototype,"errors",{get:function(){var e_3,_a;this._errors.clear();try{for(var _b=__values$d(this.paramsList),_c=_b.next();!_c.done;_c=_b.next()){var _d=_c.value,param=_d.param,key=_d.key;var variable=param.value;if(param.value===undefined&&param.required&&!(variable===null||variable===void 0?void 0:variable.id)&&(key.includes("methodParams")||key==="to")){this._errors.set(key,ERRORS.PARAM_NOT_DEFINED);continue}if(param.isValid()){this._errors.delete(key);continue}this._errors.set(key,ERRORS.INVALID_VALUE);continue}}catch(e_3_1){e_3={error:e_3_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_3)throw e_3.error}}if(this._errors.size>0)return this._errors;return},enumerable:false,configurable:true});Object.defineProperty(Input.prototype,"isValid",{get:function(){if(!this.errors)return true;if(this.errors.size>0)return false;return true},enumerable:false,configurable:true});return Input}();var __awaiter$_=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$_=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __values$c=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var Output=function(){function Output(params,chainId){var _this=this;this.get=function(){return _this._params};this.subscribe=function(_a){var callback=_a.callback,id=_a.id;_this.observers.set(id,callback)};this.unsubscribe=function(_a){var id=_a.id;_this.observers.delete(id)};this.updateSubscriptions=function(){var e_1,_a;try{for(var _b=__values$c(_this.observers),_c=_b.next();!_c.done;_c=_b.next()){var observer=_c.value;observer[1](_this.params,undefined,_this.chainId)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_1)throw e_1.error}}};this.observers=new Map;this._params=params;this.chainId=chainId}Object.defineProperty(Output.prototype,"paramsList",{get:function(){var list=[];var setParamsList=function(outputParams,prevKey){for(var key in outputParams){var name_1=key;var fctParam=outputParams[key];var uniqueKey=prevKey?"".concat(prevKey,".").concat(name_1):name_1;if(fctParam instanceof FctParam){list.push({param:fctParam,key:uniqueKey})}else{setParamsList(outputParams[key],uniqueKey?uniqueKey:undefined)}}};setParamsList(this.params);return list},enumerable:false,configurable:true});Object.defineProperty(Output.prototype,"params",{get:function(){return this._params},enumerable:false,configurable:true});Output.prototype.setOutputParams=function(params){var _this=this;Object.keys(this.params).forEach(function(paramKey,i){if(typeof params[i]==="boolean"){_this.params[paramKey].value=String(params[i]);return}_this.params[paramKey].value=params[i]})};Output.prototype.set=function(params){return __awaiter$_(this,void 0,void 0,function(){var setParams;return __generator$_(this,function(_a){setParams=function(params,outputParams){for(var key in params){var fctParam=outputParams[key];if(!fctParam)continue;if(fctParam instanceof FctParam){fctParam===null||fctParam===void 0?void 0:fctParam.set({value:params[key]})}else{setParams(params[key],outputParams[key])}}};setParams(params,this.params);return[2]})})};return Output}();var __read$f=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __values$b=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var GAS_LIMIT_OVERHEAD="27500";var MIN_GAS_LIMIT="21000";var generateRandomUint64Number=function(){return BigNumber$1.from(randomBytes(8)).toString()};var paramKeyToName=function(_a){var key=_a.key;return key.split(".").slice(-1)[0]};var getMethodParams=function(_a){var params=_a.params;var methodParams=[];for(var key in params){var paramKey=key;var param=params[paramKey];if(param.virtual)continue;if(param instanceof FctTupleArray){methodParams.push({name:paramKey.replace("_tuple[]",""),type:param.fctType,value:param.getFctParams(),customType:true,messageType:param.getMessageType(),innerIndex:param.innerIndex,virtual:param.virtual,estimatedValue:param.estimatedValue,isTupleArray:true,tupleType:param.tupleType});continue}if(param instanceof FctParam){var value=param.value;methodParams.push({name:paramKey,type:param.fctType,value:value,customType:false,messageType:param.getMessageType(),innerIndex:param.innerIndex,virtual:param.virtual,estimatedValue:param.estimatedValue})}else{var nestedParams=param;var values=getMethodParams({params:nestedParams});var isNotVirtual=values.find(function(value){return!value.virtual});if(!isNotVirtual)continue;var _b=__read$f(paramKey.split("_"),2),name_1=_b[0],type=_b[1];methodParams.push({name:name_1,type:type==="tuple"?"tuple":"tuple[]",value:values,customType:true,innerIndex:0})}}return methodParams};var getContractInterface=function(_a){var method=_a.method,params=_a.params;if(!method.length&&!params.length)return"";var args="";var setInterfaceArgs=function(params,args){for(var paramKey in params){if(params[paramKey])if(params[paramKey].isTupleArray){var type=params[paramKey].tupleType;args+="".concat(type," ").concat(params[paramKey].name,",");continue}if(!params[paramKey].customType){var type=params[paramKey].type;args+="".concat(type," ").concat(params[paramKey].name,",")}else if(params[paramKey]){var withTuple=setInterfaceArgs(params[paramKey].value,"(");var parsed=withTuple.replace(/,\s*$/,"");parsed+=") ".concat(params[paramKey].name,",");args+=parsed}}return args};var newArgs=setInterfaceArgs(params,args);return"".concat(method,"(").concat(newArgs.replace(/,$/,""),")")};var getContractInterfaceReturns=function(_a){var e_1,_b,e_2,_c;var params=_a.params;if(!params||!Object.keys(params).length)return"";var returns="(";try{for(var _d=__values$b(Object.keys(params)),_e=_d.next();!_e.done;_e=_d.next()){var paramKey=_e.value;var param=params[paramKey];if(param&&param instanceof FctTupleArray){returns+=param.tupleInterface;continue}if(paramKey.includes("tuple")){var tuple="(";try{for(var _f=(e_2=void 0,__values$b(Object.keys(params[paramKey]))),_g=_f.next();!_g.done;_g=_f.next()){var tupleParamKey=_g.value;var tupleParam=params[paramKey];tuple+="".concat(tupleParam[tupleParamKey].innerType," ").concat(tupleParamKey,",")}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(_g&&!_g.done&&(_c=_f.return))_c.call(_f)}finally{if(e_2)throw e_2.error}}if(paramKey.includes("tuple[]")){tuple+=")[]"}else{tuple+=")"}returns+=tuple;continue}if(!(params[paramKey]instanceof FctParam))return"";var paramType=params[paramKey].innerType;if(paramType.includes("[]")){return"returns (".concat(paramType," ").concat(paramKey,")")}returns+="".concat(paramType," ").concat(paramKey,",")}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(_e&&!_e.done&&(_b=_d.return))_b.call(_d)}finally{if(e_1)throw e_1.error}}return"returns ".concat(returns.replace(/,$/,""),")")};var getMethodInterface$1=function(_a){var method=_a.method,params=_a.params;if(method==="magic")return"magic";if(!method.length&&!params.length)return"";var args="";var setInterfaceArgs=function(params,args){for(var paramKey in params){if(params[paramKey].isTupleArray){var type=params[paramKey].tupleType;args+="".concat(type," ").concat(params[paramKey].name,",");continue}if(!params[paramKey].customType){var type=params[paramKey].hashed&&params[paramKey].type==="string"?"bytes32":params[paramKey].type;args+="".concat(type,",")}else if(params[paramKey]){var type=params[paramKey].type;var withTuple=setInterfaceArgs(params[paramKey].value,"(");var parsed=withTuple.replace(/,\s*$/,"");parsed+=type.includes("{}")?")[],":"),";args+=parsed}}return args};var newArgs=setInterfaceArgs(params,args);return"".concat(method,"(").concat(newArgs.replace(/,$/,""),")")};var getMethodDescription=function(_a){var methodInterface=_a.methodInterface,type=_a.type,protocol=_a.protocol;return"".concat(protocol," ").concat(type,": ").concat(methodInterface).trim()};var FctParamsFactory=function(){function FctParamsFactory(){}FctParamsFactory.prototype.create=function(schema){return schema};return FctParamsFactory}();var fctParamsFactory=new FctParamsFactory;var currencyToWei=function(value,decimals){var _a;try{if((value===null||value===void 0?void 0:value.toString())&&decimals){var val=value.toString();var _b=__read$f(val.split("."),2),whole=_b[0],fraction=_b[1];if(!whole)whole="0";if(!fraction)fraction="0";while(fraction.length<decimals)fraction+="0";var toBN=utils$2.toBN;var wei=toBN(whole).mul(toBN(+"1e".concat(decimals))).add(toBN(fraction));return(_a=toBN(wei===null||wei===void 0?void 0:wei.toString()))===null||_a===void 0?void 0:_a.toString()}return utils$2.toWei((value===null||value===void 0?void 0:value.toString())||"0","ether")}catch(e){console.error(e);return"0"}};var kiroboMulticallContracts=[{chainId:1,address:"0x50Bb8165Dd11d41ef2fE90f96b5041F90966E8A7"},{chainId:5,address:"0x23D560eF20B57A87489D3Ec72D3789E73DF90424"},{chainId:11155111,address:"0xc074EEC205576C657a8EBDFeA8FCCd1a2924f193"}];var kiroboMulticallSimulateContracts={1:"0x6dCF1c82be9dBe11850377e41f3c0f5c84Bd4020",5:"0x3D577F4B778189B2e53e6F26e49b6bEb16030851",42161:"",421613:"",11155111:"0xc074EEC205576C657a8EBDFeA8FCCd1a2924f193"};var kiroboMulticallContractsMap={1:"0x50Bb8165Dd11d41ef2fE90f96b5041F90966E8A7",5:"0x23D560eF20B57A87489D3Ec72D3789E73DF90424",42161:"",421613:"",11155111:"0xc074EEC205576C657a8EBDFeA8FCCd1a2924f193"};var gasLimit={1:{MAGIC:{magic:"0"},UTILITY:{deposit:"44000",withdraw:"40000","":"15000",getEthBalance:"20000"},SUSHISWAP:{swapExactETHForTokens:"150000",swapExactTokensForTokens:"150000",swapExactTokensForETH:"150000",swap:"150000",getAmountsIn:"50000",getAmountsOut:"50000",addLiquidity:"150000",addLiquidityETH:"150000",removeLiquidity:"150000",removeLiquidityETH:"150000"},UNISWAP:{swapExactETHForTokens:"150000",swapExactTokensForTokens:"150000",swapExactTokensForETH:"150000",getAmountsIn:"50000",getAmountsOut:"50000",addLiquidity:"150000",addLiquidityETH:"150000",removeLiquidity:"150000",removeLiquidityETH:"150000",swap:"150000",swapTokensForExactTokens:"150000",swapTokensForExactETH:"150000",swapETHForExactTokens:"150000",getReserves:"FAILED",swapTo_noSlippageProtection:"FAILED",swap_noSlippageProtection:"FAILED",addLiquidity_noMinProtection:"300000",addLiquidityTo_noMinProtection:"3000000",simpleRemoveLiquidity:"300000",simulateSwap:"90000"},"1INCH":{unoswap:"165280"},ERC20:{transfer:"150000",approve:"40000",transferFrom:"150000",allowance:"30000",balanceOf:"30000",decimals:"30000",name:"30000",symbol:"30000",totalSupply:"30000"},ERC721:{approve:"50000",safeTransferFrom:"50000",setApprovalForAll:"50000",transferFrom:"50000",balanceOf:"40000",getApproved:"30000",isApprovedForAll:"30000",name:"30000",ownerOf:"30000",symbol:"30000",totalSupply:"30000",supportsInterface:"30000",tokenURI:"30000"},ERC1155:{safeBatchTransferFrom:"70000",safeTransferFrom:"70000",setApprovalForAll:"50000",balanceOf:"30000",balanceOfBatch:"30000",isApprovedForAll:"30000",supportsInterface:"30000",uri:"30000"},COMPOUND_V2:{borrow:"150000",mint:"100000",redeem:"100000",enterMarkets:"90000",claimComp:"150000",getAccountLiquidity:"100000",markets:"60000",borrowBalanceCurrent:"100000",repayBorrow:"130000",exitMarket:"150000",repayBorrowETH:"130000",mintERC20:"130000",mintETH:"130000",repayBorrowERC20:"130000"},COMPOUND_V3:{collateralBalanceOf:"40000",isBorrowCollateralized:"40000",userBasic:"40000",borrowBalanceOf:"40000",supply:"130000",supplyFrom:"130000",supplyTo:"130000",withdraw:"100000",withdrawFrom:"100000",withdrawTo:"100000",getAssetInfoByAddress:"30000",getPrice:"60000"},AAVE:{borrow:"430000",deposit:"390000",repay:"310000",withdraw:"350000",swapBorrowRateMode:"200000",flashLoan:"FAILED",getUserAccountData:"60000",getReserveData:"60000",getUserReserveData:"120000",getReserveConfigurationData:"50000",getAssetReserveData:"55000",getReserveTokensAddresses:"57000",getAssetPrice:"57000",apyLessThan:"57000",apyBetween:"57000",apyGreaterThan:"57000"},CURVE:{exchange:"330000",exchange_with_best_rate:"2000000",add_liquidity:"280000",remove_liquidity:"210000",remove_liquidity_one_coin:"140000",deposit:"550000",withdraw:"390000",get_best_rate:"1800000",get_exchange_amount:"110000",calc_token_amount:"90000",get_dy:"70000",exchangeOnPool:"210000",votingEscrowCreateLock:"FAILED",increaseAmountVotingEscrow:"FAILED",increaseUnlockTimeVotingEscrow:"FAILED",withdrawVotingEscrow:"270000",lockedVotingEscrow:"40000"},YEARN:{deposit:"80616",withdraw:"80542"},TOKEN_VALIDATOR:{between:"40000",betweenEqual:"40000",equal:"40000",equalAddress:"40000",equalBytes32:"40000",greaterEqual:"40000",greaterThan:"40000",lessEqual:"40000",lessThan:"40000"},TOKEN_MATH:{add:"40000",sub:"40000",mul:"40000",div:"40000",mulAndDiv:"40000",mod:"40000"},UNISWAP_V3:{exactInput:"140000",exactInputSingle:"140000",exactOutput:"140000",exactOutputSingle:"140000",mint:"480000",burn:"110000",increaseLiquidity:"210000",decreaseLiquidity:"170000",collect:"130000",positions:"60000",slot0:"35000",ticks:"40000",protocolFees:"40000",simpleSwapExactInput:"140000",simpleSwapExactOutput:"140000"},FCT_UNISWAP:{swap_noSlippageProtection:"180000",swapTo_noSlippageProtection:"180000",simulateSwap:"90000",addLiquidity_noMinProtection:"300000",addLiquidityTo_noMinProtection:"3000000",simpleRemoveLiquidity:"300000"}},5:{MAGIC:{magic:"0"},UNISWAP:{swapExactETHForTokens:"150000",swapExactTokensForTokens:"150000",swapExactTokensForETH:"150000",getAmountsIn:"50000",getAmountsOut:"50000",addLiquidity:"150000",addLiquidityETH:"150000",removeLiquidity:"150000",removeLiquidityETH:"150000",swap:"150000",swapTokensForExactTokens:"150000",swapTokensForExactETH:"150000",swapETHForExactTokens:"150000",getReserves:"FAILED",swapTo_noSlippageProtection:"FAILED",swap_noSlippageProtection:"FAILED",addLiquidity_noMinProtection:"300000",addLiquidityTo_noMinProtection:"3000000",simpleRemoveLiquidity:"300000",simulateSwap:"50000"},UTILITY:{deposit:"44000",withdraw:"40000","":"15000",getEthBalance:"20000"},SUSHISWAP:{swapExactETHForTokens:"150000",swapExactTokensForTokens:"150000",swapExactTokensForETH:"150000",swap:"150000",getAmountsIn:"50000",getAmountsOut:"50000",addLiquidity:"150000",addLiquidityETH:"150000",removeLiquidity:"150000",removeLiquidityETH:"150000"},"1INCH":{unoswap:"2866"},ERC20:{transfer:"150000",approve:"40000",transferFrom:"150000",allowance:"30000",balanceOf:"30000",decimals:"30000",name:"30000",symbol:"30000",totalSupply:"30000"},MATH:{add:"93534",div:"93558",mod:"93600",mul:"93576",mulAndDiv:"94124",sub:"93616"},VALIDATOR:{between:"94058",betweenEqual:"94154",equal:"2684",greaterEqual:"93622",greaterThan:"93660",lessEqual:"93620",lessThan:"93528",equalAddress:"94684",equalBytes:"93534",equalValue:"93488"},ERC721:{approve:"50000",safeTransferFrom:"50000",setApprovalForAll:"50000",transferFrom:"50000",balanceOf:"40000",getApproved:"30000",isApprovedForAll:"30000",name:"30000",ownerOf:"30000",symbol:"30000",totalSupply:"30000",supportsInterface:"30000",tokenURI:"30000"},ERC1155:{safeBatchTransferFrom:"70000",safeTransferFrom:"70000",setApprovalForAll:"50000",balanceOf:"30000",balanceOfBatch:"30000",isApprovedForAll:"30000",supportsInterface:"30000",uri:"30000"},COMPOUND_V2:{borrow:"150000",mint:"100000",redeem:"100000",enterMarkets:"90000",claimComp:"150000",getAccountLiquidity:"100000",markets:"60000",borrowBalanceCurrent:"100000",repayBorrow:"130000",exitMarket:"150000",repayBorrowETH:"130000",mintERC20:"130000",mintETH:"130000",repayBorrowERC20:"130000"},COMPOUND_V3:{collateralBalanceOf:"40000",isBorrowCollateralized:"40000",userBasic:"40000",borrowBalanceOf:"40000",supply:"130000",supplyFrom:"130000",supplyTo:"130000",withdraw:"100000",withdrawFrom:"100000",withdrawTo:"100000",getAssetInfoByAddress:"30000",getPrice:"60000"},AAVE:{borrow:"430000",deposit:"390000",repay:"310000",withdraw:"350000",swapBorrowRateMode:"200000",flashLoan:"FAILED",getUserAccountData:"60000",getReserveData:"60000",getUserReserveData:"120000",getReserveConfigurationData:"50000",getAssetReserveData:"55000",getReserveTokensAddresses:"57000",getAssetPrice:"57000",apyLessThan:"57000",apyBetween:"57000",apyGreaterThan:"57000"},YEARN:{deposit:"80616",withdraw:"80542"},TOKEN_VALIDATOR:{between:"40000",betweenEqual:"40000",equal:"40000",equalAddress:"40000",equalBytes32:"40000",greaterEqual:"40000",greaterThan:"40000",lessEqual:"40000",lessThan:"40000"},TOKEN_MATH:{add:"40000",sub:"40000",mul:"40000",div:"40000",mulAndDiv:"40000",mod:"40000"},FCT_UNISWAP:{swap_noSlippageProtection:"180000",swapTo_noSlippageProtection:"180000",simulateSwap:"90000",addLiquidity_noMinProtection:"300000",addLiquidityTo_noMinProtection:"3000000",simpleRemoveLiquidity:"300000"},UNISWAP_V3:{exactInput:"140000",exactInputSingle:"140000",exactOutput:"140000",exactOutputSingle:"140000",mint:"480000",burn:"110000",increaseLiquidity:"210000",decreaseLiquidity:"170000",collect:"130000",positions:"60000",slot0:"35000",ticks:"40000",protocolFees:"40000",simpleSwapExactInput:"140000",simpleSwapExactOutput:"140000"}},42161:{UNISWAP:{addLiquidity:"337258"},UTILITY:{deposit:"690000",withdraw:"780000","":"580000",getEthBalance:"850873"},ERC20:{transfer:"1150000",approve:"1010000",transferFrom:"1450000",allowance:"990000",balanceOf:"850000"},ERC721:{approve:"950000",transferFrom:"1750000",safeTransferFrom:"1950000"},UNISWAP_V3:{exactInput:"2300000",exactInputSingle:"2300000",exactOutput:"2300000",exactOutputSingle:"2300000",mint:"2700000",burn:"2500000",increaseLiquidity:"1900000",decreaseLiquidity:"1900000",collect:"1500000",positions:"1100000",slot0:"1100000",protocolFees:"1100000"},COMPOUND_V3:{supply:"1200000",supplyFrom:"1200000",supplyTo:"1200000",withdraw:"1190000",withdrawFrom:"1190000",withdrawTo:"1190000",collateralBalanceOf:"1450000",isBorrowCollateralized:"1300000",userBasic:"1300000",borrowBalanceOf:"1300000",getAssetInfoByAddress:"1200000"},AaveV3:{supply:"2500000",borrow:"2500000",repay:"1200000",repayWithATokens:"1200000",setUserEMode:"700000",setUserUseReserveAsCollateral:"900000",swapBorrowRateMode:"1300000",withdraw:"2300000",getReserveData:"1400000",getReserveNormalizedIncome:"1400000",getReserveNormalizedVariableDebt:"1400000",getUserAccountData:"1400000",getUserEMode:"1400000"},GMX:{multicall:"1400000"}},421613:{UNISWAP:{addLiquidity:"337258"},UTILITY:{deposit:"690000",withdraw:"780000","":"580000",getEthBalance:"850873"},ERC20:{transfer:"1150000",approve:"1010000",transferFrom:"1450000",allowance:"990000",balanceOf:"850000"},ERC721:{approve:"950000",transferFrom:"1750000",safeTransferFrom:"1950000"},UNISWAP_V3:{exactInput:"2300000",exactInputSingle:"2300000",exactOutput:"2300000",exactOutputSingle:"2300000",mint:"2700000",burn:"2500000",increaseLiquidity:"1900000",decreaseLiquidity:"1900000",collect:"1500000",positions:"1100000",slot0:"1100000",protocolFees:"1100000"},COMPOUND_V3:{supply:"1200000",supplyFrom:"1200000",supplyTo:"1200000",withdraw:"1190000",withdrawFrom:"1190000",withdrawTo:"1190000",collateralBalanceOf:"1450000",isBorrowCollateralized:"1300000",userBasic:"1300000",borrowBalanceOf:"1300000",getAssetInfoByAddress:"1200000"},AaveV3:{supply:"2500000",borrow:"2500000",repay:"1200000",repayWithATokens:"1200000",setUserEMode:"700000",setUserUseReserveAsCollateral:"900000",swapBorrowRateMode:"1300000",withdraw:"2300000",getReserveData:"1400000",getReserveNormalizedIncome:"1400000",getReserveNormalizedVariableDebt:"1400000",getUserAccountData:"1400000",getUserEMode:"1400000"}},11155111:{MAGIC:{magic:"0"},UTILITY:{deposit:"44000",withdraw:"40000","":"15000",getEthBalance:"20000"},SUSHISWAP:{swapExactETHForTokens:"150000",swapExactTokensForTokens:"150000",swapExactTokensForETH:"150000",swap:"150000",getAmountsIn:"50000",getAmountsOut:"50000",addLiquidity:"150000",addLiquidityETH:"150000",removeLiquidity:"150000",removeLiquidityETH:"150000"},UNISWAP:{swapExactETHForTokens:"150000",swapExactTokensForTokens:"150000",swapExactTokensForETH:"150000",getAmountsIn:"50000",getAmountsOut:"50000",addLiquidity:"150000",addLiquidityETH:"150000",removeLiquidity:"150000",removeLiquidityETH:"150000",swap:"150000",swapTokensForExactTokens:"150000",swapTokensForExactETH:"150000",swapETHForExactTokens:"150000",getReserves:"FAILED",swapTo_noSlippageProtection:"FAILED",swap_noSlippageProtection:"FAILED",addLiquidity_noMinProtection:"300000",addLiquidityTo_noMinProtection:"3000000",simpleRemoveLiquidity:"300000",simulateSwap:"90000"},"1INCH":{unoswap:"165280"},ERC20:{transfer:"150000",approve:"40000",transferFrom:"150000",allowance:"30000",balanceOf:"30000",decimals:"30000",name:"30000",symbol:"30000",totalSupply:"30000"},ERC721:{approve:"50000",safeTransferFrom:"50000",setApprovalForAll:"50000",transferFrom:"50000",balanceOf:"40000",getApproved:"30000",isApprovedForAll:"30000",name:"30000",ownerOf:"30000",symbol:"30000",totalSupply:"30000",supportsInterface:"30000",tokenURI:"30000"},ERC1155:{safeBatchTransferFrom:"70000",safeTransferFrom:"70000",setApprovalForAll:"50000",balanceOf:"30000",balanceOfBatch:"30000",isApprovedForAll:"30000",supportsInterface:"30000",uri:"30000"},COMPOUND_V2:{borrow:"150000",mint:"100000",redeem:"100000",enterMarkets:"90000",claimComp:"150000",getAccountLiquidity:"100000",markets:"60000",borrowBalanceCurrent:"100000",repayBorrow:"130000",exitMarket:"150000",repayBorrowETH:"130000",mintERC20:"130000",mintETH:"130000",repayBorrowERC20:"130000"},COMPOUND_V3:{collateralBalanceOf:"40000",isBorrowCollateralized:"40000",userBasic:"40000",borrowBalanceOf:"40000",supply:"130000",supplyFrom:"130000",supplyTo:"130000",withdraw:"100000",withdrawFrom:"100000",withdrawTo:"100000",getAssetInfoByAddress:"30000",getPrice:"60000"},AAVE:{borrow:"430000",deposit:"390000",repay:"310000",withdraw:"350000",swapBorrowRateMode:"200000",flashLoan:"FAILED",getUserAccountData:"60000",getReserveData:"60000",getUserReserveData:"120000",getReserveConfigurationData:"50000",getAssetReserveData:"55000",getReserveTokensAddresses:"57000",getAssetPrice:"57000",apyLessThan:"57000",apyBetween:"57000",apyGreaterThan:"57000"},CURVE:{exchange:"330000",exchange_with_best_rate:"2000000",add_liquidity:"280000",remove_liquidity:"210000",remove_liquidity_one_coin:"140000",deposit:"550000",withdraw:"390000",get_best_rate:"1800000",get_exchange_amount:"110000",calc_token_amount:"90000",get_dy:"70000",exchangeOnPool:"210000",votingEscrowCreateLock:"FAILED",increaseAmountVotingEscrow:"FAILED",increaseUnlockTimeVotingEscrow:"FAILED",withdrawVotingEscrow:"270000",lockedVotingEscrow:"40000"},YEARN:{deposit:"80616",withdraw:"80542"},TOKEN_VALIDATOR:{between:"40000",betweenEqual:"40000",equal:"40000",equalAddress:"40000",equalBytes32:"40000",greaterEqual:"40000",greaterThan:"40000",lessEqual:"40000",lessThan:"40000"},TOKEN_MATH:{add:"40000",sub:"40000",mul:"40000",div:"40000",mulAndDiv:"40000",mod:"40000"},UNISWAP_V3:{exactInput:"140000",exactInputSingle:"140000",exactOutput:"140000",exactOutputSingle:"140000",mint:"480000",burn:"110000",increaseLiquidity:"210000",decreaseLiquidity:"170000",collect:"130000",positions:"60000",slot0:"35000",ticks:"40000",protocolFees:"40000",simpleSwapExactInput:"140000",simpleSwapExactOutput:"140000"},FCT_UNISWAP:{swap_noSlippageProtection:"180000",swapTo_noSlippageProtection:"180000",simulateSwap:"90000",addLiquidity_noMinProtection:"300000",addLiquidityTo_noMinProtection:"3000000",simpleRemoveLiquidity:"300000"}}};var __awaiter$Z=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$Z=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __values$a=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var __read$e=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$a=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var uid$1=v4();var Plugin=function(){function Plugin(_protocol,_type,_method,_name,chainId,params,requiredApprovals,assetFlow,initParams,_walletAddress,_vaultAddress,_provider){var _this=this;this._protocol=_protocol;this._type=_type;this._method=_method;this._name=_name;this.requiredApprovals=requiredApprovals;this.assetFlow=assetFlow;this._walletAddress=_walletAddress;this._vaultAddress=_vaultAddress;this._provider=_provider;this.setMethod=function(method){_this._method=method};this._supportedContracts=[];this.calculateValuesOnUserInput=undefined;this.setMethodParams=function(params){_this.input.setMethodParams(params)};this.setOutputParams=function(params){_this.output.setOutputParams(params)};this.estimateGasOnParams=undefined;this.getOutputValues=function(_a){return __awaiter$Z(_this,[_a],void 0,function(_b){var plugin,_c,inputParams,setOutputIsLoading,_d,value1,value2,operator,computeOperation,validateValueOperation1,error,_e,value1,value2,value3,value4,operator1,operator2,operator3,computeOperation,computedValueOperation1,computedValueOperation2,computedValueOperation3,_f,value1,value2,value3,value4,operator1,operator2,operator3,computeOperation,computedValueOperation1,computedValueOperation2,computedValueOperation3,_g,to_1,value_1,parsedValue,sendEthRes,trxEthData,e_1,error,to,pluginMethodInterface,contract,methodParamsToValues,methodParamsList,value,singerAddress,trx,res,encodedData,trxData,e_2,error,outputParams,params;var _h;var _this=this;var _j,_k;var provider=_b.provider,execute=_b.execute;_b.setEstimated;var abi=_b.abi,walletSigner=_b.walletSigner,withAutoApprovals=_b.withAutoApprovals;return __generator$Z(this,function(_l){switch(_l.label){case 0:if(this.method==="magic")return[2,{}];if(!this.getParamsOnCreate)return[3,2];return[4,this.getParamsOnCreate({chainId:this.chainId,params:this.input.params})];case 1:_c=((_j=_l.sent())===null||_j===void 0?void 0:_j.plugin)||this;return[3,3];case 2:_c=this;_l.label=3;case 3:plugin=_c;inputParams=plugin.input.params;setOutputIsLoading=function(isLoadIng){_this.output.paramsList.forEach(function(_a){var param=_a.param;param.isLoading=isLoadIng})};if(!plugin.beforeSimulate)return[3,5];if(walletSigner&&withAutoApprovals&&plugin.getRequiredApprovals().length){provider.signer=walletSigner}return[4,plugin.beforeSimulate({provider:provider,chainId:plugin.chainId,input:plugin.input.params,output:plugin.output.params})];case 4:_l.sent();_l.label=5;case 5:this.currentGasLimit=undefined;if(plugin.name==="validate"&&plugin.protocol==="VALIDATION_VARIABLE"){_d=plugin.input.methodParams,value1=_d.value1,value2=_d.value2,operator=_d.operator;computeOperation=function(value1,operator,value2){switch(operator){case"equal":return value1===value2?"1":"0";case"greater than":return BigNumber$1.from(value1||"0").gt(value2||"0")?"1":"0";case"greater equal than":return BigNumber$1.from(value1||"0").gte(value2||"0")?"1":"0";case"or":return Boolean(value1)||Boolean(value2)?"1":"0";case"or not":return Boolean(value1)||!Boolean(value2)?"1":"0";case"and":return Boolean(value1)&&Boolean(value2)?"1":"0";case"and not":return Boolean(value1)&&!Boolean(value2)?"1":"0";case"not equal":return value1!==value2?"1":"0";default:return"0"}};validateValueOperation1=computeOperation(value1.value,operator.value,value2.value);if(validateValueOperation1==="0"){error="validation failed";this.setError(error);throw error}this.currentGasLimit="10000";return[2,{result:validateValueOperation1}]}if(plugin.name==="computeHash"&&plugin.protocol==="COMPUTED_VARIABLE"){_e=plugin.input.methodParams,value1=_e.value1,value2=_e.value2,value3=_e.value3,value4=_e.value4,operator1=_e.operator1,operator2=_e.operator2,operator3=_e.operator3;computeOperation=function(value1,operator,value2){switch(operator){case"keccak256":if(!value1||Number(value1)===0){return keccak256$2(["string"],[value2])}if(!value2||Number(value2)===0){return keccak256$2(["string"],[value1])}return keccak256$2(["string","string"],[value1,value2]);default:return value2}};computedValueOperation1=computeOperation(value1.value,operator1.value,value2.value);this.currentGasLimit="10000";if(!operator2.value)return[2,{result:computedValueOperation1}];computedValueOperation2=computeOperation(computedValueOperation1,operator2.value,value3.value);if(!operator3.value)return[2,{result:computedValueOperation2}];computedValueOperation3=computeOperation(computedValueOperation2,operator3.value,value4.value);return[2,{result:computedValueOperation3}]}if(plugin.name==="compute"&&plugin.protocol==="COMPUTED_VARIABLE"){_f=plugin.input.methodParams,value1=_f.value1,value2=_f.value2,value3=_f.value3,value4=_f.value4,operator1=_f.operator1,operator2=_f.operator2,operator3=_f.operator3;computeOperation=function(value1,operator,value2){switch(operator){case"*":return BigNumber$1.from(value1||"0").mul(value2||"0").toString();case"**":return BigNumber$1.from(value1||"0").pow(value2||"0").toString();case"*(10**X)":return BigNumber$1.from(value1||"0").mul(BigNumber$1.from("10").pow(value2||"0")).toString();case"/(10**X)":return BigNumber$1.from(value1||"0").div(BigNumber$1.from("10").pow(value2||"0")).toString();case"%":return BigNumber$1.from(value1||"0").mod(value2||"0").toString();case"/":if(!value2)return BigNumber$1.from("0").toString();return BigNumber$1.from(value1||"0").div(value2).toString();case"-":return BigNumber$1.from(value1||"0").sub(value2||"0").toString();case"+":return BigNumber$1.from(value1||"0").add(value2||"0").toString();default:return BigNumber$1.from(value1||"0").add(value2||"0").toString()}};computedValueOperation1=computeOperation(value1.value,operator1.value,value2.value);computedValueOperation2=computeOperation(computedValueOperation1,operator2.value,value3.value);computedValueOperation3=computeOperation(computedValueOperation2,operator3.value,value4.value);this.currentGasLimit="10000";return[2,{result:computedValueOperation3}]}if(!(plugin.name==="sendETH"))return[3,11];setOutputIsLoading(true);_g=plugin.input.params,to_1=_g.to,value_1=_g.value;return[4,plugin.variableToValue(value_1,provider.provider)];case 6:parsedValue=_l.sent();_l.label=7;case 7:_l.trys.push([7,10,,11]);return[4,provider.signer.sendTransaction({to:to_1===null||to_1===void 0?void 0:to_1.value,value:parsedValue})];case 8:sendEthRes=_l.sent();return[4,provider.provider.getTransaction(sendEthRes.hash)];case 9:trxEthData=_l.sent();setOutputIsLoading(false);this.currentGasLimit=trxEthData.gasLimit.sub(21e3).toString();return[2,{}];case 10:e_1=_l.sent();error=new Error(e_1);this.setError(e_1.reason||e_1.message||e_1);setOutputIsLoading(false);throw error;case 11:to=plugin.protocol==="KIROBO_MULTICALL_CSV"?kiroboMulticallSimulateContracts[plugin.chainId]:(_k=inputParams.to)===null||_k===void 0?void 0:_k.value;if(typeof to!=="string"){return[2,"invalid contract address: ".concat(to)]}pluginMethodInterface=new Interface(["function ".concat(plugin.contractInterface," payable ").concat(plugin.contractInterfaceReturns)]);contract=abi?new Contract(to,abi,provider.signer):new Contract(to,pluginMethodInterface,provider.signer);setOutputIsLoading(true);methodParamsToValues=function(methodParams){return __awaiter$Z(_this,void 0,void 0,function(){var list,methodParams_1,methodParams_1_1,param,value_2,_a,_b,value_3,coder,e_3_1;var e_3,_c;return __generator$Z(this,function(_d){switch(_d.label){case 0:list=[];_d.label=1;case 1:_d.trys.push([1,8,9,10]);methodParams_1=__values$a(methodParams),methodParams_1_1=methodParams_1.next();_d.label=2;case 2:if(!!methodParams_1_1.done)return[3,7];param=methodParams_1_1.value;if(param.type==="tuple[]"){value_2=param.value;list.push(value_2===null||value_2===void 0?void 0:value_2.map(function(nestedParam){return nestedParam.map(function(p){return p.value})}));return[3,6]}if(!(typeof param.type==="string"&&param.type.includes("tuple")))return[3,4];_b=(_a=list).push;return[4,methodParamsToValues(param.value)];case 3:_b.apply(_a,[_d.sent()]);return[3,6];case 4:if(param.virtual)return[3,6];if(!param.value){list.push(param.value);return[3,6]}return[4,plugin.variableToValue(param,provider.provider)];case 5:value_3=_d.sent();console.log({param:param});if(param.type==="bytes32"&&param.messageType==="string"&&typeof param.value==="string"){value_3=id$2(param.value)}if(param.type==="bytes"&&param.messageType==="string"&&typeof param.value==="string"){coder=defaultAbiCoder;value_3=coder.encode(["string"],[param.value])}list.push(value_3);_d.label=6;case 6:methodParams_1_1=methodParams_1.next();return[3,2];case 7:return[3,10];case 8:e_3_1=_d.sent();e_3={error:e_3_1};return[3,10];case 9:try{if(methodParams_1_1&&!methodParams_1_1.done&&(_c=methodParams_1.return))_c.call(methodParams_1)}finally{if(e_3)throw e_3.error}return[7];case 10:return[2,list]}})})};return[4,methodParamsToValues(plugin.methodParams)];case 12:methodParamsList=_l.sent();value=!(inputParams===null||inputParams===void 0?void 0:inputParams.value)?"0x0":inputParams.value.isVariable?inputParams.value.estimatedValue:inputParams.value.value;return[4,provider.signer.getAddress()];case 13:singerAddress=_l.sent();_l.label=14;case 14:_l.trys.push([14,19,,20]);console.log({methodParamsList:JSON.stringify(methodParamsList),method:plugin.method});return[4,(_h=contract.callStatic)[plugin.method].apply(_h,__spreadArray$a(__spreadArray$a([],__read$e(methodParamsList),false),[{from:singerAddress,value:value}],false))];case 15:trx=_l.sent();if(!(trx&&execute))return[3,18];return[4,contract[plugin.method].apply(contract,__spreadArray$a(__spreadArray$a([],__read$e(methodParamsList),false),[{from:singerAddress,value:value}],false))];case 16:res=_l.sent();encodedData=pluginMethodInterface.encodeFunctionData(plugin.method,methodParamsList);return[4,provider.provider.getTransaction(res.hash)];case 17:trxData=_l.sent();this.currentGasLimit=trxData.gasLimit.add(GAS_LIMIT_OVERHEAD).add(encodedData.length-10).mul(115).div(100).toString();_l.label=18;case 18:this.setError(undefined);setOutputIsLoading(false);return[3,20];case 19:e_2=_l.sent();error=new Error(e_2);this.setError(e_2.reason||e_2.message||e_2);setOutputIsLoading(false);throw error;case 20:outputParams=trx;if(Object.keys(this.output.params).length===1){outputParams=[outputParams]}params={};Object.keys(this.output.params).forEach(function(key,i){var setParam=function(outputParam){var currentOutputParam=outputParams[i];if(key.includes("tuple")&&!key.includes("tuple[]")&&typeof currentOutputParam==="object"&&!(currentOutputParam instanceof BigNumber$1)){var tupleParam_1=currentOutputParam;Object.keys(outputParam).forEach(function(key){params[key]=tupleParam_1[key].toString()})}if(key.includes("tuple[]")&&typeof currentOutputParam==="object"&&!(currentOutputParam instanceof BigNumber$1)){params[outputKey]=currentOutputParam.map(function(p){var tupleParam=p;var paramObject={};Object.keys(outputParam).forEach(function(key){paramObject[key]=tupleParam[key]});return paramObject})}if(!(outputParam instanceof FctParam))return;var value=outputParams[i]?outputParams[i].toString():undefined;params[outputKey]=value;outputParam.setEstimated({value:value})};var outputKey=key;var outputParam=_this.output.params[outputKey];setParam(outputParam)});return[2,params]}})})};this.getCalldata=function(){var _a;var inputParams=_this.input.params;var to=(_a=inputParams.to)===null||_a===void 0?void 0:_a.value;if(typeof to!=="string"){console.error("invalid contract address: ".concat(to));return}var methodParamsData=JSON.parse(_this.toJSONWithMeta())["input"]["methodParams"];var trxParams=Object.keys(methodParamsData).map(function(methodParamKey){var param=methodParamsData[methodParamKey];var value=param.value;if(!value)return value;if(isVariable(value)){var variable=value;if(variable.type==="output"){return getOutputVariableOnChain({index:variable.id.index||0,innerIndex:variable.id.innerIndex,type:param.fctType})}else{console.error("only output variables with index supported")}}if(param.hashed){return id$2(param.value)}return value});var trxParamsTypes=Object.keys(methodParamsData).map(function(methodParamKey){var param=methodParamsData[methodParamKey];return param.fctType});var abiCoder=new AbiCoder;return{target:{value:to,type:"address"},callType:{value:id$2("view only"),type:"bytes32"},value:{value:"0x0",type:"uint256"},method:{value:id$2(_this.methodInterface),type:"bytes32"},data:{value:abiCoder.encode(trxParamsTypes,trxParams),type:"bytes"}}};this.variableToValue=function(param,provider){return __awaiter$Z(_this,void 0,void 0,function(){var value,_a,blockNumber,block,blockTimestamp,blockNumberNum,gasPrice;var _this=this;return __generator$Z(this,function(_b){switch(_b.label){case 0:value=param.value;if(typeof value==="object"&&value.type==="output"){return[2,param.estimatedValue]}if(!(typeof value==="object"&&"id"in value))return[3,12];_a=value.id;switch(_a){case"blockTimestamp":return[3,1];case"blockNumber":return[3,4];case"gasPrice":return[3,6];case"minerAddress":return[3,8];case"originAddress":return[3,9];case"flowHash":return[3,10]}return[3,11];case 1:return[4,provider.getBlockNumber()];case 2:blockNumber=_b.sent();return[4,provider.getBlock(blockNumber)];case 3:block=_b.sent();blockTimestamp=block.timestamp+1e3;return[2,String(blockTimestamp)];case 4:return[4,provider.getBlockNumber()];case 5:blockNumberNum=_b.sent()+1e3;return[2,String(blockNumberNum)];case 6:return[4,provider.getGasPrice()];case 7:gasPrice=_b.sent();return[2,gasPrice.toString()];case 8:return[2,DEFAULT_ADDRESS];case 9:return[2,DEFAULT_ADDRESS];case 10:return[2,"0"];case 11:return[2,value];case 12:if(!(typeof value==="object"&&!value.length))return[3,14];return[4,Promise.all(Object.keys(value).map(function(key){return __awaiter$Z(_this,void 0,void 0,function(){var _a,_b;return __generator$Z(this,function(_c){switch(_c.label){case 0:_a=value;_b=key.replace("_tuple","").replace("{}","");return[4,this.variableToValue(param.value[key],provider)];case 1:_a[_b]=_c.sent();return[2]}})})}))];case 13:_b.sent();_b.label=14;case 14:return[2,value]}})})};this.getRequiredApprovals=function(){if(_this.requiredApprovals){return _this.requiredApprovals(_this.input.get(),_this.chainId,_this.walletAddress,_this.vaultAddress,_this.provider,_this.method).map(function(data){var params=Object.keys(data.params).map(function(key){var dataKey=key;return data.params[dataKey]});return{to:data.to,from:data.from,protocol:data.protocol,method:data.method,params:params}})}return[]};this.getAssetFlow=function(){if(!_this.assetFlow)return[];return _this.assetFlow(_this.input.get(),_this.chainId,_this.walletAddress,_this.vaultAddress,_this.provider,_this.method)};this.subscribe=function(_a){var callback=_a.callback,id=_a.id;_this.observers.set(id,callback)};this.unsubscribe=function(_a){var id=_a.id;_this.observers.delete(id)};this.updateSubscriptions=function(){var e_4,_a;try{for(var _b=__values$a(_this.observers),_c=_b.next();!_c.done;_c=_b.next()){var observer=_c.value;observer[1](_this.toJSON(),_this.error,_this.chainId,_this._currentGasLimit)}}catch(e_4_1){e_4={error:e_4_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_4)throw e_4.error}}};this.observers=new Map;var newParams=fctParamsFactory.create(params);this.input=new Input(newParams,chainId);this.chainId=chainId;if(initParams)this.input.set(initParams);this.output=new Output(newParams["output"],chainId);this.initMethodParams=this.methodParams;this.input.subscribe({callback:this.updateSubscriptions,id:uid$1});this.output.subscribe({callback:this.updateSubscriptions,id:uid$1})}Plugin.prototype.create=function(_a){return __awaiter$Z(this,arguments,void 0,function(_b){var call=_b.call;return __generator$Z(this,function(_c){if(!this.input.isValid){console.error(this.input.errors);return[2,undefined]}return[2,call]})})};Object.defineProperty(Plugin.prototype,"gasLimit",{get:function(){if(this.currentGasLimit)return this.currentGasLimit;if(this.estimateGasOnParams)return this.estimateGasOnParams(this.input.get(),this.method,this.chainId);var limits=gasLimit[this.chainId];var protocolLimits=limits[this.protocol];if(protocolLimits){return protocolLimits[this.method]!=="FAILED"?protocolLimits[this.method]:undefined}return undefined},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"type",{get:function(){return this._type},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"protocol",{get:function(){return this._protocol},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"method",{get:function(){return this._method},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"provider",{get:function(){return this._provider},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"walletAddress",{get:function(){return this._walletAddress},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"vaultAddress",{get:function(){return this._vaultAddress},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"name",{get:function(){if(this._name)return this._name;return this.method},enumerable:false,configurable:true});Plugin.prototype.setName=function(name){this._name=name;this.updateSubscriptions()};Object.defineProperty(Plugin.prototype,"description",{get:function(){if(this._description)return this._description;return getMethodDescription({protocol:this.protocol,type:this.type,methodInterface:this.methodInterface})},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"supportedContracts",{get:function(){return this._supportedContracts},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"falseMeansFail",{get:function(){return this._falseMeansFail||false},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"usePureMethod",{get:function(){return this._usePureMethod||false},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"methodParams",{get:function(){var params=this.input.methodParams;return getMethodParams({params:params})},enumerable:false,configurable:true});Plugin.prototype.getMethodParams=function(_a){var params=_a.params;return getMethodParams({params:params})};Object.defineProperty(Plugin.prototype,"contractInterface",{get:function(){return getContractInterface({method:this.method,params:this.methodParams})},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"contractInterfaceReturns",{get:function(){return getContractInterfaceReturns({params:this.output.params})},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"methodInterface",{get:function(){return getMethodInterface$1({method:this.method,params:this.initMethodParams})},enumerable:false,configurable:true});Object.defineProperty(Plugin.prototype,"methodInterfaceHash",{get:function(){return id$3(this.methodInterface)},enumerable:false,configurable:true});Plugin.prototype.toJSONWithMeta=function(){var input=this.inputParamsTo("META");var output=this.outputParamsTo("META");var json=JSON.stringify({type:this.type,name:this.name,protocol:this.protocol,method:this.method,methodInterface:this.methodInterface,methodInterfaceHash:this.methodInterfaceHash,contractInterface:this.contractInterface,contractInterfaceReturns:this.contractInterfaceReturns,input:input,output:output});return json};Plugin.prototype.fromJSONWithMeta=function(jsonWithMeta){var pluginJson=JSON.parse(jsonWithMeta);if(!pluginJson.input){console.error("wrong json format");return false}try{if(pluginJson.name)this._name=pluginJson.name;var params_1=pluginJson.inputList;this.input.paramsList.forEach(function(_a){var param=_a.param,key=_a.key;var data=params_1.find(function(param){return param.key===key});if(data)param.setJsonParam(data)});var outParams_1=pluginJson.outputList;this.output.paramsList.forEach(function(_a){var param=_a.param,key=_a.key;var data=outParams_1.find(function(param){return param.key===key});if(data)param.setJsonParam(data)});this.input.updateSubscriptions();return true}catch(e){console.error(this.input.errors);return false}};Plugin.prototype.toJSON=function(){var input=this.inputParamsTo("VALUES");var output=this.outputParamsTo("VALUES");var inputWithMeta=this.inputParamsTo("META");var outputWithMeta=this.outputParamsTo("META");var paramsList=this.input.paramsList;var inputList=paramsList.map(function(_a){var key=_a.key,param=_a.param;var data=param.getJsonParam({key:key,ioType:"INPUT"});return data});var outputList=this.output.paramsList.map(function(_a){var key=_a.key,param=_a.param;var data=param.getJsonParam({key:key,ioType:"OUTPUT"});return data});var json=JSON.stringify({type:this.type,name:this.name,protocol:this.protocol,method:this.method,methodInterface:this.methodInterface,methodInterfaceHash:this.methodInterfaceHash,contractInterface:this.contractInterface,contractInterfaceReturns:this.contractInterfaceReturns,input:input,output:output,inputWithMeta:inputWithMeta,outputWithMeta:outputWithMeta,inputList:inputList,outputList:outputList});return json};Plugin.prototype.fromJSON=function(json){var pluginJson=JSON.parse(json);if(!pluginJson.input){console.error("wrong json format");return false}try{if(pluginJson.name)this._name=pluginJson.name;var params_2=pluginJson.inputList;this.input.paramsList.forEach(function(_a){var param=_a.param,key=_a.key;var paramData=params_2.find(function(param){return param.key===key});if(!paramData)return;param.setJsonParam(paramData)});var outputParams_1=pluginJson.outputList;this.output.paramsList.forEach(function(_a){var param=_a.param,key=_a.key;var paramData=outputParams_1.find(function(param){return param.key===key});if(!paramData)return;param.setJsonParam(paramData)});this.input.updateSubscriptions();return true}catch(e){console.error(this.input.errors);return false}};Plugin.prototype.inputParamsTo=function(type){var values={};var setParams=function(params,input){for(var key in params){var paramKey=key;var param=params[paramKey];if(param instanceof FctParam){input[paramKey]=type==="VALUES"?param.getString():param.getJsonParam({key:key,ioType:"INPUT"})}else{if(!input[paramKey]){input[paramKey]={}}setParams(params[key],input[paramKey])}}};setParams(this.input.params,values);return values};Object.defineProperty(Plugin.prototype,"error",{get:function(){return this._error},enumerable:false,configurable:true});Plugin.prototype.setError=function(e){this._error=e;this.updateSubscriptions()};Object.defineProperty(Plugin.prototype,"currentGasLimit",{get:function(){return this._currentGasLimit},set:function(gasLimit){this._currentGasLimit=gasLimit;this.updateSubscriptions()},enumerable:false,configurable:true});Plugin.prototype.outputParamsTo=function(type){var output={};var setParams=function(params,input){for(var key in params){var paramKey=key;var param=params[paramKey];if(param instanceof FctParam){output[paramKey]=type==="VALUES"?param.getString():param.getJsonParam({key:key,ioType:"OUTPUT"})}else{if(!output[paramKey]){output[paramKey]={}}setParams(params[key],output[paramKey])}}};setParams(this.output.params);return output};return Plugin}();var __extends$c=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __awaiter$Y=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$Y=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};(function(_super){__extends$c(NewPluginType,_super);function NewPluginType(args){var _this=_super.call(this)||this;_this.create=function(){return __awaiter$Y(_this,void 0,void 0,function(){return __generator$Y(this,function(_a){return[2]})})};return _this}return NewPluginType})(Plugin);var createPlugin$1=function(_a){var getParams=_a.getParams,protocol=_a.protocol,type=_a.type,method=_a.method,validate=_a.validate,onCreate=_a.onCreate,onChange=_a.onChange,getSubscribtions=_a.getSubscribtions,name=_a.name,description=_a.description,initParams=_a.initParams,supportedContracts=_a.supportedContracts,falseMeansFail=_a.falseMeansFail,toEns=_a.toEns,getParamsOnCreate=_a.getParamsOnCreate,requiredApprovals=_a.requiredApprovals,calculateValuesOnUserInput=_a.calculateValuesOnUserInput,beforeSimulate=_a.beforeSimulate,setValuesAsync=_a.setValuesAsync,assetFlow=_a.assetFlow,overrideSetMethodParams=_a.overrideSetMethodParams,estimateGasOnParams=_a.estimateGasOnParams,payerIndex=_a.payerIndex,usePureMethod=_a.usePureMethod;var NewPlugin=function(_super){__extends$c(NewPlugin,_super);function NewPlugin(args){var _this=this;var _a,_b,_c;var argsInitParams=args===null||args===void 0?void 0:args.initParams;var init=initParams;if(argsInitParams){init=deepmerge(initParams,argsInitParams)}var chainId=(args===null||args===void 0?void 0:args.chainId)||"1";var params=getParams({chainId:chainId,vaultAddress:args===null||args===void 0?void 0:args.vaultAddress,walletAddress:args===null||args===void 0?void 0:args.walletAddress});_this=_super.call(this,protocol,type,method,name,chainId,params,requiredApprovals,assetFlow,init,args.walletAddress,args.vaultAddress,args.provider)||this;_this.create=function(){return __awaiter$Y(_this,void 0,void 0,function(){var params,callType,paramsOnCreate,call_1,call;var _a,_b,_c,_d;return __generator$Y(this,function(_e){switch(_e.label){case 0:params=this.input.get();callType=type==="ACTION"||type==="LIBRARY"?type:"VIEW_ONLY";if(!getParamsOnCreate)return[3,2];return[4,getParamsOnCreate({chainId:this.chainId,params:params})];case 1:paramsOnCreate=_e.sent();if(!paramsOnCreate){console.log(this.input.errors);return[2]}call_1={value:(_a=paramsOnCreate.params.value)===null||_a===void 0?void 0:_a.value,to:(_b=paramsOnCreate.params.to)===null||_b===void 0?void 0:_b.value,toENS:this.toEns,method:paramsOnCreate.method,params:this.getMethodParams({params:paramsOnCreate.params.methodParams}),options:{gasLimit:this.gasLimit||paramsOnCreate.gasLimit||"0",falseMeansFail:this.falseMeansFail,payerIndex:this.payerIndex,usePureMethod:this.usePureMethod,callType:callType}};return[2,_super.prototype.create.call(this,{call:call_1})];case 2:call={value:(_c=params.value)===null||_c===void 0?void 0:_c.value,to:(_d=params.to)===null||_d===void 0?void 0:_d.value,method:this.method,params:this.methodParams,toENS:this.toEns,options:{gasLimit:this.gasLimit||"0",falseMeansFail:this.falseMeansFail,payerIndex:this.payerIndex,usePureMethod:this.usePureMethod,callType:callType}};return[2,_super.prototype.create.call(this,{call:call})]}})})};var options=(_a=params.input.to)===null||_a===void 0?void 0:_a.options;if(options&&options.length){_this._supportedContracts=options.map(function(option){return{address:option.value,name:option.name,chainId:option.chainId}});if(options.length===1){(_b=_this.input.params.to)===null||_b===void 0?void 0:_b.set({value:options[0].value})}}else if(supportedContracts){var pluginContracts=getSupportedContracts({chainId:chainId,contracts:supportedContracts});if(pluginContracts&&pluginContracts.length===1)(_c=_this.input.params.to)===null||_c===void 0?void 0:_c.set({value:pluginContracts[0].value});_this._supportedContracts=supportedContracts}if(name){_this._name=name}_this.toEns=toEns;_this.payerIndex=payerIndex;if(validate)_this.input.validate=validate;if(description)_this._description=description;if(getSubscribtions)getSubscribtions({chainId:_this.chainId,input:_this.input.params,output:_this.output.params,setMethod:_this.setMethod,walletAddress:args.walletAddress,vaultAddress:args.vaultAddress}).forEach(function(subscription){_this.input.subscribe(subscription)});if(onCreate){onCreate({chainId:chainId,input:_this.input.params,output:_this.output.params})}if(setValuesAsync){_this.setValuesAsync=setValuesAsync}if(onChange){_this.input.subscribe({callback:function(){return onChange({chainId:chainId,input:_this.input.params,output:_this.output.params})},id:v4()})}if(calculateValuesOnUserInput){_this.calculateValuesOnUserInput=calculateValuesOnUserInput({chainId:chainId,input:_this.input.params,output:_this.output.params,account:args.vaultAddress,provider:_this.provider,setMethod:_this.setMethod})}if(overrideSetMethodParams){_this.setMethodParams=overrideSetMethodParams({chainId:chainId,input:_this.input.params,output:_this.output.params})}if(beforeSimulate){_this.beforeSimulate=beforeSimulate}if(estimateGasOnParams){_this.estimateGasOnParams=estimateGasOnParams}if(getParamsOnCreate){_this.getParamsOnCreate=getParamsOnCreate}if(falseMeansFail)_this._falseMeansFail=falseMeansFail;if(usePureMethod)_this._usePureMethod=usePureMethod;return _this}return NewPlugin}(Plugin);return NewPlugin};var amountOutMinRisk={description:"Transaction may be frontrun",isDanger:function(param){if(!param)return true;if(typeof param==="string"){if(parseFloat(param)<=0)return true;return false}return true}};({input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountOut:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}});var swapExactEthForTokensParams={input:{to:new FctAddress({destination:"uniswap_router"}),value:new FctValue({destination:"wei_amount"}),methodParams:{amountOutMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),path:new FctAddressList({destination:"ERC20_List"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}};var swapExactTokensForEthParams={input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountIn:new FctValue({destination:"wei_amount"}),amountOutMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),path:new FctAddressList({destination:"ERC20_List"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}};var swapExactTokensForTokensParams={input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountIn:new FctValue({destination:"wei_amount"}),amountOutMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),path:new FctAddressList({destination:"ERC20_List"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}};({input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountIn:new FctValue({destination:"wei_amount"}),amountInMax:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}});({input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountOut:new FctValue({destination:"wei_amount"}),amountInMax:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}});var AddLiquidity$2=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"addLiquidity",description:"Add liquidity on Uniswap",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{tokenA:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenB:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),amountADesired:new FctValue({destination:"wei_amount"}),amountBDesired:new FctValue({destination:"wei_amount"}),amountAMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),amountBMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({destination:"wei_amount",innerIndex:0}),amountB:new FctValue({destination:"wei_amount",innerIndex:1}),liquidity:new FctValue({destination:"wei_amount",innerIndex:2})}}},initParams:{methodParams:{amountAMin:"0",amountBMin:"0",deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){return[{to:params.methodParams.tokenA.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountADesired.value},method:"approve",protocol:"ERC20"},{to:params.methodParams.tokenB.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountBDesired.value},method:"approve",protocol:"ERC20"}]}});var AddLiquidityETH$1=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"addLiquidityETH",description:"Add liquidity on Uniswap",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),value:new FctValue({destination:"wei_amount"}),methodParams:{token:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),amountTokenDesired:new FctValue({}),amountTokenMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),amountETHMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({destination:"wei_amount",innerIndex:0}),amountB:new FctValue({destination:"wei_amount",innerIndex:1}),liquidity:new FctValue({destination:"wei_amount",innerIndex:2})}}},initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"},amountTokenMin:"0",amountETHMin:"0"}},requiredApprovals:function(params){return[{to:params===null||params===void 0?void 0:params.methodParams.token.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountTokenDesired.value},method:"approve",protocol:"ERC20"}]}});var __extends$b=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign$q=undefined&&undefined.__assign||function(){__assign$q=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$q.apply(this,arguments)};var _a$4,_b$4,_c$2,_d;var USDC_MAINNET$1=new Token$1(SupportedChainId.MAINNET,"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",6,"USDC","USD//C");var USDC_ROPSTEN=new Token$1(SupportedChainId.ROPSTEN,"0x07865c6e87b9f70255377e024ace6630c1eaa37f",6,"USDC","USD//C");var USDC_RINKEBY=new Token$1(SupportedChainId.RINKEBY,"0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b",6,"tUSDC","test USD//C");var USDC_GOERLI$1=new Token$1(SupportedChainId.GOERLI,"0x07865c6e87b9f70255377e024ace6630c1eaa37f",6,"USDC","USD//C");var USDC_KOVAN=new Token$1(SupportedChainId.KOVAN,"0x31eeb2d0f9b6fd8642914ab10f4dd473677d80df",6,"USDC","USD//C");var USDC_OPTIMISM$1=new Token$1(SupportedChainId.OPTIMISM,"0x7F5c764cBc14f9669B88837ca1490cCa17c31607",6,"USDC","USD//C");var USDC_OPTIMISTIC_KOVAN=new Token$1(SupportedChainId.OPTIMISTIC_KOVAN,"0x3b8e53b3ab8e01fb57d0c9e893bc4d655aa67d84",6,"USDC","USD//C");var USDC_ARBITRUM$1=new Token$1(SupportedChainId.ARBITRUM_ONE,"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",6,"USDC","USD//C");var USDC_ARBITRUM_RINKEBY=new Token$1(SupportedChainId.ARBITRUM_RINKEBY,"0x09b98f8b2395d076514037ff7d39a091a536206c",6,"USDC","USD//C");var USDC_ARBITRUM_GOERLI$1=new Token$1(SupportedChainId.ARBITRUM_GOERLI,"0x179522635726710Dd7D2035a81d856de4Aa7836c",6,"USDC","USD//C");var USDC_POLYGON$1=new Token$1(SupportedChainId.POLYGON,"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",6,"USDC","USD//C");var USDC_POLYGON_MUMBAI=new Token$1(SupportedChainId.POLYGON_MUMBAI,"0xe11a86849d99f524cac3e7a0ec1241828e332c62",6,"USDC","USD//C");new Token$1(SupportedChainId.MAINNET,"0xD46bA6D942050d489DBd938a2C909A5d5039A161",9,"AMPL","Ampleforth");new Token$1(SupportedChainId.MAINNET,"0x6B175474E89094C44Da98b954EedeAC495271d0F",18,"DAI","Dai Stablecoin");new Token$1(SupportedChainId.ARBITRUM_ONE,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai stable coin");new Token$1(SupportedChainId.OPTIMISM,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai stable coin");_a$4={},_a$4[SupportedChainId.MAINNET]=USDC_MAINNET$1,_a$4[SupportedChainId.ARBITRUM_ONE]=USDC_ARBITRUM$1,_a$4[SupportedChainId.OPTIMISM]=USDC_OPTIMISM$1,_a$4[SupportedChainId.ARBITRUM_RINKEBY]=USDC_ARBITRUM_RINKEBY,_a$4[SupportedChainId.ARBITRUM_GOERLI]=USDC_ARBITRUM_GOERLI$1,_a$4[SupportedChainId.OPTIMISTIC_KOVAN]=USDC_OPTIMISTIC_KOVAN,_a$4[SupportedChainId.POLYGON]=USDC_POLYGON$1,_a$4[SupportedChainId.POLYGON_MUMBAI]=USDC_POLYGON_MUMBAI,_a$4[SupportedChainId.GOERLI]=USDC_GOERLI$1,_a$4[SupportedChainId.RINKEBY]=USDC_RINKEBY,_a$4[SupportedChainId.KOVAN]=USDC_KOVAN,_a$4[SupportedChainId.ROPSTEN]=USDC_ROPSTEN,_a$4;new Token$1(SupportedChainId.POLYGON,"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063",18,"DAI","Dai Stablecoin");new Token$1(SupportedChainId.POLYGON,"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",6,"USDT","Tether USD");new Token$1(SupportedChainId.POLYGON,"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",8,"WBTC","Wrapped BTC");new Token$1(SupportedChainId.MAINNET,"0xdAC17F958D2ee523a2206206994597C13D831ec7",6,"USDT","Tether USD");new Token$1(SupportedChainId.ARBITRUM_ONE,"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",6,"USDT","Tether USD");new Token$1(SupportedChainId.OPTIMISM,"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58",6,"USDT","Tether USD");new Token$1(SupportedChainId.MAINNET,"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",8,"WBTC","Wrapped BTC");new Token$1(SupportedChainId.ARBITRUM_ONE,"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",8,"WBTC","Wrapped BTC");new Token$1(SupportedChainId.OPTIMISM,"0x68f180fcCe6836688e9084f035309E29Bf0A2095",8,"WBTC","Wrapped BTC");new Token$1(SupportedChainId.MAINNET,"0x956F47F50A910163D8BF957Cf5846D573E7f87CA",18,"FEI","Fei USD");new Token$1(SupportedChainId.MAINNET,"0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B",18,"TRIBE","Tribe");new Token$1(SupportedChainId.MAINNET,"0x853d955aCEf822Db058eb8505911ED77F175b99e",18,"FRAX","Frax");new Token$1(SupportedChainId.MAINNET,"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",18,"FXS","Frax Share");new Token$1(SupportedChainId.MAINNET,"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",8,"renBTC","renBTC");new Token$1(SupportedChainId.MAINNET,"0xAa6E8127831c9DE45ae56bB1b0d4D4Da6e5665BD",18,"ETH2x-FLI","ETH 2x Flexible Leverage Index");new Token$1(SupportedChainId.MAINNET,"0xFe2e637202056d30016725477c5da089Ab0A043A",18,"sETH2","StakeWise Staked ETH2");new Token$1(SupportedChainId.MAINNET,"0x20BC832ca081b91433ff6c17f85701B6e92486c5",18,"rETH2","StakeWise Reward ETH2");new Token$1(SupportedChainId.MAINNET,"0x48C3399719B582dD63eB5AADf12A40B4C3f52FA2",18,"SWISE","StakeWise");new Token$1(SupportedChainId.POLYGON_MUMBAI,"0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa",18,"WETH","Wrapped Ether");new Token$1(SupportedChainId.POLYGON,"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",18,"WETH","Wrapped Ether");_b$4={},_b$4[SupportedChainId.MAINNET]=new Token$1(SupportedChainId.MAINNET,UNI_ADDRESS[1],18,"UNI","Uniswap"),_b$4[SupportedChainId.RINKEBY]=new Token$1(SupportedChainId.RINKEBY,UNI_ADDRESS[4],18,"UNI","Uniswap"),_b$4[SupportedChainId.ROPSTEN]=new Token$1(SupportedChainId.ROPSTEN,UNI_ADDRESS[3],18,"UNI","Uniswap"),_b$4[SupportedChainId.GOERLI]=new Token$1(SupportedChainId.GOERLI,UNI_ADDRESS[5],18,"UNI","Uniswap"),_b$4[SupportedChainId.KOVAN]=new Token$1(SupportedChainId.KOVAN,UNI_ADDRESS[42],18,"UNI","Uniswap"),_b$4;var WRAPPED_NATIVE_CURRENCY$1=__assign$q(__assign$q({},WETH9$1),(_c$2={},_c$2[SupportedChainId.OPTIMISM]=new Token$1(SupportedChainId.OPTIMISM,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),_c$2[SupportedChainId.OPTIMISTIC_KOVAN]=new Token$1(SupportedChainId.OPTIMISTIC_KOVAN,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),_c$2[SupportedChainId.ARBITRUM_ONE]=new Token$1(SupportedChainId.ARBITRUM_ONE,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),_c$2[SupportedChainId.ARBITRUM_RINKEBY]=new Token$1(SupportedChainId.ARBITRUM_RINKEBY,"0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681",18,"WETH","Wrapped Ether"),_c$2[SupportedChainId.POLYGON]=new Token$1(SupportedChainId.POLYGON,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC"),_c$2[SupportedChainId.POLYGON_MUMBAI]=new Token$1(SupportedChainId.POLYGON_MUMBAI,"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",18,"WMATIC","Wrapped MATIC"),_c$2));function isMatic(chainId){return chainId===SupportedChainId.POLYGON_MUMBAI||chainId===SupportedChainId.POLYGON}var MaticNativeCurrency=function(_super){__extends$b(MaticNativeCurrency,_super);function MaticNativeCurrency(chainId){if(!isMatic(chainId))throw new Error("Not matic");return _super.call(this,chainId,18,"MATIC","Polygon Matic")||this}MaticNativeCurrency.prototype.equals=function(other){return other.isNative&&other.chainId===this.chainId};Object.defineProperty(MaticNativeCurrency.prototype,"wrapped",{get:function(){if(!isMatic(this.chainId))throw new Error("Not matic");var wrapped=WRAPPED_NATIVE_CURRENCY$1[this.chainId];if(!wrapped)throw new Error("WRAPPED_NATIVE_CURRENCY error ");return wrapped},enumerable:false,configurable:true});return MaticNativeCurrency}(NativeCurrency$1);var ExtendedEther$1=function(_super){__extends$b(ExtendedEther,_super);function ExtendedEther(){return _super!==null&&_super.apply(this,arguments)||this}Object.defineProperty(ExtendedEther.prototype,"wrapped",{get:function(){var wrapped=WRAPPED_NATIVE_CURRENCY$1[this.chainId];if(wrapped)return wrapped;throw new Error("Unsupported chain ID")},enumerable:false,configurable:true});ExtendedEther.onChain=function(chainId){var _a;return(_a=this._cachedExtendedEther[chainId])!==null&&_a!==void 0?_a:this._cachedExtendedEther[chainId]=new ExtendedEther(chainId)};ExtendedEther._cachedExtendedEther={};return ExtendedEther}(Ether$1);var cachedNativeCurrency={};function nativeOnChain(chainId){var _a;return(_a=cachedNativeCurrency[chainId])!==null&&_a!==void 0?_a:cachedNativeCurrency[chainId]=isMatic(chainId)?new MaticNativeCurrency(chainId):ExtendedEther$1.onChain(chainId)}({USDC:(_d={},_d[SupportedChainId.MAINNET]=USDC_MAINNET$1.address,_d[SupportedChainId.ARBITRUM_ONE]=USDC_ARBITRUM$1.address,_d[SupportedChainId.OPTIMISM]=USDC_OPTIMISM$1.address,_d[SupportedChainId.ARBITRUM_RINKEBY]=USDC_ARBITRUM_RINKEBY.address,_d[SupportedChainId.OPTIMISTIC_KOVAN]=USDC_OPTIMISTIC_KOVAN.address,_d[SupportedChainId.POLYGON]=USDC_POLYGON$1.address,_d[SupportedChainId.POLYGON_MUMBAI]=USDC_POLYGON_MUMBAI.address,_d[SupportedChainId.GOERLI]=USDC_GOERLI$1.address,_d[SupportedChainId.RINKEBY]=USDC_RINKEBY.address,_d[SupportedChainId.KOVAN]=USDC_KOVAN.address,_d[SupportedChainId.ROPSTEN]=USDC_ROPSTEN.address,_d)});var ETH=function(_a){var chainId=_a.chainId;return WETH9$1[chainId]};var RemoveLiquidityETH$1=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"removeLiquidityETH",description:"Remove liquidity on Uniswap",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{token:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),liquidity:new FctValue({destination:"wei_amount"}),amountTokenMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),amountETHMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({destination:"wei_amount",innerIndex:0}),amountB:new FctValue({destination:"wei_amount",innerIndex:1})}}},initParams:{methodParams:{amountTokenMin:"0",amountETHMin:"0",deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params,chainId){var token0=ETH({chainId:Number(chainId)||1}).address;var token1=params===null||params===void 0?void 0:params.methodParams.token.value;var getToken=function(){if(token0&&typeof token0==="string"&&token1&&typeof token1==="string"){var pairAddress=getCreate2Address$1(FACTORY_ADDRESS_MAP[Number(chainId)],keccak256$2(["bytes"],[pack(["address","address"],token0<token1?[token0,token1]:[token1,token0])]),INIT_CODE_HASH$1);return pairAddress}return undefined};return[{to:getToken(),params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.liquidity.value},method:"approve",protocol:"ERC20"}]}});var UniswapV2SwapETHForExactTokens=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"swapETHForExactTokens",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),value:new FctValue({destination:"wei_amount"}),methodParams:{amountOut:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List",options:getAllCurrencies({chainId:chainId})}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},supportedContracts:ROUTER_V2_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}}});var UniswapV2SwapExactETHForTokens=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"swapExactETHForTokens",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),value:new FctValue({destination:"wei_amount"}),methodParams:{amountOutMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),path:new FctAddressList({destination:"ERC20_List",options:getAllCurrencies({chainId:chainId})}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},supportedContracts:ROUTER_V2_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}}});var UniswapV2SwapExactTokensForETH=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"swapExactTokensForETH",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountIn:new FctValue({destination:"wei_amount"}),amountOutMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),path:new FctAddressList({destination:"ERC20_List",options:getAllCurrencies({chainId:chainId})}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},supportedContracts:ROUTER_V2_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){var token=(params===null||params===void 0?void 0:params.methodParams.path.value)&&Array.isArray(params===null||params===void 0?void 0:params.methodParams.path.value)?params===null||params===void 0?void 0:params.methodParams.path.value[0]:undefined;return[{to:token,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountIn.value},method:"approve",protocol:"ERC20"}]}});var UniswapV2SwapTokensForExactETH=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"swapTokensForExactETH",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountOut:new FctValue({destination:"wei_amount"}),amountInMax:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List",options:getAllCurrencies({chainId:chainId})}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){var token=(params===null||params===void 0?void 0:params.methodParams.path.value)&&Array.isArray(params===null||params===void 0?void 0:params.methodParams.path.value)?params===null||params===void 0?void 0:params.methodParams.path.value[0]:undefined;return[{to:token,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountInMax.value},method:"approve",protocol:"ERC20"}]}});var RemoveLiquidity$1=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"removeLiquidity",description:"Remove liquidity on Sushiswap",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{tokenA:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenB:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),liquidity:new FctValue({destination:"wei_amount"}),amountAMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),amountBMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({destination:"wei_amount",innerIndex:0}),amountB:new FctValue({destination:"wei_amount",innerIndex:1})}}},initParams:{methodParams:{amountAMin:"0",amountBMin:"0",deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params,chainId){var token0=params===null||params===void 0?void 0:params.methodParams.tokenA.value;var token1=params===null||params===void 0?void 0:params.methodParams.tokenB.value;var getToken=function(){if(token0&&typeof token0==="string"&&token1&&typeof token1==="string"){var pairAddress=getCreate2Address$1(FACTORY_ADDRESS_MAP[chainId],keccak256$2(["bytes"],[pack(["address","address"],token0<token1?[token0,token1]:[token1,token0])]),INIT_CODE_HASH$1);return pairAddress}return undefined};return[{to:getToken(),params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.liquidity.value},method:"approve",protocol:"ERC20"}]}});var getToken$3=function(swapToken,chainId){switch(swapToken.address){case"0x0000000000000000000000000000000000000000":return Ether$1.onChain(chainId);case"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":return Ether$1.onChain(chainId);case"NATIVE":return Ether$1.onChain(chainId);default:return new Token$1(chainId,getAddress$2(swapToken.address),swapToken.decimals)}};var getIsNative=function(address){switch(address.toLowerCase()){case"0x0000000000000000000000000000000000000000":return true;case"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":return true;case"NATIVE":return true;default:return false}};var __awaiter$X=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$X=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __values$9=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var SimpleRemoveLiquidity=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"simpleRemoveLiquidity",description:"Remove liquidity from Uniswap",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{tokenA:new FctAddress({destination:"erc20",options:getAllCurrencies({chainId:chainId})}),tokenB:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),liquidity:new FctValue({destination:"wei_amount"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({destination:"wei_amount",innerIndex:0}),amountB:new FctValue({destination:"wei_amount",innerIndex:1})}}},initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},getParamsOnCreate:function(_a){return __awaiter$X(void 0,[_a],void 0,function(_b){var _c,to,deadline,tokenA,tokenB,liquidity,requiredParamsExact,requiredParamsExact_1,requiredParamsExact_1_1,param,requiredParams,requiredParams_1,requiredParams_1_1,param,isCurrencyANative,isCurrencyBNative,plugin_1,plugin;var e_1,_d,e_2,_e;var chainId=_b.chainId,params=_b.params;return __generator$X(this,function(_f){_c=params.methodParams,to=_c.to,deadline=_c.deadline,tokenA=_c.tokenA,tokenB=_c.tokenB,liquidity=_c.liquidity;requiredParamsExact=[{value:tokenA.value,key:"tokenA"},{value:tokenB.value,key:"tokenB"},{value:to.value,key:"to"}];try{for(requiredParamsExact_1=__values$9(requiredParamsExact),requiredParamsExact_1_1=requiredParamsExact_1.next();!requiredParamsExact_1_1.done;requiredParamsExact_1_1=requiredParamsExact_1.next()){param=requiredParamsExact_1_1.value;if(!param.value){console.error("wrong param ".concat(param.key,": ").concat(param.value));return[2]}if(typeof param.value!=="string"){console.error("wrong param ".concat(param.key,": should be a string"));return[2]}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(requiredParamsExact_1_1&&!requiredParamsExact_1_1.done&&(_d=requiredParamsExact_1.return))_d.call(requiredParamsExact_1)}finally{if(e_1)throw e_1.error}}requiredParams=[{value:to.value,key:"to"}];try{for(requiredParams_1=__values$9(requiredParams),requiredParams_1_1=requiredParams_1.next();!requiredParams_1_1.done;requiredParams_1_1=requiredParams_1.next()){param=requiredParams_1_1.value;if(!param.value){console.error("wrong param ".concat(param.key,": ").concat(param.value));return[2]}}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(requiredParams_1_1&&!requiredParams_1_1.done&&(_e=requiredParams_1.return))_e.call(requiredParams_1)}finally{if(e_2)throw e_2.error}}isCurrencyANative=getIsNative(tokenA.value);isCurrencyBNative=getIsNative(tokenB.value);if(isCurrencyBNative){console.error("wrong param currencyB: ".concat(tokenB.value));return[2]}if(isCurrencyANative){plugin_1=new RemoveLiquidityETH$1({chainId:chainId,initParams:{to:params.to.value,methodParams:{token:tokenB.value,liquidity:liquidity.value,amountTokenMin:"0",amountETHMin:"0",to:to.value,deadline:deadline.value}}});return[2,{plugin:plugin_1,params:plugin_1.input.params,method:plugin_1.method,gasLimit:plugin_1.gasLimit}]}plugin=new RemoveLiquidity$1({chainId:chainId,initParams:{to:params.to.value,methodParams:{tokenA:tokenA.value,tokenB:tokenB.value,liquidity:liquidity.value,amountAMin:"0",amountBMin:"0",to:to.value,deadline:deadline.value}}});return[2,{plugin:plugin,params:plugin.input.params,method:plugin.method,gasLimit:plugin.gasLimit}]})})},requiredApprovals:function(params,chainId){var currencyA=params===null||params===void 0?void 0:params.methodParams.tokenA.value;var token0=getIsNative(currencyA)?ETH({chainId:Number(chainId)||1}).address:currencyA;var token1=params===null||params===void 0?void 0:params.methodParams.tokenB.value;console.log({token0:token0,isNative:getIsNative(currencyA),currencyA:currencyA});var getToken=function(){if(token0&&typeof token0==="string"&&token1&&typeof token1==="string"){var pairAddress=getCreate2Address$1(FACTORY_ADDRESS_MAP[Number(chainId)],keccak256$2(["bytes"],[pack(["address","address"],token0<token1?[token0,token1]:[token1,token0])]),INIT_CODE_HASH$1);return pairAddress}return undefined};return[{to:getToken(),params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.liquidity.value},method:"approve",protocol:"ERC20"}]}});var isProduction=process.env.NODE_ENV==="production";function warning(condition,message){if(!isProduction){if(condition){return}var text="Warning: "+message;if(typeof console!=="undefined"){console.warn(text)}try{throw Error(text)}catch(x){}}}var DP=20,RM=1,MAX_DP=1e6,MAX_POWER=1e6,NE=-7,PE=21,STRICT=false,NAME="[big.js] ",INVALID=NAME+"Invalid ",INVALID_DP=INVALID+"decimal places",INVALID_RM=INVALID+"rounding mode",DIV_BY_ZERO=NAME+"Division by zero",P$1={},UNDEFINED=void 0,NUMERIC=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;function _Big_(){function Big(n){var x=this;if(!(x instanceof Big))return n===UNDEFINED?_Big_():new Big(n);if(n instanceof Big){x.s=n.s;x.e=n.e;x.c=n.c.slice()}else{if(typeof n!=="string"){if(Big.strict===true&&typeof n!=="bigint"){throw TypeError(INVALID+"value")}n=n===0&&1/n<0?"-0":String(n)}parse(x,n)}x.constructor=Big}Big.prototype=P$1;Big.DP=DP;Big.RM=RM;Big.NE=NE;Big.PE=PE;Big.strict=STRICT;Big.roundDown=0;Big.roundHalfUp=1;Big.roundHalfEven=2;Big.roundUp=3;return Big}function parse(x,n){var e,i,nl;if(!NUMERIC.test(n)){throw Error(INVALID+"number")}x.s=n.charAt(0)=="-"?(n=n.slice(1),-1):1;if((e=n.indexOf("."))>-1)n=n.replace(".","");if((i=n.search(/e/i))>0){if(e<0)e=i;e+=+n.slice(i+1);n=n.substring(0,i)}else if(e<0){e=n.length}nl=n.length;for(i=0;i<nl&&n.charAt(i)=="0";)++i;if(i==nl){x.c=[x.e=0]}else{for(;nl>0&&n.charAt(--nl)=="0";);x.e=e-i-1;x.c=[];for(e=0;i<=nl;)x.c[e++]=+n.charAt(i++)}return x}function round$1(x,sd,rm,more){var xc=x.c;if(rm===UNDEFINED)rm=x.constructor.RM;if(rm!==0&&rm!==1&&rm!==2&&rm!==3){throw Error(INVALID_RM)}if(sd<1){more=rm===3&&(more||!!xc[0])||sd===0&&(rm===1&&xc[0]>=5||rm===2&&(xc[0]>5||xc[0]===5&&(more||xc[1]!==UNDEFINED)));xc.length=1;if(more){x.e=x.e-sd+1;xc[0]=1}else{xc[0]=x.e=0}}else if(sd<xc.length){more=rm===1&&xc[sd]>=5||rm===2&&(xc[sd]>5||xc[sd]===5&&(more||xc[sd+1]!==UNDEFINED||xc[sd-1]&1))||rm===3&&(more||!!xc[0]);xc.length=sd;if(more){for(;++xc[--sd]>9;){xc[sd]=0;if(sd===0){++x.e;xc.unshift(1);break}}}for(sd=xc.length;!xc[--sd];)xc.pop()}return x}function stringify$1(x,doExponential,isNonzero){var e=x.e,s=x.c.join(""),n=s.length;if(doExponential){s=s.charAt(0)+(n>1?"."+s.slice(1):"")+(e<0?"e":"e+")+e}else if(e<0){for(;++e;)s="0"+s;s="0."+s}else if(e>0){if(++e>n){for(e-=n;e--;)s+="0"}else if(e<n){s=s.slice(0,e)+"."+s.slice(e)}}else if(n>1){s=s.charAt(0)+"."+s.slice(1)}return x.s<0&&isNonzero?"-"+s:s}P$1.abs=function(){var x=new this.constructor(this);x.s=1;return x};P$1.cmp=function(y){var isneg,x=this,xc=x.c,yc=(y=new x.constructor(y)).c,i=x.s,j=y.s,k=x.e,l=y.e;if(!xc[0]||!yc[0])return!xc[0]?!yc[0]?0:-j:i;if(i!=j)return i;isneg=i<0;if(k!=l)return k>l^isneg?1:-1;j=(k=xc.length)<(l=yc.length)?k:l;for(i=-1;++i<j;){if(xc[i]!=yc[i])return xc[i]>yc[i]^isneg?1:-1}return k==l?0:k>l^isneg?1:-1};P$1.div=function(y){var x=this,Big=x.constructor,a=x.c,b=(y=new Big(y)).c,k=x.s==y.s?1:-1,dp=Big.DP;if(dp!==~~dp||dp<0||dp>MAX_DP){throw Error(INVALID_DP)}if(!b[0]){throw Error(DIV_BY_ZERO)}if(!a[0]){y.s=k;y.c=[y.e=0];return y}var bl,bt,n,cmp,ri,bz=b.slice(),ai=bl=b.length,al=a.length,r=a.slice(0,bl),rl=r.length,q=y,qc=q.c=[],qi=0,p=dp+(q.e=x.e-y.e)+1;q.s=k;k=p<0?0:p;bz.unshift(0);for(;rl++<bl;)r.push(0);do{for(n=0;n<10;n++){if(bl!=(rl=r.length)){cmp=bl>rl?1:-1}else{for(ri=-1,cmp=0;++ri<bl;){if(b[ri]!=r[ri]){cmp=b[ri]>r[ri]?1:-1;break}}}if(cmp<0){for(bt=rl==bl?b:bz;rl;){if(r[--rl]<bt[rl]){ri=rl;for(;ri&&!r[--ri];)r[ri]=9;--r[ri];r[rl]+=10}r[rl]-=bt[rl]}for(;!r[0];)r.shift()}else{break}}qc[qi++]=cmp?n:++n;if(r[0]&&cmp)r[rl]=a[ai]||0;else r=[a[ai]]}while((ai++<al||r[0]!==UNDEFINED)&&k--);if(!qc[0]&&qi!=1){qc.shift();q.e--;p--}if(qi>p)round$1(q,p,Big.RM,r[0]!==UNDEFINED);return q};P$1.eq=function(y){return this.cmp(y)===0};P$1.gt=function(y){return this.cmp(y)>0};P$1.gte=function(y){return this.cmp(y)>-1};P$1.lt=function(y){return this.cmp(y)<0};P$1.lte=function(y){return this.cmp(y)<1};P$1.minus=P$1.sub=function(y){var i,j,t,xlty,x=this,Big=x.constructor,a=x.s,b=(y=new Big(y)).s;if(a!=b){y.s=-b;return x.plus(y)}var xc=x.c.slice(),xe=x.e,yc=y.c,ye=y.e;if(!xc[0]||!yc[0]){if(yc[0]){y.s=-b}else if(xc[0]){y=new Big(x)}else{y.s=1}return y}if(a=xe-ye){if(xlty=a<0){a=-a;t=xc}else{ye=xe;t=yc}t.reverse();for(b=a;b--;)t.push(0);t.reverse()}else{j=((xlty=xc.length<yc.length)?xc:yc).length;for(a=b=0;b<j;b++){if(xc[b]!=yc[b]){xlty=xc[b]<yc[b];break}}}if(xlty){t=xc;xc=yc;yc=t;y.s=-y.s}if((b=(j=yc.length)-(i=xc.length))>0)for(;b--;)xc[i++]=0;for(b=i;j>a;){if(xc[--j]<yc[j]){for(i=j;i&&!xc[--i];)xc[i]=9;--xc[i];xc[j]+=10}xc[j]-=yc[j]}for(;xc[--b]===0;)xc.pop();for(;xc[0]===0;){xc.shift();--ye}if(!xc[0]){y.s=1;xc=[ye=0]}y.c=xc;y.e=ye;return y};P$1.mod=function(y){var ygtx,x=this,Big=x.constructor,a=x.s,b=(y=new Big(y)).s;if(!y.c[0]){throw Error(DIV_BY_ZERO)}x.s=y.s=1;ygtx=y.cmp(x)==1;x.s=a;y.s=b;if(ygtx)return new Big(x);a=Big.DP;b=Big.RM;Big.DP=Big.RM=0;x=x.div(y);Big.DP=a;Big.RM=b;return this.minus(x.times(y))};P$1.neg=function(){var x=new this.constructor(this);x.s=-x.s;return x};P$1.plus=P$1.add=function(y){var e,k,t,x=this,Big=x.constructor;y=new Big(y);if(x.s!=y.s){y.s=-y.s;return x.minus(y)}var xe=x.e,xc=x.c,ye=y.e,yc=y.c;if(!xc[0]||!yc[0]){if(!yc[0]){if(xc[0]){y=new Big(x)}else{y.s=x.s}}return y}xc=xc.slice();if(e=xe-ye){if(e>0){ye=xe;t=yc}else{e=-e;t=xc}t.reverse();for(;e--;)t.push(0);t.reverse()}if(xc.length-yc.length<0){t=yc;yc=xc;xc=t}e=yc.length;for(k=0;e;xc[e]%=10)k=(xc[--e]=xc[e]+yc[e]+k)/10|0;if(k){xc.unshift(k);++ye}for(e=xc.length;xc[--e]===0;)xc.pop();y.c=xc;y.e=ye;return y};P$1.pow=function(n){var x=this,one=new x.constructor("1"),y=one,isneg=n<0;if(n!==~~n||n<-MAX_POWER||n>MAX_POWER){throw Error(INVALID+"exponent")}if(isneg)n=-n;for(;;){if(n&1)y=y.times(x);n>>=1;if(!n)break;x=x.times(x)}return isneg?one.div(y):y};P$1.prec=function(sd,rm){if(sd!==~~sd||sd<1||sd>MAX_DP){throw Error(INVALID+"precision")}return round$1(new this.constructor(this),sd,rm)};P$1.round=function(dp,rm){if(dp===UNDEFINED)dp=0;else if(dp!==~~dp||dp<-MAX_DP||dp>MAX_DP){throw Error(INVALID_DP)}return round$1(new this.constructor(this),dp+this.e+1,rm)};P$1.sqrt=function(){var r,c,t,x=this,Big=x.constructor,s=x.s,e=x.e,half=new Big("0.5");if(!x.c[0])return new Big(x);if(s<0){throw Error(NAME+"No square root")}s=Math.sqrt(x+"");if(s===0||s===1/0){c=x.c.join("");if(!(c.length+e&1))c+="0";s=Math.sqrt(c);e=((e+1)/2|0)-(e<0||e&1);r=new Big((s==1/0?"5e":(s=s.toExponential()).slice(0,s.indexOf("e")+1))+e)}else{r=new Big(s+"")}e=r.e+(Big.DP+=4);do{t=r;r=half.times(t.plus(x.div(t)))}while(t.c.slice(0,e).join("")!==r.c.slice(0,e).join(""));return round$1(r,(Big.DP-=4)+r.e+1,Big.RM)};P$1.times=P$1.mul=function(y){var c,x=this,Big=x.constructor,xc=x.c,yc=(y=new Big(y)).c,a=xc.length,b=yc.length,i=x.e,j=y.e;y.s=x.s==y.s?1:-1;if(!xc[0]||!yc[0]){y.c=[y.e=0];return y}y.e=i+j;if(a<b){c=xc;xc=yc;yc=c;j=a;a=b;b=j}for(c=new Array(j=a+b);j--;)c[j]=0;for(i=b;i--;){b=0;for(j=a+i;j>i;){b=c[j]+yc[i]*xc[j-i-1]+b;c[j--]=b%10;b=b/10|0}c[j]=b}if(b)++y.e;else c.shift();for(i=c.length;!c[--i];)c.pop();y.c=c;return y};P$1.toExponential=function(dp,rm){var x=this,n=x.c[0];if(dp!==UNDEFINED){if(dp!==~~dp||dp<0||dp>MAX_DP){throw Error(INVALID_DP)}x=round$1(new x.constructor(x),++dp,rm);for(;x.c.length<dp;)x.c.push(0)}return stringify$1(x,true,!!n)};P$1.toFixed=function(dp,rm){var x=this,n=x.c[0];if(dp!==UNDEFINED){if(dp!==~~dp||dp<0||dp>MAX_DP){throw Error(INVALID_DP)}x=round$1(new x.constructor(x),dp+x.e+1,rm);for(dp=dp+x.e+1;x.c.length<dp;)x.c.push(0)}return stringify$1(x,false,!!n)};P$1[Symbol.for("nodejs.util.inspect.custom")]=P$1.toJSON=P$1.toString=function(){var x=this,Big=x.constructor;return stringify$1(x,x.e<=Big.NE||x.e>=Big.PE,!!x.c[0])};P$1.toNumber=function(){var n=Number(stringify$1(this,true,true));if(this.constructor.strict===true&&!this.eq(n.toString())){throw Error(NAME+"Imprecise conversion")}return n};P$1.toPrecision=function(sd,rm){var x=this,Big=x.constructor,n=x.c[0];if(sd!==UNDEFINED){if(sd!==~~sd||sd<1||sd>MAX_DP){throw Error(INVALID+"precision")}x=round$1(new Big(x),sd,rm);for(;x.c.length<sd;)x.c.push(0)}return stringify$1(x,sd<=x.e||x.e<=Big.NE||x.e>=Big.PE,!!n)};P$1.valueOf=function(){var x=this,Big=x.constructor;if(Big.strict===true){throw Error(NAME+"valueOf disallowed")}return stringify$1(x,x.e<=Big.NE||x.e>=Big.PE,true)};var Big$2=_Big_();var ChainId;(function(ChainId){ChainId[ChainId["MAINNET"]=1]="MAINNET";ChainId[ChainId["ROPSTEN"]=3]="ROPSTEN";ChainId[ChainId["RINKEBY"]=4]="RINKEBY";ChainId[ChainId["GÖRLI"]=5]="GÖRLI";ChainId[ChainId["KOVAN"]=42]="KOVAN";ChainId[ChainId["MATIC"]=137]="MATIC";ChainId[ChainId["MATIC_TESTNET"]=80001]="MATIC_TESTNET";ChainId[ChainId["FANTOM"]=250]="FANTOM";ChainId[ChainId["FANTOM_TESTNET"]=4002]="FANTOM_TESTNET";ChainId[ChainId["XDAI"]=100]="XDAI";ChainId[ChainId["BSC"]=56]="BSC";ChainId[ChainId["BSC_TESTNET"]=97]="BSC_TESTNET";ChainId[ChainId["ARBITRUM"]=42161]="ARBITRUM";ChainId[ChainId["ARBITRUM_TESTNET"]=79377087078960]="ARBITRUM_TESTNET";ChainId[ChainId["MOONBEAM_TESTNET"]=1287]="MOONBEAM_TESTNET";ChainId[ChainId["AVALANCHE"]=43114]="AVALANCHE";ChainId[ChainId["AVALANCHE_TESTNET"]=43113]="AVALANCHE_TESTNET";ChainId[ChainId["HECO"]=128]="HECO";ChainId[ChainId["HECO_TESTNET"]=256]="HECO_TESTNET";ChainId[ChainId["HARMONY"]=16666e5]="HARMONY";ChainId[ChainId["HARMONY_TESTNET"]=16667e5]="HARMONY_TESTNET";ChainId[ChainId["OKEX"]=66]="OKEX";ChainId[ChainId["OKEX_TESTNET"]=65]="OKEX_TESTNET";ChainId[ChainId["CELO"]=42220]="CELO";ChainId[ChainId["PALM"]=11297108109]="PALM";ChainId[ChainId["PALM_TESTNET"]=11297108099]="PALM_TESTNET";ChainId[ChainId["MOONRIVER"]=1285]="MOONRIVER";ChainId[ChainId["FUSE"]=122]="FUSE";ChainId[ChainId["TELOS"]=40]="TELOS"})(ChainId||(ChainId={}));var Rounding;(function(Rounding){Rounding[Rounding["ROUND_DOWN"]=0]="ROUND_DOWN";Rounding[Rounding["ROUND_HALF_UP"]=1]="ROUND_HALF_UP";Rounding[Rounding["ROUND_UP"]=2]="ROUND_UP"})(Rounding||(Rounding={}));var TradeType$1;(function(TradeType){TradeType[TradeType["EXACT_INPUT"]=0]="EXACT_INPUT";TradeType[TradeType["EXACT_OUTPUT"]=1]="EXACT_OUTPUT"})(TradeType$1||(TradeType$1={}));var KashiAction;(function(KashiAction){KashiAction[KashiAction["ADD_ASSET"]=1]="ADD_ASSET";KashiAction[KashiAction["REPAY"]=2]="REPAY";KashiAction[KashiAction["REMOVE_ASSET"]=3]="REMOVE_ASSET";KashiAction[KashiAction["REMOVE_COLLATERAL"]=4]="REMOVE_COLLATERAL";KashiAction[KashiAction["BORROW"]=5]="BORROW";KashiAction[KashiAction["GET_REPAY_SHARE"]=6]="GET_REPAY_SHARE";KashiAction[KashiAction["GET_REPAY_PART"]=7]="GET_REPAY_PART";KashiAction[KashiAction["ACCRUE"]=8]="ACCRUE";KashiAction[KashiAction["ADD_COLLATERAL"]=10]="ADD_COLLATERAL";KashiAction[KashiAction["UPDATE_EXCHANGE_RATE"]=11]="UPDATE_EXCHANGE_RATE";KashiAction[KashiAction["BENTO_DEPOSIT"]=20]="BENTO_DEPOSIT";KashiAction[KashiAction["BENTO_WITHDRAW"]=21]="BENTO_WITHDRAW";KashiAction[KashiAction["BENTO_TRANSFER"]=22]="BENTO_TRANSFER";KashiAction[KashiAction["BENTO_TRANSFER_MULTIPLE"]=23]="BENTO_TRANSFER_MULTIPLE";KashiAction[KashiAction["BENTO_SETAPPROVAL"]=24]="BENTO_SETAPPROVAL";KashiAction[KashiAction["CALL"]=30]="CALL"})(KashiAction||(KashiAction={}));var Fee;(function(Fee){Fee[Fee["DEFAULT"]=30]="DEFAULT"})(Fee||(Fee={}));var OrderStatus;(function(OrderStatus){OrderStatus["FILLED"]="FILLED";OrderStatus["CANCELLED"]="CANCELLED";OrderStatus["EXPIRED"]="EXPIRED";OrderStatus["PENDING"]="PENDING"})(OrderStatus||(OrderStatus={}));var _USDC_ADDRESS,_USD_ADDRESS,_FACTORY_ADDRESS,_ROUTER_ADDRESS,_SUSHI_ADDRESS,_MASTERCHEF_ADDRESS,_BAR_ADDRESS,_MAKER_ADDRESS,_TIMELOCK_ADDRESS,_BENTOBOX_ADDRESS,_KASHI_ADDRESS,_SUSHISWAP_SWAPPER_AD,_SUSHISWAP_MULTISWAPP,_SUSHISWAP_MULTI_EXAC,_CHAINLINK_ORACLE_ADD,_BORING_HELPER_ADDRES,_STOP_LIMIT_ORDER_ADD,_ARCHER_ROUTER_ADDRES,_MINICHEF_ADDRESS,_OLD_FARMS,_WETH9_ADDRESS,_WNATIVE_ADDRESS,_MASTERCHEF_V2_ADDRES,_ENS_REGISTRAR_ADDRES,_ZAPPER_ADDRESS,_MERKLE_DISTRIBUTOR_A,_MULTICALL2_ADDRESS;var USDC_ADDRESS=(_USDC_ADDRESS={},_USDC_ADDRESS[ChainId.MAINNET]="0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",_USDC_ADDRESS[ChainId.ROPSTEN]="0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C",_USDC_ADDRESS[ChainId.KOVAN]="0xb7a4F3E9097C08dA09517b5aB877F7a917224ede",_USDC_ADDRESS[ChainId.MATIC]="0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",_USDC_ADDRESS[ChainId.FANTOM]="0x04068DA6C83AFCFA0e13ba15A6696662335D5B75",_USDC_ADDRESS[ChainId.BSC]="0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",_USDC_ADDRESS[ChainId.HARMONY]="0x985458E523dB3d53125813eD68c274899e9DfAb4",_USDC_ADDRESS[ChainId.HECO]="0x9362Bbef4B8313A8Aa9f0c9808B80577Aa26B73B",_USDC_ADDRESS[ChainId.OKEX]="0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85",_USDC_ADDRESS[ChainId.XDAI]="0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83",_USDC_ADDRESS[ChainId.ARBITRUM]="0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",_USDC_ADDRESS[ChainId.AVALANCHE]="0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664",_USDC_ADDRESS[ChainId.MOONRIVER]="0xE3F5a90F9cb311505cd691a46596599aA1A0AD7D",_USDC_ADDRESS[ChainId.FUSE]="0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5",_USDC_ADDRESS);var USD_ADDRESS=(_USD_ADDRESS={},_USD_ADDRESS[ChainId.MAINNET]=USDC_ADDRESS[ChainId.MAINNET],_USD_ADDRESS[ChainId.ROPSTEN]=USDC_ADDRESS[ChainId.ROPSTEN],_USD_ADDRESS[ChainId.KOVAN]=USDC_ADDRESS[ChainId.KOVAN],_USD_ADDRESS[ChainId.MATIC]=USDC_ADDRESS[ChainId.MATIC],_USD_ADDRESS[ChainId.FANTOM]=USDC_ADDRESS[ChainId.FANTOM],_USD_ADDRESS[ChainId.BSC]=USDC_ADDRESS[ChainId.BSC],_USD_ADDRESS[ChainId.HARMONY]=USDC_ADDRESS[ChainId.HARMONY],_USD_ADDRESS[ChainId.HECO]=USDC_ADDRESS[ChainId.HECO],_USD_ADDRESS[ChainId.OKEX]=USDC_ADDRESS[ChainId.OKEX],_USD_ADDRESS[ChainId.XDAI]=USDC_ADDRESS[ChainId.XDAI],_USD_ADDRESS[ChainId.ARBITRUM]=USDC_ADDRESS[ChainId.ARBITRUM],_USD_ADDRESS[ChainId.AVALANCHE]=USDC_ADDRESS[ChainId.AVALANCHE],_USD_ADDRESS[ChainId.MOONRIVER]=USDC_ADDRESS[ChainId.MOONRIVER],_USD_ADDRESS[ChainId.CELO]="0x765DE816845861e75A25fCA122bb6898B8B1282a",_USD_ADDRESS[ChainId.FUSE]=USDC_ADDRESS[ChainId.FUSE],_USD_ADDRESS);var FACTORY_ADDRESS$1=(_FACTORY_ADDRESS={},_FACTORY_ADDRESS[ChainId.MAINNET]="0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac",_FACTORY_ADDRESS[ChainId.ROPSTEN]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.RINKEBY]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.GÖRLI]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.KOVAN]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.FANTOM]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.FANTOM_TESTNET]="",_FACTORY_ADDRESS[ChainId.MATIC]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.MATIC_TESTNET]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.XDAI]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.BSC]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.BSC_TESTNET]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.ARBITRUM]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.ARBITRUM_TESTNET]="",_FACTORY_ADDRESS[ChainId.MOONBEAM_TESTNET]="0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5",_FACTORY_ADDRESS[ChainId.AVALANCHE]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.AVALANCHE_TESTNET]="0xd00ae08403B9bbb9124bB305C09058E32C39A48c",_FACTORY_ADDRESS[ChainId.HECO]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.HECO_TESTNET]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.HARMONY]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.HARMONY_TESTNET]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.OKEX]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.OKEX_TESTNET]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.CELO]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.PALM]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.PALM_TESTNET]="",_FACTORY_ADDRESS[ChainId.MOONRIVER]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS[ChainId.FUSE]="0x43eA90e2b786728520e4f930d2A71a477BF2737C",_FACTORY_ADDRESS[ChainId.TELOS]="0xc35DADB65012eC5796536bD9864eD8773aBc74C4",_FACTORY_ADDRESS);_ROUTER_ADDRESS={},_ROUTER_ADDRESS[ChainId.MAINNET]="0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F",_ROUTER_ADDRESS[ChainId.RINKEBY]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.ROPSTEN]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.GÖRLI]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.KOVAN]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.FANTOM]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.FANTOM_TESTNET]="",_ROUTER_ADDRESS[ChainId.MATIC]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.MATIC_TESTNET]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.XDAI]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.BSC]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.BSC_TESTNET]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.ARBITRUM]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.ARBITRUM_TESTNET]="",_ROUTER_ADDRESS[ChainId.MOONBEAM_TESTNET]="0xeB5c2BB5E83B51d83F3534Ae21E84336B8B376ef",_ROUTER_ADDRESS[ChainId.AVALANCHE]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.AVALANCHE_TESTNET]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.HECO]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.HECO_TESTNET]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.HARMONY]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.HARMONY_TESTNET]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.OKEX]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.OKEX_TESTNET]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.CELO]="0x1421bDe4B10e8dd459b3BCb598810B1337D56842",_ROUTER_ADDRESS[ChainId.PALM]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.PALM_TESTNET]="",_ROUTER_ADDRESS[ChainId.MOONRIVER]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS[ChainId.FUSE]="0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3",_ROUTER_ADDRESS[ChainId.TELOS]="0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",_ROUTER_ADDRESS;_SUSHI_ADDRESS={},_SUSHI_ADDRESS[ChainId.MAINNET]="0x6B3595068778DD592e39A122f4f5a5cF09C90fE2",_SUSHI_ADDRESS[ChainId.ROPSTEN]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_SUSHI_ADDRESS[ChainId.RINKEBY]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_SUSHI_ADDRESS[ChainId.GÖRLI]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_SUSHI_ADDRESS[ChainId.KOVAN]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_SUSHI_ADDRESS[ChainId.FANTOM]="0xae75A438b2E0cB8Bb01Ec1E1e376De11D44477CC",_SUSHI_ADDRESS[ChainId.MATIC]="0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a",_SUSHI_ADDRESS[ChainId.XDAI]="0x2995D1317DcD4f0aB89f4AE60F3f020A4F17C7CE",_SUSHI_ADDRESS[ChainId.BSC]="0x947950BcC74888a40Ffa2593C5798F11Fc9124C4",_SUSHI_ADDRESS[ChainId.ARBITRUM]="0xd4d42F0b6DEF4CE0383636770eF773390d85c61A",_SUSHI_ADDRESS[ChainId.AVALANCHE]="0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76",_SUSHI_ADDRESS[ChainId.HECO]="0x52E00B2dA5Bd7940fFe26B609A42F957f31118D5",_SUSHI_ADDRESS[ChainId.HARMONY]="0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A",_SUSHI_ADDRESS[ChainId.OKEX]="0x2218E0D5E0173769F5b4939a3aE423f7e5E4EAB7",_SUSHI_ADDRESS[ChainId.OKEX_TESTNET]="",_SUSHI_ADDRESS[ChainId.CELO]="0x29dFce9c22003A4999930382Fd00f9Fd6133Acd1",_SUSHI_ADDRESS[ChainId.PALM]="",_SUSHI_ADDRESS[ChainId.PALM_TESTNET]="",_SUSHI_ADDRESS[ChainId.MOONRIVER]="0xf390830DF829cf22c53c8840554B98eafC5dCBc2",_SUSHI_ADDRESS[ChainId.TELOS]="0x922D641a426DcFFaeF11680e5358F34d97d112E1",_SUSHI_ADDRESS[ChainId.FUSE]="0x90708b20ccC1eb95a4FA7C8b18Fd2C22a0Ff9E78",_SUSHI_ADDRESS;_MASTERCHEF_ADDRESS={},_MASTERCHEF_ADDRESS[ChainId.MAINNET]="0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd",_MASTERCHEF_ADDRESS[ChainId.ROPSTEN]="0x80C7DD17B01855a6D2347444a0FCC36136a314de",_MASTERCHEF_ADDRESS[ChainId.RINKEBY]="0x80C7DD17B01855a6D2347444a0FCC36136a314de",_MASTERCHEF_ADDRESS[ChainId.GÖRLI]="0x80C7DD17B01855a6D2347444a0FCC36136a314de",_MASTERCHEF_ADDRESS[ChainId.KOVAN]="0x80C7DD17B01855a6D2347444a0FCC36136a314de",_MASTERCHEF_ADDRESS;_BAR_ADDRESS={},_BAR_ADDRESS[ChainId.MAINNET]="0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272",_BAR_ADDRESS[ChainId.ROPSTEN]="0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c",_BAR_ADDRESS[ChainId.RINKEBY]="0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c",_BAR_ADDRESS[ChainId.GÖRLI]="0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c",_BAR_ADDRESS[ChainId.KOVAN]="0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c",_BAR_ADDRESS;_MAKER_ADDRESS={},_MAKER_ADDRESS[ChainId.MAINNET]="0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50",_MAKER_ADDRESS[ChainId.ROPSTEN]="0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa",_MAKER_ADDRESS[ChainId.RINKEBY]="0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa",_MAKER_ADDRESS[ChainId.GÖRLI]="0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa",_MAKER_ADDRESS[ChainId.KOVAN]="0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa",_MAKER_ADDRESS;_TIMELOCK_ADDRESS={},_TIMELOCK_ADDRESS[ChainId.MAINNET]="0x9a8541Ddf3a932a9A922B607e9CF7301f1d47bD1",_TIMELOCK_ADDRESS;_BENTOBOX_ADDRESS={},_BENTOBOX_ADDRESS[ChainId.MAINNET]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.ROPSTEN]="0x6BdD85290001C8Aef74f35A7606065FA15aD5ACF",_BENTOBOX_ADDRESS[ChainId.RINKEBY]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.GÖRLI]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.KOVAN]="0x9A0D9920D92c178a58D99B455898Df2df22A2eE4",_BENTOBOX_ADDRESS[ChainId.FANTOM]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.MATIC]="0x0319000133d3AdA02600f0875d2cf03D442C3367",_BENTOBOX_ADDRESS[ChainId.MATIC_TESTNET]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.XDAI]="0xE2d7F5dd869Fc7c126D21b13a9080e75a4bDb324",_BENTOBOX_ADDRESS[ChainId.BSC]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.BSC_TESTNET]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.ARBITRUM]="0x74c764D41B77DBbb4fe771daB1939B00b146894A",_BENTOBOX_ADDRESS[ChainId.AVALANCHE]="0x0711B6026068f736bae6B213031fCE978D48E026",_BENTOBOX_ADDRESS[ChainId.HECO]="0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",_BENTOBOX_ADDRESS[ChainId.CELO]="0x0711B6026068f736bae6B213031fCE978D48E026",_BENTOBOX_ADDRESS[ChainId.HARMONY]="0xA28cfF72b04f83A7E3f912e6ad34d5537708a2C2",_BENTOBOX_ADDRESS;_KASHI_ADDRESS={},_KASHI_ADDRESS[ChainId.MAINNET]="0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42",_KASHI_ADDRESS[ChainId.KOVAN]="0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42",_KASHI_ADDRESS[ChainId.MATIC]="0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7",_KASHI_ADDRESS[ChainId.XDAI]="0x7a6DA9903d0a481F40b8336c1463487BC8C0407e",_KASHI_ADDRESS[ChainId.BSC]="0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42",_KASHI_ADDRESS[ChainId.ARBITRUM]="0xa010eE0226cd071BeBd8919A1F675cAE1f1f5D3e",_KASHI_ADDRESS[ChainId.AVALANCHE]="0x513037395FA0C9c35E41f89189ceDfE3bD42fAdb",_KASHI_ADDRESS[ChainId.AVALANCHE_TESTNET]="",_KASHI_ADDRESS[ChainId.HECO]="0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42",_KASHI_ADDRESS;_SUSHISWAP_SWAPPER_AD={},_SUSHISWAP_SWAPPER_AD[ChainId.MAINNET]="0x1766733112408b95239aD1951925567CB1203084",_SUSHISWAP_SWAPPER_AD[ChainId.MATIC]="0xe9589382130Ded5DF2397E2fD7A3E9b41DD2701D",_SUSHISWAP_SWAPPER_AD[ChainId.XDAI]="0xE02BDb31C353CE95A1D74F81C93eEa70Bf7371B9",_SUSHISWAP_SWAPPER_AD[ChainId.BSC]="0x1766733112408b95239aD1951925567CB1203084",_SUSHISWAP_SWAPPER_AD[ChainId.ARBITRUM]="0x0bFcD5dD76218bF9e3BE8A1055f9e6D27E5745eb",_SUSHISWAP_SWAPPER_AD[ChainId.AVALANCHE]="0x062eee8B38ab5E8ee3bc58CE505939db53E63785",_SUSHISWAP_SWAPPER_AD[ChainId.HECO]="0x1766733112408b95239aD1951925567CB1203084",_SUSHISWAP_SWAPPER_AD;_SUSHISWAP_MULTISWAPP={},_SUSHISWAP_MULTISWAPP[ChainId.MAINNET]="0x545820d5Cc05248da112419fEfb18522c63C8e12",_SUSHISWAP_MULTISWAPP[ChainId.KOVAN]="0xc0c1649b2c67f1a9f5ff1dd618188165e2555bcf",_SUSHISWAP_MULTISWAPP[ChainId.MATIC]="0x73BE093B84c773fe8eE0f76DDc0829E45c215415",_SUSHISWAP_MULTISWAPP[ChainId.XDAI]="0x735f0FbEb3b6389986BcaAf073Af07D2F8be2b93",_SUSHISWAP_MULTISWAPP[ChainId.BSC]="0x86c655cAc122e9A2fd9Ae1f79Df27b30E357968c",_SUSHISWAP_MULTISWAPP[ChainId.ARBITRUM]="0xbe7D5968296843756109D42946D01195320922EF",_SUSHISWAP_MULTISWAPP[ChainId.AVALANCHE]="0xB7C8b5BFcd7212f034Be42a2aAb08b8773B76920",_SUSHISWAP_MULTISWAPP;_SUSHISWAP_MULTI_EXAC={},_SUSHISWAP_MULTI_EXAC[ChainId.MAINNET]="0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7",_SUSHISWAP_MULTI_EXAC[ChainId.KOVAN]="0x75AE0Aa596D39b20addC921DeB5EE3c96279dABE",_SUSHISWAP_MULTI_EXAC[ChainId.MATIC]="0xDB6C4EDd9545d3b815dA85E6429B699c418886f9",_SUSHISWAP_MULTI_EXAC[ChainId.XDAI]="0x07b6e34EeCF38B02e83b6B4702699717e298967E",_SUSHISWAP_MULTI_EXAC[ChainId.BSC]="0x1B16149Edaf1EFa6ADE6aEEF33e63C6e08c9bB1B",_SUSHISWAP_MULTI_EXAC[ChainId.ARBITRUM]="0x860D841bfD1cfEf72A14B2b734005799F07dC7ED",_SUSHISWAP_MULTI_EXAC[ChainId.AVALANCHE]="0x2c46217Fae90D302d1Fb5467ADA504bC2A84f448",_SUSHISWAP_MULTI_EXAC;_CHAINLINK_ORACLE_ADD={},_CHAINLINK_ORACLE_ADD[ChainId.MAINNET]="0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB",_CHAINLINK_ORACLE_ADD[ChainId.MATIC]="0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB",_CHAINLINK_ORACLE_ADD[ChainId.XDAI]="0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB",_CHAINLINK_ORACLE_ADD[ChainId.BSC]="0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB",_CHAINLINK_ORACLE_ADD[ChainId.ARBITRUM]="0xB2B5C26B6868be10fF77e4E233fD231ceB90162a",_CHAINLINK_ORACLE_ADD[ChainId.AVALANCHE]="0x43198B6fA5d89B88D2E072fA4841724571De5A59",_CHAINLINK_ORACLE_ADD;_BORING_HELPER_ADDRES={},_BORING_HELPER_ADDRES[ChainId.MAINNET]="0x11Ca5375AdAfd6205E41131A4409f182677996E6",_BORING_HELPER_ADDRES[ChainId.KOVAN]="0x11Ca5375AdAfd6205E41131A4409f182677996E6",_BORING_HELPER_ADDRES[ChainId.MATIC]="0xA77a7fD5a16237B85E0FAd02C51f459D18AE93Cd",_BORING_HELPER_ADDRES[ChainId.XDAI]="0x97e4a0fb71243A83A6FbaEF7Cf73617594e4cF2F",_BORING_HELPER_ADDRES[ChainId.BSC]="0x11Ca5375AdAfd6205E41131A4409f182677996E6",_BORING_HELPER_ADDRES[ChainId.ARBITRUM]="0x9AF28d4f7Fa007686958c306BD4c8c52c2b615b8",_BORING_HELPER_ADDRES[ChainId.AVALANCHE]="0xD18cA07a599bf5eBb9B7327871ad682F0b660748",_BORING_HELPER_ADDRES[ChainId.HECO]="0x11Ca5375AdAfd6205E41131A4409f182677996E6",_BORING_HELPER_ADDRES;_STOP_LIMIT_ORDER_ADD={},_STOP_LIMIT_ORDER_ADD[ChainId.KOVAN]="0xce9365dB1C99897f04B3923C03ba9a5f80E8DB87",_STOP_LIMIT_ORDER_ADD[ChainId.MATIC]="0x1aDb3Bd86bb01797667eC382a0BC6A9854b4005f",_STOP_LIMIT_ORDER_ADD;_ARCHER_ROUTER_ADDRES={},_ARCHER_ROUTER_ADDRES[ChainId.MAINNET]="0x9917C083FF9FbD29Df1367FBF7F2388A9a202431",_ARCHER_ROUTER_ADDRES;_MINICHEF_ADDRESS={},_MINICHEF_ADDRESS[ChainId.MATIC]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_MINICHEF_ADDRESS[ChainId.XDAI]="0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3",_MINICHEF_ADDRESS[ChainId.HARMONY]="0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287",_MINICHEF_ADDRESS[ChainId.ARBITRUM]="0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3",_MINICHEF_ADDRESS[ChainId.CELO]="0x8084936982D089130e001b470eDf58faCA445008",_MINICHEF_ADDRESS[ChainId.MOONRIVER]="0x3dB01570D97631f69bbb0ba39796865456Cf89A5",_MINICHEF_ADDRESS[ChainId.FUSE]="0x182CD0C6F1FaEc0aED2eA83cd0e160c8Bd4cb063",_MINICHEF_ADDRESS;_OLD_FARMS={},_OLD_FARMS[ChainId.CELO]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_OLD_FARMS;var WETH9_ADDRESS=(_WETH9_ADDRESS={},_WETH9_ADDRESS[ChainId.MAINNET]="0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",_WETH9_ADDRESS[ChainId.ROPSTEN]="0xc778417E063141139Fce010982780140Aa0cD5Ab",_WETH9_ADDRESS[ChainId.RINKEBY]="0xc778417E063141139Fce010982780140Aa0cD5Ab",_WETH9_ADDRESS[ChainId.GÖRLI]="0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",_WETH9_ADDRESS[ChainId.KOVAN]="0xd0A1E359811322d97991E03f863a0C30C2cF029C",_WETH9_ADDRESS[ChainId.ARBITRUM]="0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",_WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET]="0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b",_WETH9_ADDRESS[ChainId.BSC]="0x2170Ed0880ac9A755fd29B2688956BD959F933F8",_WETH9_ADDRESS[ChainId.FANTOM]="0x74b23882a30290451A17c44f4F05243b6b58C76d",_WETH9_ADDRESS[ChainId.MATIC]="0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619",_WETH9_ADDRESS[ChainId.OKEX]="0x2170Ed0880ac9A755fd29B2688956BD959F933F8",_WETH9_ADDRESS[ChainId.HECO]="0x64FF637fB478863B7468bc97D30a5bF3A428a1fD",_WETH9_ADDRESS[ChainId.HARMONY]="0x6983D1E6DEf3690C4d616b13597A09e6193EA013",_WETH9_ADDRESS[ChainId.XDAI]="0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1",_WETH9_ADDRESS[ChainId.AVALANCHE]="0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15",_WETH9_ADDRESS);var WNATIVE_ADDRESS=(_WNATIVE_ADDRESS={},_WNATIVE_ADDRESS[ChainId.MAINNET]=WETH9_ADDRESS[ChainId.MAINNET],_WNATIVE_ADDRESS[ChainId.ROPSTEN]=WETH9_ADDRESS[ChainId.ROPSTEN],_WNATIVE_ADDRESS[ChainId.RINKEBY]=WETH9_ADDRESS[ChainId.RINKEBY],_WNATIVE_ADDRESS[ChainId.GÖRLI]=WETH9_ADDRESS[ChainId.GÖRLI],_WNATIVE_ADDRESS[ChainId.KOVAN]=WETH9_ADDRESS[ChainId.KOVAN],_WNATIVE_ADDRESS[ChainId.ARBITRUM]=WETH9_ADDRESS[ChainId.ARBITRUM],_WNATIVE_ADDRESS[ChainId.ARBITRUM_TESTNET]=WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],_WNATIVE_ADDRESS[ChainId.FANTOM]="0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",_WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET]="0xf1277d1Ed8AD466beddF92ef448A132661956621",_WNATIVE_ADDRESS[ChainId.MATIC]="0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",_WNATIVE_ADDRESS[ChainId.MATIC_TESTNET]="0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",_WNATIVE_ADDRESS[ChainId.XDAI]="0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d",_WNATIVE_ADDRESS[ChainId.BSC]="0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",_WNATIVE_ADDRESS[ChainId.BSC_TESTNET]="0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd",_WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET]="0xe73763DB808ecCDC0E36bC8E32510ED126910394",_WNATIVE_ADDRESS[ChainId.AVALANCHE]="0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",_WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET]="0xd00ae08403B9bbb9124bB305C09058E32C39A48c",_WNATIVE_ADDRESS[ChainId.HECO]="0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F",_WNATIVE_ADDRESS[ChainId.HECO_TESTNET]="0x5B2DA6F42CA09C77D577a12BeaD0446148830687",_WNATIVE_ADDRESS[ChainId.HARMONY]="0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a",_WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET]="0x7a2afac38517d512E55C0bCe3b6805c10a04D60F",_WNATIVE_ADDRESS[ChainId.OKEX]="0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15",_WNATIVE_ADDRESS[ChainId.OKEX_TESTNET]="0x2219845942d28716c0F7C605765fABDcA1a7d9E0",_WNATIVE_ADDRESS[ChainId.CELO]="0x471EcE3750Da237f93B8E339c536989b8978a438",_WNATIVE_ADDRESS[ChainId.PALM]="0xF98cABF0a963452C5536330408B2590567611a71",_WNATIVE_ADDRESS[ChainId.MOONRIVER]="0xf50225a84382c74CbdeA10b0c176f71fc3DE0C4d",_WNATIVE_ADDRESS[ChainId.FUSE]="0x0BE9e53fd7EDaC9F859882AfdDa116645287C629",_WNATIVE_ADDRESS[ChainId.TELOS]="0xD102cE6A4dB07D247fcc28F366A623Df0938CA9E",_WNATIVE_ADDRESS);_MASTERCHEF_V2_ADDRES={},_MASTERCHEF_V2_ADDRES[ChainId.MAINNET]="0xEF0881eC094552b2e128Cf945EF17a6752B4Ec5d",_MASTERCHEF_V2_ADDRES;_ENS_REGISTRAR_ADDRES={},_ENS_REGISTRAR_ADDRES[ChainId.MAINNET]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_ENS_REGISTRAR_ADDRES[ChainId.GÖRLI]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_ENS_REGISTRAR_ADDRES[ChainId.ROPSTEN]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_ENS_REGISTRAR_ADDRES[ChainId.RINKEBY]="0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",_ENS_REGISTRAR_ADDRES;_ZAPPER_ADDRESS={},_ZAPPER_ADDRESS[ChainId.MAINNET]="0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2",_ZAPPER_ADDRESS[ChainId.ROPSTEN]="0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2",_ZAPPER_ADDRESS;_MERKLE_DISTRIBUTOR_A={},_MERKLE_DISTRIBUTOR_A[ChainId.MAINNET]="0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982",_MERKLE_DISTRIBUTOR_A[ChainId.ROPSTEN]="0x84d1f7202e0e7dac211617017ca72a2cb5e2b955",_MERKLE_DISTRIBUTOR_A;_MULTICALL2_ADDRESS={},_MULTICALL2_ADDRESS[ChainId.MAINNET]="0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",_MULTICALL2_ADDRESS[ChainId.ROPSTEN]="0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",_MULTICALL2_ADDRESS[ChainId.RINKEBY]="0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",_MULTICALL2_ADDRESS[ChainId.GÖRLI]="0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",_MULTICALL2_ADDRESS[ChainId.KOVAN]="0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",_MULTICALL2_ADDRESS[ChainId.ARBITRUM]="0x80C7DD17B01855a6D2347444a0FCC36136a314de",_MULTICALL2_ADDRESS[ChainId.ARBITRUM_TESTNET]="0xa501c031958F579dB7676fF1CE78AD305794d579",_MULTICALL2_ADDRESS[ChainId.CELO]="0x9aac9048fC8139667D6a2597B902865bfdc225d3",_MULTICALL2_ADDRESS[ChainId.FANTOM]="0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5",_MULTICALL2_ADDRESS[ChainId.MATIC]="0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD",_MULTICALL2_ADDRESS[ChainId.MATIC_TESTNET]="0xc1400d49baa8e307B4462cD46E0a20109D25F50f",_MULTICALL2_ADDRESS[ChainId.XDAI]="0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287",_MULTICALL2_ADDRESS[ChainId.BSC]="0xa9193376D09C7f31283C54e56D013fCF370Cd9D9",_MULTICALL2_ADDRESS[ChainId.AVALANCHE]="0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3",_MULTICALL2_ADDRESS[ChainId.HECO]="0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3",_MULTICALL2_ADDRESS[ChainId.HARMONY]="0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3",_MULTICALL2_ADDRESS[ChainId.OKEX]="0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3",_MULTICALL2_ADDRESS[ChainId.PALM]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_MULTICALL2_ADDRESS[ChainId.MOONRIVER]="0x270f2F35bED92B7A59eA5F08F6B3fd34c8D9D9b5",_MULTICALL2_ADDRESS[ChainId.FUSE]="0x0769fd68dFb93167989C6f7254cd0D766Fb2841F",_MULTICALL2_ADDRESS[ChainId.TELOS]="0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3",_MULTICALL2_ADDRESS;function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o};return _setPrototypeOf(o,p)}var AbstractCurrency=function(){function AbstractCurrency(chainId,decimals,symbol,name){!Number.isSafeInteger(chainId)?process.env.NODE_ENV!=="production"?invariant(false,"CHAIN_ID"):invariant(false):void 0;!(decimals>=0&&decimals<255&&Number.isInteger(decimals))?process.env.NODE_ENV!=="production"?invariant(false,"DECIMALS"):invariant(false):void 0;this.chainId=chainId;this.decimals=decimals;this.symbol=symbol;this.name=name}var _proto=AbstractCurrency.prototype;_proto.serialize=function serialize(){return this.wrapped.address};return AbstractCurrency}();var NativeCurrency=function(_AbstractCurrency){_inheritsLoose(NativeCurrency,_AbstractCurrency);function NativeCurrency(){var _this;_this=_AbstractCurrency.apply(this,arguments)||this;_this.isNative=true;_this.isToken=false;return _this}return NativeCurrency}(AbstractCurrency);function validateAndParseAddress(address){try{var checksummedAddress=getAddress$1(address);process.env.NODE_ENV!=="production"?warning(address===checksummedAddress,address+" is not checksummed."):void 0;return checksummedAddress}catch(error){process.env.NODE_ENV!=="production"?invariant(false,address+" is not a valid address."):invariant(false)}}var Token=function(_AbstractCurrency){_inheritsLoose(Token,_AbstractCurrency);function Token(chainId,address,decimals,symbol,name){var _this;_this=_AbstractCurrency.call(this,chainId,decimals,symbol,name)||this;_this.isNative=false;_this.isToken=true;_this.chainId=chainId;_this.address=validateAndParseAddress(address);return _this}var _proto=Token.prototype;_proto.equals=function equals(other){return other.isToken&&this.chainId===other.chainId&&this.address===other.address};_proto.sortsBefore=function sortsBefore(other){!(this.chainId===other.chainId)?process.env.NODE_ENV!=="production"?invariant(false,"CHAIN_IDS"):invariant(false):void 0;!(this.address!==other.address)?process.env.NODE_ENV!=="production"?invariant(false,"ADDRESSES"):invariant(false):void 0;return this.address.toLowerCase()<other.address.toLowerCase()};_createClass(Token,[{key:"wrapped",get:function get(){return this}}]);return Token}(AbstractCurrency);var _USDC,_extends2,_WETH,_WNATIVE;var USDC=(_USDC={},_USDC[ChainId.MAINNET]=new Token(ChainId.MAINNET,USDC_ADDRESS[ChainId.MAINNET],6,"USDC","USD Coin"),_USDC[ChainId.ROPSTEN]=new Token(ChainId.ROPSTEN,USDC_ADDRESS[ChainId.ROPSTEN],6,"USDC","USD Coin"),_USDC[ChainId.KOVAN]=new Token(ChainId.KOVAN,USDC_ADDRESS[ChainId.KOVAN],6,"USDC","USD Coin"),_USDC[ChainId.MATIC]=new Token(ChainId.MATIC,USDC_ADDRESS[ChainId.MATIC],6,"USDC","USD Coin"),_USDC[ChainId.FANTOM]=new Token(ChainId.FANTOM,USDC_ADDRESS[ChainId.FANTOM],6,"USDC","USD Coin"),_USDC[ChainId.BSC]=new Token(ChainId.BSC,USDC_ADDRESS[ChainId.BSC],18,"USDC","USD Coin"),_USDC[ChainId.HARMONY]=new Token(ChainId.HARMONY,USDC_ADDRESS[ChainId.HARMONY],6,"USDC","USD Coin"),_USDC[ChainId.HECO]=new Token(ChainId.HECO,USDC_ADDRESS[ChainId.HECO],6,"USDC","USD Coin"),_USDC[ChainId.OKEX]=new Token(ChainId.OKEX,USDC_ADDRESS[ChainId.OKEX],18,"USDC","USD Coin"),_USDC[ChainId.XDAI]=new Token(ChainId.XDAI,USDC_ADDRESS[ChainId.XDAI],6,"USDC","USD Coin"),_USDC[ChainId.ARBITRUM]=new Token(ChainId.ARBITRUM,USDC_ADDRESS[ChainId.ARBITRUM],6,"USDC","USD Coin"),_USDC[ChainId.MOONRIVER]=new Token(ChainId.MOONRIVER,USDC_ADDRESS[ChainId.MOONRIVER],6,"USDC","USD Coin"),_USDC[ChainId.FUSE]=new Token(ChainId.FUSE,USDC_ADDRESS[ChainId.FUSE],6,"USDC","USD Coin"),_USDC);_extends({},USDC,(_extends2={},_extends2[ChainId.CELO]=new Token(ChainId.CELO,USD_ADDRESS[ChainId.CELO],18,"cUSD","Celo Dollar"),_extends2));var WETH9=(_WETH={},_WETH[ChainId.MAINNET]=new Token(ChainId.MAINNET,WETH9_ADDRESS[ChainId.MAINNET],18,"WETH","Wrapped Ether"),_WETH[ChainId.ROPSTEN]=new Token(ChainId.ROPSTEN,WETH9_ADDRESS[ChainId.ROPSTEN],18,"WETH","Wrapped Ether"),_WETH[ChainId.RINKEBY]=new Token(ChainId.RINKEBY,WETH9_ADDRESS[ChainId.RINKEBY],18,"WETH","Wrapped Ether"),_WETH[ChainId.GÖRLI]=new Token(ChainId.GÖRLI,WETH9_ADDRESS[ChainId.GÖRLI],18,"WETH","Wrapped Ether"),_WETH[ChainId.KOVAN]=new Token(ChainId.KOVAN,WETH9_ADDRESS[ChainId.KOVAN],18,"WETH","Wrapped Ether"),_WETH[ChainId.ARBITRUM]=new Token(ChainId.ARBITRUM,WETH9_ADDRESS[ChainId.ARBITRUM],18,"WETH","Wrapped Ether"),_WETH[ChainId.ARBITRUM_TESTNET]=new Token(ChainId.ARBITRUM_TESTNET,WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],18,"WETH","Wrapped Ether"),_WETH[ChainId.BSC]=new Token(ChainId.BSC,WETH9_ADDRESS[ChainId.BSC],18,"WETH","Wrapped Ether"),_WETH[ChainId.FANTOM]=new Token(ChainId.FANTOM,WETH9_ADDRESS[ChainId.FANTOM],18,"WETH","Wrapped Ether"),_WETH[ChainId.MATIC]=new Token(ChainId.MATIC,WETH9_ADDRESS[ChainId.MATIC],18,"WETH","Wrapped Ether"),_WETH[ChainId.OKEX]=new Token(ChainId.OKEX,WETH9_ADDRESS[ChainId.OKEX],18,"WETH","Wrapped Ether"),_WETH[ChainId.HECO]=new Token(ChainId.HECO,WETH9_ADDRESS[ChainId.HECO],18,"WETH","Wrapped Ether"),_WETH[ChainId.HARMONY]=new Token(ChainId.HARMONY,WETH9_ADDRESS[ChainId.HARMONY],18,"WETH","Wrapped Ether"),_WETH[ChainId.XDAI]=new Token(ChainId.XDAI,WETH9_ADDRESS[ChainId.XDAI],18,"WETH","Wrapped Ether"),_WETH[ChainId.AVALANCHE]=new Token(ChainId.AVALANCHE,WETH9_ADDRESS[ChainId.AVALANCHE],18,"WETH","Wrapped Ether"),_WETH);var WNATIVE=(_WNATIVE={},_WNATIVE[ChainId.MAINNET]=WETH9[ChainId.MAINNET],_WNATIVE[ChainId.ROPSTEN]=WETH9[ChainId.ROPSTEN],_WNATIVE[ChainId.RINKEBY]=WETH9[ChainId.RINKEBY],_WNATIVE[ChainId.GÖRLI]=WETH9[ChainId.GÖRLI],_WNATIVE[ChainId.KOVAN]=WETH9[ChainId.KOVAN],_WNATIVE[ChainId.FANTOM]=new Token(ChainId.FANTOM,WNATIVE_ADDRESS[ChainId.FANTOM],18,"WFTM","Wrapped FTM"),_WNATIVE[ChainId.FANTOM_TESTNET]=new Token(ChainId.FANTOM_TESTNET,WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],18,"FTM","Wrapped FTM"),_WNATIVE[ChainId.MATIC]=new Token(ChainId.MATIC,WNATIVE_ADDRESS[ChainId.MATIC],18,"WMATIC","Wrapped Matic"),_WNATIVE[ChainId.MATIC_TESTNET]=new Token(ChainId.MATIC_TESTNET,WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],18,"WMATIC","Wrapped Matic"),_WNATIVE[ChainId.XDAI]=new Token(ChainId.XDAI,WNATIVE_ADDRESS[ChainId.XDAI],18,"WXDAI","Wrapped xDai"),_WNATIVE[ChainId.BSC]=new Token(ChainId.BSC,WNATIVE_ADDRESS[ChainId.BSC],18,"WBNB","Wrapped BNB"),_WNATIVE[ChainId.BSC_TESTNET]=new Token(ChainId.BSC_TESTNET,WNATIVE_ADDRESS[ChainId.BSC_TESTNET],18,"WBNB","Wrapped BNB"),_WNATIVE[ChainId.ARBITRUM]=WETH9[ChainId.ARBITRUM],_WNATIVE[ChainId.ARBITRUM_TESTNET]=WETH9[ChainId.ARBITRUM_TESTNET],_WNATIVE[ChainId.MOONBEAM_TESTNET]=new Token(ChainId.MOONBEAM_TESTNET,WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],18,"WETH","Wrapped Ether"),_WNATIVE[ChainId.AVALANCHE]=new Token(ChainId.AVALANCHE,WNATIVE_ADDRESS[ChainId.AVALANCHE],18,"WAVAX","Wrapped AVAX"),_WNATIVE[ChainId.AVALANCHE_TESTNET]=new Token(ChainId.AVALANCHE_TESTNET,WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],18,"WAVAX","Wrapped AVAX"),_WNATIVE[ChainId.HECO]=new Token(ChainId.HECO,WNATIVE_ADDRESS[ChainId.HECO],18,"WHT","Wrapped HT"),_WNATIVE[ChainId.HECO_TESTNET]=new Token(ChainId.HECO_TESTNET,WNATIVE_ADDRESS[ChainId.HECO_TESTNET],18,"WHT","Wrapped HT"),_WNATIVE[ChainId.HARMONY]=new Token(ChainId.HARMONY,WNATIVE_ADDRESS[ChainId.HARMONY],18,"WONE","Wrapped ONE"),_WNATIVE[ChainId.HARMONY_TESTNET]=new Token(ChainId.HARMONY_TESTNET,WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],18,"WONE","Wrapped ONE"),_WNATIVE[ChainId.OKEX]=new Token(ChainId.OKEX,WNATIVE_ADDRESS[ChainId.OKEX],18,"WOKT","Wrapped OKExChain"),_WNATIVE[ChainId.OKEX_TESTNET]=new Token(ChainId.OKEX_TESTNET,WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],18,"WOKT","Wrapped OKExChain"),_WNATIVE[ChainId.CELO]=new Token(ChainId.CELO,WNATIVE_ADDRESS[ChainId.CELO],18,"CELO","Celo"),_WNATIVE[ChainId.PALM]=new Token(ChainId.PALM,WNATIVE_ADDRESS[ChainId.PALM],18,"WPALM","Wrapped Palm"),_WNATIVE[ChainId.MOONRIVER]=new Token(ChainId.MOONRIVER,WNATIVE_ADDRESS[ChainId.MOONRIVER],18,"WMOVR","Wrapped Moonriver"),_WNATIVE[ChainId.FUSE]=new Token(ChainId.FUSE,WNATIVE_ADDRESS[ChainId.FUSE],18,"WFUSE","Wrapped Fuse"),_WNATIVE[ChainId.TELOS]=new Token(ChainId.TELOS,WNATIVE_ADDRESS[ChainId.TELOS],18,"WTLOS","Wrapped Telos"),_WNATIVE);var Avalanche=function(_NativeCurrency){_inheritsLoose(Avalanche,_NativeCurrency);function Avalanche(chainId){return _NativeCurrency.call(this,chainId,18,"AVAX","Avalanche")||this}Avalanche.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Avalanche(chainId)};var _proto=Avalanche.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Avalanche,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Avalanche}(NativeCurrency);Avalanche._cache={};var Binance=function(_NativeCurrency){_inheritsLoose(Binance,_NativeCurrency);function Binance(chainId){return _NativeCurrency.call(this,chainId,18,"BNB","Binance Coin")||this}Binance.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Binance(chainId)};var _proto=Binance.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Binance,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Binance}(NativeCurrency);Binance._cache={};var Celo=function(_NativeCurrency){_inheritsLoose(Celo,_NativeCurrency);function Celo(chainId){return _NativeCurrency.call(this,chainId,18,"CELO","Celo")||this}Celo.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Celo(chainId)};var _proto=Celo.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Celo,[{key:"wrapped",get:function get(){var wcelo=WNATIVE[this.chainId];!!!wcelo?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wcelo}}]);return Celo}(NativeCurrency);Celo._cache={};var Ether=function(_NativeCurrency){_inheritsLoose(Ether,_NativeCurrency);function Ether(chainId){return _NativeCurrency.call(this,chainId,18,"ETH","Ether")||this}Ether.onChain=function onChain(chainId){var _this$_etherCache$cha;return(_this$_etherCache$cha=this._etherCache[chainId])!=null?_this$_etherCache$cha:this._etherCache[chainId]=new Ether(chainId)};var _proto=Ether.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Ether,[{key:"wrapped",get:function get(){var weth9=WETH9[this.chainId];!!!weth9?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return weth9}}]);return Ether}(NativeCurrency);Ether._etherCache={};var Fantom=function(_NativeCurrency){_inheritsLoose(Fantom,_NativeCurrency);function Fantom(chainId){return _NativeCurrency.call(this,chainId,18,"FTM","Fantom")||this}Fantom.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Fantom(chainId)};var _proto=Fantom.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Fantom,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Fantom}(NativeCurrency);Fantom._cache={};var Harmony=function(_NativeCurrency){_inheritsLoose(Harmony,_NativeCurrency);function Harmony(chainId){return _NativeCurrency.call(this,chainId,18,"ONE","Harmony")||this}Harmony.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Harmony(chainId)};var _proto=Harmony.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Harmony,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Harmony}(NativeCurrency);Harmony._cache={};var Heco=function(_NativeCurrency){_inheritsLoose(Heco,_NativeCurrency);function Heco(chainId){return _NativeCurrency.call(this,chainId,18,"HT","Huobi Token")||this}Heco.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Heco(chainId)};var _proto=Heco.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Heco,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Heco}(NativeCurrency);Heco._cache={};var Matic=function(_NativeCurrency){_inheritsLoose(Matic,_NativeCurrency);function Matic(chainId){return _NativeCurrency.call(this,chainId,18,"MATIC","Matic")||this}Matic.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Matic(chainId)};var _proto=Matic.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Matic,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Matic}(NativeCurrency);Matic._cache={};var Movr=function(_NativeCurrency){_inheritsLoose(Movr,_NativeCurrency);function Movr(chainId){return _NativeCurrency.call(this,chainId,18,"MOVR","Moonriver")||this}Movr.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Movr(chainId)};var _proto=Movr.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Movr,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Movr}(NativeCurrency);Movr._cache={};var Okex=function(_NativeCurrency){_inheritsLoose(Okex,_NativeCurrency);function Okex(chainId){return _NativeCurrency.call(this,chainId,18,"OKT","OKExChain")||this}Okex.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Okex(chainId)};var _proto=Okex.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Okex,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Okex}(NativeCurrency);Okex._cache={};var xDai=function(_NativeCurrency){_inheritsLoose(xDai,_NativeCurrency);function xDai(chainId){return _NativeCurrency.call(this,chainId,18,"XDAI","xDai")||this}xDai.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new xDai(chainId)};var _proto=xDai.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(xDai,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return xDai}(NativeCurrency);xDai._cache={};var Palm=function(_NativeCurrency){_inheritsLoose(Palm,_NativeCurrency);function Palm(chainId){return _NativeCurrency.call(this,chainId,18,"PALM","Palm")||this}Palm.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Palm(chainId)};var _proto=Palm.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Palm,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Palm}(NativeCurrency);Palm._cache={};var Fuse=function(_NativeCurrency){_inheritsLoose(Fuse,_NativeCurrency);function Fuse(chainId){return _NativeCurrency.call(this,chainId,18,"FUSE","Fuse")||this}Fuse.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Fuse(chainId)};var _proto=Fuse.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Fuse,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Fuse}(NativeCurrency);Fuse._cache={};var Telos=function(_NativeCurrency){_inheritsLoose(Telos,_NativeCurrency);function Telos(chainId){return _NativeCurrency.call(this,chainId,18,"TLOS","Telos")||this}Telos.onChain=function onChain(chainId){var _this$_cache$chainId;return(_this$_cache$chainId=this._cache[chainId])!=null?_this$_cache$chainId:this._cache[chainId]=new Telos(chainId)};var _proto=Telos.prototype;_proto.equals=function equals(other){return other.isNative&&other.chainId===this.chainId};_createClass(Telos,[{key:"wrapped",get:function get(){var wnative=WNATIVE[this.chainId];!!!wnative?process.env.NODE_ENV!=="production"?invariant(false,"WRAPPED"):invariant(false):void 0;return wnative}}]);return Telos}(NativeCurrency);Telos._cache={};var _NATIVE;_NATIVE={},_NATIVE[ChainId.MAINNET]=Ether.onChain(ChainId.MAINNET),_NATIVE[ChainId.ROPSTEN]=Ether.onChain(ChainId.ROPSTEN),_NATIVE[ChainId.RINKEBY]=Ether.onChain(ChainId.RINKEBY),_NATIVE[ChainId.GÖRLI]=Ether.onChain(ChainId.GÖRLI),_NATIVE[ChainId.KOVAN]=Ether.onChain(ChainId.KOVAN),_NATIVE[ChainId.FANTOM]=Fantom.onChain(ChainId.FANTOM),_NATIVE[ChainId.FANTOM_TESTNET]=Fantom.onChain(ChainId.FANTOM_TESTNET),_NATIVE[ChainId.MATIC]=Matic.onChain(ChainId.MATIC),_NATIVE[ChainId.MATIC_TESTNET]=Matic.onChain(ChainId.MATIC_TESTNET),_NATIVE[ChainId.XDAI]=xDai.onChain(ChainId.XDAI),_NATIVE[ChainId.BSC]=Binance.onChain(ChainId.BSC),_NATIVE[ChainId.BSC_TESTNET]=Binance.onChain(ChainId.BSC_TESTNET),_NATIVE[ChainId.ARBITRUM]=Ether.onChain(ChainId.ARBITRUM),_NATIVE[ChainId.AVALANCHE]=Avalanche.onChain(ChainId.AVALANCHE),_NATIVE[ChainId.AVALANCHE_TESTNET]=Avalanche.onChain(ChainId.AVALANCHE_TESTNET),_NATIVE[ChainId.HECO]=Heco.onChain(ChainId.HECO),_NATIVE[ChainId.HECO_TESTNET]=Heco.onChain(ChainId.HECO_TESTNET),_NATIVE[ChainId.HARMONY]=Harmony.onChain(ChainId.HARMONY),_NATIVE[ChainId.HARMONY_TESTNET]=Harmony.onChain(ChainId.HARMONY_TESTNET),_NATIVE[ChainId.OKEX]=Okex.onChain(ChainId.OKEX),_NATIVE[ChainId.OKEX_TESTNET]=Okex.onChain(ChainId.OKEX_TESTNET),_NATIVE[ChainId.CELO]=Celo.onChain(ChainId.CELO),_NATIVE[ChainId.PALM]=Palm.onChain(ChainId.PALM),_NATIVE[ChainId.MOONRIVER]=Movr.onChain(ChainId.MOONRIVER),_NATIVE[ChainId.FUSE]=Fuse.onChain(ChainId.FUSE),_NATIVE[ChainId.TELOS]=Telos.onChain(ChainId.TELOS),_NATIVE;var MaxUint256=JSBI.BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");var _INIT_CODE_HASH,_SOLIDITY_TYPE_MAXIMA;var INIT_CODE_HASH=(_INIT_CODE_HASH={},_INIT_CODE_HASH[ChainId.MAINNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.ROPSTEN]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.RINKEBY]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.GÖRLI]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.KOVAN]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.FANTOM]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.MATIC]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.MATIC_TESTNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.XDAI]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.BSC]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.BSC_TESTNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.ARBITRUM]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.MOONBEAM_TESTNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.AVALANCHE]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.AVALANCHE_TESTNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.HECO]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.HECO_TESTNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.HARMONY]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.HARMONY_TESTNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.OKEX]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.OKEX_TESTNET]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.CELO]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.PALM]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.MOONRIVER]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH[ChainId.FUSE]="0x1901958ef8b470f2c0a3875a79ee0bd303866d85102c0f1ea820d317024d50b5",_INIT_CODE_HASH[ChainId.TELOS]="0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303",_INIT_CODE_HASH);var SolidityType;(function(SolidityType){SolidityType["uint8"]="uint8";SolidityType["uint256"]="uint256"})(SolidityType||(SolidityType={}));_SOLIDITY_TYPE_MAXIMA={},_SOLIDITY_TYPE_MAXIMA[SolidityType.uint8]=JSBI.BigInt("0xff"),_SOLIDITY_TYPE_MAXIMA[SolidityType.uint256]=JSBI.BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),_SOLIDITY_TYPE_MAXIMA;var _toSignificantRoundin,_toFixedRounding;var Decimal$1=toFormat(_Decimal);var Big=toFormat(Big$2);Big.strict=true;var toSignificantRounding=(_toSignificantRoundin={},_toSignificantRoundin[Rounding.ROUND_DOWN]=Decimal$1.ROUND_DOWN,_toSignificantRoundin[Rounding.ROUND_HALF_UP]=Decimal$1.ROUND_HALF_UP,_toSignificantRoundin[Rounding.ROUND_UP]=Decimal$1.ROUND_UP,_toSignificantRoundin);var toFixedRounding=(_toFixedRounding={},_toFixedRounding[Rounding.ROUND_DOWN]=0,_toFixedRounding[Rounding.ROUND_HALF_UP]=1,_toFixedRounding[Rounding.ROUND_UP]=3,_toFixedRounding);var Fraction=function(){function Fraction(numerator,denominator){if(denominator===void 0){denominator=JSBI.BigInt(1)}this.numerator=JSBI.BigInt(numerator);this.denominator=JSBI.BigInt(denominator)}Fraction.tryParseFraction=function tryParseFraction(fractionish){if(fractionish instanceof JSBI||typeof fractionish==="number"||typeof fractionish==="string")return new Fraction(fractionish);if("numerator"in fractionish&&"denominator"in fractionish)return fractionish;throw new Error("Could not parse fraction")};var _proto=Fraction.prototype;_proto.invert=function invert(){return new Fraction(this.denominator,this.numerator)};_proto.add=function add(other){var otherParsed=Fraction.tryParseFraction(other);if(JSBI.equal(this.denominator,otherParsed.denominator)){return new Fraction(JSBI.add(this.numerator,otherParsed.numerator),this.denominator)}return new Fraction(JSBI.add(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator)),JSBI.multiply(this.denominator,otherParsed.denominator))};_proto.subtract=function subtract(other){var otherParsed=Fraction.tryParseFraction(other);if(JSBI.equal(this.denominator,otherParsed.denominator)){return new Fraction(JSBI.subtract(this.numerator,otherParsed.numerator),this.denominator)}return new Fraction(JSBI.subtract(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator)),JSBI.multiply(this.denominator,otherParsed.denominator))};_proto.lessThan=function lessThan(other){var otherParsed=Fraction.tryParseFraction(other);return JSBI.lessThan(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator))};_proto.equalTo=function equalTo(other){var otherParsed=Fraction.tryParseFraction(other);return JSBI.equal(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator))};_proto.greaterThan=function greaterThan(other){var otherParsed=Fraction.tryParseFraction(other);return JSBI.greaterThan(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(otherParsed.numerator,this.denominator))};_proto.multiply=function multiply(other){var otherParsed=Fraction.tryParseFraction(other);return new Fraction(JSBI.multiply(this.numerator,otherParsed.numerator),JSBI.multiply(this.denominator,otherParsed.denominator))};_proto.divide=function divide(other){var otherParsed=Fraction.tryParseFraction(other);return new Fraction(JSBI.multiply(this.numerator,otherParsed.denominator),JSBI.multiply(this.denominator,otherParsed.numerator))};_proto.toSignificant=function toSignificant(significantDigits,format,rounding){if(format===void 0){format={groupSeparator:""}}if(rounding===void 0){rounding=Rounding.ROUND_HALF_UP}!Number.isInteger(significantDigits)?process.env.NODE_ENV!=="production"?invariant(false,significantDigits+" is not an integer."):invariant(false):void 0;!(significantDigits>0)?process.env.NODE_ENV!=="production"?invariant(false,significantDigits+" is not positive."):invariant(false):void 0;Decimal$1.set({precision:significantDigits+1,rounding:toSignificantRounding[rounding]});var quotient=new Decimal$1(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);return quotient.toFormat(quotient.decimalPlaces(),format)};_proto.toFixed=function toFixed(decimalPlaces,format,rounding){if(format===void 0){format={groupSeparator:""}}if(rounding===void 0){rounding=Rounding.ROUND_HALF_UP}!Number.isInteger(decimalPlaces)?process.env.NODE_ENV!=="production"?invariant(false,decimalPlaces+" is not an integer."):invariant(false):void 0;!(decimalPlaces>=0)?process.env.NODE_ENV!=="production"?invariant(false,decimalPlaces+" is negative."):invariant(false):void 0;Big.DP=decimalPlaces;Big.RM=toFixedRounding[rounding];return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces,format)};_createClass(Fraction,[{key:"quotient",get:function get(){return JSBI.divide(this.numerator,this.denominator)}},{key:"remainder",get:function get(){return new Fraction(JSBI.remainder(this.numerator,this.denominator),this.denominator)}},{key:"asFraction",get:function get(){return new Fraction(this.numerator,this.denominator)}}]);return Fraction}();var Big$1=toFormat(Big$2);Big$1.strict=true;var CurrencyAmount$1=function(_Fraction){_inheritsLoose(CurrencyAmount,_Fraction);function CurrencyAmount(currency,numerator,denominator){var _this;_this=_Fraction.call(this,numerator,denominator)||this;!JSBI.lessThanOrEqual(_this.quotient,MaxUint256)?process.env.NODE_ENV!=="production"?invariant(false,"AMOUNT"):invariant(false):void 0;_this.currency=currency;_this.decimalScale=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(currency.decimals));return _this}CurrencyAmount.fromRawAmount=function fromRawAmount(currency,rawAmount){return new CurrencyAmount(currency,rawAmount)};CurrencyAmount.fromFractionalAmount=function fromFractionalAmount(currency,numerator,denominator){return new CurrencyAmount(currency,numerator,denominator)};var _proto=CurrencyAmount.prototype;_proto.add=function add(other){!this.currency.equals(other.currency)?process.env.NODE_ENV!=="production"?invariant(false,"CURRENCY"):invariant(false):void 0;var added=_Fraction.prototype.add.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,added.numerator,added.denominator)};_proto.subtract=function subtract(other){!this.currency.equals(other.currency)?process.env.NODE_ENV!=="production"?invariant(false,"CURRENCY"):invariant(false):void 0;var subtracted=_Fraction.prototype.subtract.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,subtracted.numerator,subtracted.denominator)};_proto.multiply=function multiply(other){var multiplied=_Fraction.prototype.multiply.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,multiplied.numerator,multiplied.denominator)};_proto.divide=function divide(other){var divided=_Fraction.prototype.divide.call(this,other);return CurrencyAmount.fromFractionalAmount(this.currency,divided.numerator,divided.denominator)};_proto.toSignificant=function toSignificant(significantDigits,format,rounding){if(significantDigits===void 0){significantDigits=6}if(rounding===void 0){rounding=Rounding.ROUND_DOWN}return _Fraction.prototype.divide.call(this,this.decimalScale).toSignificant(significantDigits,format,rounding)};_proto.toFixed=function toFixed(decimalPlaces,format,rounding){if(decimalPlaces===void 0){decimalPlaces=this.currency.decimals}if(rounding===void 0){rounding=Rounding.ROUND_DOWN}!(decimalPlaces<=this.currency.decimals)?process.env.NODE_ENV!=="production"?invariant(false,"DECIMALS"):invariant(false):void 0;return _Fraction.prototype.divide.call(this,this.decimalScale).toFixed(decimalPlaces,format,rounding)};_proto.toExact=function toExact(format){if(format===void 0){format={groupSeparator:""}}Big$1.DP=this.currency.decimals;return new Big$1(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)};_proto.serialize=function serialize(){return"["+this.currency.wrapped.address+" - "+this.toExact()+"]"};_createClass(CurrencyAmount,[{key:"wrapped",get:function get(){if(this.currency.isToken)return this;return CurrencyAmount.fromFractionalAmount(this.currency.wrapped,this.numerator,this.denominator)}}]);return CurrencyAmount}(Fraction);var ONE_HUNDRED=new Fraction(JSBI.BigInt(100));function toPercent$1(fraction){return new Percent(fraction.numerator,fraction.denominator)}var Percent=function(_Fraction){_inheritsLoose(Percent,_Fraction);function Percent(){var _this;_this=_Fraction.apply(this,arguments)||this;_this.isPercent=true;return _this}var _proto=Percent.prototype;_proto.add=function add(other){return toPercent$1(_Fraction.prototype.add.call(this,other))};_proto.subtract=function subtract(other){return toPercent$1(_Fraction.prototype.subtract.call(this,other))};_proto.multiply=function multiply(other){return toPercent$1(_Fraction.prototype.multiply.call(this,other))};_proto.divide=function divide(other){return toPercent$1(_Fraction.prototype.divide.call(this,other))};_proto.toSignificant=function toSignificant(significantDigits,format,rounding){if(significantDigits===void 0){significantDigits=5}return _Fraction.prototype.multiply.call(this,ONE_HUNDRED).toSignificant(significantDigits,format,rounding)};_proto.toFixed=function toFixed(decimalPlaces,format,rounding){if(decimalPlaces===void 0){decimalPlaces=2}return _Fraction.prototype.multiply.call(this,ONE_HUNDRED).toFixed(decimalPlaces,format,rounding)};return Percent}(Fraction);function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}createCommonjsModule(function(module){var runtime=function(exports){var Op=Object.prototype;var hasOwn=Op.hasOwnProperty;var undefined$1;var $Symbol=typeof Symbol==="function"?Symbol:{};var iteratorSymbol=$Symbol.iterator||"@@iterator";var asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator";var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});return obj[key]}try{define({},"")}catch(err){define=function(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator;var generator=Object.create(protoGenerator.prototype);var context=new Context(tryLocsList||[]);generator._invoke=makeInvokeMethod(innerFn,self,context);return generator}exports.wrap=wrap;function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}var GenStateSuspendedStart="suspendedStart";var GenStateSuspendedYield="suspendedYield";var GenStateExecuting="executing";var GenStateCompleted="completed";var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,function(){return this});var getProto=Object.getPrototypeOf;var NativeIteratorPrototype=getProto&&getProto(getProto(values([])));if(NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)){IteratorPrototype=NativeIteratorPrototype}var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);GeneratorFunction.prototype=GeneratorFunctionPrototype;define(Gp,"constructor",GeneratorFunctionPrototype);define(GeneratorFunctionPrototype,"constructor",GeneratorFunction);GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction");function defineIteratorMethods(prototype){["next","throw","return"].forEach(function(method){define(prototype,method,function(arg){return this._invoke(method,arg)})})}exports.isGeneratorFunction=function(genFun){var ctor=typeof genFun==="function"&&genFun.constructor;return ctor?ctor===GeneratorFunction||(ctor.displayName||ctor.name)==="GeneratorFunction":false};exports.mark=function(genFun){if(Object.setPrototypeOf){Object.setPrototypeOf(genFun,GeneratorFunctionPrototype)}else{genFun.__proto__=GeneratorFunctionPrototype;define(genFun,toStringTagSymbol,"GeneratorFunction")}genFun.prototype=Object.create(Gp);return genFun};exports.awrap=function(arg){return{__await:arg}};function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(record.type==="throw"){reject(record.arg)}else{var result=record.arg;var value=result.value;if(value&&typeof value==="object"&&hasOwn.call(value,"__await")){return PromiseImpl.resolve(value.__await).then(function(value){invoke("next",value,resolve,reject)},function(err){invoke("throw",err,resolve,reject)})}return PromiseImpl.resolve(value).then(function(unwrapped){result.value=unwrapped;resolve(result)},function(error){return invoke("throw",error,resolve,reject)})}}var previousPromise;function enqueue(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl(function(resolve,reject){invoke(method,arg,resolve,reject)})}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}this._invoke=enqueue}defineIteratorMethods(AsyncIterator.prototype);define(AsyncIterator.prototype,asyncIteratorSymbol,function(){return this});exports.AsyncIterator=AsyncIterator;exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){if(PromiseImpl===void 0)PromiseImpl=Promise;var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next()})};function makeInvokeMethod(innerFn,self,context){var state=GenStateSuspendedStart;return function invoke(method,arg){if(state===GenStateExecuting){throw new Error("Generator is already running")}if(state===GenStateCompleted){if(method==="throw"){throw arg}return doneResult()}context.method=method;context.arg=arg;while(true){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if(context.method==="next"){context.sent=context._sent=context.arg}else if(context.method==="throw"){if(state===GenStateSuspendedStart){state=GenStateCompleted;throw context.arg}context.dispatchException(context.arg)}else if(context.method==="return"){context.abrupt("return",context.arg)}state=GenStateExecuting;var record=tryCatch(innerFn,self,context);if(record.type==="normal"){state=context.done?GenStateCompleted:GenStateSuspendedYield;if(record.arg===ContinueSentinel){continue}return{value:record.arg,done:context.done}}else if(record.type==="throw"){state=GenStateCompleted;context.method="throw";context.arg=record.arg}}}}function maybeInvokeDelegate(delegate,context){var method=delegate.iterator[context.method];if(method===undefined$1){context.delegate=null;if(context.method==="throw"){if(delegate.iterator["return"]){context.method="return";context.arg=undefined$1;maybeInvokeDelegate(delegate,context);if(context.method==="throw"){return ContinueSentinel}}context.method="throw";context.arg=new TypeError("The iterator does not provide a 'throw' method")}return ContinueSentinel}var record=tryCatch(method,delegate.iterator,context.arg);if(record.type==="throw"){context.method="throw";context.arg=record.arg;context.delegate=null;return ContinueSentinel}var info=record.arg;if(!info){context.method="throw";context.arg=new TypeError("iterator result is not an object");context.delegate=null;return ContinueSentinel}if(info.done){context[delegate.resultName]=info.value;context.next=delegate.nextLoc;if(context.method!=="return"){context.method="next";context.arg=undefined$1}}else{return info}context.delegate=null;return ContinueSentinel}defineIteratorMethods(Gp);define(Gp,toStringTagSymbol,"Generator");define(Gp,iteratorSymbol,function(){return this});define(Gp,"toString",function(){return"[object Generator]"});function pushTryEntry(locs){var entry={tryLoc:locs[0]};if(1 in locs){entry.catchLoc=locs[1]}if(2 in locs){entry.finallyLoc=locs[2];entry.afterLoc=locs[3]}this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal";delete record.arg;entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}];tryLocsList.forEach(pushTryEntry,this);this.reset(true)}exports.keys=function(object){var keys=[];for(var key in object){keys.push(key)}keys.reverse();return function next(){while(keys.length){var key=keys.pop();if(key in object){next.value=key;next.done=false;return next}}next.done=true;return next}};function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod){return iteratorMethod.call(iterable)}if(typeof iterable.next==="function"){return iterable}if(!isNaN(iterable.length)){var i=-1,next=function next(){while(++i<iterable.length){if(hasOwn.call(iterable,i)){next.value=iterable[i];next.done=false;return next}}next.value=undefined$1;next.done=true;return next};return next.next=next}}return{next:doneResult}}exports.values=values;function doneResult(){return{value:undefined$1,done:true}}Context.prototype={constructor:Context,reset:function(skipTempReset){this.prev=0;this.next=0;this.sent=this._sent=undefined$1;this.done=false;this.delegate=null;this.method="next";this.arg=undefined$1;this.tryEntries.forEach(resetTryEntry);if(!skipTempReset){for(var name in this){if(name.charAt(0)==="t"&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))){this[name]=undefined$1}}}},stop:function(){this.done=true;var rootEntry=this.tryEntries[0];var rootRecord=rootEntry.completion;if(rootRecord.type==="throw"){throw rootRecord.arg}return this.rval},dispatchException:function(exception){if(this.done){throw exception}var context=this;function handle(loc,caught){record.type="throw";record.arg=exception;context.next=loc;if(caught){context.method="next";context.arg=undefined$1}return!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];var record=entry.completion;if(entry.tryLoc==="root"){return handle("end")}if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc");var hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true)}else if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc)}}else if(hasCatch){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true)}}else if(hasFinally){if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc)}}else{throw new Error("try statement without catch or finally")}}}},abrupt:function(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}if(finallyEntry&&(type==="break"||type==="continue")&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc){finallyEntry=null}var record=finallyEntry?finallyEntry.completion:{};record.type=type;record.arg=arg;if(finallyEntry){this.method="next";this.next=finallyEntry.finallyLoc;return ContinueSentinel}return this.complete(record)},complete:function(record,afterLoc){if(record.type==="throw"){throw record.arg}if(record.type==="break"||record.type==="continue"){this.next=record.arg}else if(record.type==="return"){this.rval=this.arg=record.arg;this.method="return";this.next="end"}else if(record.type==="normal"&&afterLoc){this.next=afterLoc}return ContinueSentinel},finish:function(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc){this.complete(entry.completion,entry.afterLoc);resetTryEntry(entry);return ContinueSentinel}}},catch:function(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(record.type==="throw"){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function(iterable,resultName,nextLoc){this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc};if(this.method==="next"){this.arg=undefined$1}return ContinueSentinel}};return exports}(module.exports);try{regeneratorRuntime=runtime}catch(accidentalStrictMode){if(typeof globalThis==="object"){globalThis.regeneratorRuntime=runtime}else{Function("r","regeneratorRuntime = r")(runtime)}}});var PoolType;(function(PoolType){PoolType["ConstantProduct"]="ConstantProduct";PoolType["Weighted"]="Weighted";PoolType["Hybrid"]="Hybrid";PoolType["ConcentratedLiquidity"]="ConcentratedLiquidity"})(PoolType||(PoolType={}));var RouteStatus;(function(RouteStatus){RouteStatus["Success"]="Success";RouteStatus["NoWay"]="NoWay";RouteStatus["Partial"]="Partial"})(RouteStatus||(RouteStatus={}));var isV3SingleInput=function(params){var _a;return(_a=params&&"params_tuple"in params&&"sqrtPriceLimitX96"in params["params_tuple"])!==null&&_a!==void 0?_a:false};var getMethodName=function(_a){var isExactInput=_a.isExactInput,isInputNative=_a.isInputNative,isOutputNative=_a.isOutputNative,protocol=_a.protocol,params=_a.params;if(protocol==="V2"){if(isExactInput){if(isInputNative){return"swapExactETHForTokens"}if(isOutputNative){return"swapExactTokensForETH"}return"swapExactTokensForTokens"}if(isInputNative){return"swapETHForExactTokens"}if(isOutputNative){return"swapTokensForExactETH"}return"swapTokensForExactTokens"}if(protocol==="V3"){if(isExactInput){if(isV3SingleInput(params)){return"exactInputSingle"}return"exactInput"}if(isV3SingleInput(params)){return"exactOutputSingle"}return"exactOutput"}throw new Error("Invalid protocol")};var params$3={input:{to:new FctAddress({destination:"sushiswap_router"}),methodParams:{tokenA:new FctAddress({destination:"erc20"}),tokenB:new FctAddress({destination:"erc20"}),amountADesired:new FctValue({destination:"wei_amount"}),amountBDesired:new FctValue({destination:"wei_amount"}),amountAMin:new FctValue({destination:"wei_amount"}),amountBMin:new FctValue({destination:"wei_amount"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({innerIndex:0}),amountB:new FctValue({innerIndex:1}),liquidity:new FctValue({innerIndex:2})}};var AddLiquidity$1=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"addLiquidity",description:"Add liquidity on Sushiswap",supportedContracts:ROUTER_ADDRESSES,getParams:function(){return params$3},initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){return[{to:params.methodParams.tokenA.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountADesired.value},method:"approve",protocol:"ERC20"},{to:params.methodParams.tokenB.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountBDesired.value},method:"approve",protocol:"ERC20"}]}});var params$2={input:{to:new FctAddress({destination:"sushiswap_router"}),value:new FctValue({destination:"wei_amount"}),methodParams:{token:new FctAddress({destination:"erc20"}),amountTokenDesired:new FctValue({destination:"wei_amount"}),amountTokenMin:new FctValue({destination:"wei_amount"}),amountETHMin:new FctValue({destination:"wei_amount"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({innerIndex:0,destination:"wei_amount"}),amountB:new FctValue({innerIndex:1,destination:"wei_amount"}),liquidity:new FctValue({innerIndex:2,destination:"wei_amount"})}};var AddLiquidityETH=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"addLiquidityETH",description:"Add liquidity on Sushiswap",supportedContracts:ROUTER_ADDRESSES,getParams:function(){return params$2},initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){return[{to:params===null||params===void 0?void 0:params.methodParams.token.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountTokenDesired.value},method:"approve",protocol:"ERC20"}]}});var params$1={input:{to:new FctAddress({destination:"sushiswap_router"}),methodParams:{token:new FctAddress({destination:"erc20"}),liquidity:new FctValue({destination:"wei_amount"}),amountTokenMin:new FctValue({destination:"wei_amount"}),amountETHMin:new FctValue({destination:"wei_amount"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({innerIndex:0,destination:"wei_amount"}),amountB:new FctValue({innerIndex:1,destination:"wei_amount"})}};var RemoveLiquidityETH=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"removeLiquidityETH",description:"Remove liquidity on Sushiswap",supportedContracts:ROUTER_ADDRESSES,getParams:function(){return params$1},initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params,chainId){var token0="0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2";var token1=params===null||params===void 0?void 0:params.methodParams.token.value;var getToken=function(){if(token1&&typeof token1==="string"){var pairAddress=getCreate2Address(FACTORY_ADDRESS$1[chainId],keccak256$2(["bytes"],[pack(["address","address"],token0<token1?[token0,token1]:[token1,token0])]),INIT_CODE_HASH[chainId]);return pairAddress}return undefined};return[{to:getToken(),params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.liquidity.value},method:"approve",protocol:"ERC20"}]}});var __assign$p=undefined&&undefined.__assign||function(){__assign$p=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$p.apply(this,arguments)};var SwapExactETHForTokens=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"swapExactETHForTokens",getParams:function(){return __assign$p(__assign$p({},swapExactEthForTokensParams),{to:new FctAddress({destination:"sushiswap_router"})})},supportedContracts:ROUTER_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}}});var __assign$o=undefined&&undefined.__assign||function(){__assign$o=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$o.apply(this,arguments)};var SwapExactTokensForETH=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"swapExactTokensForETH",getParams:function(){return __assign$o(__assign$o({},swapExactTokensForEthParams),{to:new FctAddress({destination:"sushiswap_router"})})},supportedContracts:ROUTER_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){var token=(params===null||params===void 0?void 0:params.methodParams.path.value)&&Array.isArray(params===null||params===void 0?void 0:params.methodParams.path.value)?params===null||params===void 0?void 0:params.methodParams.path.value[0]:undefined;return[{to:token,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountIn.value},method:"approve",protocol:"ERC20"}]}});var params={input:{to:new FctAddress({destination:"sushiswap_router"}),methodParams:{tokenA:new FctAddress({destination:"erc20"}),tokenB:new FctAddress({destination:"erc20"}),liquidity:new FctValue({destination:"wei_amount"}),amountAMin:new FctValue({destination:"wei_amount"}),amountBMin:new FctValue({destination:"wei_amount"}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountA:new FctValue({innerIndex:0,destination:"wei_amount"}),amountB:new FctValue({innerIndex:1,destination:"wei_amount"})}};var RemoveLiquidity=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"removeLiquidity",description:"Remove liquidity on Sushiswap",supportedContracts:ROUTER_ADDRESSES,getParams:function(){return params},initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params,chainId){var token0=params===null||params===void 0?void 0:params.methodParams.tokenA.value;var token1=params===null||params===void 0?void 0:params.methodParams.tokenB.value;var getToken=function(){if(token0&&typeof token0==="string"&&token1&&typeof token1==="string"){var pairAddress=getCreate2Address(FACTORY_ADDRESS$1[chainId],keccak256$2(["bytes"],[pack(["address","address"],token0<token1?[token0,token1]:[token1,token0])]),INIT_CODE_HASH[chainId]);return pairAddress}return undefined};return[{to:getToken(),params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.liquidity.value},method:"approve",protocol:"ERC20"}]}});var getToken$2=function(swapToken,chainId){switch(swapToken.address){case"0x0000000000000000000000000000000000000000":return Ether.onChain(chainId);case"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":return Ether.onChain(chainId);case"NATIVE":return Ether.onChain(chainId);default:return new Token(chainId,getAddress$2(swapToken.address),swapToken.decimals)}};var __assign$n=undefined&&undefined.__assign||function(){__assign$n=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$n.apply(this,arguments)};var SwapExactTokensForTokens=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"swapExactTokensForTokens",getParams:function(){return __assign$n(__assign$n({},swapExactTokensForTokensParams),{to:new FctAddress({destination:"sushiswap_router"})})},supportedContracts:ROUTER_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){var token=(params===null||params===void 0?void 0:params.methodParams.path.value)&&Array.isArray(params===null||params===void 0?void 0:params.methodParams.path.value)?params===null||params===void 0?void 0:params.methodParams.path.value[0]:undefined;return[{to:token,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountIn.value},method:"approve",protocol:"ERC20"}]}});var __awaiter$W=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$W=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __values$8=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var SimpleSwap$1=createPlugin$1({protocol:"SUSHISWAP",type:"ACTION",method:"simpleSwap",name:"swap",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{addressIn:new FctAddress({options:getAllCurrencies({chainId:chainId}),destination:"erc20"}),amountIn:new FctValue({destination:"wei_amount"}),decimalsIn:new FctDecimals({destination:"wei_amount"}),addressOut:new FctAddress({options:getAllCurrencies({chainId:chainId}),destination:"erc20"}),amountOut:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),decimalsOut:new FctDecimals({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List",options:getAllCurrencies({chainId:chainId})}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}}},getParamsOnCreate:function(_a){return __awaiter$W(void 0,[_a],void 0,function(_b){var _c,to,deadline,path,_d,addressIn,amountIn,decimalsIn,_e,addressOut,decimalsOut,amountOut,requiredParams,requiredParams_1,requiredParams_1_1,param,inputToken,outputToken,plugin_1,plugin_2,plugin;var e_1,_f;var chainId=_b.chainId,params=_b.params;return __generator$W(this,function(_g){_c=params.methodParams,to=_c.to,deadline=_c.deadline;path=params.methodParams.path;_d=params.methodParams,addressIn=_d.addressIn,amountIn=_d.amountIn,decimalsIn=_d.decimalsIn;_e=params.methodParams,addressOut=_e.addressOut,decimalsOut=_e.decimalsOut,amountOut=_e.amountOut;requiredParams=[{value:addressIn.value,key:"addressIn"},{value:decimalsIn.value,key:"decimalsIn"},{value:amountOut.value,key:"amountOut"},{value:decimalsOut.value,key:"decimalsOut"},{value:to.value,key:"to"}];try{for(requiredParams_1=__values$8(requiredParams),requiredParams_1_1=requiredParams_1.next();!requiredParams_1_1.done;requiredParams_1_1=requiredParams_1.next()){param=requiredParams_1_1.value;if(!param.value){console.error("wrong param ".concat(param.key,": ").concat(param.value));return[2]}if(typeof param.value!=="string"){console.error("wrong param ".concat(param.key,": should be a string"));return[2]}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(requiredParams_1_1&&!requiredParams_1_1.done&&(_f=requiredParams_1.return))_f.call(requiredParams_1)}finally{if(e_1)throw e_1.error}}if(!path.value){console.error("wrong param path: ".concat(path.value));return[2]}if(!Array.isArray(path.value)||typeof path.value[0]!=="string"){console.error("wrong param path: should be an array of strings");return[2]}if(!amountIn.value){console.error("wrong param amountIn: ".concat(amountIn.value));return[2]}inputToken=getToken$2({address:addressIn.value,decimals:Number(decimalsIn.value)},Number(chainId));outputToken=getToken$2({address:addressOut.value,decimals:Number(decimalsOut.value)},Number(chainId));if(inputToken.isNative){plugin_1=new SwapExactETHForTokens({chainId:chainId,initParams:{to:params.to.value,value:amountIn.value,methodParams:{amountOutMin:amountOut.value,path:path.value,to:to.value,deadline:deadline.value}}});return[2,{params:plugin_1.input.params,method:plugin_1.method,gasLimit:plugin_1.gasLimit}]}if(outputToken.isNative){plugin_2=new SwapExactTokensForETH({chainId:chainId,initParams:{to:params.to.value,methodParams:{amountIn:amountIn.value,amountOutMin:amountOut.value,path:path.value,to:to.value,deadline:deadline.value}}});return[2,{params:plugin_2.input.params,method:plugin_2.method,gasLimit:plugin_2.gasLimit}]}plugin=new SwapExactTokensForTokens({chainId:chainId,initParams:{to:params.to.value,methodParams:{amountIn:amountIn.value,amountOutMin:amountOut.value,path:path.value,to:to.value,deadline:deadline.value}}});return[2,{params:plugin.input.params,method:plugin.method,gasLimit:plugin.gasLimit}]})})},supportedContracts:ROUTER_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}}});var GetAmountsIn$1=createPlugin$1({protocol:"SUSHISWAP",type:"GETTER",method:"getAmountsIn",supportedContracts:ROUTER_ADDRESSES,getParams:function(){return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountOut:new FctValue({}),path:new FctAddressList({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}}}});var GetAmountsOut$1=createPlugin$1({protocol:"SUSHISWAP",type:"GETTER",method:"getAmountsOut",supportedContracts:ROUTER_ADDRESSES,getParams:function(){return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountIn:new FctValue({}),path:new FctAddressList({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}}}});var actions$n={SwapExactTokensForTokens:SwapExactTokensForTokens,SwapExactETHForTokens:SwapExactETHForTokens,SwapExactTokensForETH:SwapExactTokensForETH,SimpleSwap:SimpleSwap$1,AddLiquidity:AddLiquidity$1,RemoveLiquidity:RemoveLiquidity,AddLiquidityETH:AddLiquidityETH,RemoveLiquidityETH:RemoveLiquidityETH};var getters$l={GetAmountsOut:GetAmountsOut$1,GetAmountsIn:GetAmountsIn$1};var Sushiswap$1={actions:actions$n,getters:getters$l};var __extends$a=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __rest$5=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};var TradeState$1;(function(TradeState){TradeState[TradeState["LOADING"]=0]="LOADING";TradeState[TradeState["INVALID"]=1]="INVALID";TradeState[TradeState["NO_ROUTE_FOUND"]=2]="NO_ROUTE_FOUND";TradeState[TradeState["VALID"]=3]="VALID";TradeState[TradeState["SYNCING"]=4]="SYNCING"})(TradeState$1||(TradeState$1={}));(function(_super){__extends$a(InterfaceTrade,_super);function InterfaceTrade(_a){var _this=this;var gasUseEstimateUSD=_a.gasUseEstimateUSD,routes=__rest$5(_a,["gasUseEstimateUSD"]);_this=_super.call(this,routes)||this;_this.gasUseEstimateUSD=gasUseEstimateUSD;return _this}return InterfaceTrade})(Trade);var __awaiter$V=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$V=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};function getClientSideSmartOrderRouterTrade$1(_a){return __awaiter$V(this,arguments,void 0,function(_b){var sushiswapPair,sushiswapPairFactory,trade;_b.library;var account=_b.account,chainId=_b.chainId,currencyIn=_b.currencyIn,currencyOut=_b.currencyOut,amount=_b.amount;return __generator$V(this,function(_c){switch(_c.label){case 0:sushiswapPair=new SushiswapPair({fromTokenContractAddress:currencyIn,toTokenContractAddress:currencyOut,ethereumAddress:account,chainId:chainId,settings:new SushiswapPairSettings({slippage:.05})});return[4,sushiswapPair.createFactory()];case 1:sushiswapPairFactory=_c.sent();return[4,sushiswapPairFactory.trade(amount)];case 2:trade=_c.sent();if(!currencyIn||!currencyOut){return[2,{state:TradeState$1.INVALID,trade:undefined}]}if(!trade){return[2,{state:TradeState$1.LOADING,trade:undefined}]}if(trade){return[2,{state:TradeState$1.VALID,trade:trade}]}return[2,{state:TradeState$1.INVALID,trade:undefined}]}})})}var FIVE_TENTHS_PERCENT$1=new Percent(50,1e4);var DEFAULT_AUTO_SLIPPAGE$1=FIVE_TENTHS_PERCENT$1;var DEFAULT_SLIPPAGE$1={auto:true,allowed:DEFAULT_AUTO_SLIPPAGE$1};function getSlippage$1(){return DEFAULT_SLIPPAGE$1}new Percent(1,2);new Percent(1,100);var erc20Abi=[{constant:true,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{payable:true,stateMutability:"payable",type:"fallback"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"},{indexed:true,name:"spender",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"from",type:"address"},{indexed:true,name:"to",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];function isAddress$3(value){try{return getAddress$1(value)}catch(_a){return false}}function getSigner(library,account){return library.getSigner(account).connectUnchecked()}function getProviderOrSigner(library,account){return account?getSigner(library,account):library}function getContract$1(address,ABI,library,account){if(!isAddress$3(address)||address===AddressZero$2){throw Error("Invalid 'address' parameter '".concat(address,"'."))}return new Contract(address,ABI,getProviderOrSigner(library,account))}var IUniswapV2Router02ABI$2=IUniswapV2Router02Json.abi;var IUniswapV3RouterABI=ISwapRouter.abi;function getUniswapContract(library,account,chainId,addressOrAddressMap,ABI,withSignerIfPossible){if(withSignerIfPossible===void 0){withSignerIfPossible=true}return function(){if(!addressOrAddressMap||!ABI||!library||!chainId)return null;var address;if(typeof addressOrAddressMap==="string")address=addressOrAddressMap;else address=addressOrAddressMap[chainId];if(!address)return null;try{return getContract$1(address,ABI,library,withSignerIfPossible&&account?account:undefined)}catch(error){console.error("Failed to get contract",error);return null}}}function getV2RouterContract(library,account,chainId){return getUniswapContract(library,account,chainId,V2_ROUTER_ADDRESS,IUniswapV2Router02ABI$2,true)()}function getV3RouterContract(library,account,chainId){return getUniswapContract(library,account,chainId,V3_ROUTER_ADDRESS,IUniswapV3RouterABI,true)()}function toHex$2(currencyAmount){return currencyAmount.quotient.toString(10)}var ZERO_HEX$2="0x0";var getV2SwapCallParamsFromTrade$1=function(trade,options){var _a=trade.fromToken,chainId=_a.chainId,contractAddress=_a.contractAddress,decimals=_a.decimals;var currencyIn=new Token(chainId,contractAddress,decimals);var currencInAmount=CurrencyAmount$1.fromRawAmount(currencyIn,currencyToWei(trade.baseConvertRequest,decimals));var _b=trade.toToken,toTokenContractAddress=_b.contractAddress,toDecimals=_b.decimals;var currencyOut=new Token(chainId,toTokenContractAddress,toDecimals);var currencOutAmount=CurrencyAmount$1.fromRawAmount(currencyOut,currencyToWei(trade.minAmountConvertQuote,toDecimals));var to=validateAndParseAddress(options.recipient);var amountIn=toHex$2(currencInAmount);var amountOut=toHex$2(currencOutAmount);var path=trade.routePath;var paramsIn={amountIn:amountIn,amountOutMin:amountOut,path:path,to:to};return{params:paramsIn,value:ZERO_HEX$2}};function getSwapCallV2Params$1(_a){var library=_a.library,account=_a.account,chainId=_a.chainId,trade=_a.trade,deadline=_a.deadline;var recipient=account;var routerContract=getV2RouterContract(library,account,chainId);if(!trade||!recipient||!library||!account||!chainId||!deadline)return undefined;if(!routerContract)return undefined;var params=getV2SwapCallParamsFromTrade$1(trade,{feeOnTransfer:false,recipient:recipient,deadline:deadline.toNumber()});return{address:routerContract.address,params:params.params,value:params.value}}var SwapCallbackState$2;(function(SwapCallbackState){SwapCallbackState[SwapCallbackState["INVALID"]=0]="INVALID";SwapCallbackState[SwapCallbackState["LOADING"]=1]="LOADING";SwapCallbackState[SwapCallbackState["VALID"]=2]="VALID"})(SwapCallbackState$2||(SwapCallbackState$2={}));var getSwapCallback$2=function(_a){var library=_a.library,account=_a.account,chainId=_a.chainId,trade=_a.trade,deadline=_a.deadline;var swapCalls=getSwapCallV2Params$1({library:library,account:account,chainId:chainId,trade:trade,deadline:deadline});return swapCalls};var ZERO_ADDRESS$1="0x0000000000000000000000000000000000000000";var DEFAULT_DEADLINE_FROM_NOW=60*30;var L2_DEADLINE_FROM_NOW=60*5;JSBI.BigInt(60*60*24*7);JSBI.BigInt(0);var BIPS_BASE=JSBI.BigInt(1e4);new Percent$1(JSBI.BigInt(1),BIPS_BASE);new Percent$1(JSBI.BigInt(100),BIPS_BASE);new Percent$1(JSBI.BigInt(300),BIPS_BASE);new Percent$1(JSBI.BigInt(500),BIPS_BASE);new Percent$1(JSBI.BigInt(1e3),BIPS_BASE);new Percent$1(JSBI.BigInt(1500),BIPS_BASE);new Percent$1(JSBI.BigInt(50),BIPS_BASE);new Percent$1("0");new Percent$1(JSBI.BigInt(200),BIPS_BASE);new Percent$1("1");function getDefaultTransactionTtl$1(_a){var chainId=_a.chainId;if(chainId&&L2_CHAIN_IDS.includes(chainId))return L2_DEADLINE_FROM_NOW/60;return DEFAULT_DEADLINE_FROM_NOW/60}function getTransactionDeadline$1(_a){var chainId=_a.chainId,blockTimestamp=_a.blockTimestamp;var defaultTtl=getDefaultTransactionTtl$1({chainId:chainId});return blockTimestamp===null||blockTimestamp===void 0?void 0:blockTimestamp.add(defaultTtl*60)}var __awaiter$U=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$U=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var getSwapCall$2=function(_a){return __awaiter$U(void 0,[_a],void 0,function(_b){var trade,deadline,swapCalls;var library=_b.library,account=_b.account,swapInfo=_b.swapInfo,chainId=_b.chainId,blockTimestamp=_b.blockTimestamp;return __generator$U(this,function(_c){trade=swapInfo.trade,swapInfo.slippage;deadline=getTransactionDeadline$1({chainId:chainId,blockTimestamp:blockTimestamp});swapCalls=getSwapCallback$2({library:library,account:account,chainId:chainId,trade:trade===null||trade===void 0?void 0:trade.trade,deadline:deadline});return[2,swapCalls]})})};var Field$1;(function(Field){Field["INPUT"]="INPUT";Field["OUTPUT"]="OUTPUT"})(Field$1||(Field$1={}));var __extends$9=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign$m=undefined&&undefined.__assign||function(){__assign$m=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$m.apply(this,arguments)};var __awaiter$T=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$T=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$d=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$9=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var IUniswapV2Router02ABI$1=IUniswapV2Router02Json.abi;var INVALID_TRADE$1={state:TradeState$1.INVALID,trade:undefined};var getMinAmount=function minimumAmountOut(amount,slippageTolerance,currency){var slippageAdjustedAmountOut=new Fraction(JSBI.BigInt(1)).add(slippageTolerance).invert().multiply(amount).quotient;return CurrencyAmount$1.fromRawAmount(currency,slippageAdjustedAmountOut)};var REJECT_PREV_REQUEST_ERROR$4="reject previous values";var Sushiswap=function(_super){__extends$9(Sushiswap,_super);function Sushiswap(){var _this=_super.apply(this,__spreadArray$9([],__read$d(arguments),false))||this;_this.promiseReject=undefined;_this.getSwapParams=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var values,e_1;var input=_b.input,output=_b.output;return __generator$T(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);return[4,this.setLastInputValuesV2({input:input,output:output})];case 1:values=_c.sent();return[2,values];case 2:e_1=_c.sent();if(e_1===REJECT_PREV_REQUEST_ERROR$4){return[2,undefined]}throw new Error(e_1);case 3:return[2]}})})};_this.getPairAddress=function(_a){var token0=_a.token0,token1=_a.token1;var pairAddress=getCreate2Address(FACTORY_ADDRESS$1[_this.chainId],keccak256$2(["bytes"],[pack(["address","address"],token0<token1?[token0,token1]:[token1,token0])]),INIT_CODE_HASH[_this.chainId]);return pairAddress};_this.isPairExist=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var pairAddress,contract,e_2;var token0=_b.token0,token1=_b.token1;return __generator$T(this,function(_c){switch(_c.label){case 0:pairAddress=this.getPairAddress({token0:token0,token1:token1});_c.label=1;case 1:_c.trys.push([1,3,,4]);contract=new Contract(pairAddress,uniswapV2PairContract,this.library);return[4,contract.factory()];case 2:_c.sent();return[2,true];case 3:e_2=_c.sent();console.error({error:e_2});return[2,false];case 4:return[2]}})})};_this.getPathAmountOut=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var contract,res;var amountIn=_b.amountIn,path=_b.path;return __generator$T(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);contract=new Contract(SUSHISWAP_ROUTER_ADDRESS[String(this.chainId)],IUniswapV2Router02ABI$1,this.library);return[4,contract.getAmountsOut(amountIn,path)];case 1:res=_c.sent();return[2,res];case 2:_c.sent();return[2];case 3:return[2]}})})};_this.getAmountParams=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var path,e_4;var input=_b.input,output=_b.output;return __generator$T(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);return[4,this.getLastInputValuesV2({input:input,output:output})];case 1:path=_c.sent();return[2,path];case 2:e_4=_c.sent();if(e_4===REJECT_PREV_REQUEST_ERROR$4){return[2,undefined]}throw new Error(e_4);case 3:return[2]}})})};_this.getToken=function(swapToken){var chainId=_this.chainId;switch(swapToken.address){case"0x0000000000000000000000000000000000000000":return Ether.onChain(chainId);case"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":return Ether.onChain(chainId);case"NATIVE":return Ether.onChain(chainId);default:return new Token(chainId,getAddress$2(swapToken.address),swapToken.decimals)}};_this.getTokenAddress=function(swapToken){var token=_this.getToken(swapToken);if(token.isNative){return _this.chainId===5?WETH.GORLI().contractAddress:WETH.MAINNET().contractAddress}return getAddress$2(swapToken.address)};_this.getLastInputValuesV2=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var _this=this;var _c;var input=_b.input,output=_b.output;return __generator$T(this,function(_d){(_c=this.promiseReject)===null||_c===void 0?void 0:_c.call(this,REJECT_PREV_REQUEST_ERROR$4);return[2,new Promise(function(resolve,regect){return __awaiter$T(_this,void 0,void 0,function(){var currencyIn,currencyOut,isExactIn,values,path,methodName,initParams;var _a,_b;return __generator$T(this,function(_c){switch(_c.label){case 0:this.promiseReject=regect;currencyIn=this.getToken(input.currency);currencyOut=this.getToken(output.currency);isExactIn=input.amount?true:false;return[4,this.getSwapInfo({amount:input.amount||output.amount||"0",currencyIn:currencyIn,currencyOut:currencyOut,isExactIn:isExactIn,currencyInAddress:this.getTokenAddress(input.currency),currencyOutAddress:this.getTokenAddress(output.currency)})];case 1:values=_c.sent();path=(_b=(_a=values===null||values===void 0?void 0:values.trade)===null||_a===void 0?void 0:_a.trade)===null||_b===void 0?void 0:_b.routePath;methodName=isExactIn?"getAmountsOut":"getAmountsIn";initParams={inputAmount:values.INPUT.amount,outputAmount:values.OUTPUT.amount,methodName:methodName,plugin:getPlugin$2({plugins:Sushiswap$1.getters,methodName:methodName})};if(isExactIn){resolve(__assign$m(__assign$m({},initParams),{params:{methodParams:{path:path,amountIn:values===null||values===void 0?void 0:values.INPUT.amount}}}))}resolve(__assign$m(__assign$m({},initParams),{params:{methodParams:{path:path,amountOut:values===null||values===void 0?void 0:values.OUTPUT.amount}}}));return[2]}})})})]})})};_this.setLastInputValuesV2=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var _this=this;var _c;var input=_b.input,output=_b.output;return __generator$T(this,function(_d){(_c=this.promiseReject)===null||_c===void 0?void 0:_c.call(this,REJECT_PREV_REQUEST_ERROR$4);return[2,new Promise(function(resolve,regect){return __awaiter$T(_this,void 0,void 0,function(){var values;return __generator$T(this,function(_a){switch(_a.label){case 0:this.promiseReject=regect;return[4,this.getSwapValuesV2({input:input,output:output})];case 1:values=_a.sent();this.values=values;resolve(values);return[2]}})})})]})})};_this.getSwapValuesV2=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var input=_b.input,output=_b.output;return __generator$T(this,function(_c){return[2,this.getSwapValues({input:input,output:output})]})})};_this.getSwapValuesV3=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var input=_b.input,output=_b.output;return __generator$T(this,function(_c){return[2,this.getSwapValues({input:input,output:output})]})})};_this.getSwapValues=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var _c,library,account,chainId,currencyIn,currencyOut,isExactIn,blockTimestamp,swapInfo,swapCall,getTradeState,isExactEthInput,methodName,swap;var _d;var input=_b.input,output=_b.output;return __generator$T(this,function(_e){switch(_e.label){case 0:if(!input.currency){throw new Error("input currency required")}if(!output.currency){throw new Error("output currency required")}if(!input.amount&&!output.amount){return[2,{inputAmount:"0",outputAmount:"0",state:"INVALID",params:undefined,INPUT:{currency:undefined,amount:undefined},OUTPUT:{currency:undefined,amount:undefined},trade:undefined,slippage:undefined,type:undefined}]}_c=this,library=_c.library,account=_c.account,chainId=_c.chainId;currencyIn=this.getToken(input.currency);currencyOut=this.getToken(output.currency);isExactIn=Boolean(input.amount);return[4,this.getLastBlock()];case 1:blockTimestamp=_e.sent().blockTimestamp;return[4,this.getSwapInfo({amount:input.amount||output.amount||"0",currencyIn:currencyIn,currencyOut:currencyOut,isExactIn:isExactIn,currencyInAddress:this.getTokenAddress(input.currency),currencyOutAddress:this.getTokenAddress(output.currency)})];case 2:swapInfo=_e.sent();return[4,getSwapCall$2({library:library,chainId:chainId,account:account,swapInfo:swapInfo,blockTimestamp:blockTimestamp})];case 3:swapCall=_e.sent();getTradeState=function(stateindex){switch(stateindex){case 3:return"VALID";default:return"INVALID"}};isExactEthInput=this.getToken(input.currency).isNative&&isExactIn;methodName=getMethodName({isExactInput:isExactIn,isInputNative:input.currency.address==="NATIVE",isOutputNative:output.currency.address==="NATIVE",protocol:"V2"});swap=__assign$m(__assign$m({},swapInfo),{inputAmount:swapInfo.INPUT.amount,outputAmount:swapInfo.OUTPUT.amount,state:getTradeState(((_d=swapInfo===null||swapInfo===void 0?void 0:swapInfo.trade)===null||_d===void 0?void 0:_d.state)||0),params:{methodParams:swapCall===null||swapCall===void 0?void 0:swapCall.params,value:isExactEthInput?swapCall===null||swapCall===void 0?void 0:swapCall.params.amountIn:undefined},methodName:methodName,plugin:getPlugin$2({plugins:Sushiswap$1.actions,methodName:methodName})});return[2,swap]}})})};_this.getSwapInfo=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var parsedAmount,parsedAmountString,trade,slippage,trade_1,amountIn_1,amountOut_1,amountIn,amountOut;var _c,_d;var _e,_f,_g;var amount=_b.amount,currencyIn=_b.currencyIn,currencyOut=_b.currencyOut,currencyInAddress=_b.currencyInAddress,currencyOutAddress=_b.currencyOutAddress,isExactIn=_b.isExactIn;return __generator$T(this,function(_h){switch(_h.label){case 0:parsedAmount=weiToCurrency(amount,(_e=isExactIn?currencyIn:currencyOut)!==null&&_e!==void 0?_e:undefined);parsedAmountString=parsedAmount?parsedAmount.toSignificant(9):"0";slippage=getSlippage$1();if(!(this.chainId!==5))return[3,2];return[4,this.getBestTrade({currencyIn:currencyInAddress,currencyOut:currencyOutAddress,amount:parsedAmountString})];case 1:trade=_h.sent();return[3,4];case 2:return[4,this.getGoerliTrade({token0:currencyInAddress,token1:currencyOutAddress,token0Decimals:currencyIn.decimals,token1Decimals:currencyOut.decimals,amount:amount,slippage:slippage})];case 3:trade_1=_h.sent();amountIn_1=amount;amountOut_1=trade_1===null||trade_1===void 0?void 0:trade_1.trade.expectedConvertQuote;return[2,(_c={},_c[Field$1.INPUT]={currency:currencyIn,amount:amountIn_1},_c[Field$1.OUTPUT]={currency:currencyOut,amount:amountOut_1},_c.trade=trade_1,_c.slippage=slippage,_c.type=isExactIn?UNISWAP_TYPE.EXACT_INPUT:UNISWAP_TYPE.EXACT_OUTPUT,_c)];case 4:amountIn=isExactIn?amount:currencyToWei(((_f=trade===null||trade===void 0?void 0:trade.trade)===null||_f===void 0?void 0:_f.expectedConvertQuote)||"0",currencyIn===null||currencyIn===void 0?void 0:currencyIn.decimals);amountOut=isExactIn?currencyToWei(((_g=trade===null||trade===void 0?void 0:trade.trade)===null||_g===void 0?void 0:_g.expectedConvertQuote)||"0",currencyOut===null||currencyOut===void 0?void 0:currencyOut.decimals):amount;return[2,(_d={},_d[Field$1.INPUT]={currency:currencyIn,amount:amountIn},_d[Field$1.OUTPUT]={currency:currencyOut,amount:amountOut},_d.trade=trade,_d.slippage=slippage,_d.type=isExactIn?UNISWAP_TYPE.EXACT_INPUT:UNISWAP_TYPE.EXACT_OUTPUT,_d)]}})})};_this.getGoerliTrade=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var path,amounts,tokenIn,tokenOut,amountOut,minAmount;var _c;var token0=_b.token0,token1=_b.token1,token0Decimals=_b.token0Decimals,token1Decimals=_b.token1Decimals,amount=_b.amount,slippage=_b.slippage;return __generator$T(this,function(_d){switch(_d.label){case 0:return[4,this.getGoerliPath({token0:token0,token1:token1})];case 1:path=_d.sent();if(!path)return[2];return[4,this.getPathAmountOut({amountIn:amount,path:path})];case 2:amounts=_d.sent();if(!amounts)return[2];tokenIn=new Token(this.chainId,token0,token0Decimals||18);tokenOut=new Token(this.chainId,token1,token1Decimals||18);amountOut=amounts[amounts.length-1].toString();minAmount=getMinAmount(amountOut,slippage.allowed,tokenOut);return[2,{trade:{fromToken:{chainId:this.chainId,contractAddress:tokenIn.address,decimals:tokenIn.decimals,symbol:tokenIn.symbol||"",name:tokenIn.name||""},toToken:{chainId:this.chainId,contractAddress:tokenOut.address,decimals:tokenOut.decimals,symbol:tokenOut.symbol||"",name:tokenOut.name||""},routePath:path,baseConvertRequest:(_c=weiToCurrency(amount,tokenIn))===null||_c===void 0?void 0:_c.toExact(),minAmountConvertQuote:minAmount.toExact()||"0",expectedConvertQuote:amountOut},routePath:path,state:TradeState$1.VALID}]}})})};_this.getGoerliPath=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var weth,isExist,isToken0WethExist,isWethToken1Exist;var token0=_b.token0,token1=_b.token1;return __generator$T(this,function(_c){switch(_c.label){case 0:weth=WETH.GORLI();return[4,this.isPairExist({token0:token0,token1:token1})];case 1:isExist=_c.sent();if(isExist)return[2,[token0,token1]];if(!(!isExist&&getAddress$2(weth.contractAddress)!==getAddress$2(token0)&&getAddress$2(weth.contractAddress)!==getAddress$2(token1)))return[3,4];return[4,this.isPairExist({token0:token0,token1:weth.contractAddress})];case 2:isToken0WethExist=_c.sent();return[4,this.isPairExist({token0:weth.contractAddress,token1:token1})];case 3:isWethToken1Exist=_c.sent();if(isToken0WethExist&&isWethToken1Exist)return[2,[token0,weth.contractAddress,token1]];_c.label=4;case 4:return[2]}})})};_this.getBestTrade=function(_a){return __awaiter$T(_this,[_a],void 0,function(_b){var library,clientSORTradeObject,tradeObject,lastTrade,state,trade;var currencyIn=_b.currencyIn,currencyOut=_b.currencyOut,amount=_b.amount;return __generator$T(this,function(_c){switch(_c.label){case 0:library=this.library;return[4,getClientSideSmartOrderRouterTrade$1({library:library,account:this.account,chainId:this.chainId,currencyIn:currencyIn,currencyOut:currencyOut,amount:amount})];case 1:clientSORTradeObject=_c.sent();tradeObject=clientSORTradeObject;lastTrade=tradeObject===null||tradeObject===void 0?void 0:tradeObject.trade;if(!tradeObject)return[2];state=tradeObject.state,trade=tradeObject.trade;if(state===TradeState$1.INVALID)return[2,INVALID_TRADE$1];if(state!==TradeState$1.LOADING&&state!==TradeState$1.SYNCING||trade)return[2,tradeObject];return[2,{state:state,trade:lastTrade}]}})})};return _this}return Sushiswap}(Config);var __awaiter$S=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$S=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var getTokenDecimals=function(_a){return __awaiter$S(void 0,[_a],void 0,function(_b){var decimals,e_1;var address=_b.address,provider=_b.provider;return __generator$S(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);return[4,new Contract(address,["function decimals() view returns (uint8 decimals)"],provider).decimals()];case 1:decimals=_c.sent();return[2,decimals];case 2:e_1=_c.sent();console.error(e_1);return[2,18];case 3:return[2]}})})};var getSwapPath=function(_a){return __awaiter$S(void 0,[_a],void 0,function(_b){var _c,sushiswapHelper,tokenInDecimals,tokenOutDecimals,amountIn,suhsiRes,suhsiPath,uniswapHelper,tokenInDecimalsUniV2,tokenOutDecimalsUniV2,amountInUniV2,res,resPath,inchHelper,tokenInDecimalsInch,amountInInch,inchRes,inchPath,uniswapV3Helper,tokenInDecimalsUniV3,tokenOutDecimalsUniV3,amountInUniV3,uniswapV3Res,methodParams,path,uniswapV3ResPath;var _d,_e,_f,_g,_h;var chainId=_b.chainId,tokenIn=_b.tokenIn,tokenOut=_b.tokenOut,protocol=_b.protocol,helper=_b.helper,service=_b.service;return __generator$S(this,function(_j){switch(_j.label){case 0:_c=protocol;switch(_c){case"SUSHISWAP":return[3,1];case"UNISWAP_V2":return[3,5];case"1INCH":return[3,9];case"UNISWAP_V3":return[3,13]}return[3,19];case 1:sushiswapHelper=helper||new Sushiswap({chainId:chainId});return[4,getTokenDecimals({address:tokenIn.address,provider:sushiswapHelper.library})];case 2:tokenInDecimals=_j.sent();return[4,getTokenDecimals({address:tokenOut.address,provider:sushiswapHelper.library})];case 3:tokenOutDecimals=_j.sent();amountIn=tokenIn.amount||"1"+"0".repeat(tokenInDecimals);return[4,sushiswapHelper.getSwapParams({input:{currency:{address:tokenIn.address,decimals:tokenInDecimals},amount:amountIn},output:{currency:{address:tokenOut.address,decimals:tokenOutDecimals},amount:tokenOut.amount}})];case 4:suhsiRes=_j.sent();suhsiPath=(_e=(_d=suhsiRes===null||suhsiRes===void 0?void 0:suhsiRes.params)===null||_d===void 0?void 0:_d.methodParams)===null||_e===void 0?void 0:_e.path;if(!suhsiRes||suhsiRes&&suhsiRes.state==="INVALID"||!suhsiPath){console.error("Invalid Trade");return[2]}return[2,{path:suhsiPath,amountIn:suhsiRes.inputAmount,amountOut:suhsiRes.outputAmount}];case 5:uniswapHelper=helper||new Uniswap({chainId:chainId});return[4,getTokenDecimals({address:tokenIn.address,provider:uniswapHelper.library})];case 6:tokenInDecimalsUniV2=_j.sent();return[4,getTokenDecimals({address:tokenOut.address,provider:uniswapHelper.library})];case 7:tokenOutDecimalsUniV2=_j.sent();amountInUniV2=tokenIn.amount||tokenOut.amount?tokenIn.amount:"1"+"0".repeat(tokenInDecimalsUniV2);return[4,uniswapHelper.getSwapParams({input:{currency:{address:tokenIn.address,decimals:tokenInDecimalsUniV2},amount:amountInUniV2},output:{currency:{address:tokenOut.address,decimals:tokenOutDecimalsUniV2},amount:tokenOut.amount}})];case 8:res=_j.sent();resPath=(_g=(_f=res===null||res===void 0?void 0:res.params)===null||_f===void 0?void 0:_f.methodParams)===null||_g===void 0?void 0:_g.path;if(!res||res&&res.state==="INVALID"||!resPath){console.error("Invalid Trade");return[2]}return[2,{path:resPath,amountIn:res.inputAmount,amountOut:res.outputAmount}];case 9:inchHelper=helper;if(!inchHelper){console.error("Invalid Helper");return[2]}return[4,getTokenDecimals({address:tokenIn.address,provider:inchHelper.library})];case 10:tokenInDecimalsInch=_j.sent();return[4,getTokenDecimals({address:tokenOut.address,provider:inchHelper.library})];case 11:_j.sent();amountInInch=tokenIn.amount?tokenIn.amount:"1"+"0".repeat(tokenInDecimalsInch);return[4,inchHelper.getSwapParams({input:{currency:{address:tokenIn.address},amount:amountInInch},output:{currency:{address:tokenOut.address}},service:service})];case 12:inchRes=_j.sent();if(!inchRes||inchRes&&inchRes.state==="INVALID"){console.error("Invalid Trade");return[2]}inchPath=inchRes.params.methodParams.pools;return[2,{path:inchPath,amountIn:inchRes.inputAmount,amountOut:inchRes.outputAmount,value:inchRes.params.value}];case 13:uniswapV3Helper=helper||new UniswapV3$1({chainId:chainId});return[4,getTokenDecimals({address:tokenIn.address,provider:uniswapV3Helper.library})];case 14:tokenInDecimalsUniV3=_j.sent();return[4,getTokenDecimals({address:tokenOut.address,provider:uniswapV3Helper.library})];case 15:tokenOutDecimalsUniV3=_j.sent();amountInUniV3=tokenIn.amount||tokenOut.amount?tokenIn.amount:"1"+"0".repeat(tokenInDecimalsUniV3);return[4,uniswapV3Helper.getSwapParams({input:{currency:{address:tokenIn.address,decimals:tokenInDecimalsUniV3},amount:amountInUniV3},output:{currency:{address:tokenOut.address,decimals:tokenOutDecimalsUniV3},amount:tokenOut.amount}})];case 16:uniswapV3Res=_j.sent();if(!uniswapV3Res||uniswapV3Res&&uniswapV3Res.state==="INVALID"){console.error("Invalid Trade");return[2]}methodParams=(_h=uniswapV3Res===null||uniswapV3Res===void 0?void 0:uniswapV3Res.params)===null||_h===void 0?void 0:_h.methodParams;if(!((methodParams===null||methodParams===void 0?void 0:methodParams.params_tuple)&&"fee"in(methodParams===null||methodParams===void 0?void 0:methodParams.params_tuple)))return[3,18];return[4,uniswapV3Helper.isPairExist({token0:methodParams.params_tuple.tokenIn,token1:methodParams===null||methodParams===void 0?void 0:methodParams.params_tuple.tokenOut})];case 17:path=_j.sent();if(!path){console.error("Invalid Trade");return[2]}return[2,{path:path.path,amountIn:uniswapV3Res.inputAmount,amountOut:uniswapV3Res.outputAmount,fee:methodParams===null||methodParams===void 0?void 0:methodParams.params_tuple.fee}];case 18:uniswapV3ResPath=(methodParams===null||methodParams===void 0?void 0:methodParams.params_tuple)&&"path"in(methodParams===null||methodParams===void 0?void 0:methodParams.params_tuple)?methodParams.params_tuple.path:undefined;return[2,{path:uniswapV3ResPath,amountIn:uniswapV3Res.inputAmount,amountOut:uniswapV3Res.outputAmount}];case 19:return[2]}})})};var __awaiter$R=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$R=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var SimpleSwapExactInput$1=createPlugin$1({protocol:"UNISWAP",type:"LIBRARY",method:"swapExactTokensForTokens",name:"simpleSwapExactInputV2",supportedContracts:ROUTER_V2_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),value:new FctValue({required:false,readonly:true,decimals:18}),addressIn:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountIn:new FctValue({destination:"wei_amount"}),addressOut:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountOut:new FctValue({destination:"wei_amount",readonly:true}),methodParams:{amountIn:new FctValue({destination:"wei_amount",readonly:true}),amountOutMin:new FctValue({destination:"wei_amount",readonly:true}),path:new FctAddressList({destination:"ERC20_List",readonly:true,options:getSupportedTokens({chainId:chainId})}),to:new FctAddress({required:false}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},calculateValuesOnUserInput:function(_a){var input=_a.input,provider=_a.provider,setMethod=_a.setMethod;var isExactIn=true;var getPathParams=function(_a){return __awaiter$R(void 0,[_a],void 0,function(_e){var uniswapService,tokenInAddress,tokenOutAddress,amount,decimalsIn,_f,decimalsOut,_g,initParamsExactIn,res,swapPath,method,isNativeToken,_h,amountIn,amountOutMin,paramsExactIn,e_1;var service=_e.service;return __generator$R(this,function(_j){switch(_j.label){case 0:if(!service)return[2];uniswapService=service;tokenInAddress=input.addressIn.value;tokenOutAddress=input.addressOut.value;if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2];amount=input.amountIn.value;if(!amount)return[2];if(!provider)return[3,2];return[4,getTokenDecimals({address:tokenInAddress,provider:provider})];case 1:_f=_j.sent();return[3,3];case 2:_f=18;_j.label=3;case 3:decimalsIn=_f;if(!provider)return[3,5];return[4,getTokenDecimals({address:tokenOutAddress,provider:provider})];case 4:_g=_j.sent();return[3,6];case 5:_g=18;_j.label=6;case 6:decimalsOut=_g;initParamsExactIn={value:undefined,amountOut:undefined,methodParams:{path:undefined,amountOut:undefined,amountOutMin:undefined}};_j.label=7;case 7:_j.trys.push([7,9,,10]);return[4,uniswapService.create({cmd:"simulateSwap",token_in:tokenInAddress,token_in_decimals:decimalsIn,token_out:tokenOutAddress,token_out_decimals:decimalsOut,token_amount:amount,type:"in"})];case 8:res=_j.sent();swapPath=res.path;if(!swapPath){return[2,{params:initParamsExactIn,error:"invalid trade"}]}method=getMethodName({isExactInput:isExactIn,protocol:"V2",isInputNative:getIsNative(tokenInAddress),isOutputNative:getIsNative(tokenOutAddress)});if(setMethod)setMethod(method);isNativeToken=method==="swapETHForExactTokens"||method==="swapExactETHForTokens";_h=input.methodParams,amountIn=_h.amountIn,amountOutMin=_h.amountOutMin;amountIn.virtual=false;amountOutMin.virtual=false;amountOutMin.readonly=true;switch(method){case"swapExactETHForTokens":amountIn.virtual=true;amountOutMin.readonly=false;break;case"swapETHForExactTokens":amountIn.virtual=true;amountOutMin.virtual=true;break;case"swapExactTokensForETH":amountOutMin.readonly=false;break;case"swapExactTokensForTokens":amountOutMin.readonly=false;break;case"swapTokensForExactTokens":amountIn.virtual=true;amountOutMin.virtual=true;break;case"swapTokensForExactETH":amountIn.virtual=true;amountOutMin.virtual=true;break}paramsExactIn={value:isNativeToken?res.inputAmount:"0",amountOut:res.outputAmount,isExactIn:String(isExactIn),methodParams:{path:swapPath,amountOut:res.outputAmount,amountOutMin:res.outputAmount,amountIn:undefined,amountInMax:undefined}};({value:isNativeToken?res.inputAmount:"0",amountIn:res.inputAmount,isExactIn:String(isExactIn),methodParams:{path:swapPath,amountIn:res.inputAmount,amountInMax:res.inputAmount,amountOut:undefined,amountOutMin:undefined}});return[2,{params:paramsExactIn,error:undefined}];case 9:e_1=_j.sent();return[2,{params:initParamsExactIn,error:e_1.message}];case 10:return[2]}})})};return{get:getPathParams,depParamKeys:["addressIn","addressOut","isExactIn","amountIn"]}},requiredApprovals:function(params,chainId,_b,_c,_d,method){if(method==="swapETHForExactTokens")return[];if(method==="swapExactETHForTokens")return[];var _a=params.methodParams,path=_a.path,amountIn=_a.amountIn;return[{to:path.value&&path.value.length?path.value[0]:undefined,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:amountIn.value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,amountIn=params.amountIn,amountOut=params.amountOut,addressIn=params.addressIn,addressOut=params.addressOut;if(!to.value||!amountIn.value||!amountOut.value||!addressIn.value||!addressOut.value||!vaultAddress)return[];if(typeof to.value!=="string"||typeof amountIn.value!=="string"||typeof amountOut.value!=="string"||typeof addressIn.value!=="string"||typeof addressOut.value!=="string")return[];return[{address:vaultAddress,toSpend:[{token:addressIn.value,amount:amountIn.value}],toReceive:[{token:addressOut.value,amount:amountOut.value}]}]}});var __awaiter$Q=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$Q=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var SimpleSwapExactOutput$1=createPlugin$1({protocol:"UNISWAP",type:"LIBRARY",method:"swapExactTokensForTokens",name:"simpleSwapExactOutputV2",supportedContracts:ROUTER_V2_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),value:new FctValue({required:false,readonly:true,decimals:18}),addressIn:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountIn:new FctValue({destination:"wei_amount",readonly:true}),addressOut:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountOut:new FctValue({destination:"wei_amount"}),methodParams:{amountOut:new FctValue({destination:"wei_amount",readonly:true}),amountInMax:new FctValue({destination:"wei_amount",readonly:true}),path:new FctAddressList({destination:"ERC20_List",readonly:true,options:getSupportedTokens({chainId:chainId})}),to:new FctAddress({required:false}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},calculateValuesOnUserInput:function(_a){var input=_a.input,provider=_a.provider,setMethod=_a.setMethod;var isExactIn=false;var getPathParams=function(_a){return __awaiter$Q(void 0,[_a],void 0,function(_e){var uniswapService,tokenInAddress,tokenOutAddress,amount,decimalsIn,_f,decimalsOut,_g,initParamsExactOut,res,swapPath,method,isNativeToken,_h,amountInMax,amountOut,paramsExactOut,e_1;var service=_e.service;return __generator$Q(this,function(_j){switch(_j.label){case 0:if(!service)return[2];uniswapService=service;tokenInAddress=input.addressIn.value;tokenOutAddress=input.addressOut.value;if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2];amount=input.amountOut.value;if(!amount)return[2];if(!provider)return[3,2];return[4,getTokenDecimals({address:tokenInAddress,provider:provider})];case 1:_f=_j.sent();return[3,3];case 2:_f=18;_j.label=3;case 3:decimalsIn=_f;if(!provider)return[3,5];return[4,getTokenDecimals({address:tokenOutAddress,provider:provider})];case 4:_g=_j.sent();return[3,6];case 5:_g=18;_j.label=6;case 6:decimalsOut=_g;initParamsExactOut={value:undefined,amountIn:undefined,methodParams:{path:undefined,amountIn:undefined,amountInMax:undefined}};_j.label=7;case 7:_j.trys.push([7,9,,10]);return[4,uniswapService.create({cmd:"simulateSwap",token_in:tokenInAddress,token_in_decimals:decimalsIn,token_out:tokenOutAddress,token_out_decimals:decimalsOut,token_amount:amount,type:"out"})];case 8:res=_j.sent();swapPath=res.path;if(!swapPath){return[2,{params:initParamsExactOut,error:"invalid trade"}]}method=getMethodName({isExactInput:isExactIn,protocol:"V2",isInputNative:getIsNative(tokenInAddress),isOutputNative:getIsNative(tokenOutAddress)});if(setMethod)setMethod(method);isNativeToken=method==="swapETHForExactTokens"||method==="swapExactETHForTokens";_h=input.methodParams,amountInMax=_h.amountInMax,amountOut=_h.amountOut;amountInMax.virtual=false;amountOut.virtual=false;amountInMax.readonly=true;switch(method){case"swapExactETHForTokens":amountInMax.virtual=true;amountOut.virtual=true;break;case"swapETHForExactTokens":amountInMax.virtual=true;break;case"swapExactTokensForETH":amountOut.virtual=true;amountInMax.virtual=true;break;case"swapExactTokensForTokens":amountOut.virtual=true;amountInMax.virtual=true;break;case"swapTokensForExactTokens":amountInMax.readonly=false;break;case"swapTokensForExactETH":amountInMax.readonly=false;break}({value:isNativeToken?res.inputAmount:"0",amountOut:res.outputAmount,isExactIn:String(isExactIn),methodParams:{path:swapPath,amountOut:res.outputAmount,amountOutMin:res.outputAmount,amountIn:undefined,amountInMax:undefined}});paramsExactOut={value:isNativeToken?res.inputAmount:"0",amountIn:res.inputAmount,isExactIn:String(isExactIn),methodParams:{path:swapPath,amountIn:res.inputAmount,amountInMax:res.inputAmount,amountOut:undefined,amountOutMin:undefined}};return[2,{params:paramsExactOut,error:undefined}];case 9:e_1=_j.sent();return[2,{params:initParamsExactOut,error:e_1.message}];case 10:return[2]}})})};return{get:getPathParams,depParamKeys:["addressIn","addressOut","isExactIn","amountOut"]}},requiredApprovals:function(params,chainId,_b,_c,_d,method){if(method==="swapETHForExactTokens")return[];if(method==="swapExactETHForTokens")return[];var _a=params.methodParams,path=_a.path,amountInMax=_a.amountInMax;return[{to:path.value&&path.value.length?path.value[0]:undefined,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:amountInMax.value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,amountIn=params.amountIn,amountOut=params.amountOut,addressIn=params.addressIn,addressOut=params.addressOut;if(!to.value||!amountIn.value||!amountOut.value||!addressIn.value||!addressOut.value||!vaultAddress)return[];if(typeof to.value!=="string"||typeof amountIn.value!=="string"||typeof amountOut.value!=="string"||typeof addressIn.value!=="string"||typeof addressOut.value!=="string")return[];return[{address:vaultAddress,toSpend:[{token:addressIn.value,amount:amountIn.value}],toReceive:[{token:addressOut.value,amount:amountOut.value}]}]}});var UniswapV2SwapExactTokensForTokens=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"swapExactTokensForTokens",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountIn:new FctValue({destination:"wei_amount"}),amountOutMin:new FctValue({destination:"wei_amount",risk:amountOutMinRisk}),path:new FctAddressList({destination:"ERC20_List",options:getSupportedTokens({chainId:chainId})}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},supportedContracts:ROUTER_V2_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){var token=(params===null||params===void 0?void 0:params.methodParams.path.value)&&Array.isArray(params===null||params===void 0?void 0:params.methodParams.path.value)?params===null||params===void 0?void 0:params.methodParams.path.value[0]:undefined;return[{to:token,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountIn.value},method:"approve",protocol:"ERC20"}]}});var UniswapV2SwapTokensForExactTokens=createPlugin$1({protocol:"UNISWAP",type:"ACTION",method:"swapTokensForExactTokens",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountOut:new FctValue({destination:"wei_amount"}),amountInMax:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List",options:getSupportedTokens({chainId:chainId})}),to:new FctAddress({}),deadline:new FctTimestamp({})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2,innerType:"uint256[]"}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1,innerType:"uint256[]"})}}},supportedContracts:ROUTER_V2_ADDRESSES,initParams:{methodParams:{deadline:{type:"global",id:"blockTimestamp"}}},requiredApprovals:function(params){var token=(params===null||params===void 0?void 0:params.methodParams.path.value)&&Array.isArray(params===null||params===void 0?void 0:params.methodParams.path.value)?params===null||params===void 0?void 0:params.methodParams.path.value[0]:undefined;return[{to:token,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amountInMax.value},method:"approve",protocol:"ERC20"}]}});var GetAmountsIn=createPlugin$1({protocol:"UNISWAP",type:"GETTER",method:"getAmountsIn",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(){return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountOut:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List"})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}}}});var GetAmountsOut=createPlugin$1({protocol:"UNISWAP",type:"GETTER",method:"getAmountsOut",supportedContracts:ROUTER_V2_ADDRESSES,getParams:function(){return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{amountIn:new FctValue({destination:"wei_amount"}),path:new FctAddressList({destination:"ERC20_List"})}},output:{amountIn:new FctValue({destination:"wei_amount",innerIndex:2}),amountOut:new FctValue({destination:"wei_amount",innerIndex:-1})}}}});var GetReserves=createPlugin$1({protocol:"UNISWAP",type:"GETTER",method:"getReserves",getParams:function(){return{input:{to:new FctAddress({destination:"uniswap_pool_v2"}),methodParams:{}},output:{reserve0:new FctValue({destination:"wei_amount",innerIndex:0}),reserve1:new FctValue({destination:"wei_amount",innerIndex:1})}}}});var actions$m={SimpleSwapExactInput:SimpleSwapExactInput$1,SimpleSwapExactOutput:SimpleSwapExactOutput$1,AddLiquidity:AddLiquidity$2,RemoveLiquidity:RemoveLiquidity$1,AddLiquidityETH:AddLiquidityETH$1,RemoveLiquidityETH:RemoveLiquidityETH$1,UniswapV2SwapExactETHForTokens:UniswapV2SwapExactETHForTokens,UniswapV2SwapETHForExactTokens:UniswapV2SwapETHForExactTokens,UniswapV2SwapExactTokensForETH:UniswapV2SwapExactTokensForETH,UniswapV2SwapTokensForExactETH:UniswapV2SwapTokensForExactETH,UniswapV2SwapExactTokensForTokens:UniswapV2SwapExactTokensForTokens,UniswapV2SwapTokensForExactTokens:UniswapV2SwapTokensForExactTokens,SimpleRemoveLiquidity:SimpleRemoveLiquidity};var getters$k={GetAmountsIn:GetAmountsIn,GetAmountsOut:GetAmountsOut,GetReserves:GetReserves};var Uniswap$1={actions:actions$m,getters:getters$k};function getRoutingAPIArguments(_a){var tokenIn=_a.tokenIn,tokenOut=_a.tokenOut,amount=_a.amount,tradeType=_a.tradeType,useClientSideRouter=_a.useClientSideRouter;return!tokenIn||!tokenOut||!amount||tokenIn.equals(tokenOut)?undefined:{amount:amount.quotient.toString(),tokenInAddress:tokenIn.wrapped.address,tokenInChainId:tokenIn.wrapped.chainId,tokenInDecimals:tokenIn.wrapped.decimals,tokenInSymbol:tokenIn.wrapped.symbol,tokenOutAddress:tokenOut.wrapped.address,tokenOutChainId:tokenOut.wrapped.chainId,tokenOutDecimals:tokenOut.wrapped.decimals,tokenOutSymbol:tokenOut.wrapped.symbol,useClientSideRouter:useClientSideRouter,type:tradeType===TradeType$2.EXACT_INPUT?"exactIn":"exactOut"}}var __extends$8=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __rest$4=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};var TradeState;(function(TradeState){TradeState[TradeState["LOADING"]=0]="LOADING";TradeState[TradeState["INVALID"]=1]="INVALID";TradeState[TradeState["NO_ROUTE_FOUND"]=2]="NO_ROUTE_FOUND";TradeState[TradeState["VALID"]=3]="VALID";TradeState[TradeState["SYNCING"]=4]="SYNCING"})(TradeState||(TradeState={}));var InterfaceTrade=function(_super){__extends$8(InterfaceTrade,_super);function InterfaceTrade(_a){var _this=this;var gasUseEstimateUSD=_a.gasUseEstimateUSD,routes=__rest$4(_a,["gasUseEstimateUSD"]);_this=_super.call(this,routes)||this;_this.gasUseEstimateUSD=gasUseEstimateUSD;return _this}return InterfaceTrade}(Trade);function computeRoutes(currencyIn,currencyOut,tradeType,quoteResult){if(!quoteResult||!quoteResult.route||!currencyIn||!currencyOut)return undefined;if(quoteResult.route.length===0)return[];var parsedTokenIn=parseToken(quoteResult.route[0][0].tokenIn);var parsedTokenOut=parseToken(quoteResult.route[0][quoteResult.route[0].length-1].tokenOut);if(parsedTokenIn.address!==currencyIn.wrapped.address)return undefined;if(parsedTokenOut.address!==currencyOut.wrapped.address)return undefined;var parsedCurrencyIn=currencyIn.isNative?nativeOnChain(currencyIn.chainId):parsedTokenIn;var parsedCurrencyOut=currencyOut.isNative?nativeOnChain(currencyOut.chainId):parsedTokenOut;try{return quoteResult.route.map(function(route){if(route.length===0){throw new Error("Expected route to have at least one pair or pool")}var rawAmountIn=route[0].amountIn;var rawAmountOut=route[route.length-1].amountOut;if(!rawAmountIn||!rawAmountOut){throw new Error("Expected both amountIn and amountOut to be present")}return{routev3:isV3Route(route)?new Route$1(route.map(parsePool),parsedCurrencyIn,parsedCurrencyOut):null,routev2:!isV3Route(route)?new Route(route.map(parsePair),parsedCurrencyIn,parsedCurrencyOut):null,inputAmount:CurrencyAmount$2.fromRawAmount(parsedCurrencyIn,rawAmountIn),outputAmount:CurrencyAmount$2.fromRawAmount(parsedCurrencyOut,rawAmountOut)}})}catch(e){console.error(e);return undefined}}function transformRoutesToTrade(route,tradeType,gasUseEstimateUSD){var _a,_b;return new InterfaceTrade({v2Routes:(_a=route===null||route===void 0?void 0:route.filter(function(r){return r.routev2!==null}).map(function(_a){var routev2=_a.routev2,inputAmount=_a.inputAmount,outputAmount=_a.outputAmount;return{routev2:routev2,inputAmount:inputAmount,outputAmount:outputAmount}}))!==null&&_a!==void 0?_a:[],v3Routes:(_b=route===null||route===void 0?void 0:route.filter(function(r){return r.routev3!==null}).map(function(_a){var routev3=_a.routev3,inputAmount=_a.inputAmount,outputAmount=_a.outputAmount;return{routev3:routev3,inputAmount:inputAmount,outputAmount:outputAmount}}))!==null&&_b!==void 0?_b:[],tradeType:tradeType,gasUseEstimateUSD:gasUseEstimateUSD})}var parseToken=function(_a){var address=_a.address,chainId=_a.chainId,decimals=_a.decimals,symbol=_a.symbol;return new Token$1(chainId,address,parseInt(decimals.toString()),symbol)};var parsePool=function(_a){var fee=_a.fee,sqrtRatioX96=_a.sqrtRatioX96,liquidity=_a.liquidity,tickCurrent=_a.tickCurrent,tokenIn=_a.tokenIn,tokenOut=_a.tokenOut;return new Pool(parseToken(tokenIn),parseToken(tokenOut),parseInt(fee),sqrtRatioX96,liquidity,parseInt(tickCurrent))};var parsePair=function(_a){var reserve0=_a.reserve0,reserve1=_a.reserve1;return new Pair(CurrencyAmount$2.fromRawAmount(parseToken(reserve0.token),reserve0.quotient),CurrencyAmount$2.fromRawAmount(parseToken(reserve1.token),reserve1.quotient))};function isV3Route(route){return route[0].type==="v3-pool"}var __awaiter$P=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$P=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$c=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var _a$3,_b$3;var STABLECOIN_AMOUNT_OUT=(_a$3={},_a$3[SupportedChainId.MAINNET]=CurrencyAmount$2.fromRawAmount(USDC_MAINNET$1,1e11),_a$3);function getStablecoinAmountFromFiatValue(fiatValue,chainId){var _a;var stablecoin=chainId?(_a=STABLECOIN_AMOUNT_OUT[chainId])===null||_a===void 0?void 0:_a.currency:undefined;return function(){if(fiatValue===null||fiatValue===undefined||!chainId||!stablecoin){return undefined}var parsedForDecimals=parseFloat(fiatValue).toFixed(stablecoin.decimals).toString();try{return tryParseCurrencyAmount(parsedForDecimals,stablecoin)}catch(error){return undefined}}}var DistributionPercents=(_b$3={},_b$3[SupportedChainId.MAINNET]=10,_b$3[SupportedChainId.OPTIMISM]=10,_b$3[SupportedChainId.OPTIMISTIC_KOVAN]=10,_b$3[SupportedChainId.ARBITRUM_ONE]=25,_b$3[SupportedChainId.ARBITRUM_RINKEBY]=25,_b$3);var DEFAULT_DISTRIBUTION_PERCENT=10;function getConfig(chainId,protocol){var _a;return{protocols:protocol==="V2"?[Protocol.V2]:[Protocol.V3],distributionPercent:(_a=chainId&&DistributionPercents[chainId])!==null&&_a!==void 0?_a:DEFAULT_DISTRIBUTION_PERCENT}}function getClientSideSmartOrderRouterTrade(_a){return __awaiter$P(this,arguments,void 0,function(_b){var _c,currencyIn,currencyOut,queryArgs,chainId,params,config,getQuoteResult,quoteResult,route,gasUseEstimateUSD,getTrade,trade,otherAmount;var _this=this;var _d,_e,_f,_g,_h;var library=_b.library,tradeType=_b.tradeType,protocol=_b.protocol,amountSpecified=_b.amountSpecified,otherCurrency=_b.otherCurrency;return __generator$P(this,function(_j){switch(_j.label){case 0:_c=__read$c(tradeType===TradeType$2.EXACT_INPUT?[amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency,otherCurrency]:[otherCurrency,amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency],2),currencyIn=_c[0],currencyOut=_c[1];queryArgs=getRoutingAPIArguments({tokenIn:currencyIn,tokenOut:currencyOut,amount:amountSpecified,tradeType:tradeType,useClientSideRouter:true});chainId=amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency.chainId;params=chainId&&library&&{chainId:chainId,provider:library};config=getConfig(chainId,protocol);getQuoteResult=function(){return __awaiter$P(_this,void 0,void 0,function(){var quoteResult_1,e_1;return __generator$P(this,function(_a){switch(_a.label){case 0:if(!queryArgs||!params)return[2,{error:undefined}];_a.label=1;case 1:_a.trys.push([1,4,,5]);return[4,Promise.resolve().then(function(){return clientSideSmartOrderRouter})];case 2:return[4,_a.sent().getClientSideQuote(queryArgs,params,config)];case 3:quoteResult_1=_a.sent();return[2,new Promise(function(resolve){return setImmediate(function(){return resolve(quoteResult_1)})})];case 4:e_1=_a.sent();console.error({error:e_1});return[2,{error:true}];case 5:return[2]}})})};return[4,getQuoteResult()];case 1:quoteResult=_j.sent();route=computeRoutes(currencyIn,currencyOut,tradeType,quoteResult.data);gasUseEstimateUSD=(_e=getStablecoinAmountFromFiatValue((_d=quoteResult===null||quoteResult===void 0?void 0:quoteResult.data)===null||_d===void 0?void 0:_d.gasUseEstimateUSD,chainId)())!==null&&_e!==void 0?_e:null;getTrade=function(){if(route){try{return route&&transformRoutesToTrade(route,tradeType,gasUseEstimateUSD)}catch(e){console.debug("transformRoutesToTrade failed: ",e)}}return};trade=getTrade();if(!currencyIn||!currencyOut){return[2,{state:TradeState.INVALID,trade:undefined}]}if(!trade){return[2,{state:TradeState.LOADING,trade:undefined}]}otherAmount=undefined;if((_f=quoteResult.data)===null||_f===void 0?void 0:_f.route){switch(tradeType){case TradeType$2.EXACT_INPUT:otherAmount=CurrencyAmount$2.fromRawAmount(currencyOut,(_g=quoteResult.data)===null||_g===void 0?void 0:_g.amount);break;case TradeType$2.EXACT_OUTPUT:otherAmount=CurrencyAmount$2.fromRawAmount(currencyIn,(_h=quoteResult.data)===null||_h===void 0?void 0:_h.amount);break}}if(!otherAmount||!route||route.length===0){return[2,{state:TradeState.NO_ROUTE_FOUND,trade:undefined}]}if(trade){return[2,{state:TradeState.VALID,trade:trade}]}return[2,{state:TradeState.INVALID,trade:undefined}]}})})}var FIVE_TENTHS_PERCENT=new Percent$1(50,1e4);var DEFAULT_AUTO_SLIPPAGE=FIVE_TENTHS_PERCENT;function toPercent(maxSlippage){var numerator=Math.floor(maxSlippage*100);return new Percent$1(numerator,1e4)}var DEFAULT_SLIPPAGE={auto:true,allowed:DEFAULT_AUTO_SLIPPAGE};function getSlippage(maxSlippage){if(!maxSlippage)return DEFAULT_SLIPPAGE;if(maxSlippage>100)return{auto:true,allowed:toPercent(100)};if(maxSlippage<0)return{auto:true,allowed:toPercent(0)};return{auto:true,allowed:toPercent(maxSlippage)}}new Percent$1(1,2);new Percent$1(1,100);function toHex$1(currencyAmount){return currencyAmount.quotient.toString(10)}var ZERO_HEX$1="0x0";var getV2SwapCallParamsFromTrade=function(trade,options){var etherIn=trade.inputAmount.currency.isNative;var etherOut=trade.outputAmount.currency.isNative;!!(etherIn&&etherOut)?invariant(false,"ETHER_IN_OUT"):void 0;!(!("ttl"in options)||options.ttl>0)?invariant(false,"TTL"):void 0;var to=validateAndParseAddress$1(options.recipient);var amountIn=toHex$1(trade.maximumAmountIn(options.allowedSlippage));var amountOut=toHex$1(trade.minimumAmountOut(options.allowedSlippage));var path=trade.routes[0].path.map(function(token){return token.address});var paramsIn={amountIn:amountIn,amountOutMin:amountOut,path:path,to:to};var paramsOut={amountOut:amountOut,amountInMax:amountIn,path:path,to:to};if(trade.tradeType===TradeType$2.EXACT_INPUT){return{params:paramsIn,value:ZERO_HEX$1}}else{return{params:paramsOut,value:ZERO_HEX$1}}};function getSwapCallV2Params(_a){var library=_a.library,account=_a.account,chainId=_a.chainId,trade=_a.trade,allowedSlippage=_a.allowedSlippage,deadline=_a.deadline;var recipient=account;var routerContract=getV2RouterContract(library,account,chainId);if(!trade||!recipient||!library||!account||!chainId||!deadline)return undefined;if(!routerContract)return undefined;var params=getV2SwapCallParamsFromTrade(trade,{feeOnTransfer:false,allowedSlippage:allowedSlippage,recipient:recipient,deadline:deadline.toNumber()});return{address:routerContract.address,params:params.params,value:params.value}}var SwapCallbackState$1;(function(SwapCallbackState){SwapCallbackState[SwapCallbackState["INVALID"]=0]="INVALID";SwapCallbackState[SwapCallbackState["LOADING"]=1]="LOADING";SwapCallbackState[SwapCallbackState["VALID"]=2]="VALID"})(SwapCallbackState$1||(SwapCallbackState$1={}));var getSwapCallback$1=function(_a){var library=_a.library,account=_a.account,chainId=_a.chainId,trade=_a.trade,allowedSlippage=_a.allowedSlippage,deadline=_a.deadline,protocol=_a.protocol;if(protocol==="V2"){var swapCalls=getSwapCallV2Params({library:library,account:account,chainId:chainId,trade:trade,allowedSlippage:allowedSlippage,deadline:deadline});return swapCalls}return undefined};function getDefaultTransactionTtl(_a){var chainId=_a.chainId;if(chainId&&L2_CHAIN_IDS.includes(chainId))return L2_DEADLINE_FROM_NOW/60;return DEFAULT_DEADLINE_FROM_NOW/60}function getTransactionDeadline(_a){var chainId=_a.chainId,blockTimestamp=_a.blockTimestamp;var defaultTtl=getDefaultTransactionTtl({chainId:chainId});return blockTimestamp===null||blockTimestamp===void 0?void 0:blockTimestamp.add(defaultTtl*60)}var __awaiter$O=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$O=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var getSwapCall$1=function(_a){return __awaiter$O(void 0,[_a],void 0,function(_b){var trade,slippage,deadline;var library=_b.library,account=_b.account,swapInfo=_b.swapInfo,chainId=_b.chainId,blockTimestamp=_b.blockTimestamp,protocol=_b.protocol;return __generator$O(this,function(_c){trade=swapInfo.trade,slippage=swapInfo.slippage;deadline=getTransactionDeadline({chainId:chainId,blockTimestamp:blockTimestamp});return[2,getSwapCallback$1({library:library,account:account,chainId:chainId,trade:trade.trade,allowedSlippage:slippage.allowed,deadline:deadline,protocol:protocol})]})})};var Field;(function(Field){Field["INPUT"]="INPUT";Field["OUTPUT"]="OUTPUT"})(Field||(Field={}));var __extends$7=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign$l=undefined&&undefined.__assign||function(){__assign$l=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$l.apply(this,arguments)};var __awaiter$N=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$N=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$b=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$8=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var IUniswapV2Router02ABI=IUniswapV2Router02Json.abi;var INVALID_TRADE={state:TradeState.INVALID,trade:undefined};var UNISWAP_TYPE;(function(UNISWAP_TYPE){UNISWAP_TYPE["EXACT_INPUT"]="EXACT_INPUT";UNISWAP_TYPE["EXACT_OUTPUT"]="EXACT_OUTPUT"})(UNISWAP_TYPE||(UNISWAP_TYPE={}));var REJECT_PREV_REQUEST_ERROR$3="reject previous values";var Uniswap=function(_super){__extends$7(Uniswap,_super);function Uniswap(){var _this=_super.apply(this,__spreadArray$8([],__read$b(arguments),false))||this;_this.MINIMUM_LIQUIDITY=Math.pow(10,3);_this.promiseReject=undefined;_this.getSwapParams=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var swapValues,e_1;var input=_b.input,output=_b.output,slippage=_b.slippage;return __generator$N(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);return[4,this.getLastSwapParamsV2({input:input,output:output,slippage:slippage})];case 1:swapValues=_c.sent();return[2,swapValues];case 2:e_1=_c.sent();if(e_1===REJECT_PREV_REQUEST_ERROR$3){return[2,undefined]}throw new Error(e_1);case 3:return[2]}})})};_this.getAmountParams=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var path,e_2;var input=_b.input,output=_b.output;return __generator$N(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);return[4,this.getLastInputValuesV2({input:input,output:output})];case 1:path=_c.sent();return[2,path];case 2:e_2=_c.sent();if(e_2===REJECT_PREV_REQUEST_ERROR$3){return[2,undefined]}throw new Error(e_2);case 3:return[2]}})})};_this.getPairAddress=function(_a){var token0=_a.token0,token1=_a.token1;var isToken0Native=getIsNative(token0);var inputToken=token0;if(isToken0Native){inputToken=WETH9$1[Number(_this.chainId)].address}var isToken1Native=getIsNative(token1);var outputToken=token1;if(isToken1Native){outputToken=WETH9$1[Number(_this.chainId)].address}var pairAddress=getCreate2Address(FACTORY_ADDRESS_MAP[Number(_this.chainId)],keccak256$2(["bytes"],[pack(["address","address"],inputToken<outputToken?[inputToken,outputToken]:[outputToken,inputToken])]),INIT_CODE_HASH$1);return pairAddress};_this.isPairExist=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var pairAddress,contract;var token0=_b.token0,token1=_b.token1;return __generator$N(this,function(_c){switch(_c.label){case 0:pairAddress=this.getPairAddress({token0:token0,token1:token1});_c.label=1;case 1:_c.trys.push([1,3,,4]);contract=new Contract(pairAddress,uniswapV2PairContract,this.library);return[4,contract.factory()];case 2:_c.sent();return[2,true];case 3:_c.sent();return[2,false];case 4:return[2]}})})};_this.getTotalSupply=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var pairAddress,isExist,contract,totalSupply;var token0=_b.token0,token1=_b.token1;return __generator$N(this,function(_c){switch(_c.label){case 0:pairAddress=this.getPairAddress({token0:token0,token1:token1});return[4,this.isPairExist({token0:token0,token1:token1})];case 1:isExist=_c.sent();if(!isExist)return[2];contract=new Contract(pairAddress,["function totalSupply() view returns (uint256)"],this.library);return[4,contract.totalSupply()];case 2:totalSupply=_c.sent();return[2,totalSupply]}})})};_this.getReserves=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var pairAddress,isExist,contract,reserves;var token0=_b.token0,token1=_b.token1;return __generator$N(this,function(_c){switch(_c.label){case 0:pairAddress=this.getPairAddress({token0:token0,token1:token1});return[4,this.isPairExist({token0:token0,token1:token1})];case 1:isExist=_c.sent();if(!isExist)return[2,undefined];contract=new Contract(pairAddress,["function getReserves() view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)"],this.library);return[4,contract.getReserves()];case 2:reserves=_c.sent();if(!reserves||!reserves.length)return[2,undefined];return[2,token0<token1?[reserves[0].toString(),reserves[1].toString(),token0,token1]:[reserves[1].toString(),reserves[0].toString(),token0,token1]]}})})};_this.getLPTokenBalance=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var pairAddress,isExist,contract,balance;var token0=_b.token0,token1=_b.token1,address=_b.address;return __generator$N(this,function(_c){switch(_c.label){case 0:pairAddress=this.getPairAddress({token0:token0,token1:token1});return[4,this.isPairExist({token0:token0,token1:token1})];case 1:isExist=_c.sent();if(!isExist)return[2,undefined];contract=new Contract(pairAddress,["function balanceOf(address _owner) view returns (uint256 balance)"],this.library);return[4,contract.balanceOf(address)];case 2:balance=_c.sent();if(!balance)return[2,undefined];return[2,balance.toString()]}})})};_this.getToken1LiquidityRate=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var isToken0Native,inputToken,isToken1Native,outputToken,isExist,reserves,precision,rateEth;var token0=_b.token0,token1=_b.token1;return __generator$N(this,function(_c){switch(_c.label){case 0:isToken0Native=getIsNative(token0);inputToken=token0;if(isToken0Native){inputToken=WETH9$1[Number(this.chainId)].address}isToken1Native=getIsNative(token1);outputToken=token1;if(isToken1Native){outputToken=WETH9$1[Number(this.chainId)].address}return[4,this.isPairExist({token0:inputToken,token1:outputToken})];case 1:isExist=_c.sent();if(!isExist)return[2,undefined];return[4,this.getReserves({token0:inputToken,token1:outputToken})];case 2:reserves=_c.sent();if(!reserves)return[2,undefined];precision=18;rateEth=new BigDecimal(reserves[1]).divide(new BigDecimal(reserves[0]),precision).getValue();return[2,rateEth]}})})};_this.estimateLiquidityOutputOnAddLiquidity=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var totalSupplyBignum,totalSupply,amount0BN,amount1BN,reserves,a0,a1,compareTo;var token0=_b.token0,token1=_b.token1,amount0=_b.amount0,amount1=_b.amount1;return __generator$N(this,function(_c){switch(_c.label){case 0:return[4,this.getTotalSupply({token0:token0,token1:token1})];case 1:totalSupplyBignum=_c.sent();totalSupply=totalSupplyBignum?totalSupplyBignum.toString():undefined;if(!(!totalSupply||totalSupply==="0"))return[3,2];amount0BN=new BigNumber(amount0);amount1BN=new BigNumber(amount1);return[2,amount0BN.multipliedBy(amount1BN).sqrt().minus(this.MINIMUM_LIQUIDITY).toFixed(0)];case 2:return[4,this.getReserves({token0:token0,token1:token1})];case 3:reserves=_c.sent();if(!reserves)return[2,undefined];a0=new BigDecimal(amount0).multiply(new BigDecimal(totalSupply)).divide(new BigDecimal(reserves[0]),18).floor().getValue();a1=new BigDecimal(amount1).multiply(new BigDecimal(totalSupply)).divide(new BigDecimal(reserves[1]),18).floor().getValue();compareTo=BigDecimal.compareTo(a0,a1);return[2,compareTo<1?a0:a1]}})})};_this.estimateTokensAmountOnRemoveLiquidity=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var totalSupplyBignum,totalSupply,reserves,a0,a1;var token0=_b.token0,token1=_b.token1,liquidity=_b.liquidity;return __generator$N(this,function(_c){switch(_c.label){case 0:return[4,this.getTotalSupply({token0:token0,token1:token1})];case 1:totalSupplyBignum=_c.sent();totalSupply=totalSupplyBignum?totalSupplyBignum.toString():undefined;if(!totalSupply||totalSupply==="0"){return[2,undefined]}return[4,this.getReserves({token0:token0,token1:token1})];case 2:reserves=_c.sent();if(!reserves){return[2,undefined]}a0=new BigDecimal(liquidity).multiply(new BigDecimal(reserves[0])).divide(new BigDecimal(totalSupply),18).floor().getValue();a1=new BigDecimal(liquidity).multiply(new BigDecimal(reserves[1])).divide(new BigDecimal(totalSupply),18).floor().getValue();return[2,[a0,a1]]}})})};_this.getPathAmountOut=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var contract,res,e_4;var amountIn=_b.amountIn,path=_b.path;return __generator$N(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);contract=new Contract(ROUTER_V2_ADDRESS[String(this.chainId)],IUniswapV2Router02ABI,this.library);return[4,contract.getAmountsOut(amountIn,path)];case 1:res=_c.sent();return[2,res];case 2:e_4=_c.sent();console.error({error:e_4});return[2];case 3:return[2]}})})};_this.getPathAmountIn=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var contract,res,e_5;var amountOut=_b.amountOut,path=_b.path;return __generator$N(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);contract=new Contract(ROUTER_V2_ADDRESS[String(this.chainId)],IUniswapV2Router02ABI,this.library);return[4,contract.getAmountsIn(amountOut,path)];case 1:res=_c.sent();return[2,res];case 2:e_5=_c.sent();console.error({error:e_5});return[2];case 3:return[2]}})})};_this.getToken=function(swapToken){var chainId=_this.chainId;return getToken$3(swapToken,chainId)};_this.getLastInputValuesV2=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var _this=this;var _c;var input=_b.input,output=_b.output;return __generator$N(this,function(_d){(_c=this.promiseReject)===null||_c===void 0?void 0:_c.call(this,REJECT_PREV_REQUEST_ERROR$3);return[2,new Promise(function(resolve,regect){return __awaiter$N(_this,void 0,void 0,function(){var currencyIn,currencyOut,invalideTrade,isExactIn,methodName,tradeType,amount,amountSpecified,values,path,initParams;var _a,_b,_c,_d,_e;return __generator$N(this,function(_f){switch(_f.label){case 0:this.promiseReject=regect;currencyIn=this.getToken(input.currency);currencyOut=this.getToken(output.currency);invalideTrade=this.validateSwapInput({input:input,output:output});isExactIn=input.amount?true:false;methodName=isExactIn?"getAmountsOut":"getAmountsIn";if(invalideTrade){return[2,resolve(__assign$l(__assign$l({},invalideTrade),{methodName:methodName}))]}tradeType=isExactIn?TradeType$2.EXACT_INPUT:TradeType$2.EXACT_OUTPUT;amount=isExactIn?input.amount:output.amount;amountSpecified=weiToCurrency(amount,isExactIn?currencyIn:currencyOut);return[4,this.getBestTrade({tradeType:tradeType,amountSpecified:amountSpecified,otherCurrency:isExactIn?currencyOut:currencyIn,protocol:"V2"})];case 1:values=_f.sent();path=(_a=values===null||values===void 0?void 0:values.trade)===null||_a===void 0?void 0:_a.routes[0].path.map(function(token){return token.address});initParams={inputAmount:(_b=values===null||values===void 0?void 0:values.trade)===null||_b===void 0?void 0:_b.inputAmount.quotient.toString(10),outputAmount:(_c=values===null||values===void 0?void 0:values.trade)===null||_c===void 0?void 0:_c.outputAmount.quotient.toString(10),methodName:methodName,protocol:"UNISWAP",plugin:getPlugin$2({plugins:Uniswap$1.getters,methodName:methodName}),state:this.getTradeState((values===null||values===void 0?void 0:values.state)||0)};if(isExactIn){resolve(__assign$l(__assign$l({},initParams),{params:{methodParams:{path:path,amountIn:(_d=values===null||values===void 0?void 0:values.trade)===null||_d===void 0?void 0:_d.inputAmount.quotient.toString(10)}}}))}resolve(__assign$l(__assign$l({},initParams),{params:{methodParams:{path:path,amountOut:(_e=values===null||values===void 0?void 0:values.trade)===null||_e===void 0?void 0:_e.outputAmount.quotient.toString(10)}}}));return[2]}})})})]})})};_this.getLastSwapParamsV2=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var _this=this;var _c;var input=_b.input,output=_b.output,slippage=_b.slippage;return __generator$N(this,function(_d){(_c=this.promiseReject)===null||_c===void 0?void 0:_c.call(this,REJECT_PREV_REQUEST_ERROR$3);return[2,new Promise(function(resolve,regect){return __awaiter$N(_this,void 0,void 0,function(){var values;return __generator$N(this,function(_a){switch(_a.label){case 0:this.promiseReject=regect;return[4,this.getSwapValuesV2({input:input,output:output,slippage:slippage})];case 1:values=_a.sent();resolve(values);return[2]}})})})]})})};_this.getSwapValuesV2=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var input=_b.input,output=_b.output,slippage=_b.slippage;return __generator$N(this,function(_c){return[2,this.getSwapValues({input:input,output:output,protocol:"V2",slippage:slippage})]})})};_this.getSwapValuesV3=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var input=_b.input,output=_b.output;return __generator$N(this,function(_c){return[2,this.getSwapValues({input:input,output:output,protocol:"V3"})]})})};_this.getTradeState=function(stateindex){switch(stateindex){case 3:return"VALID";default:return"INVALID"}};_this.validateSwapInput=function(_a){var _b,_c;var input=_a.input,output=_a.output;var invalidTrade={inputAmount:"0",outputAmount:"0",state:"INVALID",params:undefined,INPUT:{currency:undefined,amount:undefined},OUTPUT:{currency:undefined,amount:undefined},trade:undefined,slippage:undefined,type:undefined,methodName:undefined,protocol:"UNISWAP"};var WETH_ADDRESS=WETH_ADDRESS_MAP[_this.chainId];if(input.currency.address===WETH_ADDRESS&&getIsNative(output.currency.address)||getIsNative(input.currency.address)&&output.currency.address===WETH_ADDRESS){console.error("To wrap or unwrap ETH, please use the Ether Wrap/Unwrap Plugin");return invalidTrade}if(((_b=input.currency.address)===null||_b===void 0?void 0:_b.toLowerCase())===((_c=output.currency.address)===null||_c===void 0?void 0:_c.toLowerCase())){console.error("Invalid trade");return invalidTrade}if(!input.currency){console.error("input currency required");return invalidTrade}if(!output.currency){console.error("output currency required");return invalidTrade}if(!input.amount&&!output.amount){return invalidTrade}return undefined};_this.getSwapValues=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var invalideTrade,_c,library,account,chainId,currencyIn,currencyOut,isExactIn,blockTimestamp,swapInfo,swapCall,isExactEthInput,params,methodName,swap;var _d,_e,_f;var input=_b.input,output=_b.output,protocol=_b.protocol,slippage=_b.slippage;return __generator$N(this,function(_g){switch(_g.label){case 0:invalideTrade=this.validateSwapInput({input:input,output:output});if(invalideTrade){return[2,invalideTrade]}_c=this,library=_c.library,account=_c.account,chainId=_c.chainId;currencyIn=this.getToken(input.currency);currencyOut=this.getToken(output.currency);isExactIn=Boolean(input.amount);return[4,this.getLastBlock()];case 1:blockTimestamp=_g.sent().blockTimestamp;return[4,this.getSwapInfo({amount:input.amount||output.amount||"0",currencyIn:currencyIn,currencyOut:currencyOut,isExactIn:isExactIn,protocol:protocol,slippage:slippage})];case 2:swapInfo=_g.sent();return[4,getSwapCall$1({library:library,chainId:chainId,account:account,swapInfo:swapInfo,blockTimestamp:blockTimestamp,protocol:protocol})];case 3:swapCall=_g.sent();isExactEthInput=this.getToken(input.currency).isNative&&isExactIn;params=swapCall===null||swapCall===void 0?void 0:swapCall.params;methodName=getMethodName({isExactInput:isExactIn,isInputNative:this.getToken(input.currency).isNative,isOutputNative:this.getToken(output.currency).isNative,protocol:protocol,params:params});swap=__assign$l(__assign$l({},swapInfo),{inputAmount:(_d=swapInfo.INPUT.amount)===null||_d===void 0?void 0:_d.quotient.toString(10),outputAmount:(_e=swapInfo.OUTPUT.amount)===null||_e===void 0?void 0:_e.quotient.toString(10),state:this.getTradeState(((_f=swapInfo===null||swapInfo===void 0?void 0:swapInfo.trade)===null||_f===void 0?void 0:_f.state)||0),params:{methodParams:swapCall===null||swapCall===void 0?void 0:swapCall.params,value:isExactEthInput&&protocol==="V2"?params.amountIn:undefined},methodName:methodName,protocol:"UNISWAP",plugin:getPlugin$2({plugins:__assign$l({},Uniswap$1.actions),methodName:methodName})});return[2,swap]}})})};_this.getSwapInfo=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var parsedAmount,hasAmounts,trade,amountIn,amountOut;var _c;var _d,_e,_f;var amount=_b.amount,currencyIn=_b.currencyIn,currencyOut=_b.currencyOut,protocol=_b.protocol,isExactIn=_b.isExactIn,slippage=_b.slippage;return __generator$N(this,function(_g){switch(_g.label){case 0:parsedAmount=weiToCurrency(amount,(_d=isExactIn?currencyIn:currencyOut)!==null&&_d!==void 0?_d:undefined);hasAmounts=currencyIn||currencyOut;return[4,this.getBestTrade({tradeType:isExactIn?TradeType$2.EXACT_INPUT:TradeType$2.EXACT_OUTPUT,protocol:protocol,amountSpecified:hasAmounts?parsedAmount:undefined,otherCurrency:isExactIn?currencyOut:currencyIn})];case 1:trade=_g.sent();amountIn=isExactIn?parsedAmount:(_e=trade===null||trade===void 0?void 0:trade.trade)===null||_e===void 0?void 0:_e.inputAmount;amountOut=!isExactIn?parsedAmount:(_f=trade===null||trade===void 0?void 0:trade.trade)===null||_f===void 0?void 0:_f.outputAmount;return[2,(_c={},_c[Field.INPUT]={currency:currencyIn,amount:amountIn},_c[Field.OUTPUT]={currency:currencyOut,amount:amountOut},_c.trade=trade,_c.slippage=getSlippage(slippage),_c.type=isExactIn?UNISWAP_TYPE.EXACT_INPUT:UNISWAP_TYPE.EXACT_OUTPUT,_c)]}})})};_this.getBestTrade=function(_a){return __awaiter$N(_this,[_a],void 0,function(_b){var library,clientSORTradeObject,tradeObject,lastTrade,state,trade,_c,currencyIn,currencyOut,isStale;var _d,_e;var tradeType=_b.tradeType,amountSpecified=_b.amountSpecified,protocol=_b.protocol,otherCurrency=_b.otherCurrency;return __generator$N(this,function(_f){switch(_f.label){case 0:library=this.library;return[4,getClientSideSmartOrderRouterTrade({library:library,tradeType:tradeType,protocol:protocol,amountSpecified:amountSpecified,otherCurrency:otherCurrency})];case 1:clientSORTradeObject=_f.sent();tradeObject=clientSORTradeObject;lastTrade=tradeObject===null||tradeObject===void 0?void 0:tradeObject.trade;if(!tradeObject)return[2];state=tradeObject.state,trade=tradeObject.trade;if(state===TradeState.INVALID)return[2,INVALID_TRADE];if(state!==TradeState.LOADING&&state!==TradeState.SYNCING||trade)return[2,tradeObject];_c=__read$b(tradeType===TradeType$2.EXACT_INPUT?[amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency,otherCurrency]:[otherCurrency,amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency],2),currencyIn=_c[0],currencyOut=_c[1];isStale=currencyIn&&!((_d=lastTrade===null||lastTrade===void 0?void 0:lastTrade.inputAmount)===null||_d===void 0?void 0:_d.currency.equals(currencyIn))||currencyOut&&!((_e=lastTrade===null||lastTrade===void 0?void 0:lastTrade.outputAmount)===null||_e===void 0?void 0:_e.currency.equals(currencyOut));if(isStale)return[2,tradeObject];return[2,{state:state,trade:lastTrade}]}})})};return _this}return Uniswap}(Config);var SWAP_ROUTER_ADDRESS="0xE592427A0AEce92De3Edee1F18E0157C05861564";var SWAP_ROUTER_ADDRESSES=[{address:SWAP_ROUTER_ADDRESS,chainId:1},{address:SWAP_ROUTER_ADDRESS,chainId:5},{address:SWAP_ROUTER_ADDRESS,chainId:42161},{address:SWAP_ROUTER_ADDRESS,chainId:421613},{address:"0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E",chainId:11155111}];var NONFUNGIBLE_POSITION_MANAGER_ADDRESS="0xC36442b4a4522E871399CD717aBDD847Ab11FE88";var NONFUNGIBLE_POSITION_MANAGER_ADDRESSES=[{address:NONFUNGIBLE_POSITION_MANAGER_ADDRESS,chainId:1},{address:NONFUNGIBLE_POSITION_MANAGER_ADDRESS,chainId:5},{address:NONFUNGIBLE_POSITION_MANAGER_ADDRESS,chainId:42161},{address:NONFUNGIBLE_POSITION_MANAGER_ADDRESS,chainId:421613}];var FACTORY_ADDRESS="0x1F98431c8aD98523631AE4a59f267346ea31F984";var IncreaseLiquidity=createPlugin$1({protocol:"UNISWAP_V3",type:"ACTION",method:"increaseLiquidity",supportedContracts:NONFUNGIBLE_POSITION_MANAGER_ADDRESSES,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{params_tuple:{tokenId:new FctValue({destination:"eip712_tokenId"}),amount0Desired:new FctValue({destination:"wei_amount"}),amount1Desired:new FctValue({destination:"wei_amount"}),amount0Min:new FctValue({destination:"wei_amount"}),amount1Min:new FctValue({destination:"wei_amount"}),deadline:new FctTimestamp({})}}},output:{liquidity:new FctValue({innerIndex:0}),amount0:new FctValue({innerIndex:1}),amount1:new FctValue({innerIndex:2})}}},initParams:{methodParams:{params_tuple:{deadline:{type:"global",id:"blockTimestamp"},amount0Min:"0",amount1Min:"0"}}}});var Mint$1=createPlugin$1({protocol:"UNISWAP_V3",type:"ACTION",method:"mint",supportedContracts:NONFUNGIBLE_POSITION_MANAGER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{params_tuple:{token0:new FctAddress({destination:"erc20",options:getAllCurrencies({chainId:chainId})}),token1:new FctAddress({destination:"erc20",options:getAllCurrencies({chainId:chainId})}),fee:new FctValue24({}),tickLower:new FctInteger24({}),tickUpper:new FctInteger24({}),amount0Desired:new FctValue({destination:"wei_amount"}),amount1Desired:new FctValue({destination:"wei_amount"}),amount0Min:new FctValue({destination:"wei_amount"}),amount1Min:new FctValue({destination:"wei_amount"}),recipient:new FctAddress({}),deadline:new FctTimestamp({})}}},output:{tokenId:new FctValue({innerIndex:0,destination:"eip712_tokenId"}),liquidity:new FctValue({innerIndex:1}),amount0:new FctValue({innerIndex:2,destination:"wei_amount"}),amount1:new FctValue({innerIndex:3,destination:"wei_amount"})}}},initParams:{methodParams:{params_tuple:{deadline:{type:"global",id:"blockTimestamp"}}}},requiredApprovals:function(params){var token0=params===null||params===void 0?void 0:params.methodParams["params_tuple"].token0.value;var token1=params===null||params===void 0?void 0:params.methodParams["params_tuple"].token1.value;return[{to:token0,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams["params_tuple"].amount0Desired.value},method:"approve",protocol:"ERC20"},{to:token1,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams["params_tuple"].amount1Desired.value},method:"approve",protocol:"ERC20"}]}});var __read$a=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$7=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var ZERO_HEX="0x0";var getV3SwapCallParamsFromTrade=function(trade,options){!(!("ttl"in options)||options.ttl>0)?invariant(false,"TTL"):void 0;var recipient=validateAndParseAddress$1(options.recipient);var amountIn=toHex$1(trade.maximumAmountIn(options.allowedSlippage));var amountOut=toHex$1(trade.minimumAmountOut(options.allowedSlippage));if(trade.routes[0].pools.length===1){var route=trade.routes[0];var pool=route.pools[0];var tokenIn=route.input.address;var tokenOut=route.output.address;if(trade.tradeType===TradeType$2.EXACT_INPUT){var paramsExactInputSingle={params_tuple:{tokenIn:tokenIn,tokenOut:tokenOut,fee:pool.fee,recipient:recipient,amountIn:amountIn,amountOutMinimum:amountOut,sqrtPriceLimitX96:"0"}};return{params:paramsExactInputSingle,value:ZERO_HEX}}var paramsExactOutputSingle={params_tuple:{tokenIn:tokenIn,tokenOut:tokenOut,fee:pool.fee,recipient:recipient,amountOut:amountOut,amountInMaximum:amountIn,sqrtPriceLimitX96:"0"}};return{params:paramsExactOutputSingle,value:ZERO_HEX}}var types=trade.routes[0].path.reduce(function(acc,token,index){if(index===trade.routes[0].path.length-1){return __spreadArray$7(__spreadArray$7([],__read$a(acc),false),["address"],false)}return __spreadArray$7(__spreadArray$7([],__read$a(acc),false),["address","uint24"],false)},[]);var values=trade.routes[0].path.reduce(function(acc,token,index){if(index===trade.routes[0].path.length-1){return __spreadArray$7(__spreadArray$7([],__read$a(acc),false),[token.address],false)}var pool=trade.routes[0].pools[index];return __spreadArray$7(__spreadArray$7([],__read$a(acc),false),[token.address,pool.fee.toString()],false)},[]);if(trade.tradeType===TradeType$2.EXACT_INPUT){var paramsExactInput={params_tuple:{path:pack(types,values),recipient:recipient,amountIn:amountIn,amountOutMinimum:amountOut}};return{params:paramsExactInput,value:ZERO_HEX}}var paramsExactOutput={params_tuple:{path:pack(types,values.reverse()),recipient:recipient,amountOut:amountOut,amountInMaximum:amountIn}};return{params:paramsExactOutput,value:ZERO_HEX}};function getSwapCallV3Params(_a){var library=_a.library,account=_a.account,chainId=_a.chainId,trade=_a.trade,allowedSlippage=_a.allowedSlippage,deadline=_a.deadline;var recipient=account;var routerContract=getV3RouterContract(library,account,chainId);if(!trade||!recipient||!library||!account||!chainId||!deadline)return undefined;if(!routerContract)return undefined;var params=getV3SwapCallParamsFromTrade(trade,{feeOnTransfer:false,allowedSlippage:allowedSlippage,recipient:recipient,deadline:deadline.toNumber()});return{address:routerContract.address,params:params.params,value:params.value}}var SwapCallbackState;(function(SwapCallbackState){SwapCallbackState[SwapCallbackState["INVALID"]=0]="INVALID";SwapCallbackState[SwapCallbackState["LOADING"]=1]="LOADING";SwapCallbackState[SwapCallbackState["VALID"]=2]="VALID"})(SwapCallbackState||(SwapCallbackState={}));var getSwapCallback=function(_a){var library=_a.library,account=_a.account,chainId=_a.chainId,trade=_a.trade,allowedSlippage=_a.allowedSlippage,deadline=_a.deadline,protocol=_a.protocol;if(protocol==="V3"){var swapCalls=getSwapCallV3Params({library:library,account:account,chainId:chainId,trade:trade,allowedSlippage:allowedSlippage,deadline:deadline});return swapCalls}return undefined};var __awaiter$M=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$M=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var getSwapCall=function(_a){return __awaiter$M(void 0,[_a],void 0,function(_b){var trade,slippage,deadline;var library=_b.library,account=_b.account,swapInfo=_b.swapInfo,chainId=_b.chainId,blockTimestamp=_b.blockTimestamp,protocol=_b.protocol;return __generator$M(this,function(_c){trade=swapInfo.trade,slippage=swapInfo.slippage;deadline=getTransactionDeadline({chainId:chainId,blockTimestamp:blockTimestamp});return[2,getSwapCallback({library:library,account:account,chainId:chainId,trade:trade.trade,allowedSlippage:slippage.allowed,deadline:deadline,protocol:protocol})]})})};var __assign$k=undefined&&undefined.__assign||function(){__assign$k=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$k.apply(this,arguments)};var __awaiter$L=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$L=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$9=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var MULTICALL_ADDRESSES={1:"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",3:"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696"};var getToken$1=function(swapToken,chainId){return new Token$1(chainId,getAddress$2(swapToken.address),swapToken.decimals)};var multicall$1=function(calls,provider,chainId){return __awaiter$L(void 0,void 0,void 0,function(){var multicallContract,_a,returnData;return __generator$L(this,function(_b){switch(_b.label){case 0:multicallContract=new Contract(MULTICALL_ADDRESSES[chainId],["function aggregate((address target, bytes callData)[] calls) external view returns (uint256 blockNumber, bytes[] returnData)"],provider);return[4,multicallContract.aggregate(calls)];case 1:_a=__read$9.apply(void 0,[_b.sent(),2]),returnData=_a[1];return[2,calls.map(function(call,i){var returnTypes=call.returnTypes;var types=returnTypes.map(function(type){return type.type});var decoded=defaultAbiCoder.decode(types,returnData[i]);var decodedData=decoded.reduce(function(acc,value,i){var _a;var name=returnTypes[i].name;value=BigNumber$1.isBigNumber(value)?value.toString():value;return __assign$k(__assign$k({},acc),(_a={},_a[name]=value,_a))},{});return decodedData})]}})})};var __extends$6=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign$j=undefined&&undefined.__assign||function(){__assign$j=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$j.apply(this,arguments)};var __awaiter$K=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$K=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$8=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __values$7=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var IUniswapV3PoolABI=IUniswapV3PoolJson.abi;var REJECT_PREV_REQUEST_ERROR$2="reject previous values";var UniswapV3$1=function(_super){__extends$6(UniswapV3,_super);function UniswapV3(_a){var chainId=_a.chainId,account=_a.account,provider=_a.provider;var _this=_super.call(this,{chainId:chainId,account:account,provider:provider})||this;_this.promiseReject=undefined;_this.getSwapParams=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var swapValues,e_1;var input=_b.input,output=_b.output,slippage=_b.slippage;return __generator$K(this,function(_c){switch(_c.label){case 0:_c.trys.push([0,2,,3]);return[4,this.getLastSwapParamsV3({input:input,output:output,slippage:slippage})];case 1:swapValues=_c.sent();return[2,swapValues];case 2:e_1=_c.sent();if(e_1===REJECT_PREV_REQUEST_ERROR$2){return[2,undefined]}throw new Error(e_1);case 3:return[2]}})})};_this.mintPosition=function(_a){var _b;var configuredPool=_a.configuredPool,tokenA=_a.tokenA,tokenB=_a.tokenB,priceUpper=_a.priceUpper,priceLower=_a.priceLower,isPriceInverted=_a.isPriceInverted;var decimalDiff=configuredPool.token1.decimals-configuredPool.token0.decimals;var tickUpper=_this.priceToTick(priceUpper,decimalDiff,isPriceInverted,TICK_SPACINGS[configuredPool.fee]);var tickLower=_this.priceToTick(priceLower,decimalDiff,isPriceInverted,TICK_SPACINGS[configuredPool.fee]);if(isPriceInverted){_b=__read$8([tickLower,tickUpper],2),tickUpper=_b[0],tickLower=_b[1]}if(tokenA&&tokenA.amount){var position=Position$1.fromAmount0({pool:configuredPool,tickUpper:tickUpper,tickLower:tickLower,amount0:tokenA.amount,useFullPrecision:true});return{amount0:position.amount0.quotient.toString(),amount1:position.amount1.quotient.toString(),liquidity:position.liquidity.toString(),tickLower:position.tickLower,tickUpper:position.tickUpper,plugin:Mint$1,params:{methodParams:{params_tuple:{token0:configuredPool.token0.address,token1:configuredPool.token1.address,fee:configuredPool.fee,tickLower:position.tickLower,tickUpper:position.tickUpper,amount0Desired:position.amount0.quotient.toString(),amount1Desired:position.amount1.quotient.toString(),amount0Min:"0",amount1Min:"0",recipient:_this.account,deadline:{type:"global",id:"blockTimestamp"}}}}}}if(tokenB&&tokenB.amount){var position=Position$1.fromAmount1({pool:configuredPool,tickUpper:tickUpper,tickLower:tickLower,amount1:tokenB.amount});return{amount0:position.amount0.quotient.toString(),amount1:position.amount1.quotient.toString(),liquidity:position.liquidity.toString(),tickLower:position.tickLower,tickUpper:position.tickUpper,plugin:Mint$1,params:{methodParams:{params_tuple:{token0:configuredPool.token0.address,token1:configuredPool.token1.address,fee:configuredPool.fee,tickLower:position.tickLower,tickUpper:position.tickUpper,amount0Desired:position.amount0.quotient.toString(),amount1Desired:position.amount1.quotient.toString(),amount0Min:"0",amount1Min:"0",recipient:_this.account,deadline:{type:"global",id:"blockTimestamp"}}}}}}return undefined};_this.getAddLiquidity=function(_a){var configuredPool=_a.configuredPool,tokenA=_a.tokenA,tokenB=_a.tokenB,tokenId=_a.tokenId,tickLower=_a.tickLower,tickUpper=_a.tickUpper;if(tokenA&&tokenA.amount){var position=Position$1.fromAmount0({pool:configuredPool,tickUpper:tickUpper,tickLower:tickLower,amount0:tokenA.amount,useFullPrecision:true});return{amount0:position.amount0.quotient.toString(),amount1:position.amount1.quotient.toString(),plugin:IncreaseLiquidity,params:{methodParams:{params_tuple:{tokenId:tokenId,amount0Desired:position.amount0.quotient.toString(),amount1Desired:position.amount1.quotient.toString(),amount0Min:"0",amount1Min:"0",deadline:{type:"global",id:"blockTimestamp"}}}}}}if(tokenB&&tokenB.amount){var position=Position$1.fromAmount1({pool:configuredPool,tickUpper:tickUpper,tickLower:tickLower,amount1:tokenB.amount});return{amount0:position.amount0.quotient.toString(),amount1:position.amount1.quotient.toString(),plugin:IncreaseLiquidity,params:{methodParams:{params_tuple:{tokenId:tokenId,amount0Desired:position.amount0.quotient.toString(),amount1Desired:position.amount1.quotient.toString(),amount0Min:"0",amount1Min:"0",deadline:{type:"global",id:"blockTimestamp"}}}}}}return undefined};_this.fees=[500,3e3,1e4];_this.isPairExist=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var token0Contract,token1Contract,decimals0,e_2,decimals1,e_3,_c,_d,fee,pool,e_4_1;var e_4,_e;var token0=_b.token0,token1=_b.token1;return __generator$K(this,function(_f){switch(_f.label){case 0:token0Contract=new Contract(token0,["function decimals() view returns (uint8 decimals)"],this.library);token1Contract=new Contract(token1,["function decimals() view returns (uint8 decimals)"],this.library);decimals0=18;_f.label=1;case 1:_f.trys.push([1,3,,4]);return[4,token0Contract.decimals()];case 2:decimals0=_f.sent();return[3,4];case 3:e_2=_f.sent();console.error(e_2);return[3,4];case 4:decimals1=18;_f.label=5;case 5:_f.trys.push([5,7,,8]);return[4,token1Contract.decimals()];case 6:decimals1=_f.sent();return[3,8];case 7:e_3=_f.sent();console.error(e_3);return[3,8];case 8:_f.trys.push([8,13,14,15]);_c=__values$7(this.fees),_d=_c.next();_f.label=9;case 9:if(!!_d.done)return[3,12];fee=_d.value;return[4,this.getPoolInstance({tokenA:{address:token0,decimals:decimals0},tokenB:{address:token1,decimals:decimals1},fee:fee})];case 10:pool=_f.sent();if(pool)return[2,{path:"".concat(token0,"00").concat(BigNumber$1.from(pool.fee).toHexString().replace("0x","")).concat(token1.replace("0x","")),fee:pool.fee}];_f.label=11;case 11:_d=_c.next();return[3,9];case 12:return[3,15];case 13:e_4_1=_f.sent();e_4={error:e_4_1};return[3,15];case 14:try{if(_d&&!_d.done&&(_e=_c.return))_e.call(_c)}finally{if(e_4)throw e_4.error}return[7];case 15:return[2,false]}})})};_this.getPoolInstance=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var poolAddress,token0,token1,tickSpacing,poolContract,_c,liquidity,slot0,pool;var tokenA=_b.tokenA,tokenB=_b.tokenB,fee=_b.fee;return __generator$K(this,function(_d){switch(_d.label){case 0:poolAddress=this.getPoolAddress({tokenA:tokenA,tokenB:tokenB,fee:fee});token0=this.getToken(tokenA);token1=this.getToken(tokenB);tickSpacing=TICK_SPACINGS[fee];poolContract=new Contract(poolAddress,IUniswapV3PoolABI,this.library);_d.label=1;case 1:_d.trys.push([1,3,,4]);return[4,Promise.all([poolContract.liquidity(),poolContract.slot0()])];case 2:_c=__read$8.apply(void 0,[_d.sent(),2]),liquidity=_c[0],slot0=_c[1];pool=new Pool(token0,token1,fee,slot0.sqrtPriceX96.toString(),liquidity.toString(),slot0.tick);return[2,{tickSpacing:tickSpacing,price:pool.priceOf(token0).quotient.toString(),priceNormalised:pool.priceOf(token0).toSignificant(),invertedPrice:pool.token1Price.toFixed(),invertedPriceNormalised:pool.priceOf(token1).toSignificant(),priceDecimals:pool.token0.decimals-pool.token1.decimals,tick:pool.tickCurrent,configuredPool:pool,fee:pool.fee}];case 3:_d.sent();console.error("Pool not found");return[2];case 4:return[2]}})})};_this.getPosition=function(tokenId){return __awaiter$K(_this,void 0,void 0,function(){var position;return __generator$K(this,function(_a){switch(_a.label){case 0:return[4,this.NFTManagerContract.positions(tokenId)];case 1:position=_a.sent();return[2,__assign$j({},position)]}})})};_this.getPoolAddress=function(_a){var tokenA=_a.tokenA,tokenB=_a.tokenB,fee=_a.fee;return computePoolAddress({factoryAddress:FACTORY_ADDRESS,tokenA:_this.getToken(tokenA),tokenB:_this.getToken(tokenB),fee:fee})};_this.getUserPositions=function(account){return __awaiter$K(_this,void 0,void 0,function(){var balance,tokenIDsCalls,tokenIDs,positionsCalls,positions;var _this=this;return __generator$K(this,function(_a){switch(_a.label){case 0:return[4,this.NFTManagerContract.balanceOf(account)];case 1:balance=_a.sent();if(balance.toNumber()===0){return[2,[]]}tokenIDsCalls=Array.from(Array(balance.toNumber()).keys()).map(function(i){return{target:_this.NFTManagerContract.address,callData:_this.NFTManagerContract.interface.encodeFunctionData("tokenOfOwnerByIndex",[account,i]),returnTypes:[{name:"tokenId",type:"uint256"}]}});return[4,multicall$1(tokenIDsCalls,this.library,this.chainId)];case 2:tokenIDs=_a.sent();positionsCalls=tokenIDs.map(function(value){return{target:_this.NFTManagerContract.address,callData:_this.NFTManagerContract.interface.encodeFunctionData("positions",[value.tokenId]),returnTypes:[{name:"nonce",type:"uint96"},{name:"operator",type:"address"},{name:"token0",type:"address"},{name:"token1",type:"address"},{name:"fee",type:"uint24"},{name:"tickLower",type:"int24"},{name:"tickUpper",type:"int24"},{name:"liquidity",type:"uint128"},{name:"feeGrowthInside0LastX128",type:"uint256"},{name:"feeGrowthInside1LastX128",type:"uint256"},{name:"tokensOwed0",type:"uint128"},{name:"tokensOwed1",type:"uint128"}]}});return[4,multicall$1(positionsCalls,this.library,this.chainId)];case 3:positions=_a.sent();return[2,positions.map(function(position,i){return __assign$j(__assign$j({},position),{tokenId:tokenIDs[i].tokenId})})]}})})};_this.priceToTick=function(price,decimalDiff,isPriceInverted,tickSpacing){if(isPriceInverted===void 0){isPriceInverted=false}var p=!isPriceInverted?parseFloat(price):1/parseFloat(price);return nearestUsableTick(Math.floor(Math.log(p*Math.pow(10,decimalDiff))/Math.log(1.0001)),tickSpacing)};_this.getToken=function(swapToken){var chainId=_this.chainId;return getToken$1(swapToken,chainId)};_this.getLastSwapParamsV3=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var _this=this;var _c;var input=_b.input,output=_b.output,slippage=_b.slippage;return __generator$K(this,function(_d){(_c=this.promiseReject)===null||_c===void 0?void 0:_c.call(this,REJECT_PREV_REQUEST_ERROR$2);return[2,new Promise(function(resolve,regect){return __awaiter$K(_this,void 0,void 0,function(){var values;return __generator$K(this,function(_a){switch(_a.label){case 0:this.promiseReject=regect;return[4,this.getSwapValuesV3({input:input,output:output,slippage:slippage})];case 1:values=_a.sent();resolve(values);return[2]}})})})]})})};_this.getSwapValuesV3=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var input=_b.input,output=_b.output,slippage=_b.slippage;return __generator$K(this,function(_c){return[2,this.getSwapValues({input:input,output:output,protocol:"V3",slippage:slippage})]})})};_this.getTradeState=function(stateindex){switch(stateindex){case 3:return"VALID";default:return"INVALID"}};_this.getSwapValues=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var _c,library,account,chainId,currencyIn,currencyOut,isExactIn,blockTimestamp,swapInfo,swapCall,params,methodName,swap;var _d,_e,_f;var input=_b.input,output=_b.output,protocol=_b.protocol,slippage=_b.slippage;return __generator$K(this,function(_g){switch(_g.label){case 0:if(!input.currency){throw new Error("input currency required")}if(!output.currency){throw new Error("output currency required")}if(!input.amount&&!output.amount){return[2,{inputAmount:"0",outputAmount:"0",state:"INVALID",params:undefined,INPUT:{currency:undefined,amount:undefined},OUTPUT:{currency:undefined,amount:undefined},trade:undefined,slippage:undefined,type:undefined,methodName:undefined,protocol:"UNISWAP"}]}_c=this,library=_c.library,account=_c.account,chainId=_c.chainId;currencyIn=this.getToken(input.currency);currencyOut=this.getToken(output.currency);isExactIn=Boolean(input.amount);return[4,this.getLastBlock()];case 1:blockTimestamp=_g.sent().blockTimestamp;return[4,this.getSwapInfo({amount:input.amount||output.amount||"0",currencyIn:currencyIn,currencyOut:currencyOut,isExactIn:isExactIn,protocol:protocol,slippage:slippage})];case 2:swapInfo=_g.sent();return[4,getSwapCall({library:library,chainId:chainId,account:account,swapInfo:swapInfo,blockTimestamp:blockTimestamp,protocol:protocol})];case 3:swapCall=_g.sent();params=swapCall===null||swapCall===void 0?void 0:swapCall.params;methodName=getMethodName({isExactInput:isExactIn,isInputNative:this.getToken(input.currency).isNative,isOutputNative:this.getToken(output.currency).isNative,protocol:protocol,params:params});swap=__assign$j(__assign$j({},swapInfo),{inputAmount:(_d=swapInfo.INPUT.amount)===null||_d===void 0?void 0:_d.quotient.toString(10),outputAmount:(_e=swapInfo.OUTPUT.amount)===null||_e===void 0?void 0:_e.quotient.toString(10),state:this.getTradeState(((_f=swapInfo===null||swapInfo===void 0?void 0:swapInfo.trade)===null||_f===void 0?void 0:_f.state)||0),params:{methodParams:swapCall===null||swapCall===void 0?void 0:swapCall.params},methodName:methodName,protocol:"UNISWAP"});return[2,swap]}})})};_this.getSwapInfo=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var parsedAmount,hasAmounts,trade,amountIn,amountOut;var _c;var _d,_e,_f;var amount=_b.amount,currencyIn=_b.currencyIn,currencyOut=_b.currencyOut,protocol=_b.protocol,isExactIn=_b.isExactIn,slippage=_b.slippage;return __generator$K(this,function(_g){switch(_g.label){case 0:parsedAmount=weiToCurrency(amount,(_d=isExactIn?currencyIn:currencyOut)!==null&&_d!==void 0?_d:undefined);hasAmounts=currencyIn||currencyOut;return[4,this.getBestTrade({tradeType:isExactIn?TradeType$2.EXACT_INPUT:TradeType$2.EXACT_OUTPUT,protocol:protocol,amountSpecified:hasAmounts?parsedAmount:undefined,otherCurrency:isExactIn?currencyOut:currencyIn})];case 1:trade=_g.sent();amountIn=isExactIn?parsedAmount:(_e=trade===null||trade===void 0?void 0:trade.trade)===null||_e===void 0?void 0:_e.inputAmount;amountOut=!isExactIn?parsedAmount:(_f=trade===null||trade===void 0?void 0:trade.trade)===null||_f===void 0?void 0:_f.outputAmount;return[2,(_c={},_c[Field.INPUT]={currency:currencyIn,amount:amountIn},_c[Field.OUTPUT]={currency:currencyOut,amount:amountOut},_c.trade=trade,_c.slippage=getSlippage(slippage),_c.type=isExactIn?UNISWAP_TYPE.EXACT_INPUT:UNISWAP_TYPE.EXACT_OUTPUT,_c)]}})})};_this.getBestTrade=function(_a){return __awaiter$K(_this,[_a],void 0,function(_b){var library,clientSORTradeObject,tradeObject,lastTrade,state,trade,_c,currencyIn,currencyOut,isStale;var _d,_e;var tradeType=_b.tradeType,amountSpecified=_b.amountSpecified,protocol=_b.protocol,otherCurrency=_b.otherCurrency;return __generator$K(this,function(_f){switch(_f.label){case 0:library=this.library;return[4,getClientSideSmartOrderRouterTrade({library:library,tradeType:tradeType,protocol:protocol,amountSpecified:amountSpecified,otherCurrency:otherCurrency})];case 1:clientSORTradeObject=_f.sent();tradeObject=clientSORTradeObject;lastTrade=tradeObject===null||tradeObject===void 0?void 0:tradeObject.trade;if(!tradeObject)return[2];state=tradeObject.state,trade=tradeObject.trade;if(state===TradeState.INVALID)return[2,INVALID_TRADE];if(state!==TradeState.LOADING&&state!==TradeState.SYNCING||trade)return[2,tradeObject];_c=__read$8(tradeType===TradeType$2.EXACT_INPUT?[amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency,otherCurrency]:[otherCurrency,amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency],2),currencyIn=_c[0],currencyOut=_c[1];isStale=currencyIn&&!((_d=lastTrade===null||lastTrade===void 0?void 0:lastTrade.inputAmount)===null||_d===void 0?void 0:_d.currency.equals(currencyIn))||currencyOut&&!((_e=lastTrade===null||lastTrade===void 0?void 0:lastTrade.outputAmount)===null||_e===void 0?void 0:_e.currency.equals(currencyOut));if(isStale)return[2,tradeObject];return[2,{state:state,trade:lastTrade}]}})})};_this.NFTManagerContract=new Contract(NONFUNGIBLE_POSITION_MANAGER_ADDRESSES$1[_this.chainId],INonfungiblePositionManager.abi,_this.library);return _this}return UniswapV3}(Config);var Tokens=function(){function Tokens(){}Tokens.aaveGoerliErc20=aaveGoerliErc20;Tokens.aaveMainnetErc20=aaveMainnetErc20;Tokens.uniswapDefaultErc20=uniswapDefaultErc20;return Tokens}();var OneInchRouterABI=[{inputs:[{internalType:"contract IWETH",name:"weth",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"AccessDenied",type:"error"},{inputs:[],name:"AdvanceNonceFailed",type:"error"},{inputs:[],name:"AlreadyFilled",type:"error"},{inputs:[],name:"ArbitraryStaticCallFailed",type:"error"},{inputs:[],name:"BadPool",type:"error"},{inputs:[],name:"BadSignature",type:"error"},{inputs:[],name:"ETHTransferFailed",type:"error"},{inputs:[],name:"ETHTransferFailed",type:"error"},{inputs:[],name:"EmptyPools",type:"error"},{inputs:[],name:"EthDepositRejected",type:"error"},{inputs:[],name:"GetAmountCallFailed",type:"error"},{inputs:[],name:"IncorrectDataLength",type:"error"},{inputs:[],name:"InsufficientBalance",type:"error"},{inputs:[],name:"InvalidMsgValue",type:"error"},{inputs:[],name:"InvalidMsgValue",type:"error"},{inputs:[],name:"InvalidatedOrder",type:"error"},{inputs:[],name:"MakingAmountExceeded",type:"error"},{inputs:[],name:"MakingAmountTooLow",type:"error"},{inputs:[],name:"OnlyOneAmountShouldBeZero",type:"error"},{inputs:[],name:"OrderExpired",type:"error"},{inputs:[],name:"PermitLengthTooLow",type:"error"},{inputs:[],name:"PredicateIsNotTrue",type:"error"},{inputs:[],name:"PrivateOrder",type:"error"},{inputs:[],name:"RFQBadSignature",type:"error"},{inputs:[],name:"RFQPrivateOrder",type:"error"},{inputs:[],name:"RFQSwapWithZeroAmount",type:"error"},{inputs:[],name:"RFQZeroTargetIsForbidden",type:"error"},{inputs:[],name:"ReentrancyDetected",type:"error"},{inputs:[],name:"RemainingAmountIsZero",type:"error"},{inputs:[],name:"ReservesCallFailed",type:"error"},{inputs:[],name:"ReturnAmountIsNotEnough",type:"error"},{inputs:[],name:"SafePermitBadLength",type:"error"},{inputs:[],name:"SafeTransferFailed",type:"error"},{inputs:[],name:"SafeTransferFromFailed",type:"error"},{inputs:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"res",type:"bytes"}],name:"SimulationResults",type:"error"},{inputs:[],name:"SwapAmountTooLarge",type:"error"},{inputs:[],name:"SwapWithZeroAmount",type:"error"},{inputs:[],name:"TakingAmountExceeded",type:"error"},{inputs:[],name:"TakingAmountIncreased",type:"error"},{inputs:[],name:"TakingAmountTooHigh",type:"error"},{inputs:[],name:"TransferFromMakerToTakerFailed",type:"error"},{inputs:[],name:"TransferFromTakerToMakerFailed",type:"error"},{inputs:[],name:"UnknownOrder",type:"error"},{inputs:[],name:"WrongAmount",type:"error"},{inputs:[],name:"WrongGetter",type:"error"},{inputs:[],name:"ZeroAddress",type:"error"},{inputs:[],name:"ZeroMinReturn",type:"error"},{inputs:[],name:"ZeroReturnAmount",type:"error"},{inputs:[],name:"ZeroTargetIsForbidden",type:"error"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"maker",type:"address"},{indexed:false,internalType:"uint256",name:"newNonce",type:"uint256"}],name:"NonceIncreased",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"maker",type:"address"},{indexed:false,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:false,internalType:"uint256",name:"remainingRaw",type:"uint256"}],name:"OrderCanceled",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"maker",type:"address"},{indexed:false,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:false,internalType:"uint256",name:"remaining",type:"uint256"}],name:"OrderFilled",type:"event"},{anonymous:false,inputs:[{indexed:false,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:false,internalType:"uint256",name:"makingAmount",type:"uint256"}],name:"OrderFilledRFQ",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"previousOwner",type:"address"},{indexed:true,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"uint8",name:"amount",type:"uint8"}],name:"advanceNonce",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"and",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"arbitraryStaticCall",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"interactions",type:"bytes"}],internalType:"struct OrderLib.Order",name:"order",type:"tuple"}],name:"cancelOrder",outputs:[{internalType:"uint256",name:"orderRemaining",type:"uint256"},{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"orderInfo",type:"uint256"}],name:"cancelOrderRFQ",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"orderInfo",type:"uint256"},{internalType:"uint256",name:"additionalMask",type:"uint256"}],name:"cancelOrderRFQ",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"interactions",type:"bytes"}],internalType:"struct OrderLib.Order",name:"order",type:"tuple"}],name:"checkPredicate",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IClipperExchangeInterface",name:"clipperExchange",type:"address"},{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"uint256",name:"inputAmount",type:"uint256"},{internalType:"uint256",name:"outputAmount",type:"uint256"},{internalType:"uint256",name:"goodUntil",type:"uint256"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"vs",type:"bytes32"}],name:"clipperSwap",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IClipperExchangeInterface",name:"clipperExchange",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"uint256",name:"inputAmount",type:"uint256"},{internalType:"uint256",name:"outputAmount",type:"uint256"},{internalType:"uint256",name:"goodUntil",type:"uint256"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"vs",type:"bytes32"}],name:"clipperSwapTo",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IClipperExchangeInterface",name:"clipperExchange",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"uint256",name:"inputAmount",type:"uint256"},{internalType:"uint256",name:"outputAmount",type:"uint256"},{internalType:"uint256",name:"goodUntil",type:"uint256"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"vs",type:"bytes32"},{internalType:"bytes",name:"permit",type:"bytes"}],name:"clipperSwapToWithPermit",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"destroy",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"eq",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"interactions",type:"bytes"}],internalType:"struct OrderLib.Order",name:"order",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"bytes",name:"interaction",type:"bytes"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"skipPermitAndThresholdAmount",type:"uint256"}],name:"fillOrder",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"info",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"}],internalType:"struct OrderRFQLib.OrderRFQ",name:"order",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"uint256",name:"flagsAndAmount",type:"uint256"}],name:"fillOrderRFQ",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"info",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"}],internalType:"struct OrderRFQLib.OrderRFQ",name:"order",type:"tuple"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"vs",type:"bytes32"},{internalType:"uint256",name:"flagsAndAmount",type:"uint256"}],name:"fillOrderRFQCompact",outputs:[{internalType:"uint256",name:"filledMakingAmount",type:"uint256"},{internalType:"uint256",name:"filledTakingAmount",type:"uint256"},{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"info",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"}],internalType:"struct OrderRFQLib.OrderRFQ",name:"order",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"uint256",name:"flagsAndAmount",type:"uint256"},{internalType:"address",name:"target",type:"address"}],name:"fillOrderRFQTo",outputs:[{internalType:"uint256",name:"filledMakingAmount",type:"uint256"},{internalType:"uint256",name:"filledTakingAmount",type:"uint256"},{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"info",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"}],internalType:"struct OrderRFQLib.OrderRFQ",name:"order",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"uint256",name:"flagsAndAmount",type:"uint256"},{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"permit",type:"bytes"}],name:"fillOrderRFQToWithPermit",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"interactions",type:"bytes"}],internalType:"struct OrderLib.Order",name:"order_",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"bytes",name:"interaction",type:"bytes"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"skipPermitAndThresholdAmount",type:"uint256"},{internalType:"address",name:"target",type:"address"}],name:"fillOrderTo",outputs:[{internalType:"uint256",name:"actualMakingAmount",type:"uint256"},{internalType:"uint256",name:"actualTakingAmount",type:"uint256"},{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"interactions",type:"bytes"}],internalType:"struct OrderLib.Order",name:"order",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"bytes",name:"interaction",type:"bytes"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"skipPermitAndThresholdAmount",type:"uint256"},{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"permit",type:"bytes"}],name:"fillOrderToWithPermit",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"gt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"address",name:"makerAsset",type:"address"},{internalType:"address",name:"takerAsset",type:"address"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"allowedSender",type:"address"},{internalType:"uint256",name:"makingAmount",type:"uint256"},{internalType:"uint256",name:"takingAmount",type:"uint256"},{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"interactions",type:"bytes"}],internalType:"struct OrderLib.Order",name:"order",type:"tuple"}],name:"hashOrder",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"increaseNonce",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"uint256",name:"slot",type:"uint256"}],name:"invalidatorForOrderRFQ",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"lt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"uint256",name:"makerNonce",type:"uint256"}],name:"nonceEquals",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"offsets",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"or",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],name:"remaining",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],name:"remainingRaw",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"orderHashes",type:"bytes32[]"}],name:"remainingsRaw",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"rescueFunds",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"simulate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAggregationExecutor",name:"executor",type:"address"},{components:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"address payable",name:"srcReceiver",type:"address"},{internalType:"address payable",name:"dstReceiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"minReturnAmount",type:"uint256"},{internalType:"uint256",name:"flags",type:"uint256"}],internalType:"struct GenericRouter.SwapDescription",name:"desc",type:"tuple"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"},{internalType:"uint256",name:"spentAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"time",type:"uint256"}],name:"timestampBelow",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"timeNonceAccount",type:"uint256"}],name:"timestampBelowAndNonceEquals",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"minReturn",type:"uint256"},{internalType:"uint256[]",name:"pools",type:"uint256[]"}],name:"uniswapV3Swap",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"minReturn",type:"uint256"},{internalType:"uint256[]",name:"pools",type:"uint256[]"}],name:"uniswapV3SwapTo",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address payable",name:"recipient",type:"address"},{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"minReturn",type:"uint256"},{internalType:"uint256[]",name:"pools",type:"uint256[]"},{internalType:"bytes",name:"permit",type:"bytes"}],name:"uniswapV3SwapToWithPermit",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"minReturn",type:"uint256"},{internalType:"uint256[]",name:"pools",type:"uint256[]"}],name:"unoswap",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address payable",name:"recipient",type:"address"},{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"minReturn",type:"uint256"},{internalType:"uint256[]",name:"pools",type:"uint256[]"}],name:"unoswapTo",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address payable",name:"recipient",type:"address"},{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"minReturn",type:"uint256"},{internalType:"uint256[]",name:"pools",type:"uint256[]"},{internalType:"bytes",name:"permit",type:"bytes"}],name:"unoswapToWithPermit",outputs:[{internalType:"uint256",name:"returnAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}];var __extends$5=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __awaiter$J=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$J=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$7=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$6=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var REJECT_PREV_REQUEST_ERROR$1="reject previous values";var isNative$1=function(address){switch(address.toLowerCase()){case"0x0000000000000000000000000000000000000000":return true;case"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":return true;case"NATIVE":return true;default:return false}};var getTokenAddress=function(address){switch(address.toLowerCase()){case"0x0000000000000000000000000000000000000000":return"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee";case"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":return"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee";case"NATIVE":return"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee";default:return address}};var toNativeAddress=function(address){switch(address.toLowerCase()){case"0x0000000000000000000000000000000000000000":return"0x0000000000000000000000000000000000000000";case"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee":return"0x0000000000000000000000000000000000000000";case"NATIVE":return"0x0000000000000000000000000000000000000000";default:return address}};var OneInchHelper=function(_super){__extends$5(OneInchHelper,_super);function OneInchHelper(){var _this=_super.apply(this,__spreadArray$6([],__read$7(arguments),false))||this;_this.promiseReject=undefined;_this.getSwapParams=function(params){return __awaiter$J(_this,void 0,void 0,function(){var swapValues,e_1;return __generator$J(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);return[4,this.getSwap(params)];case 1:swapValues=_a.sent();return[2,swapValues];case 2:e_1=_a.sent();throw new Error(e_1);case 3:return[2]}})})};_this.getSwap=function(_a){return __awaiter$J(_this,[_a],void 0,function(_b){var _this=this;var _c;var input=_b.input,output=_b.output,slippage=_b.slippage,service=_b.service;return __generator$J(this,function(_d){(_c=this.promiseReject)===null||_c===void 0?void 0:_c.call(this,REJECT_PREV_REQUEST_ERROR$1);return[2,new Promise(function(resolve,reject){return __awaiter$J(_this,void 0,void 0,function(){var query,queryParams,url,response,_a,data,OneInchRouterInterface,decodedTx,e_2;return __generator$J(this,function(_b){switch(_b.label){case 0:this.promiseReject=reject;query={src:getTokenAddress(input.currency.address),dst:getTokenAddress(output.currency.address),amount:input.amount,from:this.account,slippage:slippage||"1",disableEstimate:"true"};queryParams=new URLSearchParams(query);url="https://api.1inch.dev/swap/v5.2/".concat(this.chainId,"/swap?").concat(queryParams);_b.label=1;case 1:_b.trys.push([1,7,,8]);if(!service)return[3,3];return[4,service.create({cmd:"simulateSwap",token_in:getTokenAddress(input.currency.address),token_out:getTokenAddress(output.currency.address),token_amount:input.amount,slippage:slippage||"1"})];case 2:_a=_b.sent();return[3,6];case 3:return[4,fetch(url,{method:"GET",headers:{"Content-type":"application/json",Authorization:"Bearer Xpd0MS4ypsyssHKL6LtTTQ8slIUyeQYP","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST,GET,OPTIONS, PUT, DELETE"}})];case 4:return[4,_b.sent().json()];case 5:_a=_b.sent();_b.label=6;case 6:response=_a;data=response;OneInchRouterInterface=new Interface$1(OneInchRouterABI);decodedTx=OneInchRouterInterface.parseTransaction({data:data.tx.data,value:data.tx.value});if(decodedTx.name==="swap"){resolve({params:{value:isNative$1(input.currency.address)?decodedTx.args["desc"]["amount"].toString():"0x0",methodParams:{executor:decodedTx.args["executor"],desc_tuple:{srcToken:decodedTx.args["desc"]["srcToken"],dstToken:decodedTx.args["desc"]["dstToken"],srcReceiver:decodedTx.args["desc"]["srcReceiver"],dstReceiver:this.account,amount:decodedTx.args["desc"]["amount"].toString(),minReturnAmount:decodedTx.args["desc"]["minReturnAmount"].toString(),flags:decodedTx.args["desc"]["flags"].toString()},permit:decodedTx.args["permit"],data:decodedTx.args["data"]}},state:"VALID",methodName:decodedTx.name,inputAmount:decodedTx.args["desc"]["amount"].toString(),outputAmount:decodedTx.args["desc"]["minReturnAmount"].toString(),protocol:"1INCH"})}resolve({params:{value:isNative$1(input.currency.address)?decodedTx.args["amount"].toString():"0x0",methodParams:{srcToken:decodedTx.args["srcToken"]?decodedTx.args["srcToken"]:toNativeAddress(input.currency.address),amount:decodedTx.args["amount"].toString(),minReturn:decodedTx.args["minReturn"].toString(),pools:decodedTx.args["pools"].map(function(pool){return pool.toString()})}},state:"VALID",methodName:decodedTx.name,inputAmount:decodedTx.args["amount"].toString(),outputAmount:decodedTx.args["minReturn"].toString(),protocol:"1INCH"});return[3,8];case 7:e_2=_b.sent();reject(e_2);return[3,8];case 8:return[2]}})})})]})})};return _this}return OneInchHelper}(Config);var __awaiter$I=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$I=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var SimpleSwap1Inch=createPlugin$1({protocol:"1INCH",type:"ACTION",method:"unoswap",name:"simpleSwap1Inch",supportedContracts:[{address:"0x1111111254EEB25477B68fb85Ed929f73A960582",chainId:1},{address:"0x1111111254EEB25477B68fb85Ed929f73A960582",chainId:42161}],getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),value:new FctValue({required:false,decimals:18}),currencyIn:new FctAddress({mode:"INPUT",destination:"erc20",options:getAllCurrencies({chainId:chainId})}),currencyOut:new FctAddress({mode:"INPUT",destination:"erc20",options:getAllCurrencies({chainId:chainId})}),amountIn:new FctValue({mode:"INPUT",destination:"wei_amount"}),amountOut:new FctValue({readonly:true,destination:"wei_amount"}),methodParams:{srcToken:new FctAddress({readonly:true,destination:"erc20"}),amount:new FctValue({readonly:true,destination:"wei_amount"}),minReturn:new FctValue({destination:"wei_amount"}),pools:new FctValueList({readonly:true}),executor:new FctAddress({readonly:true}),desc_tuple:{srcToken:new FctAddress({readonly:true,destination:"erc20"}),dstToken:new FctAddress({readonly:true,destination:"erc20"}),srcReceiver:new FctAddress({readonly:true}),dstReceiver:new FctAddress({}),amount:new FctValue({readonly:true,destination:"wei_amount"}),minReturnAmount:new FctValue({readonly:true}),flags:new FctValue({readonly:true})},permit:new FctBytes({readonly:true}),data:new FctBytes({readonly:true})}},output:{returnAmount:new FctValue({})}}},calculateValuesOnUserInput:function(_a){var chainId=_a.chainId,input=_a.input,provider=_a.provider,setMethod=_a.setMethod,account=_a.account;var helper=new OneInchHelper({chainId:chainId,provider:provider,account:account});var _b=input.methodParams,srcToken=_b.srcToken,amount=_b.amount,minReturn=_b.minReturn,pools=_b.pools,executor=_b.executor,permit=_b.permit,data=_b.data,desc_tuple=_b.desc_tuple;var unoswapMethodParams={srcToken:srcToken,amount:amount,minReturn:minReturn,pools:pools};var getPathParams=function(_a){return __awaiter$I(void 0,[_a],void 0,function(_b){var tokenInAddress,tokenOutAddress,amountIn,amount,initParams,res,e_1;var service=_b.service;return __generator$I(this,function(_c){switch(_c.label){case 0:tokenInAddress=input===null||input===void 0?void 0:input.currencyIn.value;tokenOutAddress=input===null||input===void 0?void 0:input.currencyOut.value;if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2];amountIn=input===null||input===void 0?void 0:input.amountIn;if(!amountIn)return[2];amount=undefined;if(typeof amountIn.value==="string"){amount=amountIn.value}if(!amount)return[2];initParams={value:undefined,amountOut:undefined,methodParams:{srcToken:undefined,amount:undefined,minReturn:undefined,pools:undefined,executor:undefined,desc_tuple:{srcToken:undefined,dstToken:undefined,srcReceiver:undefined,dstReceiver:undefined,amount:undefined,minReturnAmount:undefined,flags:undefined},permit:undefined,data:undefined}};_c.label=1;case 1:_c.trys.push([1,3,,4]);return[4,helper.getSwapParams({input:{currency:{address:tokenInAddress},amount:amount},output:{currency:{address:tokenOutAddress}},service:service})];case 2:res=_c.sent();if(!res){return[2,{params:initParams,error:"invalid trade"}]}if(res.methodName==="swap"){if(setMethod)setMethod("swap");Object.keys(desc_tuple).forEach(function(key){var decTupleKey=key;desc_tuple[decTupleKey].virtual=false;desc_tuple[decTupleKey].required=true});executor.virtual=false;permit.virtual=false;data.virtual=false;Object.keys(unoswapMethodParams).forEach(function(key){var unoswapKey=key;unoswapMethodParams[unoswapKey].virtual=true;unoswapMethodParams[unoswapKey].value=undefined;unoswapMethodParams[unoswapKey].required=false});minReturn.readonly=true;desc_tuple.minReturnAmount.readonly=false}if(res.methodName==="uniswapV3Swap"){if(setMethod)setMethod("uniswapV3Swap");Object.keys(desc_tuple).forEach(function(key){var decTupleKey=key;desc_tuple[decTupleKey].virtual=true;desc_tuple[decTupleKey].value=undefined;desc_tuple[decTupleKey].required=false});executor.virtual=true;executor.required=false;permit.virtual=true;permit.required=false;data.virtual=true;data.required=false;executor.value=undefined;permit.value=undefined;data.value=undefined;minReturn.readonly=false;desc_tuple.minReturnAmount.readonly=true;Object.keys(unoswapMethodParams).forEach(function(key){var unoswapKey=key;unoswapMethodParams[unoswapKey].virtual=false;unoswapMethodParams[unoswapKey].required=true});srcToken.virtual=true;srcToken.required=false;srcToken.value=undefined}if(res.methodName==="unoswap"){if(setMethod)setMethod("unoswap");Object.keys(desc_tuple).forEach(function(key){var decTupleKey=key;desc_tuple[decTupleKey].virtual=true;desc_tuple[decTupleKey].value=undefined;desc_tuple[decTupleKey].required=false});executor.virtual=true;executor.required=false;permit.virtual=true;permit.required=false;data.virtual=true;data.required=false;executor.value=undefined;permit.value=undefined;data.value=undefined;minReturn.readonly=false;desc_tuple.minReturnAmount.readonly=true;Object.keys(unoswapMethodParams).forEach(function(key){var unoswapKey=key;unoswapMethodParams[unoswapKey].virtual=false;unoswapMethodParams[unoswapKey].required=true})}if(res.params.methodParams.minReturn){res.params.methodParams.minReturn="0"}if(res.params.methodParams.desc_tuple&&typeof res.params.methodParams.desc_tuple==="object"&&"minReturnAmount"in res.params.methodParams.desc_tuple){res.params.methodParams.desc_tuple.minReturnAmount="1"}return[2,{params:{amountOut:res.outputAmount,value:res.params.value,methodParams:res.params.methodParams},error:undefined}];case 3:e_1=_c.sent();return[2,{params:initParams,error:e_1.message}];case 4:return[2]}})})};return{get:getPathParams,depParamKeys:["currencyIn","currencyOut","amountIn"]}},requiredApprovals:function(params){var currencyIn=params.currencyIn,amountIn=params.amountIn;if(currencyIn.value&&typeof currencyIn.value==="string"&&isNative$1(currencyIn.value))return[];return[{to:currencyIn.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amountIn.value},method:"approve",protocol:"ERC20"}]}});var actions$l={SimpleSwap1Inch:SimpleSwap1Inch};var Inch={actions:actions$l};var Borrow$3=createPlugin$1({protocol:"AAVE",type:"ACTION",method:"borrow",supportedContracts:LENDING_POOL_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),interestRateMode:new FctValue({options:[{value:"1"},{value:"2"}]}),referralCode:new FctValue16({}),onBehalfOf:new FctAddress({})}},output:{}}},initParams:{methodParams:{referralCode:"0"}},requiredApprovals:function(params,chainId,_walletAddress,vaultAddress){var _a=params.methodParams,amount=_a.amount,onBehalfOf=_a.onBehalfOf,asset=_a.asset;var assetValue=asset.value;if(assetValue&&typeof assetValue!="string"){return[]}var fromTokenData=A_TOKENS$1[chainId].find(function(token){return token.underlyingAssetAddress.toLowerCase()===assetValue.toLowerCase()});if(!fromTokenData){return[]}if(!vaultAddress)return[];var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:fromTokenData.aTokenAddress,from:onBehalfOf.value,params:{delegatee:vaultAddress,amount:value},method:"approveDelegation",protocol:"AAVE"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var _a;var to=params.to,_b=params.methodParams,amount=_b.amount,interestRateMode=_b.interestRateMode,asset=_b.asset,onBehalfOf=_b.onBehalfOf;if(!asset.value||!to.value||!amount.value||!onBehalfOf.value||!interestRateMode.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof interestRateMode.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];var tokenData=(_a=A_TOKENS$1[chainId])===null||_a===void 0?void 0:_a.find(function(token){return token.underlyingAssetAddress.toLowerCase()===asset.value.toLowerCase()});if(!tokenData)return[];var debtToken=interestRateMode.value==="1"?tokenData.stableDebtTokenAddress:tokenData.variableDebtTokenAddress;return[{address:vaultAddress,toSpend:[],toReceive:[{token:asset.value,amount:amount.value},{token:debtToken,amount:amount.value}]}]}});var Deposit$4=createPlugin$1({protocol:"AAVE",type:"ACTION",method:"deposit",supportedContracts:LENDING_POOL_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),onBehalfOf:new FctAddress({}),referralCode:new FctValue16({})}},output:{}}},initParams:{methodParams:{referralCode:"0"}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount,onBehalfOf=_a.onBehalfOf;var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:asset.value,from:onBehalfOf.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var _a;var to=params.to,_b=params.methodParams,amount=_b.amount,asset=_b.asset,onBehalfOf=_b.onBehalfOf;if(!asset.value||!to.value||!amount.value||!onBehalfOf.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];var aToken=(_a=A_TOKENS$1[chainId])===null||_a===void 0?void 0:_a.find(function(token){return token.underlyingAssetAddress.toLowerCase()===asset.value.toLowerCase()});if(!aToken)return[];return[{address:vaultAddress,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[{token:aToken.aTokenAddress,amount:amount.value}]}]}});var Repay$2=createPlugin$1({protocol:"AAVE",type:"ACTION",method:"repay",supportedContracts:LENDING_POOL_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),rateMode:new FctValue({options:[{value:"1"},{value:"2"}]}),onBehalfOf:new FctAddress({})}},output:{value:new FctValue({innerIndex:0})}}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount,onBehalfOf=_a.onBehalfOf;var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:asset.value,from:onBehalfOf.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,amount=_a.amount,asset=_a.asset,onBehalfOf=_a.onBehalfOf,rateMode=_a.rateMode;if(!asset.value||!to.value||!amount.value||!onBehalfOf.value||!rateMode.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof asset.value!=="string"||typeof rateMode.value!=="string"||typeof to.value!=="string")return[];var assetData=A_TOKENS$1[chainId].find(function(token){return token.underlyingAssetAddress.toLowerCase()===asset.value.toLowerCase()});if(!assetData)return[];var debtToken=rateMode.value==="1"?assetData.stableDebtTokenAddress:assetData.variableDebtTokenAddress;return[{address:vaultAddress,toSpend:[{token:asset.value,amount:amount.value},{token:debtToken,amount:amount.value}],toReceive:[]}]}});var SwapBorrowRateMode$2=createPlugin$1({protocol:"AAVE",type:"ACTION",method:"swapBorrowRateMode",supportedContracts:LENDING_POOL_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})}),rateMode:new FctValue({options:[{value:"1",name:"Stable"},{value:"2",name:"Variable"}]})}},output:{}}}});var Withdraw$6=createPlugin$1({protocol:"AAVE",type:"ACTION",method:"withdraw",supportedContracts:LENDING_POOL_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),to:new FctAddress({})}},output:{value:new FctValue({innerIndex:0})}}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var _a;var to=params.to,_b=params.methodParams,amount=_b.amount,receiver=_b.to,asset=_b.asset;if(!asset.value||!to.value||!amount.value||!receiver.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof receiver.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];var aToken=(_a=A_TOKENS$1[chainId])===null||_a===void 0?void 0:_a.find(function(token){return token.underlyingAssetAddress.toLowerCase()===asset.value.toLowerCase()});if(!aToken)return[];return[{address:vaultAddress,toSpend:[{token:aToken.aTokenAddress,amount:amount.value}],toReceive:[{token:asset.value,amount:amount.value}]}]}});var GetAssetPrice$1=createPlugin$1({protocol:"AAVE",type:"ORACLE",method:"getAssetPrice",supportedContracts:PRICE_ORACLE_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{asset:new FctAddress({options:getAaveTokens({chainId:chainId})})}},output:{price:new FctValue18({innerIndex:0})}}}});var GetAssetReserveData$1=createPlugin$1({protocol:"AAVE",type:"GETTER",method:"getReserveData",name:"getAssetReserveData",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_protocol_data_provider_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})})}},output:{availableLiquidity:new FctValue({innerIndex:0}),totalStableDebt:new FctValue({innerIndex:1}),totalVariableDebt:new FctValue({innerIndex:2}),supplyRate:new FctValue27({innerIndex:3}),variableBorrowRate:new FctValue27({innerIndex:4}),stableBorrowRate:new FctValue27({innerIndex:5}),averageStableBorrowRate:new FctValue({innerIndex:6}),liquidityIndex:new FctValue({innerIndex:7}),variableBorrowIndex:new FctValue({innerIndex:8}),lastUpdateTimestamp:new FctValue40({innerIndex:9})}}}});var GetReserveConfigurationData$1=createPlugin$1({protocol:"AAVE",type:"GETTER",method:"getReserveConfigurationData",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_protocol_data_provider_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})})}},output:{decimals:new FctDecimals({innerIndex:0}),ltv:new FctBps({innerIndex:1}),liquidationThreshold:new FctBps({innerIndex:2}),liquidationBonus:new FctValue({innerIndex:3}),reserveFactor:new FctValue({innerIndex:4}),usageAsCollateralEnabled:new FctBoolean({innerIndex:5}),borrowingEnabled:new FctBoolean({innerIndex:6}),stableBorrowRateEnabled:new FctBoolean({innerIndex:7}),isActive:new FctBoolean({innerIndex:8}),isFrozen:new FctBoolean({innerIndex:9})}}}});var GetReserveData$2=createPlugin$1({protocol:"AAVE",type:"GETTER",method:"getReserveData",supportedContracts:LENDING_POOL_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})})}},output:{configuration:new FctValue({innerIndex:0}),liquidityIndex:new FctValue128_27({innerIndex:1}),variableBorrowIndex:new FctValue128_27({innerIndex:2}),currentLiquidityRate:new FctValue128_27({innerIndex:3}),currentVariableBorrowRate:new FctValue128_27({innerIndex:4}),currentStableBorrowRate:new FctValue128_27({innerIndex:5}),lastUpdateTimestamp:new FctValue40({innerIndex:6}),aTokenAddress:new FctAddress({innerIndex:7}),stableDebtTokenAddress:new FctAddress({innerIndex:8}),variableDebtTokenAddress:new FctAddress({innerIndex:9}),interestRateStrategyAddress:new FctAddress({innerIndex:10}),id:new FctValue8({innerIndex:11})}}}});var GetReserveTokensAddresses$1=createPlugin$1({protocol:"AAVE",type:"GETTER",method:"getReserveTokensAddresses",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_protocol_data_provider_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})})}},output:{aTokenAddress:new FctAddress({innerIndex:0}),stableDebtTokenAddress:new FctAddress({innerIndex:1}),variableDebtTokenAddress:new FctAddress({innerIndex:2})}}}});var GetUserAccountData$2=createPlugin$1({protocol:"AAVE",type:"GETTER",method:"getUserAccountData",supportedContracts:LENDING_POOL_ADDRESSES$1,getParams:function(){return{input:{to:new FctAddress({destination:"aave_lending_pool_v2"}),methodParams:{user:new FctAddress({})}},output:{totalCollateralETH:new FctValue18({innerIndex:0}),totalDebtETH:new FctValue18({innerIndex:1}),availableBorrowsETH:new FctValue18({innerIndex:2}),currentLiquidationThreshold:new FctBps({innerIndex:3}),ltv:new FctBps({innerIndex:4}),healthFactor:new FctValue18({innerIndex:5})}}}});var GetUserReserveData$1=createPlugin$1({protocol:"AAVE",type:"GETTER",method:"getUserReserveData",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_protocol_data_provider_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveTokens({chainId:chainId})}),user:new FctAddress({})}},output:{currentATokenBalance:new FctValue18({innerIndex:0}),currentStableDebt:new FctValue18({innerIndex:1}),currentVariableDebt:new FctValue18({innerIndex:2}),principalStableDebt:new FctValue18({innerIndex:3}),scaledVariableDebt:new FctValue18({innerIndex:4}),stableBorrowRate:new FctValue27({innerIndex:5}),liquidityRate:new FctValue27({innerIndex:6}),stableRateLastUpdated:new FctValue40({innerIndex:7}),usageAsCollateralEnabled:new FctBoolean({innerIndex:8})}}},initParams:{to:"0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d"}});var EXP_LIMIT=9e15,MAX_DIGITS=1e9,NUMERALS="0123456789abcdef",LN10="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",PI="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",DEFAULTS={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-EXP_LIMIT,maxE:EXP_LIMIT,crypto:false},inexact,quadrant,external=true,decimalError="[DecimalError] ",invalidArgument=decimalError+"Invalid argument: ",precisionLimitExceeded=decimalError+"Precision limit exceeded",cryptoUnavailable=decimalError+"crypto unavailable",tag="[object Decimal]",mathfloor=Math.floor,mathpow=Math.pow,isBinary=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,isHex$1=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,isOctal=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,isDecimal=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,BASE=1e7,LOG_BASE=7,MAX_SAFE_INTEGER=9007199254740991,LN10_PRECISION=LN10.length-1,PI_PRECISION=PI.length-1,P={toStringTag:tag};P.absoluteValue=P.abs=function(){var x=new this.constructor(this);if(x.s<0)x.s=1;return finalise(x)};P.ceil=function(){return finalise(new this.constructor(this),this.e+1,2)};P.clampedTo=P.clamp=function(min,max){var k,x=this,Ctor=x.constructor;min=new Ctor(min);max=new Ctor(max);if(!min.s||!max.s)return new Ctor(NaN);if(min.gt(max))throw Error(invalidArgument+max);k=x.cmp(min);return k<0?min:x.cmp(max)>0?max:new Ctor(x)};P.comparedTo=P.cmp=function(y){var i,j,xdL,ydL,x=this,xd=x.d,yd=(y=new x.constructor(y)).d,xs=x.s,ys=y.s;if(!xd||!yd){return!xs||!ys?NaN:xs!==ys?xs:xd===yd?0:!xd^xs<0?1:-1}if(!xd[0]||!yd[0])return xd[0]?xs:yd[0]?-ys:0;if(xs!==ys)return xs;if(x.e!==y.e)return x.e>y.e^xs<0?1:-1;xdL=xd.length;ydL=yd.length;for(i=0,j=xdL<ydL?xdL:ydL;i<j;++i){if(xd[i]!==yd[i])return xd[i]>yd[i]^xs<0?1:-1}return xdL===ydL?0:xdL>ydL^xs<0?1:-1};P.cosine=P.cos=function(){var pr,rm,x=this,Ctor=x.constructor;if(!x.d)return new Ctor(NaN);if(!x.d[0])return new Ctor(1);pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+Math.max(x.e,x.sd())+LOG_BASE;Ctor.rounding=1;x=cosine(Ctor,toLessThanHalfPi(Ctor,x));Ctor.precision=pr;Ctor.rounding=rm;return finalise(quadrant==2||quadrant==3?x.neg():x,pr,rm,true)};P.cubeRoot=P.cbrt=function(){var e,m,n,r,rep,s,sd,t,t3,t3plusx,x=this,Ctor=x.constructor;if(!x.isFinite()||x.isZero())return new Ctor(x);external=false;s=x.s*mathpow(x.s*x,1/3);if(!s||Math.abs(s)==1/0){n=digitsToString(x.d);e=x.e;if(s=(e-n.length+1)%3)n+=s==1||s==-2?"0":"00";s=mathpow(n,1/3);e=mathfloor((e+1)/3)-(e%3==(e<0?-1:2));if(s==1/0){n="5e"+e}else{n=s.toExponential();n=n.slice(0,n.indexOf("e")+1)+e}r=new Ctor(n);r.s=x.s}else{r=new Ctor(s.toString())}sd=(e=Ctor.precision)+3;for(;;){t=r;t3=t.times(t).times(t);t3plusx=t3.plus(x);r=divide(t3plusx.plus(x).times(t),t3plusx.plus(t3),sd+2,1);if(digitsToString(t.d).slice(0,sd)===(n=digitsToString(r.d)).slice(0,sd)){n=n.slice(sd-3,sd+1);if(n=="9999"||!rep&&n=="4999"){if(!rep){finalise(t,e+1,0);if(t.times(t).times(t).eq(x)){r=t;break}}sd+=4;rep=1}else{if(!+n||!+n.slice(1)&&n.charAt(0)=="5"){finalise(r,e+1,1);m=!r.times(r).times(r).eq(x)}break}}}external=true;return finalise(r,e,Ctor.rounding,m)};P.decimalPlaces=P.dp=function(){var w,d=this.d,n=NaN;if(d){w=d.length-1;n=(w-mathfloor(this.e/LOG_BASE))*LOG_BASE;w=d[w];if(w)for(;w%10==0;w/=10)n--;if(n<0)n=0}return n};P.dividedBy=P.div=function(y){return divide(this,new this.constructor(y))};P.dividedToIntegerBy=P.divToInt=function(y){var x=this,Ctor=x.constructor;return finalise(divide(x,new Ctor(y),0,1,1),Ctor.precision,Ctor.rounding)};P.equals=P.eq=function(y){return this.cmp(y)===0};P.floor=function(){return finalise(new this.constructor(this),this.e+1,3)};P.greaterThan=P.gt=function(y){return this.cmp(y)>0};P.greaterThanOrEqualTo=P.gte=function(y){var k=this.cmp(y);return k==1||k===0};P.hyperbolicCosine=P.cosh=function(){var k,n,pr,rm,len,x=this,Ctor=x.constructor,one=new Ctor(1);if(!x.isFinite())return new Ctor(x.s?1/0:NaN);if(x.isZero())return one;pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+Math.max(x.e,x.sd())+4;Ctor.rounding=1;len=x.d.length;if(len<32){k=Math.ceil(len/3);n=(1/tinyPow(4,k)).toString()}else{k=16;n="2.3283064365386962890625e-10"}x=taylorSeries(Ctor,1,x.times(n),new Ctor(1),true);var cosh2_x,i=k,d8=new Ctor(8);for(;i--;){cosh2_x=x.times(x);x=one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))))}return finalise(x,Ctor.precision=pr,Ctor.rounding=rm,true)};P.hyperbolicSine=P.sinh=function(){var k,pr,rm,len,x=this,Ctor=x.constructor;if(!x.isFinite()||x.isZero())return new Ctor(x);pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+Math.max(x.e,x.sd())+4;Ctor.rounding=1;len=x.d.length;if(len<3){x=taylorSeries(Ctor,2,x,x,true)}else{k=1.4*Math.sqrt(len);k=k>16?16:k|0;x=x.times(1/tinyPow(5,k));x=taylorSeries(Ctor,2,x,x,true);var sinh2_x,d5=new Ctor(5),d16=new Ctor(16),d20=new Ctor(20);for(;k--;){sinh2_x=x.times(x);x=x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))))}}Ctor.precision=pr;Ctor.rounding=rm;return finalise(x,pr,rm,true)};P.hyperbolicTangent=P.tanh=function(){var pr,rm,x=this,Ctor=x.constructor;if(!x.isFinite())return new Ctor(x.s);if(x.isZero())return new Ctor(x);pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+7;Ctor.rounding=1;return divide(x.sinh(),x.cosh(),Ctor.precision=pr,Ctor.rounding=rm)};P.inverseCosine=P.acos=function(){var halfPi,x=this,Ctor=x.constructor,k=x.abs().cmp(1),pr=Ctor.precision,rm=Ctor.rounding;if(k!==-1){return k===0?x.isNeg()?getPi(Ctor,pr,rm):new Ctor(0):new Ctor(NaN)}if(x.isZero())return getPi(Ctor,pr+4,rm).times(.5);Ctor.precision=pr+6;Ctor.rounding=1;x=x.asin();halfPi=getPi(Ctor,pr+4,rm).times(.5);Ctor.precision=pr;Ctor.rounding=rm;return halfPi.minus(x)};P.inverseHyperbolicCosine=P.acosh=function(){var pr,rm,x=this,Ctor=x.constructor;if(x.lte(1))return new Ctor(x.eq(1)?0:NaN);if(!x.isFinite())return new Ctor(x);pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+Math.max(Math.abs(x.e),x.sd())+4;Ctor.rounding=1;external=false;x=x.times(x).minus(1).sqrt().plus(x);external=true;Ctor.precision=pr;Ctor.rounding=rm;return x.ln()};P.inverseHyperbolicSine=P.asinh=function(){var pr,rm,x=this,Ctor=x.constructor;if(!x.isFinite()||x.isZero())return new Ctor(x);pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+2*Math.max(Math.abs(x.e),x.sd())+6;Ctor.rounding=1;external=false;x=x.times(x).plus(1).sqrt().plus(x);external=true;Ctor.precision=pr;Ctor.rounding=rm;return x.ln()};P.inverseHyperbolicTangent=P.atanh=function(){var pr,rm,wpr,xsd,x=this,Ctor=x.constructor;if(!x.isFinite())return new Ctor(NaN);if(x.e>=0)return new Ctor(x.abs().eq(1)?x.s/0:x.isZero()?x:NaN);pr=Ctor.precision;rm=Ctor.rounding;xsd=x.sd();if(Math.max(xsd,pr)<2*-x.e-1)return finalise(new Ctor(x),pr,rm,true);Ctor.precision=wpr=xsd-x.e;x=divide(x.plus(1),new Ctor(1).minus(x),wpr+pr,1);Ctor.precision=pr+4;Ctor.rounding=1;x=x.ln();Ctor.precision=pr;Ctor.rounding=rm;return x.times(.5)};P.inverseSine=P.asin=function(){var halfPi,k,pr,rm,x=this,Ctor=x.constructor;if(x.isZero())return new Ctor(x);k=x.abs().cmp(1);pr=Ctor.precision;rm=Ctor.rounding;if(k!==-1){if(k===0){halfPi=getPi(Ctor,pr+4,rm).times(.5);halfPi.s=x.s;return halfPi}return new Ctor(NaN)}Ctor.precision=pr+6;Ctor.rounding=1;x=x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();Ctor.precision=pr;Ctor.rounding=rm;return x.times(2)};P.inverseTangent=P.atan=function(){var i,j,k,n,px,t,r,wpr,x2,x=this,Ctor=x.constructor,pr=Ctor.precision,rm=Ctor.rounding;if(!x.isFinite()){if(!x.s)return new Ctor(NaN);if(pr+4<=PI_PRECISION){r=getPi(Ctor,pr+4,rm).times(.5);r.s=x.s;return r}}else if(x.isZero()){return new Ctor(x)}else if(x.abs().eq(1)&&pr+4<=PI_PRECISION){r=getPi(Ctor,pr+4,rm).times(.25);r.s=x.s;return r}Ctor.precision=wpr=pr+10;Ctor.rounding=1;k=Math.min(28,wpr/LOG_BASE+2|0);for(i=k;i;--i)x=x.div(x.times(x).plus(1).sqrt().plus(1));external=false;j=Math.ceil(wpr/LOG_BASE);n=1;x2=x.times(x);r=new Ctor(x);px=x;for(;i!==-1;){px=px.times(x2);t=r.minus(px.div(n+=2));px=px.times(x2);r=t.plus(px.div(n+=2));if(r.d[j]!==void 0)for(i=j;r.d[i]===t.d[i]&&i--;);}if(k)r=r.times(2<<k-1);external=true;return finalise(r,Ctor.precision=pr,Ctor.rounding=rm,true)};P.isFinite=function(){return!!this.d};P.isInteger=P.isInt=function(){return!!this.d&&mathfloor(this.e/LOG_BASE)>this.d.length-2};P.isNaN=function(){return!this.s};P.isNegative=P.isNeg=function(){return this.s<0};P.isPositive=P.isPos=function(){return this.s>0};P.isZero=function(){return!!this.d&&this.d[0]===0};P.lessThan=P.lt=function(y){return this.cmp(y)<0};P.lessThanOrEqualTo=P.lte=function(y){return this.cmp(y)<1};P.logarithm=P.log=function(base){var isBase10,d,denominator,k,inf,num,sd,r,arg=this,Ctor=arg.constructor,pr=Ctor.precision,rm=Ctor.rounding,guard=5;if(base==null){base=new Ctor(10);isBase10=true}else{base=new Ctor(base);d=base.d;if(base.s<0||!d||!d[0]||base.eq(1))return new Ctor(NaN);isBase10=base.eq(10)}d=arg.d;if(arg.s<0||!d||!d[0]||arg.eq(1)){return new Ctor(d&&!d[0]?-1/0:arg.s!=1?NaN:d?0:1/0)}if(isBase10){if(d.length>1){inf=true}else{for(k=d[0];k%10===0;)k/=10;inf=k!==1}}external=false;sd=pr+guard;num=naturalLogarithm(arg,sd);denominator=isBase10?getLn10(Ctor,sd+10):naturalLogarithm(base,sd);r=divide(num,denominator,sd,1);if(checkRoundingDigits(r.d,k=pr,rm)){do{sd+=10;num=naturalLogarithm(arg,sd);denominator=isBase10?getLn10(Ctor,sd+10):naturalLogarithm(base,sd);r=divide(num,denominator,sd,1);if(!inf){if(+digitsToString(r.d).slice(k+1,k+15)+1==1e14){r=finalise(r,pr+1,0)}break}}while(checkRoundingDigits(r.d,k+=10,rm))}external=true;return finalise(r,pr,rm)};P.minus=P.sub=function(y){var d,e,i,j,k,len,pr,rm,xd,xe,xLTy,yd,x=this,Ctor=x.constructor;y=new Ctor(y);if(!x.d||!y.d){if(!x.s||!y.s)y=new Ctor(NaN);else if(x.d)y.s=-y.s;else y=new Ctor(y.d||x.s!==y.s?x:NaN);return y}if(x.s!=y.s){y.s=-y.s;return x.plus(y)}xd=x.d;yd=y.d;pr=Ctor.precision;rm=Ctor.rounding;if(!xd[0]||!yd[0]){if(yd[0])y.s=-y.s;else if(xd[0])y=new Ctor(x);else return new Ctor(rm===3?-0:0);return external?finalise(y,pr,rm):y}e=mathfloor(y.e/LOG_BASE);xe=mathfloor(x.e/LOG_BASE);xd=xd.slice();k=xe-e;if(k){xLTy=k<0;if(xLTy){d=xd;k=-k;len=yd.length}else{d=yd;e=xe;len=xd.length}i=Math.max(Math.ceil(pr/LOG_BASE),len)+2;if(k>i){k=i;d.length=1}d.reverse();for(i=k;i--;)d.push(0);d.reverse()}else{i=xd.length;len=yd.length;xLTy=i<len;if(xLTy)len=i;for(i=0;i<len;i++){if(xd[i]!=yd[i]){xLTy=xd[i]<yd[i];break}}k=0}if(xLTy){d=xd;xd=yd;yd=d;y.s=-y.s}len=xd.length;for(i=yd.length-len;i>0;--i)xd[len++]=0;for(i=yd.length;i>k;){if(xd[--i]<yd[i]){for(j=i;j&&xd[--j]===0;)xd[j]=BASE-1;--xd[j];xd[i]+=BASE}xd[i]-=yd[i]}for(;xd[--len]===0;)xd.pop();for(;xd[0]===0;xd.shift())--e;if(!xd[0])return new Ctor(rm===3?-0:0);y.d=xd;y.e=getBase10Exponent(xd,e);return external?finalise(y,pr,rm):y};P.modulo=P.mod=function(y){var q,x=this,Ctor=x.constructor;y=new Ctor(y);if(!x.d||!y.s||y.d&&!y.d[0])return new Ctor(NaN);if(!y.d||x.d&&!x.d[0]){return finalise(new Ctor(x),Ctor.precision,Ctor.rounding)}external=false;if(Ctor.modulo==9){q=divide(x,y.abs(),0,3,1);q.s*=y.s}else{q=divide(x,y,0,Ctor.modulo,1)}q=q.times(y);external=true;return x.minus(q)};P.naturalExponential=P.exp=function(){return naturalExponential(this)};P.naturalLogarithm=P.ln=function(){return naturalLogarithm(this)};P.negated=P.neg=function(){var x=new this.constructor(this);x.s=-x.s;return finalise(x)};P.plus=P.add=function(y){var carry,d,e,i,k,len,pr,rm,xd,yd,x=this,Ctor=x.constructor;y=new Ctor(y);if(!x.d||!y.d){if(!x.s||!y.s)y=new Ctor(NaN);else if(!x.d)y=new Ctor(y.d||x.s===y.s?x:NaN);return y}if(x.s!=y.s){y.s=-y.s;return x.minus(y)}xd=x.d;yd=y.d;pr=Ctor.precision;rm=Ctor.rounding;if(!xd[0]||!yd[0]){if(!yd[0])y=new Ctor(x);return external?finalise(y,pr,rm):y}k=mathfloor(x.e/LOG_BASE);e=mathfloor(y.e/LOG_BASE);xd=xd.slice();i=k-e;if(i){if(i<0){d=xd;i=-i;len=yd.length}else{d=yd;e=k;len=xd.length}k=Math.ceil(pr/LOG_BASE);len=k>len?k+1:len+1;if(i>len){i=len;d.length=1}d.reverse();for(;i--;)d.push(0);d.reverse()}len=xd.length;i=yd.length;if(len-i<0){i=len;d=yd;yd=xd;xd=d}for(carry=0;i;){carry=(xd[--i]=xd[i]+yd[i]+carry)/BASE|0;xd[i]%=BASE}if(carry){xd.unshift(carry);++e}for(len=xd.length;xd[--len]==0;)xd.pop();y.d=xd;y.e=getBase10Exponent(xd,e);return external?finalise(y,pr,rm):y};P.precision=P.sd=function(z){var k,x=this;if(z!==void 0&&z!==!!z&&z!==1&&z!==0)throw Error(invalidArgument+z);if(x.d){k=getPrecision(x.d);if(z&&x.e+1>k)k=x.e+1}else{k=NaN}return k};P.round=function(){var x=this,Ctor=x.constructor;return finalise(new Ctor(x),x.e+1,Ctor.rounding)};P.sine=P.sin=function(){var pr,rm,x=this,Ctor=x.constructor;if(!x.isFinite())return new Ctor(NaN);if(x.isZero())return new Ctor(x);pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+Math.max(x.e,x.sd())+LOG_BASE;Ctor.rounding=1;x=sine(Ctor,toLessThanHalfPi(Ctor,x));Ctor.precision=pr;Ctor.rounding=rm;return finalise(quadrant>2?x.neg():x,pr,rm,true)};P.squareRoot=P.sqrt=function(){var m,n,sd,r,rep,t,x=this,d=x.d,e=x.e,s=x.s,Ctor=x.constructor;if(s!==1||!d||!d[0]){return new Ctor(!s||s<0&&(!d||d[0])?NaN:d?x:1/0)}external=false;s=Math.sqrt(+x);if(s==0||s==1/0){n=digitsToString(d);if((n.length+e)%2==0)n+="0";s=Math.sqrt(n);e=mathfloor((e+1)/2)-(e<0||e%2);if(s==1/0){n="5e"+e}else{n=s.toExponential();n=n.slice(0,n.indexOf("e")+1)+e}r=new Ctor(n)}else{r=new Ctor(s.toString())}sd=(e=Ctor.precision)+3;for(;;){t=r;r=t.plus(divide(x,t,sd+2,1)).times(.5);if(digitsToString(t.d).slice(0,sd)===(n=digitsToString(r.d)).slice(0,sd)){n=n.slice(sd-3,sd+1);if(n=="9999"||!rep&&n=="4999"){if(!rep){finalise(t,e+1,0);if(t.times(t).eq(x)){r=t;break}}sd+=4;rep=1}else{if(!+n||!+n.slice(1)&&n.charAt(0)=="5"){finalise(r,e+1,1);m=!r.times(r).eq(x)}break}}}external=true;return finalise(r,e,Ctor.rounding,m)};P.tangent=P.tan=function(){var pr,rm,x=this,Ctor=x.constructor;if(!x.isFinite())return new Ctor(NaN);if(x.isZero())return new Ctor(x);pr=Ctor.precision;rm=Ctor.rounding;Ctor.precision=pr+10;Ctor.rounding=1;x=x.sin();x.s=1;x=divide(x,new Ctor(1).minus(x.times(x)).sqrt(),pr+10,0);Ctor.precision=pr;Ctor.rounding=rm;return finalise(quadrant==2||quadrant==4?x.neg():x,pr,rm,true)};P.times=P.mul=function(y){var carry,e,i,k,r,rL,t,xdL,ydL,x=this,Ctor=x.constructor,xd=x.d,yd=(y=new Ctor(y)).d;y.s*=x.s;if(!xd||!xd[0]||!yd||!yd[0]){return new Ctor(!y.s||xd&&!xd[0]&&!yd||yd&&!yd[0]&&!xd?NaN:!xd||!yd?y.s/0:y.s*0)}e=mathfloor(x.e/LOG_BASE)+mathfloor(y.e/LOG_BASE);xdL=xd.length;ydL=yd.length;if(xdL<ydL){r=xd;xd=yd;yd=r;rL=xdL;xdL=ydL;ydL=rL}r=[];rL=xdL+ydL;for(i=rL;i--;)r.push(0);for(i=ydL;--i>=0;){carry=0;for(k=xdL+i;k>i;){t=r[k]+yd[i]*xd[k-i-1]+carry;r[k--]=t%BASE|0;carry=t/BASE|0}r[k]=(r[k]+carry)%BASE|0}for(;!r[--rL];)r.pop();if(carry)++e;else r.shift();y.d=r;y.e=getBase10Exponent(r,e);return external?finalise(y,Ctor.precision,Ctor.rounding):y};P.toBinary=function(sd,rm){return toStringBinary(this,2,sd,rm)};P.toDecimalPlaces=P.toDP=function(dp,rm){var x=this,Ctor=x.constructor;x=new Ctor(x);if(dp===void 0)return x;checkInt32(dp,0,MAX_DIGITS);if(rm===void 0)rm=Ctor.rounding;else checkInt32(rm,0,8);return finalise(x,dp+x.e+1,rm)};P.toExponential=function(dp,rm){var str,x=this,Ctor=x.constructor;if(dp===void 0){str=finiteToString(x,true)}else{checkInt32(dp,0,MAX_DIGITS);if(rm===void 0)rm=Ctor.rounding;else checkInt32(rm,0,8);x=finalise(new Ctor(x),dp+1,rm);str=finiteToString(x,true,dp+1)}return x.isNeg()&&!x.isZero()?"-"+str:str};P.toFixed=function(dp,rm){var str,y,x=this,Ctor=x.constructor;if(dp===void 0){str=finiteToString(x)}else{checkInt32(dp,0,MAX_DIGITS);if(rm===void 0)rm=Ctor.rounding;else checkInt32(rm,0,8);y=finalise(new Ctor(x),dp+x.e+1,rm);str=finiteToString(y,false,dp+y.e+1)}return x.isNeg()&&!x.isZero()?"-"+str:str};P.toFraction=function(maxD){var d,d0,d1,d2,e,k,n,n0,n1,pr,q,r,x=this,xd=x.d,Ctor=x.constructor;if(!xd)return new Ctor(x);n1=d0=new Ctor(1);d1=n0=new Ctor(0);d=new Ctor(d1);e=d.e=getPrecision(xd)-x.e-1;k=e%LOG_BASE;d.d[0]=mathpow(10,k<0?LOG_BASE+k:k);if(maxD==null){maxD=e>0?d:n1}else{n=new Ctor(maxD);if(!n.isInt()||n.lt(n1))throw Error(invalidArgument+n);maxD=n.gt(d)?e>0?d:n1:n}external=false;n=new Ctor(digitsToString(xd));pr=Ctor.precision;Ctor.precision=e=xd.length*LOG_BASE*2;for(;;){q=divide(n,d,0,1,1);d2=d0.plus(q.times(d1));if(d2.cmp(maxD)==1)break;d0=d1;d1=d2;d2=n1;n1=n0.plus(q.times(d2));n0=d2;d2=d;d=n.minus(q.times(d2));n=d2}d2=divide(maxD.minus(d0),d1,0,1,1);n0=n0.plus(d2.times(n1));d0=d0.plus(d2.times(d1));n0.s=n1.s=x.s;r=divide(n1,d1,e,1).minus(x).abs().cmp(divide(n0,d0,e,1).minus(x).abs())<1?[n1,d1]:[n0,d0];Ctor.precision=pr;external=true;return r};P.toHexadecimal=P.toHex=function(sd,rm){return toStringBinary(this,16,sd,rm)};P.toNearest=function(y,rm){var x=this,Ctor=x.constructor;x=new Ctor(x);if(y==null){if(!x.d)return x;y=new Ctor(1);rm=Ctor.rounding}else{y=new Ctor(y);if(rm===void 0){rm=Ctor.rounding}else{checkInt32(rm,0,8)}if(!x.d)return y.s?x:y;if(!y.d){if(y.s)y.s=x.s;return y}}if(y.d[0]){external=false;x=divide(x,y,0,rm,1).times(y);external=true;finalise(x)}else{y.s=x.s;x=y}return x};P.toNumber=function(){return+this};P.toOctal=function(sd,rm){return toStringBinary(this,8,sd,rm)};P.toPower=P.pow=function(y){var e,k,pr,r,rm,s,x=this,Ctor=x.constructor,yn=+(y=new Ctor(y));if(!x.d||!y.d||!x.d[0]||!y.d[0])return new Ctor(mathpow(+x,yn));x=new Ctor(x);if(x.eq(1))return x;pr=Ctor.precision;rm=Ctor.rounding;if(y.eq(1))return finalise(x,pr,rm);e=mathfloor(y.e/LOG_BASE);if(e>=y.d.length-1&&(k=yn<0?-yn:yn)<=MAX_SAFE_INTEGER){r=intPow(Ctor,x,k,pr);return y.s<0?new Ctor(1).div(r):finalise(r,pr,rm)}s=x.s;if(s<0){if(e<y.d.length-1)return new Ctor(NaN);if((y.d[e]&1)==0)s=1;if(x.e==0&&x.d[0]==1&&x.d.length==1){x.s=s;return x}}k=mathpow(+x,yn);e=k==0||!isFinite(k)?mathfloor(yn*(Math.log("0."+digitsToString(x.d))/Math.LN10+x.e+1)):new Ctor(k+"").e;if(e>Ctor.maxE+1||e<Ctor.minE-1)return new Ctor(e>0?s/0:0);external=false;Ctor.rounding=x.s=1;k=Math.min(12,(e+"").length);r=naturalExponential(y.times(naturalLogarithm(x,pr+k)),pr);if(r.d){r=finalise(r,pr+5,1);if(checkRoundingDigits(r.d,pr,rm)){e=pr+10;r=finalise(naturalExponential(y.times(naturalLogarithm(x,e+k)),e),e+5,1);if(+digitsToString(r.d).slice(pr+1,pr+15)+1==1e14){r=finalise(r,pr+1,0)}}}r.s=s;external=true;Ctor.rounding=rm;return finalise(r,pr,rm)};P.toPrecision=function(sd,rm){var str,x=this,Ctor=x.constructor;if(sd===void 0){str=finiteToString(x,x.e<=Ctor.toExpNeg||x.e>=Ctor.toExpPos)}else{checkInt32(sd,1,MAX_DIGITS);if(rm===void 0)rm=Ctor.rounding;else checkInt32(rm,0,8);x=finalise(new Ctor(x),sd,rm);str=finiteToString(x,sd<=x.e||x.e<=Ctor.toExpNeg,sd)}return x.isNeg()&&!x.isZero()?"-"+str:str};P.toSignificantDigits=P.toSD=function(sd,rm){var x=this,Ctor=x.constructor;if(sd===void 0){sd=Ctor.precision;rm=Ctor.rounding}else{checkInt32(sd,1,MAX_DIGITS);if(rm===void 0)rm=Ctor.rounding;else checkInt32(rm,0,8)}return finalise(new Ctor(x),sd,rm)};P.toString=function(){var x=this,Ctor=x.constructor,str=finiteToString(x,x.e<=Ctor.toExpNeg||x.e>=Ctor.toExpPos);return x.isNeg()&&!x.isZero()?"-"+str:str};P.truncated=P.trunc=function(){return finalise(new this.constructor(this),this.e+1,1)};P.valueOf=P.toJSON=function(){var x=this,Ctor=x.constructor,str=finiteToString(x,x.e<=Ctor.toExpNeg||x.e>=Ctor.toExpPos);return x.isNeg()?"-"+str:str};function digitsToString(d){var i,k,ws,indexOfLastWord=d.length-1,str="",w=d[0];if(indexOfLastWord>0){str+=w;for(i=1;i<indexOfLastWord;i++){ws=d[i]+"";k=LOG_BASE-ws.length;if(k)str+=getZeroString(k);str+=ws}w=d[i];ws=w+"";k=LOG_BASE-ws.length;if(k)str+=getZeroString(k)}else if(w===0){return"0"}for(;w%10===0;)w/=10;return str+w}function checkInt32(i,min,max){if(i!==~~i||i<min||i>max){throw Error(invalidArgument+i)}}function checkRoundingDigits(d,i,rm,repeating){var di,k,r,rd;for(k=d[0];k>=10;k/=10)--i;if(--i<0){i+=LOG_BASE;di=0}else{di=Math.ceil((i+1)/LOG_BASE);i%=LOG_BASE}k=mathpow(10,LOG_BASE-i);rd=d[di]%k|0;if(repeating==null){if(i<3){if(i==0)rd=rd/100|0;else if(i==1)rd=rd/10|0;r=rm<4&&rd==99999||rm>3&&rd==49999||rd==5e4||rd==0}else{r=(rm<4&&rd+1==k||rm>3&&rd+1==k/2)&&(d[di+1]/k/100|0)==mathpow(10,i-2)-1||(rd==k/2||rd==0)&&(d[di+1]/k/100|0)==0}}else{if(i<4){if(i==0)rd=rd/1e3|0;else if(i==1)rd=rd/100|0;else if(i==2)rd=rd/10|0;r=(repeating||rm<4)&&rd==9999||!repeating&&rm>3&&rd==4999}else{r=((repeating||rm<4)&&rd+1==k||!repeating&&rm>3&&rd+1==k/2)&&(d[di+1]/k/1e3|0)==mathpow(10,i-3)-1}}return r}function convertBase(str,baseIn,baseOut){var j,arr=[0],arrL,i=0,strL=str.length;for(;i<strL;){for(arrL=arr.length;arrL--;)arr[arrL]*=baseIn;arr[0]+=NUMERALS.indexOf(str.charAt(i++));for(j=0;j<arr.length;j++){if(arr[j]>baseOut-1){if(arr[j+1]===void 0)arr[j+1]=0;arr[j+1]+=arr[j]/baseOut|0;arr[j]%=baseOut}}}return arr.reverse()}function cosine(Ctor,x){var k,len,y;if(x.isZero())return x;len=x.d.length;if(len<32){k=Math.ceil(len/3);y=(1/tinyPow(4,k)).toString()}else{k=16;y="2.3283064365386962890625e-10"}Ctor.precision+=k;x=taylorSeries(Ctor,1,x.times(y),new Ctor(1));for(var i=k;i--;){var cos2x=x.times(x);x=cos2x.times(cos2x).minus(cos2x).times(8).plus(1)}Ctor.precision-=k;return x}var divide=function(){function multiplyInteger(x,k,base){var temp,carry=0,i=x.length;for(x=x.slice();i--;){temp=x[i]*k+carry;x[i]=temp%base|0;carry=temp/base|0}if(carry)x.unshift(carry);return x}function compare(a,b,aL,bL){var i,r;if(aL!=bL){r=aL>bL?1:-1}else{for(i=r=0;i<aL;i++){if(a[i]!=b[i]){r=a[i]>b[i]?1:-1;break}}}return r}function subtract(a,b,aL,base){var i=0;for(;aL--;){a[aL]-=i;i=a[aL]<b[aL]?1:0;a[aL]=i*base+a[aL]-b[aL]}for(;!a[0]&&a.length>1;)a.shift()}return function(x,y,pr,rm,dp,base){var cmp,e,i,k,logBase,more,prod,prodL,q,qd,rem,remL,rem0,sd,t,xi,xL,yd0,yL,yz,Ctor=x.constructor,sign=x.s==y.s?1:-1,xd=x.d,yd=y.d;if(!xd||!xd[0]||!yd||!yd[0]){return new Ctor(!x.s||!y.s||(xd?yd&&xd[0]==yd[0]:!yd)?NaN:xd&&xd[0]==0||!yd?sign*0:sign/0)}if(base){logBase=1;e=x.e-y.e}else{base=BASE;logBase=LOG_BASE;e=mathfloor(x.e/logBase)-mathfloor(y.e/logBase)}yL=yd.length;xL=xd.length;q=new Ctor(sign);qd=q.d=[];for(i=0;yd[i]==(xd[i]||0);i++);if(yd[i]>(xd[i]||0))e--;if(pr==null){sd=pr=Ctor.precision;rm=Ctor.rounding}else if(dp){sd=pr+(x.e-y.e)+1}else{sd=pr}if(sd<0){qd.push(1);more=true}else{sd=sd/logBase+2|0;i=0;if(yL==1){k=0;yd=yd[0];sd++;for(;(i<xL||k)&&sd--;i++){t=k*base+(xd[i]||0);qd[i]=t/yd|0;k=t%yd|0}more=k||i<xL}else{k=base/(yd[0]+1)|0;if(k>1){yd=multiplyInteger(yd,k,base);xd=multiplyInteger(xd,k,base);yL=yd.length;xL=xd.length}xi=yL;rem=xd.slice(0,yL);remL=rem.length;for(;remL<yL;)rem[remL++]=0;yz=yd.slice();yz.unshift(0);yd0=yd[0];if(yd[1]>=base/2)++yd0;do{k=0;cmp=compare(yd,rem,yL,remL);if(cmp<0){rem0=rem[0];if(yL!=remL)rem0=rem0*base+(rem[1]||0);k=rem0/yd0|0;if(k>1){if(k>=base)k=base-1;prod=multiplyInteger(yd,k,base);prodL=prod.length;remL=rem.length;cmp=compare(prod,rem,prodL,remL);if(cmp==1){k--;subtract(prod,yL<prodL?yz:yd,prodL,base)}}else{if(k==0)cmp=k=1;prod=yd.slice()}prodL=prod.length;if(prodL<remL)prod.unshift(0);subtract(rem,prod,remL,base);if(cmp==-1){remL=rem.length;cmp=compare(yd,rem,yL,remL);if(cmp<1){k++;subtract(rem,yL<remL?yz:yd,remL,base)}}remL=rem.length}else if(cmp===0){k++;rem=[0]}qd[i++]=k;if(cmp&&rem[0]){rem[remL++]=xd[xi]||0}else{rem=[xd[xi]];remL=1}}while((xi++<xL||rem[0]!==void 0)&&sd--);more=rem[0]!==void 0}if(!qd[0])qd.shift()}if(logBase==1){q.e=e;inexact=more}else{for(i=1,k=qd[0];k>=10;k/=10)i++;q.e=i+e*logBase-1;finalise(q,dp?pr+q.e+1:pr,rm,more)}return q}}();function finalise(x,sd,rm,isTruncated){var digits,i,j,k,rd,roundUp,w,xd,xdi,Ctor=x.constructor;out:if(sd!=null){xd=x.d;if(!xd)return x;for(digits=1,k=xd[0];k>=10;k/=10)digits++;i=sd-digits;if(i<0){i+=LOG_BASE;j=sd;w=xd[xdi=0];rd=w/mathpow(10,digits-j-1)%10|0}else{xdi=Math.ceil((i+1)/LOG_BASE);k=xd.length;if(xdi>=k){if(isTruncated){for(;k++<=xdi;)xd.push(0);w=rd=0;digits=1;i%=LOG_BASE;j=i-LOG_BASE+1}else{break out}}else{w=k=xd[xdi];for(digits=1;k>=10;k/=10)digits++;i%=LOG_BASE;j=i-LOG_BASE+digits;rd=j<0?0:w/mathpow(10,digits-j-1)%10|0}}isTruncated=isTruncated||sd<0||xd[xdi+1]!==void 0||(j<0?w:w%mathpow(10,digits-j-1));roundUp=rm<4?(rd||isTruncated)&&(rm==0||rm==(x.s<0?3:2)):rd>5||rd==5&&(rm==4||isTruncated||rm==6&&(i>0?j>0?w/mathpow(10,digits-j):0:xd[xdi-1])%10&1||rm==(x.s<0?8:7));if(sd<1||!xd[0]){xd.length=0;if(roundUp){sd-=x.e+1;xd[0]=mathpow(10,(LOG_BASE-sd%LOG_BASE)%LOG_BASE);x.e=-sd||0}else{xd[0]=x.e=0}return x}if(i==0){xd.length=xdi;k=1;xdi--}else{xd.length=xdi+1;k=mathpow(10,LOG_BASE-i);xd[xdi]=j>0?(w/mathpow(10,digits-j)%mathpow(10,j)|0)*k:0}if(roundUp){for(;;){if(xdi==0){for(i=1,j=xd[0];j>=10;j/=10)i++;j=xd[0]+=k;for(k=1;j>=10;j/=10)k++;if(i!=k){x.e++;if(xd[0]==BASE)xd[0]=1}break}else{xd[xdi]+=k;if(xd[xdi]!=BASE)break;xd[xdi--]=0;k=1}}}for(i=xd.length;xd[--i]===0;)xd.pop()}if(external){if(x.e>Ctor.maxE){x.d=null;x.e=NaN}else if(x.e<Ctor.minE){x.e=0;x.d=[0]}}return x}function finiteToString(x,isExp,sd){if(!x.isFinite())return nonFiniteToString(x);var k,e=x.e,str=digitsToString(x.d),len=str.length;if(isExp){if(sd&&(k=sd-len)>0){str=str.charAt(0)+"."+str.slice(1)+getZeroString(k)}else if(len>1){str=str.charAt(0)+"."+str.slice(1)}str=str+(x.e<0?"e":"e+")+x.e}else if(e<0){str="0."+getZeroString(-e-1)+str;if(sd&&(k=sd-len)>0)str+=getZeroString(k)}else if(e>=len){str+=getZeroString(e+1-len);if(sd&&(k=sd-e-1)>0)str=str+"."+getZeroString(k)}else{if((k=e+1)<len)str=str.slice(0,k)+"."+str.slice(k);if(sd&&(k=sd-len)>0){if(e+1===len)str+=".";str+=getZeroString(k)}}return str}function getBase10Exponent(digits,e){var w=digits[0];for(e*=LOG_BASE;w>=10;w/=10)e++;return e}function getLn10(Ctor,sd,pr){if(sd>LN10_PRECISION){external=true;if(pr)Ctor.precision=pr;throw Error(precisionLimitExceeded)}return finalise(new Ctor(LN10),sd,1,true)}function getPi(Ctor,sd,rm){if(sd>PI_PRECISION)throw Error(precisionLimitExceeded);return finalise(new Ctor(PI),sd,rm,true)}function getPrecision(digits){var w=digits.length-1,len=w*LOG_BASE+1;w=digits[w];if(w){for(;w%10==0;w/=10)len--;for(w=digits[0];w>=10;w/=10)len++}return len}function getZeroString(k){var zs="";for(;k--;)zs+="0";return zs}function intPow(Ctor,x,n,pr){var isTruncated,r=new Ctor(1),k=Math.ceil(pr/LOG_BASE+4);external=false;for(;;){if(n%2){r=r.times(x);if(truncate(r.d,k))isTruncated=true}n=mathfloor(n/2);if(n===0){n=r.d.length-1;if(isTruncated&&r.d[n]===0)++r.d[n];break}x=x.times(x);truncate(x.d,k)}external=true;return r}function isOdd(n){return n.d[n.d.length-1]&1}function maxOrMin(Ctor,args,ltgt){var y,x=new Ctor(args[0]),i=0;for(;++i<args.length;){y=new Ctor(args[i]);if(!y.s){x=y;break}else if(x[ltgt](y)){x=y}}return x}function naturalExponential(x,sd){var denominator,guard,j,pow,sum,t,wpr,rep=0,i=0,k=0,Ctor=x.constructor,rm=Ctor.rounding,pr=Ctor.precision;if(!x.d||!x.d[0]||x.e>17){return new Ctor(x.d?!x.d[0]?1:x.s<0?0:1/0:x.s?x.s<0?0:x:0/0)}if(sd==null){external=false;wpr=pr}else{wpr=sd}t=new Ctor(.03125);while(x.e>-2){x=x.times(t);k+=5}guard=Math.log(mathpow(2,k))/Math.LN10*2+5|0;wpr+=guard;denominator=pow=sum=new Ctor(1);Ctor.precision=wpr;for(;;){pow=finalise(pow.times(x),wpr,1);denominator=denominator.times(++i);t=sum.plus(divide(pow,denominator,wpr,1));if(digitsToString(t.d).slice(0,wpr)===digitsToString(sum.d).slice(0,wpr)){j=k;while(j--)sum=finalise(sum.times(sum),wpr,1);if(sd==null){if(rep<3&&checkRoundingDigits(sum.d,wpr-guard,rm,rep)){Ctor.precision=wpr+=10;denominator=pow=t=new Ctor(1);i=0;rep++}else{return finalise(sum,Ctor.precision=pr,rm,external=true)}}else{Ctor.precision=pr;return sum}}sum=t}}function naturalLogarithm(y,sd){var c,c0,denominator,e,numerator,rep,sum,t,wpr,x1,x2,n=1,guard=10,x=y,xd=x.d,Ctor=x.constructor,rm=Ctor.rounding,pr=Ctor.precision;if(x.s<0||!xd||!xd[0]||!x.e&&xd[0]==1&&xd.length==1){return new Ctor(xd&&!xd[0]?-1/0:x.s!=1?NaN:xd?0:x)}if(sd==null){external=false;wpr=pr}else{wpr=sd}Ctor.precision=wpr+=guard;c=digitsToString(xd);c0=c.charAt(0);if(Math.abs(e=x.e)<15e14){while(c0<7&&c0!=1||c0==1&&c.charAt(1)>3){x=x.times(y);c=digitsToString(x.d);c0=c.charAt(0);n++}e=x.e;if(c0>1){x=new Ctor("0."+c);e++}else{x=new Ctor(c0+"."+c.slice(1))}}else{t=getLn10(Ctor,wpr+2,pr).times(e+"");x=naturalLogarithm(new Ctor(c0+"."+c.slice(1)),wpr-guard).plus(t);Ctor.precision=pr;return sd==null?finalise(x,pr,rm,external=true):x}x1=x;sum=numerator=x=divide(x.minus(1),x.plus(1),wpr,1);x2=finalise(x.times(x),wpr,1);denominator=3;for(;;){numerator=finalise(numerator.times(x2),wpr,1);t=sum.plus(divide(numerator,new Ctor(denominator),wpr,1));if(digitsToString(t.d).slice(0,wpr)===digitsToString(sum.d).slice(0,wpr)){sum=sum.times(2);if(e!==0)sum=sum.plus(getLn10(Ctor,wpr+2,pr).times(e+""));sum=divide(sum,new Ctor(n),wpr,1);if(sd==null){if(checkRoundingDigits(sum.d,wpr-guard,rm,rep)){Ctor.precision=wpr+=guard;t=numerator=x=divide(x1.minus(1),x1.plus(1),wpr,1);x2=finalise(x.times(x),wpr,1);denominator=rep=1}else{return finalise(sum,Ctor.precision=pr,rm,external=true)}}else{Ctor.precision=pr;return sum}}sum=t;denominator+=2}}function nonFiniteToString(x){return String(x.s*x.s/0)}function parseDecimal(x,str){var e,i,len;if((e=str.indexOf("."))>-1)str=str.replace(".","");if((i=str.search(/e/i))>0){if(e<0)e=i;e+=+str.slice(i+1);str=str.substring(0,i)}else if(e<0){e=str.length}for(i=0;str.charCodeAt(i)===48;i++);for(len=str.length;str.charCodeAt(len-1)===48;--len);str=str.slice(i,len);if(str){len-=i;x.e=e=e-i-1;x.d=[];i=(e+1)%LOG_BASE;if(e<0)i+=LOG_BASE;if(i<len){if(i)x.d.push(+str.slice(0,i));for(len-=LOG_BASE;i<len;)x.d.push(+str.slice(i,i+=LOG_BASE));str=str.slice(i);i=LOG_BASE-str.length}else{i-=len}for(;i--;)str+="0";x.d.push(+str);if(external){if(x.e>x.constructor.maxE){x.d=null;x.e=NaN}else if(x.e<x.constructor.minE){x.e=0;x.d=[0]}}}else{x.e=0;x.d=[0]}return x}function parseOther(x,str){var base,Ctor,divisor,i,isFloat,len,p,xd,xe;if(str.indexOf("_")>-1){str=str.replace(/(\d)_(?=\d)/g,"$1");if(isDecimal.test(str))return parseDecimal(x,str)}else if(str==="Infinity"||str==="NaN"){if(!+str)x.s=NaN;x.e=NaN;x.d=null;return x}if(isHex$1.test(str)){base=16;str=str.toLowerCase()}else if(isBinary.test(str)){base=2}else if(isOctal.test(str)){base=8}else{throw Error(invalidArgument+str)}i=str.search(/p/i);if(i>0){p=+str.slice(i+1);str=str.substring(2,i)}else{str=str.slice(2)}i=str.indexOf(".");isFloat=i>=0;Ctor=x.constructor;if(isFloat){str=str.replace(".","");len=str.length;i=len-i;divisor=intPow(Ctor,new Ctor(base),i,i*2)}xd=convertBase(str,base,BASE);xe=xd.length-1;for(i=xe;xd[i]===0;--i)xd.pop();if(i<0)return new Ctor(x.s*0);x.e=getBase10Exponent(xd,xe);x.d=xd;external=false;if(isFloat)x=divide(x,divisor,len*4);if(p)x=x.times(Math.abs(p)<54?mathpow(2,p):Decimal.pow(2,p));external=true;return x}function sine(Ctor,x){var k,len=x.d.length;if(len<3){return x.isZero()?x:taylorSeries(Ctor,2,x,x)}k=1.4*Math.sqrt(len);k=k>16?16:k|0;x=x.times(1/tinyPow(5,k));x=taylorSeries(Ctor,2,x,x);var sin2_x,d5=new Ctor(5),d16=new Ctor(16),d20=new Ctor(20);for(;k--;){sin2_x=x.times(x);x=x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))))}return x}function taylorSeries(Ctor,n,x,y,isHyperbolic){var j,t,u,x2,pr=Ctor.precision,k=Math.ceil(pr/LOG_BASE);external=false;x2=x.times(x);u=new Ctor(y);for(;;){t=divide(u.times(x2),new Ctor(n++*n++),pr,1);u=isHyperbolic?y.plus(t):y.minus(t);y=divide(t.times(x2),new Ctor(n++*n++),pr,1);t=u.plus(y);if(t.d[k]!==void 0){for(j=k;t.d[j]===u.d[j]&&j--;);if(j==-1)break}j=u;u=y;y=t;t=j}external=true;t.d.length=k+1;return t}function tinyPow(b,e){var n=b;while(--e)n*=b;return n}function toLessThanHalfPi(Ctor,x){var t,isNeg=x.s<0,pi=getPi(Ctor,Ctor.precision,1),halfPi=pi.times(.5);x=x.abs();if(x.lte(halfPi)){quadrant=isNeg?4:1;return x}t=x.divToInt(pi);if(t.isZero()){quadrant=isNeg?3:2}else{x=x.minus(t.times(pi));if(x.lte(halfPi)){quadrant=isOdd(t)?isNeg?2:3:isNeg?4:1;return x}quadrant=isOdd(t)?isNeg?1:4:isNeg?3:2}return x.minus(pi).abs()}function toStringBinary(x,baseOut,sd,rm){var base,e,i,k,len,roundUp,str,xd,y,Ctor=x.constructor,isExp=sd!==void 0;if(isExp){checkInt32(sd,1,MAX_DIGITS);if(rm===void 0)rm=Ctor.rounding;else checkInt32(rm,0,8)}else{sd=Ctor.precision;rm=Ctor.rounding}if(!x.isFinite()){str=nonFiniteToString(x)}else{str=finiteToString(x);i=str.indexOf(".");if(isExp){base=2;if(baseOut==16){sd=sd*4-3}else if(baseOut==8){sd=sd*3-2}}else{base=baseOut}if(i>=0){str=str.replace(".","");y=new Ctor(1);y.e=str.length-i;y.d=convertBase(finiteToString(y),10,base);y.e=y.d.length}xd=convertBase(str,10,base);e=len=xd.length;for(;xd[--len]==0;)xd.pop();if(!xd[0]){str=isExp?"0p+0":"0"}else{if(i<0){e--}else{x=new Ctor(x);x.d=xd;x.e=e;x=divide(x,y,sd,rm,0,base);xd=x.d;e=x.e;roundUp=inexact}i=xd[sd];k=base/2;roundUp=roundUp||xd[sd+1]!==void 0;roundUp=rm<4?(i!==void 0||roundUp)&&(rm===0||rm===(x.s<0?3:2)):i>k||i===k&&(rm===4||roundUp||rm===6&&xd[sd-1]&1||rm===(x.s<0?8:7));xd.length=sd;if(roundUp){for(;++xd[--sd]>base-1;){xd[sd]=0;if(!sd){++e;xd.unshift(1)}}}for(len=xd.length;!xd[len-1];--len);for(i=0,str="";i<len;i++)str+=NUMERALS.charAt(xd[i]);if(isExp){if(len>1){if(baseOut==16||baseOut==8){i=baseOut==16?4:3;for(--len;len%i;len++)str+="0";xd=convertBase(str,base,baseOut);for(len=xd.length;!xd[len-1];--len);for(i=1,str="1.";i<len;i++)str+=NUMERALS.charAt(xd[i])}else{str=str.charAt(0)+"."+str.slice(1)}}str=str+(e<0?"p":"p+")+e}else if(e<0){for(;++e;)str="0"+str;str="0."+str}else{if(++e>len)for(e-=len;e--;)str+="0";else if(e<len)str=str.slice(0,e)+"."+str.slice(e)}}str=(baseOut==16?"0x":baseOut==2?"0b":baseOut==8?"0o":"")+str}return x.s<0?"-"+str:str}function truncate(arr,len){if(arr.length>len){arr.length=len;return true}}function abs(x){return new this(x).abs()}function acos(x){return new this(x).acos()}function acosh(x){return new this(x).acosh()}function add$1(x,y){return new this(x).plus(y)}function asin(x){return new this(x).asin()}function asinh(x){return new this(x).asinh()}function atan(x){return new this(x).atan()}function atanh(x){return new this(x).atanh()}function atan2(y,x){y=new this(y);x=new this(x);var r,pr=this.precision,rm=this.rounding,wpr=pr+4;if(!y.s||!x.s){r=new this(NaN)}else if(!y.d&&!x.d){r=getPi(this,wpr,1).times(x.s>0?.25:.75);r.s=y.s}else if(!x.d||y.isZero()){r=x.s<0?getPi(this,pr,rm):new this(0);r.s=y.s}else if(!y.d||x.isZero()){r=getPi(this,wpr,1).times(.5);r.s=y.s}else if(x.s<0){this.precision=wpr;this.rounding=1;r=this.atan(divide(y,x,wpr,1));x=getPi(this,wpr,1);this.precision=pr;this.rounding=rm;r=y.s<0?r.minus(x):r.plus(x)}else{r=this.atan(divide(y,x,wpr,1))}return r}function cbrt(x){return new this(x).cbrt()}function ceil(x){return finalise(x=new this(x),x.e+1,2)}function clamp(x,min,max){return new this(x).clamp(min,max)}function config(obj){if(!obj||typeof obj!=="object")throw Error(decimalError+"Object expected");var i,p,v,useDefaults=obj.defaults===true,ps=["precision",1,MAX_DIGITS,"rounding",0,8,"toExpNeg",-EXP_LIMIT,0,"toExpPos",0,EXP_LIMIT,"maxE",0,EXP_LIMIT,"minE",-EXP_LIMIT,0,"modulo",0,9];for(i=0;i<ps.length;i+=3){if(p=ps[i],useDefaults)this[p]=DEFAULTS[p];if((v=obj[p])!==void 0){if(mathfloor(v)===v&&v>=ps[i+1]&&v<=ps[i+2])this[p]=v;else throw Error(invalidArgument+p+": "+v)}}if(p="crypto",useDefaults)this[p]=DEFAULTS[p];if((v=obj[p])!==void 0){if(v===true||v===false||v===0||v===1){if(v){if(typeof crypto!="undefined"&&crypto&&(crypto.getRandomValues||crypto.randomBytes)){this[p]=true}else{throw Error(cryptoUnavailable)}}else{this[p]=false}}else{throw Error(invalidArgument+p+": "+v)}}return this}function cos(x){return new this(x).cos()}function cosh(x){return new this(x).cosh()}function clone(obj){var i,p,ps;function Decimal(v){var e,i,t,x=this;if(!(x instanceof Decimal))return new Decimal(v);x.constructor=Decimal;if(isDecimalInstance(v)){x.s=v.s;if(external){if(!v.d||v.e>Decimal.maxE){x.e=NaN;x.d=null}else if(v.e<Decimal.minE){x.e=0;x.d=[0]}else{x.e=v.e;x.d=v.d.slice()}}else{x.e=v.e;x.d=v.d?v.d.slice():v.d}return}t=typeof v;if(t==="number"){if(v===0){x.s=1/v<0?-1:1;x.e=0;x.d=[0];return}if(v<0){v=-v;x.s=-1}else{x.s=1}if(v===~~v&&v<1e7){for(e=0,i=v;i>=10;i/=10)e++;if(external){if(e>Decimal.maxE){x.e=NaN;x.d=null}else if(e<Decimal.minE){x.e=0;x.d=[0]}else{x.e=e;x.d=[v]}}else{x.e=e;x.d=[v]}return}else if(v*0!==0){if(!v)x.s=NaN;x.e=NaN;x.d=null;return}return parseDecimal(x,v.toString())}else if(t!=="string"){throw Error(invalidArgument+v)}if((i=v.charCodeAt(0))===45){v=v.slice(1);x.s=-1}else{if(i===43)v=v.slice(1);x.s=1}return isDecimal.test(v)?parseDecimal(x,v):parseOther(x,v)}Decimal.prototype=P;Decimal.ROUND_UP=0;Decimal.ROUND_DOWN=1;Decimal.ROUND_CEIL=2;Decimal.ROUND_FLOOR=3;Decimal.ROUND_HALF_UP=4;Decimal.ROUND_HALF_DOWN=5;Decimal.ROUND_HALF_EVEN=6;Decimal.ROUND_HALF_CEIL=7;Decimal.ROUND_HALF_FLOOR=8;Decimal.EUCLID=9;Decimal.config=Decimal.set=config;Decimal.clone=clone;Decimal.isDecimal=isDecimalInstance;Decimal.abs=abs;Decimal.acos=acos;Decimal.acosh=acosh;Decimal.add=add$1;Decimal.asin=asin;Decimal.asinh=asinh;Decimal.atan=atan;Decimal.atanh=atanh;Decimal.atan2=atan2;Decimal.cbrt=cbrt;Decimal.ceil=ceil;Decimal.clamp=clamp;Decimal.cos=cos;Decimal.cosh=cosh;Decimal.div=div;Decimal.exp=exp;Decimal.floor=floor;Decimal.hypot=hypot;Decimal.ln=ln;Decimal.log=log$1;Decimal.log10=log10;Decimal.log2=log2;Decimal.max=max;Decimal.min=min;Decimal.mod=mod;Decimal.mul=mul;Decimal.pow=pow;Decimal.random=random;Decimal.round=round;Decimal.sign=sign;Decimal.sin=sin;Decimal.sinh=sinh;Decimal.sqrt=sqrt;Decimal.sub=sub;Decimal.sum=sum;Decimal.tan=tan;Decimal.tanh=tanh;Decimal.trunc=trunc;if(obj===void 0)obj={};if(obj){if(obj.defaults!==true){ps=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"];for(i=0;i<ps.length;)if(!obj.hasOwnProperty(p=ps[i++]))obj[p]=this[p]}}Decimal.config(obj);return Decimal}function div(x,y){return new this(x).div(y)}function exp(x){return new this(x).exp()}function floor(x){return finalise(x=new this(x),x.e+1,3)}function hypot(){var i,n,t=new this(0);external=false;for(i=0;i<arguments.length;){n=new this(arguments[i++]);if(!n.d){if(n.s){external=true;return new this(1/0)}t=n}else if(t.d){t=t.plus(n.times(n))}}external=true;return t.sqrt()}function isDecimalInstance(obj){return obj instanceof Decimal||obj&&obj.toStringTag===tag||false}function ln(x){return new this(x).ln()}function log$1(x,y){return new this(x).log(y)}function log2(x){return new this(x).log(2)}function log10(x){return new this(x).log(10)}function max(){return maxOrMin(this,arguments,"lt")}function min(){return maxOrMin(this,arguments,"gt")}function mod(x,y){return new this(x).mod(y)}function mul(x,y){return new this(x).mul(y)}function pow(x,y){return new this(x).pow(y)}function random(sd){var d,e,k,n,i=0,r=new this(1),rd=[];if(sd===void 0)sd=this.precision;else checkInt32(sd,1,MAX_DIGITS);k=Math.ceil(sd/LOG_BASE);if(!this.crypto){for(;i<k;)rd[i++]=Math.random()*1e7|0}else if(crypto.getRandomValues){d=crypto.getRandomValues(new Uint32Array(k));for(;i<k;){n=d[i];if(n>=429e7){d[i]=crypto.getRandomValues(new Uint32Array(1))[0]}else{rd[i++]=n%1e7}}}else if(crypto.randomBytes){d=crypto.randomBytes(k*=4);for(;i<k;){n=d[i]+(d[i+1]<<8)+(d[i+2]<<16)+((d[i+3]&127)<<24);if(n>=214e7){crypto.randomBytes(4).copy(d,i)}else{rd.push(n%1e7);i+=4}}i=k/4}else{throw Error(cryptoUnavailable)}k=rd[--i];sd%=LOG_BASE;if(k&&sd){n=mathpow(10,LOG_BASE-sd);rd[i]=(k/n|0)*n}for(;rd[i]===0;i--)rd.pop();if(i<0){e=0;rd=[0]}else{e=-1;for(;rd[0]===0;e-=LOG_BASE)rd.shift();for(k=1,n=rd[0];n>=10;n/=10)k++;if(k<LOG_BASE)e-=LOG_BASE-k}r.e=e;r.d=rd;return r}function round(x){return finalise(x=new this(x),x.e+1,this.rounding)}function sign(x){x=new this(x);return x.d?x.d[0]?x.s:0*x.s:x.s||NaN}function sin(x){return new this(x).sin()}function sinh(x){return new this(x).sinh()}function sqrt(x){return new this(x).sqrt()}function sub(x,y){return new this(x).sub(y)}function sum(){var i=0,args=arguments,x=new this(args[i]);external=false;for(;x.s&&++i<args.length;)x=x.plus(args[i]);external=true;return finalise(x,this.precision,this.rounding)}function tan(x){return new this(x).tan()}function tanh(x){return new this(x).tanh()}function trunc(x){return finalise(x=new this(x),x.e+1,1)}P[Symbol.for("nodejs.util.inspect.custom")]=P.toString;P[Symbol.toStringTag]="Decimal";var Decimal=P.constructor=clone(DEFAULTS);LN10=new Decimal(LN10);PI=new Decimal(PI);var RAY$2=new BigNumber(Math.pow(10,27));var SECONDS_PER_YEAR$1=31536e3;var getAssetRateByApy=function(_a){var apy=_a.apy;var APYDecimal=new Decimal(apy).div(100);var rate=APYDecimal.plus(1).pow(new Decimal(1).div(SECONDS_PER_YEAR$1)).minus(1).times(SECONDS_PER_YEAR$1).mul(new Decimal(RAY$2.toString()));return{rate:rate.toFixed()}};var supportedContracts$3=[{chainId:5,address:"0x1716898d72BE098F4828B435a3918cBFda562Efc"}];var ApyBetween$1=createPlugin$1({protocol:"AAVE",type:"VALIDATOR",method:"between",name:"apyBetween",description:"Check if a value is between two numbers",supportedContracts:supportedContracts$3,onCreate:function(_a){_a.chainId;var input=_a.input;input.rateValue.subscribe({callback:function(_a){var value=_a.value;input.methodParams.value.set({value:value})},id:"change_value1_on_rateValue_change"});input.methodParams.value.set({value:input.rateValue.value});var setValue=function(_a){var value=_a.value,param=_a.param;if(!value){param.set({value:undefined});return}if(input.minApyValue.isVariable){console.error("should be real value");return}var rate=getAssetRateByApy({apy:value});param.set({value:rate.rate})};input.minApyValue.subscribe({callback:function(_a){var value=_a.value;setValue({value:value,param:input.methodParams.minValue})},id:"change_minValue_on_minApyValue_change"});setValue({value:input.minApyValue.value,param:input.methodParams.minValue});input.maxApyValue.subscribe({callback:function(_a){var value=_a.value;setValue({value:value,param:input.methodParams.maxValue})},id:"change_maxValue_on_maxApyValue_change"});setValue({value:input.maxApyValue.value,param:input.methodParams.maxValue})},getParams:function(){return{input:{to:new FctAddress({}),rateValue:new FctValue27({mode:"VARIABLE"}),minApyValue:new FctPercent({destination:"percent",mode:"INPUT"}),maxApyValue:new FctPercent({destination:"percent",mode:"INPUT"}),methodParams:{minValue:new FctValue({readonly:true}),maxValue:new FctValue({readonly:true}),value:new FctValue({readonly:true})}},output:{value:new FctValue({innerIndex:0,description:"Result of minValue subtraction from value"})}}},validate:function(params,errors){var minValue=params.methodParams.minValue.value;var maxValue=params.methodParams.maxValue.value;if(typeof minValue==="object")return true;if(typeof maxValue==="object")return true;var minValueBN=BigNumber$1.from(minValue);var maxValueBN=BigNumber$1.from(maxValue);if(minValueBN.gt(maxValueBN)){errors.set("minValue",ERRORS.RANGE_ERROR);return false}errors.delete("minValue");return true}});var ApyGreaterThan$1=createPlugin$1({protocol:"AAVE",type:"VALIDATOR",method:"greaterThan",name:"apyGreaterThan",description:"Check if a value is greater than a number",supportedContracts:supportedContracts$3,onCreate:function(_a){_a.chainId;var input=_a.input;input.rateValue.subscribe({callback:function(_a){var value=_a.value;input.methodParams.value1.set({value:value})},id:"change_value1_on_rateValue_change"});input.methodParams.value1.set({value:input.rateValue.value});var setValue2=function(_a){var value=_a.value;if(!value){input.methodParams.value2.set({value:undefined});return}if(input.apyValue.isVariable){console.error("should be real value");return}var rate=getAssetRateByApy({apy:value});input.methodParams.value2.set({value:rate.rate})};input.apyValue.subscribe({callback:setValue2,id:"change_value2_on_apyValue_change"});setValue2({value:input.apyValue.value})},getParams:function(){return{input:{to:new FctAddress({}),rateValue:new FctValue27({mode:"VARIABLE"}),apyValue:new FctPercent({destination:"percent",mode:"INPUT"}),methodParams:{value1:new FctValue({readonly:true}),value2:new FctValue({readonly:true})}},output:{value:new FctValue({innerIndex:0,description:"Returns value2 subtraction from value1"})}}}});var ApyLessThan$1=createPlugin$1({protocol:"AAVE",type:"VALIDATOR",method:"lessThan",description:"Check if a value is less than a number",name:"apyLessThan",supportedContracts:supportedContracts$3,onCreate:function(_a){_a.chainId;var input=_a.input;input.rateValue.subscribe({callback:function(_a){var value=_a.value;input.methodParams.value1.set({value:value})},id:"change_value1_on_rateValue_change"});input.methodParams.value1.set({value:input.rateValue.value});var setValue2=function(_a){var value=_a.value;if(!value){input.methodParams.value2.set({value:undefined});return}if(input.apyValue.isVariable){console.error("should be real value");return}var rate=getAssetRateByApy({apy:value});input.methodParams.value2.set({value:rate.rate})};input.apyValue.subscribe({callback:setValue2,id:"change_value_on_apyValue_change"});setValue2({value:input.apyValue.value})},getParams:function(){return{input:{to:new FctAddress({}),rateValue:new FctValue27({mode:"VARIABLE"}),apyValue:new FctPercent({destination:"percent",mode:"INPUT"}),methodParams:{value1:new FctValue({readonly:true}),value2:new FctValue({readonly:true})}},output:{value:new FctValue({innerIndex:0,description:"Returns value1 subtraction from value2"})}}}});var actions$k={Borrow:Borrow$3,Deposit:Deposit$4,Repay:Repay$2,Withdraw:Withdraw$6,SwapBorrowRateMode:SwapBorrowRateMode$2};var getters$j={GetUserAccountData:GetUserAccountData$2,GetReserveData:GetReserveData$2,GetUserReserveData:GetUserReserveData$1,GetReserveConfigurationData:GetReserveConfigurationData$1,GetAssetReserveData:GetAssetReserveData$1,GetReserveTokensAddresses:GetReserveTokensAddresses$1,GetAssetPrice:GetAssetPrice$1,ApyLessThan:ApyLessThan$1,ApyBetween:ApyBetween$1,ApyGreaterThan:ApyGreaterThan$1};var AaveV2={actions:actions$k,getters:getters$j};var aaveV3ArbitrumErc20=[{aTokenAddress:"0x82E64f49Ed5EC1bC6e43DAD4FC8Af9bb3A2312EE",stableDebtTokenAddress:"0xd94112B5B62d53C9402e7A60289c6810dEF1dC9B",variableDebtTokenAddress:"0x8619d80FB0141ba7F184CbF22fd724116D9f7ffC",underlyingAssetAddress:"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1"},{aTokenAddress:"0x191c10Aa4AF7C30e871E70C95dB0E4eb77237530",stableDebtTokenAddress:"0x89D976629b7055ff1ca02b927BA3e020F22A44e4",variableDebtTokenAddress:"0x953A573793604aF8d41F306FEb8274190dB4aE0e",underlyingAssetAddress:"0xf97f4df75117a78c1A5a0DBb814Af92458539FB4"},{aTokenAddress:"0x625E7708f30cA75bfd92586e17077590C60eb4cD",stableDebtTokenAddress:"0x307ffe186F84a3bc2613D1eA417A5737D69A7007",variableDebtTokenAddress:"0xFCCf3cAbbe80101232d343252614b6A3eE81C989",underlyingAssetAddress:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"},{aTokenAddress:"0x078f358208685046a11C85e8ad32895DED33A249",stableDebtTokenAddress:"0x633b207Dd676331c413D4C013a6294B0FE47cD0e",variableDebtTokenAddress:"0x92b42c66840C7AD907b4BF74879FF3eF7c529473",underlyingAssetAddress:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f"},{aTokenAddress:"0xe50fA9b3c56FfB159cB0FCA61F5c9D750e8128c8",stableDebtTokenAddress:"0xD8Ad37849950903571df17049516a5CD4cbE55F6",variableDebtTokenAddress:"0x0c84331e39d6658Cd6e6b9ba04736cC4c4734351",underlyingAssetAddress:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"},{aTokenAddress:"0x6ab707Aca953eDAeFBc4fD23bA73294241490620",stableDebtTokenAddress:"0x70eFfc565DB6EEf7B927610155602d31b670e802",variableDebtTokenAddress:"0xfb00AC187a8Eb5AFAE4eACE434F493Eb62672df7",underlyingAssetAddress:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"},{aTokenAddress:"0xf329e36C7bF6E5E86ce2150875a84Ce77f477375",stableDebtTokenAddress:"0xfAeF6A702D15428E588d4C0614AEFb4348D83D48",variableDebtTokenAddress:"0xE80761Ea617F66F96274eA5e8c37f03960ecC679",underlyingAssetAddress:"0xba5DdD1f9d7F570dc94a51479a000E3BCE967196"},{aTokenAddress:"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97",stableDebtTokenAddress:"0xF15F26710c827DDe8ACBA678682F3Ce24f2Fb56E",variableDebtTokenAddress:"0x4a1c3aD6Ed28a636ee1751C69071f6be75DEb8B8",underlyingAssetAddress:"0xD22a58f79e9481D1a88e00c343885A588b34b68B"},{aTokenAddress:"0x513c7E3a9c69cA3e22550eF58AC1C0088e918FFf",stableDebtTokenAddress:"0x08Cb71192985E936C7Cd166A8b268035e400c3c3",variableDebtTokenAddress:"0x77CA01483f379E58174739308945f044e1a764dc",underlyingAssetAddress:"0x5979D7b546E38E414F7E9822514be443A4800529"},{aTokenAddress:"0xc45A479877e1e9Dfe9FcD4056c699575a1045dAA",stableDebtTokenAddress:"0x78246294a4c6fBf614Ed73CcC9F8b875ca8eE841",variableDebtTokenAddress:"0x34e2eD44EF7466D5f9E0b782B5c08b57475e7907",underlyingAssetAddress:"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d"}];var aaveV3MainnetErc20=[{aTokenAddress:"0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8",stableDebtTokenAddress:"0x102633152313C81cD80419b6EcF66d14Ad68949A",variableDebtTokenAddress:"0xeA51d7853EEFb32b6ee06b1C12E6dcCA88Be0fFE",underlyingAssetAddress:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{aTokenAddress:"0x0B925eD163218f6662a35e0f0371Ac234f9E9371",stableDebtTokenAddress:"0x39739943199c0fBFe9E5f1B5B160cd73a64CB85D",variableDebtTokenAddress:"0xC96113eED8cAB59cD8A66813bCB0cEb29F06D2e4",underlyingAssetAddress:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{aTokenAddress:"0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8",stableDebtTokenAddress:"0xA1773F1ccF6DB192Ad8FE826D15fe1d328B03284",variableDebtTokenAddress:"0x40aAbEf1aa8f0eEc637E0E7d92fbfFB2F26A8b7B",underlyingAssetAddress:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"},{aTokenAddress:"0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c",stableDebtTokenAddress:"0xB0fe3D292f4bd50De902Ba5bDF120Ad66E9d7a39",variableDebtTokenAddress:"0x72E95b8931767C79bA4EeE721354d6E99a61D004",underlyingAssetAddress:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},{aTokenAddress:"0x018008bfb33d285247A21d44E50697654f754e63",stableDebtTokenAddress:"0x413AdaC9E2Ef8683ADf5DDAEce8f19613d60D1bb",variableDebtTokenAddress:"0xcF8d0c70c850859266f5C338b38F9D663181C314",underlyingAssetAddress:"0x6B175474E89094C44Da98b954EedeAC495271d0F"},{aTokenAddress:"0x5E8C8A7243651DB1384C0dDfDbE39761E8e7E51a",stableDebtTokenAddress:"0x63B1129ca97D2b9F97f45670787Ac12a9dF1110a",variableDebtTokenAddress:"0x4228F8895C7dDA20227F6a5c6751b8Ebf19a6ba8",underlyingAssetAddress:"0x514910771AF9Ca656af840dff83E8264EcF986CA"},{aTokenAddress:"0xA700b4eB416Be35b2911fd5Dee80678ff64fF6C9",stableDebtTokenAddress:"0x268497bF083388B1504270d0E717222d3A87D6F2",variableDebtTokenAddress:"0xBae535520Abd9f8C85E58929e0006A2c8B372F74",underlyingAssetAddress:"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9"},{aTokenAddress:"0x977b6fc5dE62598B08C85AC8Cf2b745874E8b78c",stableDebtTokenAddress:"0x82bE6012cea6D147B968eBAea5ceEcF6A5b4F493",variableDebtTokenAddress:"0x0c91bcA95b5FE69164cE583A2ec9429A569798Ed",underlyingAssetAddress:"0xBe9895146f7AF43049ca1c1AE358B0541Ea49704"},{aTokenAddress:"0x23878914EFE38d27C4D67Ab83ed1b93A74D4086a",stableDebtTokenAddress:"0x822Fa72Df1F229C3900f5AD6C3Fa2C424D691622",variableDebtTokenAddress:"0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8",underlyingAssetAddress:"0xdAC17F958D2ee523a2206206994597C13D831ec7"},{aTokenAddress:"0xCc9EE9483f662091a1de4795249E24aC0aC2630f",stableDebtTokenAddress:"0x1d1906f909CAe494c7441604DAfDDDbD0485A925",variableDebtTokenAddress:"0xae8593DD575FE29A9745056aA91C4b746eee62C8",underlyingAssetAddress:"0xae78736Cd615f374D3085123A210448E74Fc6393"},{aTokenAddress:"0x3Fe6a295459FAe07DF8A0ceCC36F37160FE86AA9",stableDebtTokenAddress:"0x37A6B708FDB1483C231961b9a7F145261E815fc3",variableDebtTokenAddress:"0x33652e48e4B74D18520f11BfE58Edd2ED2cEc5A2",underlyingAssetAddress:"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0"},{aTokenAddress:"0x7B95Ec873268a6BFC6427e7a28e396Db9D0ebc65",stableDebtTokenAddress:"0x90D9CD005E553111EB8C9c31Abe9706a186b6048",variableDebtTokenAddress:"0x1b7D3F4b3c032a5AE656e30eeA4e8E1Ba376068F",underlyingAssetAddress:"0xD533a949740bb3306d119CC777fa900bA034cd52"},{aTokenAddress:"0x8A458A9dc9048e005d22849F470891b840296619",stableDebtTokenAddress:"0x0496372BE7e426D28E89DEBF01f19F014d5938bE",variableDebtTokenAddress:"0x6Efc73E54E41b27d2134fF9f98F15550f30DF9B1",underlyingAssetAddress:"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2"},{aTokenAddress:"0xC7B4c17861357B8ABB91F25581E7263E08DCB59c",stableDebtTokenAddress:"0x478E1ec1A2BeEd94c1407c951E4B9e22d53b2501",variableDebtTokenAddress:"0x8d0de040e8aAd872eC3c33A3776dE9152D3c34ca",underlyingAssetAddress:"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F"},{aTokenAddress:"0x2516E7B3F76294e03C42AA4c5b5b4DCE9C436fB8",stableDebtTokenAddress:"0xB368d45aaAa07ee2c6275Cb320D140b22dE43CDD",variableDebtTokenAddress:"0x3D3efceb4Ff0966D34d9545D3A2fa2dcdBf451f2",underlyingAssetAddress:"0xba100000625a3754423978a60c9317c58a424e3D"},{aTokenAddress:"0xF6D2224916DDFbbab6e6bd0D1B7034f4Ae0CaB18",stableDebtTokenAddress:"0x2FEc76324A0463c46f32e74A86D1cf94C02158DC",variableDebtTokenAddress:"0xF64178Ebd2E2719F2B1233bCb5Ef6DB4bCc4d09a",underlyingAssetAddress:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"},{aTokenAddress:"0x9A44fd41566876A39655f74971a3A6eA0a17a454",stableDebtTokenAddress:"0xa0a5bF5781Aeb548db9d4226363B9e89287C5FD2",variableDebtTokenAddress:"0xc30808705C01289A3D306ca9CAB081Ba9114eC82",underlyingAssetAddress:"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32"}];var POOL_ADDRESSES=[{address:"0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",chainId:1},{address:"0x794a61358D6845594F94dc1DB02A252b5b4814aD",chainId:42161},{address:"0x6Ae43d3271ff6888e7Fc43Fd7321a503ff738951",chainId:11155111}];var A_TOKENS={1:aaveV3MainnetErc20,5:[],42161:aaveV3ArbitrumErc20,421613:[],11155111:[]};var Borrow$2=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"borrow",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),interestRateMode:new FctValue({options:[{value:"1"},{value:"2"}]}),referralCode:new FctValue16({required:false,readonly:true}),onBehalfOf:new FctAddress({})}},output:{}}},initParams:{methodParams:{referralCode:"0"}},requiredApprovals:function(params,chainId,_walletAddress,vaultAddress){var _a=params.methodParams,amount=_a.amount,onBehalfOf=_a.onBehalfOf,asset=_a.asset;var assetValue=asset.value;if(assetValue&&typeof assetValue!="string"){return[]}var fromTokenData=A_TOKENS[chainId].find(function(token){return token.underlyingAssetAddress.toLowerCase()===assetValue.toLowerCase()});if(!fromTokenData){return[]}if(!vaultAddress)return[];var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:fromTokenData.aTokenAddress,from:onBehalfOf.value,params:{delegatee:vaultAddress,amount:value},method:"approveDelegation",protocol:"AAVE"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,amount=_a.amount,asset=_a.asset,onBehalfOf=_a.onBehalfOf,interestRateMode=_a.interestRateMode;if(!interestRateMode.value||!asset.value||!to.value||!amount.value||!onBehalfOf.value||!vaultAddress)return[];if(typeof interestRateMode.value!=="string"||typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];var assetData=A_TOKENS[chainId].find(function(token){return token.underlyingAssetAddress.toLowerCase()===asset.value.toLowerCase()});if(!assetData)return[];var debtToken=interestRateMode.value==="1"?assetData.stableDebtTokenAddress:assetData.variableDebtTokenAddress;return[{address:vaultAddress,toSpend:[],toReceive:[{token:asset.value,amount:amount.value},{token:debtToken,amount:amount.value}]},{address:to.value,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[]}]}});var Repay$1=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"repay",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),interestRateMode:new FctValue({options:[{value:"1"},{value:"2"}]}),onBehalfOf:new FctAddress({})}},output:{amountRepaid:new FctValue({innerIndex:0})}}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount,onBehalfOf=_a.onBehalfOf;var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:asset.value,from:onBehalfOf.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,amount=_a.amount,asset=_a.asset,onBehalfOf=_a.onBehalfOf,interestRateMode=_a.interestRateMode;if(!interestRateMode.value||!asset.value||!to.value||!amount.value||!onBehalfOf.value||!vaultAddress)return[];if(typeof interestRateMode.value!=="string"||typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];var assetData=A_TOKENS[chainId].find(function(token){return token.underlyingAssetAddress.toLowerCase()===asset.value.toLowerCase()});if(!assetData)return[];var debtToken=interestRateMode.value==="1"?assetData.stableDebtTokenAddress:assetData.variableDebtTokenAddress;return[{address:vaultAddress,toSpend:[{token:asset.value,amount:amount.value},{token:debtToken,amount:amount.value}],toReceive:[]},{address:to.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]}]}});var RepayWithATokens=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"repayWithATokens",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),interestRateMode:new FctValue({options:[{value:"1"},{value:"2"}]})}},output:{amountRepaid:new FctValue({innerIndex:0})}}}});var SetUserEMode=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"setUserEMode",supportedContracts:POOL_ADDRESSES,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{categoryId:new FctValue8({})}},output:{}}}});var SetUserUseReserveAsCollateral=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"setUserUseReserveAsCollateral",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})}),useAsCollateral:new FctBoolean({})}},output:{}}}});var Supply$1=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"supply",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),onBehalfOf:new FctAddress({}),referralCode:new FctValue16({})}},output:{}}},initParams:{methodParams:{referralCode:"0"}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount,onBehalfOf=_a.onBehalfOf;var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:asset.value,from:onBehalfOf.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,amount=_a.amount,asset=_a.asset,onBehalfOf=_a.onBehalfOf;if(!asset.value||!to.value||!amount.value||!onBehalfOf.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];return[{address:vaultAddress,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[]},{address:to.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]}]}});var SwapBorrowRateMode$1=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"swapBorrowRateMode",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})}),interestRateMode:new FctValue({options:[{value:"1"},{value:"2"}]})}},output:{}}}});var Withdraw$5=createPlugin$1({protocol:"AaveV3",type:"ACTION",method:"withdraw",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),to:new FctAddress({})}},output:{amountWithdrawn:new FctValue({innerIndex:0})}}}});var GetReserveData$1=createPlugin$1({protocol:"AaveV3",type:"GETTER",method:"getReserveData",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})})}},output:{configuration:new FctValue({innerIndex:0}),liquidityIndex:new FctValue128_27({innerIndex:1}),currentLiquidityRate:new FctValue128_27({innerIndex:2}),variableBorrowIndex:new FctValue128_27({innerIndex:3}),currentVariableBorrowRate:new FctValue128_27({innerIndex:4}),currentStableBorrowRate:new FctValue128_27({innerIndex:5}),lastUpdateTimestamp:new FctValue40({innerIndex:6}),id:new FctValue16({innerIndex:7}),aTokenAddress:new FctAddress({innerIndex:8}),stableDebtTokenAddress:new FctAddress({innerIndex:9}),variableDebtTokenAddress:new FctAddress({innerIndex:10}),interestRateStrategyAddress:new FctAddress({innerIndex:11}),accruedToTreasury:new FctValue128({innerIndex:12}),unbacked:new FctValue128({innerIndex:13}),isolationModeTotalDebt:new FctValue128({innerIndex:14})}}}});var GetReserveNormalizedIncome=createPlugin$1({protocol:"AaveV3",type:"GETTER",method:"getReserveNormalizedIncome",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})})}},output:{normalizedIncome:new FctValue27({innerIndex:0})}}}});var GetReserveNormalizedVariableDebt=createPlugin$1({protocol:"AaveV3",type:"GETTER",method:"getReserveNormalizedVariableDebt",supportedContracts:POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getAaveV3Tokens({chainId:chainId})})}},output:{normalizedVariableDebt:new FctValue27({innerIndex:0})}}}});var GetUserAccountData$1=createPlugin$1({protocol:"AaveV3",type:"GETTER",method:"getUserAccountData",supportedContracts:POOL_ADDRESSES,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{user:new FctAddress({})}},output:{totalCollateralBase:new FctValue({innerIndex:0}),totalDebtBase:new FctValue({innerIndex:1}),availableBorrowsBase:new FctValue({innerIndex:2}),currentLiquidationThreshold:new FctBps({innerIndex:3}),ltv:new FctBps({innerIndex:4}),healthFactor:new FctValue({innerIndex:5})}}}});var GetUserEMode=createPlugin$1({protocol:"AaveV3",type:"GETTER",method:"getUserEMode",supportedContracts:POOL_ADDRESSES,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"aave_pool_v3"}),methodParams:{user:new FctAddress({})}},output:{eMode:new FctValue({innerIndex:0})}}}});var actions$j={Borrow:Borrow$2,Repay:Repay$1,RepayWithATokens:RepayWithATokens,SetUserEMode:SetUserEMode,SetUserUseReserveAsCollateral:SetUserUseReserveAsCollateral,Supply:Supply$1,SwapBorrowRateMode:SwapBorrowRateMode$1,Withdraw:Withdraw$5};var getters$i={GetReserveData:GetReserveData$1,GetReserveNormalizedIncome:GetReserveNormalizedIncome,GetReserveNormalizedVariableDebt:GetReserveNormalizedVariableDebt,GetUserAccountData:GetUserAccountData$1,GetUserEMode:GetUserEMode};var AaveV3={actions:actions$j,getters:getters$i};var arbitrumPairsGoerli=[{value:"0x9b2C6EeFAFf544deDA38C7256854d6e44DbCbEcB",address:"0x9b2C6EeFAFf544deDA38C7256854d6e44DbCbEcB",name:"SPY / USD",symbol:"SPY / USD",decimals:8},{value:"0xBA862EC11ef2E9b12bcc1537B5762F351fE1fd03",address:"0xBA862EC11ef2E9b12bcc1537B5762F351fE1fd03",name:"ETH-USD 30-Day Realized Vol",symbol:"ETH-USD 30-Day Realized Vol",decimals:5},{value:"0x8bdFc91FB3f89F4c211461B06afDe84Dc55bedc2",address:"0x8bdFc91FB3f89F4c211461B06afDe84Dc55bedc2",name:"BTC-USD 1-Day Realized Vol",symbol:"BTC-USD 1-Day Realized Vol",decimals:5},{value:"0x103b53E977DA6E4Fa92f76369c8b7e20E7fb7fe1",address:"0x103b53E977DA6E4Fa92f76369c8b7e20E7fb7fe1",name:"DAI / USD",symbol:"DAI / USD",decimals:8},{value:"0x66765301a65dc76F1eec04494E55d939E23f59Bb",address:"0x66765301a65dc76F1eec04494E55d939E23f59Bb",name:"BTC / ETH",symbol:"BTC / ETH",decimals:18},{value:"0x6550bc2301936011c1334555e62A87705A81C12C",address:"0x6550bc2301936011c1334555e62A87705A81C12C",name:"BTC / USD",symbol:"BTC / USD",decimals:8},{value:"0x2eE9BFB2D319B31A573EA15774B755715988E99D",address:"0x2eE9BFB2D319B31A573EA15774B755715988E99D",name:"ARB / USD",symbol:"ARB / USD",decimals:8},{value:"0x025600F206C83854D33209Adceb23840f2963700",address:"0x025600F206C83854D33209Adceb23840f2963700",name:"30-Day ETH APR",symbol:"30-Day ETH APR",decimals:7},{value:"0x90F64B16c9d7bD03801b9Ec4038749065Aecc810",address:"0x90F64B16c9d7bD03801b9Ec4038749065Aecc810",name:"ETH-USD 7-Day Realized Vol",symbol:"ETH-USD 7-Day Realized Vol",decimals:5},{value:"0x4da69F028a5790fCCAfe81a75C0D24f46ceCDd69",address:"0x4da69F028a5790fCCAfe81a75C0D24f46ceCDd69",name:"L2 Sequencer Uptime Status Feed",symbol:"L2 Sequencer Uptime Status Feed",decimals:0},{value:"0x1B8e08a5457b12ae3CbC4233e645AEE2fA809e39",address:"0x1B8e08a5457b12ae3CbC4233e645AEE2fA809e39",name:"ETH-USD 1-Day Realized Vol",symbol:"ETH-USD 1-Day Realized Vol",decimals:5},{value:"0x3aDfcAA2E172258E1190f92151d517F11f5c3FBE",address:"0x3aDfcAA2E172258E1190f92151d517F11f5c3FBE",name:"BTC-USD 7-Day Realized Vol",symbol:"BTC-USD 7-Day Realized Vol",decimals:5},{value:"0x0a023a3423D9b27A0BE48c768CCF2dD7877fEf5E",address:"0x0a023a3423D9b27A0BE48c768CCF2dD7877fEf5E",name:"USDT / USD",symbol:"USDT / USD",decimals:8},{value:"0x62CAe0FA2da220f43a51F86Db2EDb36DcA9A5A08",address:"0x62CAe0FA2da220f43a51F86Db2EDb36DcA9A5A08",name:"ETH / USD",symbol:"ETH / USD",decimals:8},{value:"0x1692Bdd32F31b831caAc1b0c9fAF68613682813b",address:"0x1692Bdd32F31b831caAc1b0c9fAF68613682813b",name:"USDC / USD",symbol:"USDC / USD",decimals:8},{value:"0x1AdDb2368414B3b4cF1BCe7A887d2De7Bfb6886f",address:"0x1AdDb2368414B3b4cF1BCe7A887d2De7Bfb6886f",name:"LINK / ETH",symbol:"LINK / ETH",decimals:18},{value:"0x683677Fe19c36006163292b721a46AFaeaD9683C",address:"0x683677Fe19c36006163292b721a46AFaeaD9683C",name:"90-Day ETH APR",symbol:"90-Day ETH APR",decimals:7},{value:"0x9c4E6b6A9b1EeEE7DA00A827C81C31480025bE25",address:"0x9c4E6b6A9b1EeEE7DA00A827C81C31480025bE25",name:"BTC-USD 30-Day Realized Vol",symbol:"BTC-USD 30-Day Realized Vol",decimals:5},{value:"0xd28Ba6CA3bB72bF371b80a2a0a33cBcf9073C954",address:"0xd28Ba6CA3bB72bF371b80a2a0a33cBcf9073C954",name:"LINK / USD",symbol:"LINK / USD",decimals:8}];var arbitrumPairsMainnet=[{value:"0x8d0CC5f38f9E802475f2CFf4F9fc7000C2E1557c",address:"0x8d0CC5f38f9E802475f2CFf4F9fc7000C2E1557c",type:"Equities",name:"AAPL / USD",symbol:"AAPL / USD",decimals:8},{value:"0x46306F3795342117721D8DEd50fbcF6DF2b3cc10",address:"0x46306F3795342117721D8DEd50fbcF6DF2b3cc10",type:"Equities",name:"SPY / USD",symbol:"SPY / USD",decimals:8},{value:"0x205aaD468a11fd5D34fA7211bC6Bad5b3deB9b98",address:"0x205aaD468a11fd5D34fA7211bC6Bad5b3deB9b98",type:"Crypto (USD)",name:"OP / USD",symbol:"OP / USD",decimals:8},{value:"0x221912ce795669f628c51c69b7d0873eDA9C03bB",address:"0x221912ce795669f628c51c69b7d0873eDA9C03bB",type:"Crypto (USD)",name:"APE / USD",symbol:"APE / USD",decimals:8},{value:"0xC56765f04B248394CF1619D20dB8082Edbfa75b1",address:"0xC56765f04B248394CF1619D20dB8082Edbfa75b1",type:"Commodities",name:"XAG / USD",symbol:"XAG / USD",decimals:8},{value:"0xF3272CAfe65b190e76caAF483db13424a3e23dD2",address:"0xF3272CAfe65b190e76caAF483db13424a3e23dD2",type:"Crypto (ETH)",name:"rETH-ETH Exchange Rate",symbol:"rETH-ETH Exchange Rate",decimals:18},{value:"0x87121F6c9A9F6E90E59591E4Cf4804873f54A95b",address:"0x87121F6c9A9F6E90E59591E4Cf4804873f54A95b",type:"Crypto (Stablecoin)",name:"MIM / USD",symbol:"MIM / USD",decimals:8},{value:"0xb523AE262D20A936BC152e6023996e46FDC2A95D",address:"0xb523AE262D20A936BC152e6023996e46FDC2A95D",type:"Crypto (ETH)",name:"WSTETH / ETH",symbol:"WSTETH / ETH",decimals:18},{value:"0x3609baAa0a9b1f0FE4d6CC01884585d0e191C3E3",address:"0x3609baAa0a9b1f0FE4d6CC01884585d0e191C3E3",type:"Equities",name:"TSLA / USD",symbol:"TSLA / USD",decimals:8},{value:"0x1D1a83331e9D255EB1Aaf75026B60dFD00A252ba",address:"0x1D1a83331e9D255EB1Aaf75026B60dFD00A252ba",type:"Equities",name:"GOOGL / USD",symbol:"GOOGL / USD",decimals:8},{value:"0x8D0e319eBAA8DF32e088e469062F85abF2eBe599",address:"0x8D0e319eBAA8DF32e088e469062F85abF2eBe599",type:"NFTs",name:"NFT Blue Chip Total Market Cap-USD",symbol:"NFT Blue Chip Total Market Cap-USD",decimals:8},{value:"0xD6aB2298946840262FcC278fF31516D39fF611eF",address:"0xD6aB2298946840262FcC278fF31516D39fF611eF",type:"Crypto (ETH)",name:"RETH / ETH",symbol:"RETH / ETH",decimals:18},{value:"0x0017abAc5b6f291F9164e35B1234CA1D697f9CF4",address:"0x0017abAc5b6f291F9164e35B1234CA1D697f9CF4",type:"Crypto",name:"WBTC / BTC",symbol:"WBTC / BTC",decimals:8},{value:"0x761aaeBf021F19F198D325D7979965D0c7C9e53b",address:"0x761aaeBf021F19F198D325D7979965D0c7C9e53b",type:"Crypto (USD)",name:"OHMv2 / USD",symbol:"OHMv2 / USD",decimals:8},{value:"0xB4AD57B52aB9141de9926a3e0C8dc6264c2ef205",address:"0xB4AD57B52aB9141de9926a3e0C8dc6264c2ef205",type:"Crypto (USD)",name:"XRP / USD",symbol:"XRP / USD",decimals:8},{value:"0x48C4721354A3B29D80EF03C65E6644A37338a0B1",address:"0x48C4721354A3B29D80EF03C65E6644A37338a0B1",type:"Crypto",name:"OHM Index",symbol:"OHM Index",decimals:9},{value:"0xcC3370Bde6AFE51e1205a5038947b9836371eCCb",address:"0xcC3370Bde6AFE51e1205a5038947b9836371eCCb",type:"Forex",name:"CNY / USD",symbol:"CNY / USD",decimals:8},{value:"0xbF539d4c2106dd4D9AB6D56aed3d9023529Db145",address:"0xbF539d4c2106dd4D9AB6D56aed3d9023529Db145",type:"Crypto (USD)",name:"KNC / USD",symbol:"KNC / USD",decimals:8},{value:"0x0411D28c94d85A36bC72Cb0f875dfA8371D8fFfF",address:"0x0411D28c94d85A36bC72Cb0f875dfA8371D8fFfF",type:"Crypto (Stablecoin)",name:"LUSD / USD",symbol:"LUSD / USD",decimals:8},{value:"0xdA76130d2dDDE18bCEF6e2b66B5268B5658E3061",address:"0xdA76130d2dDDE18bCEF6e2b66B5268B5658E3061",type:"Crypto (USD)",name:"PEPE / USD",symbol:"PEPE / USD",decimals:8},{value:"0x85bb02E0Ae286600d1c68Bb6Ce22Cc998d411916",address:"0x85bb02E0Ae286600d1c68Bb6Ce22Cc998d411916",type:"Forex",name:"KRW / USD",symbol:"KRW / USD",decimals:8},{value:"0xc373B9DB0707fD451Bc56bA5E9b029ba26629DF0",address:"0xc373B9DB0707fD451Bc56bA5E9b029ba26629DF0",type:"Crypto (USD)",name:"DPX / USD",symbol:"DPX / USD",decimals:8},{value:"0x50834F3163758fcC1Df9973b6e91f0F0F0434aD3",address:"0x50834F3163758fcC1Df9973b6e91f0F0F0434aD3",type:"Crypto (Stablecoin)",name:"USDC / USD",symbol:"USDC / USD",decimals:8},{value:"0xa6bC5bAF2000424e90434bA7104ee399dEe80DEc",address:"0xa6bC5bAF2000424e90434bA7104ee399dEe80DEc",type:"Crypto (USD)",name:"DOT / USD",symbol:"DOT / USD",decimals:8},{value:"0x2BA975D4D7922cD264267Af16F3bD177F206FE3c",address:"0x2BA975D4D7922cD264267Af16F3bD177F206FE3c",type:"Crypto (USD)",name:"PAXG / USD",symbol:"PAXG / USD",decimals:8},{value:"0x639Fe6ab55C921f74e7fac1ee960C0B6293ba612",address:"0x639Fe6ab55C921f74e7fac1ee960C0B6293ba612",type:"Crypto (ETH)",name:"ETH / USD",symbol:"ETH / USD",decimals:8},{value:"0x054296f0D036b95531B4E14aFB578B80CFb41252",address:"0x054296f0D036b95531B4E14aFB578B80CFb41252",type:"Crypto (USD)",name:"SNX / USD",symbol:"SNX / USD",decimals:8},{value:"0xaD1d5344AaDE45F43E596773Bcc4c423EAbdD034",address:"0xaD1d5344AaDE45F43E596773Bcc4c423EAbdD034",type:"Crypto (USD)",name:"AAVE / USD",symbol:"AAVE / USD",decimals:8},{value:"0xc5a90A6d7e4Af242dA238FFe279e9f2BA0c64B2e",address:"0xc5a90A6d7e4Af242dA238FFe279e9f2BA0c64B2e",type:"Crypto (ETH)",name:"BTC / ETH",symbol:"BTC / ETH",decimals:18},{value:"0x851175a919f36c8e30197c09a9A49dA932c2CC00",address:"0x851175a919f36c8e30197c09a9A49dA932c2CC00",type:"Crypto (USD)",name:"CVX / USD",symbol:"CVX / USD",decimals:8},{value:"0x9854e9a850e7C354c1de177eA953a6b1fba8Fc22",address:"0x9854e9a850e7C354c1de177eA953a6b1fba8Fc22",type:"Forex",name:"AUD / USD",symbol:"AUD / USD",decimals:8},{value:"0xF0b7159BbFc341Cc41E7Cb182216F62c6d40533D",address:"0xF0b7159BbFc341Cc41E7Cb182216F62c6d40533D",type:"Crypto (USD)",name:"RPL / USD",symbol:"RPL / USD",decimals:8},{value:"0xb2A824043730FE05F3DA2efaFa1CBbe83fa548D6",address:"0xb2A824043730FE05F3DA2efaFa1CBbe83fa548D6",type:"Crypto (USD)",name:"ARB / USD",symbol:"ARB / USD",decimals:8},{value:"0x256654437f1ADA8057684b18d742eFD14034C400",address:"0x256654437f1ADA8057684b18d742eFD14034C400",type:"Crypto (USD)",name:"CAKE / USD",symbol:"CAKE / USD",decimals:8},{value:"0x594b919AD828e693B935705c3F816221729E7AE8",address:"0x594b919AD828e693B935705c3F816221729E7AE8",type:"Commodities",name:"WTI / USD",symbol:"WTI / USD",decimals:8},{value:"0xe74d69E233faB0d8F48921f2D93aDfDe44cEb3B7",address:"0xe74d69E233faB0d8F48921f2D93aDfDe44cEb3B7",type:"Crypto (USD)",name:"STG / USD",symbol:"STG / USD",decimals:8},{value:"0x66853E19d73c0F9301fe099c324A1E9726953433",address:"0x66853E19d73c0F9301fe099c324A1E9726953433",type:"Crypto (USD)",name:"PENDLE / USD",symbol:"PENDLE / USD",decimals:8},{value:"0xE89E98CE4E19071E59Ed4780E0598b541CE76486",address:"0xE89E98CE4E19071E59Ed4780E0598b541CE76486",type:"Crypto (USD)",name:"GNS / USD",symbol:"GNS / USD",decimals:8},{value:"0x80dd57c45B73f3c70feAF1BFe1bcdF384703E558",address:"0x80dd57c45B73f3c70feAF1BFe1bcdF384703E558",type:"Crypto",name:"ibBTC PricePerShare",symbol:"ibBTC PricePerShare",decimals:18},{value:"0xf6DA27749484843c4F02f5Ad1378ceE723dD61d4",address:"0xf6DA27749484843c4F02f5Ad1378ceE723dD61d4",type:"Forex",name:"CAD / USD",symbol:"CAD / USD",decimals:8},{value:"0xe7C53FFd03Eb6ceF7d208bC4C13446c76d1E5884",address:"0xe7C53FFd03Eb6ceF7d208bC4C13446c76d1E5884",type:"Crypto (USD)",name:"COMP / USD",symbol:"COMP / USD",decimals:8},{value:"0xBE5eA816870D11239c543F84b71439511D70B94f",address:"0xBE5eA816870D11239c543F84b71439511D70B94f",type:"Crypto (USD)",name:"BAL / USD",symbol:"BAL / USD",decimals:8},{value:"0xdE9f0894670c4EFcacF370426F10C3AD2Cdf147e",address:"0xdE9f0894670c4EFcacF370426F10C3AD2Cdf147e",type:"Crypto (USD)",name:"MKR / USD",symbol:"MKR / USD",decimals:8},{value:"0x5C3e80763862CB777Aa07BDDBcCE0123104e1c34",address:"0x5C3e80763862CB777Aa07BDDBcCE0123104e1c34",type:"Crypto (ETH)",name:"frxETH-ETH Exchange Rate High",symbol:"frxETH-ETH Exchange Rate High",decimals:18},{value:"0xd6a77691f071E98Df7217BED98f38ae6d2313EBA",address:"0xd6a77691f071E98Df7217BED98f38ae6d2313EBA",type:"Equities",name:"AMZN / USD",symbol:"AMZN / USD",decimals:8},{value:"0x0809E3d38d1B4214958faf06D8b1B1a2b73f2ab8",address:"0x0809E3d38d1B4214958faf06D8b1B1a2b73f2ab8",type:"Crypto (Stablecoin)",name:"FRAX / USD",symbol:"FRAX / USD",decimals:8},{value:"0xfF82AAF635645fD0bcc7b619C3F28004cDb58574",address:"0xfF82AAF635645fD0bcc7b619C3F28004cDb58574",type:"Forex",name:"PHP / USD",symbol:"PHP / USD",decimals:8},{value:"0xDde33fb9F21739602806580bdd73BAd831DcA867",address:"0xDde33fb9F21739602806580bdd73BAd831DcA867",type:"Equities",name:"MSFT / USD",symbol:"MSFT / USD",decimals:8},{value:"0x47E55cCec6582838E173f252D08Afd8116c2202d",address:"0x47E55cCec6582838E173f252D08Afd8116c2202d",type:"Crypto (USD)",name:"MAGIC / USD",symbol:"MAGIC / USD",decimals:8},{value:"0x04b7384473A2aDF1903E3a98aCAc5D62ba8C2702",address:"0x04b7384473A2aDF1903E3a98aCAc5D62ba8C2702",type:"Forex",name:"BRL / USD",symbol:"BRL / USD",decimals:8},{value:"0x98E5a52fB741347199C08a7a3fcF017364284431",address:"0x98E5a52fB741347199C08a7a3fcF017364284431",type:"Crypto (ETH)",name:"sfrxETH-frxETH Exchange Rate",symbol:"sfrxETH-frxETH Exchange Rate",decimals:18},{value:"0x745Ab5b69E01E2BE1104Ca84937Bb71f96f5fB21",address:"0x745Ab5b69E01E2BE1104Ca84937Bb71f96f5fB21",type:"Crypto (USD)",name:"YFI / USD",symbol:"YFI / USD",decimals:8},{value:"0x02DEd5a7EDDA750E3Eb240b54437a54d57b74dBE",address:"0x02DEd5a7EDDA750E3Eb240b54437a54d57b74dBE",type:"Crypto (USD)",name:"PEPE / USD",symbol:"PEPE / USD",decimals:18},{value:"0x484A1b29ED1Ea038dBd75D7c7293714343363122",address:"0x484A1b29ED1Ea038dBd75D7c7293714343363122",type:"Crypto (USD)",name:"IOTX / USD",symbol:"IOTX / USD",decimals:8},{value:"0x8FCb0F3715A82D83270777b3a5f3a7CF95Ce8Eec",address:"0x8FCb0F3715A82D83270777b3a5f3a7CF95Ce8Eec",type:"Crypto (Stablecoin)",name:"BUSD / USD",symbol:"BUSD / USD",decimals:8},{value:"0xFeaC1A3936514746e70170c0f539e70b23d36F19",address:"0xFeaC1A3936514746e70170c0f539e70b23d36F19",type:"Crypto (USD)",name:"FTM / USD",symbol:"FTM / USD",decimals:8},{value:"0x052d4200b624b07262F574af26C71A6553996Ab5",address:"0x052d4200b624b07262F574af26C71A6553996Ab5",type:"Crypto (ETH)",name:"StaFi Staked ETH rETH-ETH Exchange Rate",symbol:"StaFi Staked ETH rETH-ETH Exchange Rate",decimals:18},{value:"0xCDA67618e51762235eacA373894F0C79256768fa",address:"0xCDA67618e51762235eacA373894F0C79256768fa",type:"Crypto (USD)",name:"ATOM / USD",symbol:"ATOM / USD",decimals:8},{value:"0x9C4424Fd84C6661F97D8d6b3fc3C1aAc2BeDd137",address:"0x9C4424Fd84C6661F97D8d6b3fc3C1aAc2BeDd137",type:"Forex",name:"GBP / USD",symbol:"GBP / USD",decimals:8},{value:"0xaebDA2c976cfd1eE1977Eac079B4382acb849325",address:"0xaebDA2c976cfd1eE1977Eac079B4382acb849325",type:"Crypto (USD)",name:"CRV / USD",symbol:"CRV / USD",decimals:8},{value:"0xA14d53bC1F1c0F31B4aA3BD109344E5009051a84",address:"0xA14d53bC1F1c0F31B4aA3BD109344E5009051a84",type:"Forex",name:"EUR / USD",symbol:"EUR / USD",decimals:8},{value:"0x4763b84cdBc5211B9e0a57D5E39af3B3b2440012",address:"0x4763b84cdBc5211B9e0a57D5E39af3B3b2440012",type:"Currency",name:"Total Marketcap USD",symbol:"Total Marketcap USD",decimals:8},{value:"0x0518673439245BB95A58688Bc31cd513F3D5bDd6",address:"0x0518673439245BB95A58688Bc31cd513F3D5bDd6",type:"Crypto (ETH)",name:"cbETH-ETH Exchange Rate",symbol:"cbETH-ETH Exchange Rate",decimals:18},{value:"0xF0d38324d1F86a176aC727A4b0c43c9F9d9c5EB1",address:"0xF0d38324d1F86a176aC727A4b0c43c9F9d9c5EB1",type:"Forex",name:"SGD / USD",symbol:"SGD / USD",decimals:8},{value:"0x5e2b5C5C07cCA3437c4D724225Bb42c7E55d1597",address:"0x5e2b5C5C07cCA3437c4D724225Bb42c7E55d1597",type:"Crypto (USD)",name:"WOO / USD",symbol:"WOO / USD",decimals:8},{value:"0x7519bCA20e21725557Bb98d9032124f8885a26C2",address:"0x7519bCA20e21725557Bb98d9032124f8885a26C2",type:"Crypto (USD)",name:"BTC-USD Total Marketcap",symbol:"BTC-USD Total Marketcap",decimals:8},{value:"0xE8f8AfE4b56c6C421F691bfAc225cE61b2C7CD05",address:"0xE8f8AfE4b56c6C421F691bfAc225cE61b2C7CD05",type:"Forex",name:"TRY / USD",symbol:"TRY / USD",decimals:8},{value:"0x24ceA4b8ce57cdA5058b924B9B9987992450590c",address:"0x24ceA4b8ce57cdA5058b924B9B9987992450590c",type:"Crypto (USD)",name:"SOL / USD",symbol:"SOL / USD",decimals:8},{value:"0x6ce185860a4963106506C203335A2910413708e9",address:"0x6ce185860a4963106506C203335A2910413708e9",type:"Crypto (USD)",name:"BTC / USD",symbol:"BTC / USD",decimals:8},{value:"0x20d0Fcab0ECFD078B036b6CAf1FaC69A6453b352",address:"0x20d0Fcab0ECFD078B036b6CAf1FaC69A6453b352",type:"Crypto (USD)",name:"RDNT / USD",symbol:"RDNT / USD",decimals:8},{value:"0x86E53CF1B870786351Da77A57575e79CB55812CB",address:"0x86E53CF1B870786351Da77A57575e79CB55812CB",type:"Crypto (USD)",name:"LINK / USD",symbol:"LINK / USD",decimals:8},{value:"0x6970460aabF80C5BE983C6b74e5D06dEDCA95D4A",address:"0x6970460aabF80C5BE983C6b74e5D06dEDCA95D4A",type:"Crypto (USD)",name:"BNB / USD",symbol:"BNB / USD",decimals:8},{value:"0x5B58aA6E0651Ae311864876A55411F481aD86080",address:"0x5B58aA6E0651Ae311864876A55411F481aD86080",type:"Crypto (USD)",name:"AXS / USD",symbol:"AXS / USD",decimals:8},{value:"0x52099D4523531f678Dfc568a7B1e5038aadcE1d6",address:"0x52099D4523531f678Dfc568a7B1e5038aadcE1d6",type:"Crypto (USD)",name:"MATIC / USD",symbol:"MATIC / USD",decimals:8},{value:"0x9E3fc57b2d644621CA7eFcb5dd28abD121CB0aDF",address:"0x9E3fc57b2d644621CA7eFcb5dd28abD121CB0aDF",type:"Crypto (NFT)",name:"Bored Ape Yacht Club Floor Price / ETH ",symbol:"Bored Ape Yacht Club Floor Price / ETH ",decimals:18},{value:"0xcd1bd86fDc33080DCF1b5715B6FCe04eC6F85845",address:"0xcd1bd86fDc33080DCF1b5715B6FCe04eC6F85845",type:"Equities",name:"META / USD",symbol:"META / USD",decimals:8},{value:"0xded2c52b75B24732e9107377B7Ba93eC1fFa4BAf",address:"0xded2c52b75B24732e9107377B7Ba93eC1fFa4BAf",type:"Crypto (ETH)",name:"STETH / ETH",symbol:"STETH / ETH",decimals:18},{value:"0xB1f70A229FE7cceD0428245db8B1f6C48c7Ea82a",address:"0xB1f70A229FE7cceD0428245db8B1f6C48c7Ea82a",type:"Crypto (ETH)",name:"ETH-USD Total Marketcap",symbol:"ETH-USD Total Marketcap",decimals:8},{value:"0xA43A34030088E6510FecCFb77E88ee5e7ed0fE64",address:"0xA43A34030088E6510FecCFb77E88ee5e7ed0fE64",type:"Crypto (USD)",name:"LDO / USD",symbol:"LDO / USD",decimals:8},{value:"0x3f3f5dF88dC9F13eac63DF89EC16ef6e7E25DdE7",address:"0x3f3f5dF88dC9F13eac63DF89EC16ef6e7E25DdE7",type:"Crypto (Stablecoin)",name:"USDT / USD",symbol:"USDT / USD",decimals:8},{value:"0x07C5b924399cc23c24a95c8743DE4006a32b7f2a",address:"0x07C5b924399cc23c24a95c8743DE4006a32b7f2a",type:"Crypto (ETH)",name:"STETH / USD",symbol:"STETH / USD",decimals:8},{value:"0x6fAbee62266Da6686EE2744C6f15bb8352d2f28D",address:"0x6fAbee62266Da6686EE2744C6f15bb8352d2f28D",type:"Crypto (Stablecoin)",name:"TUSD / USD",symbol:"TUSD / USD",decimals:8},{value:"0xe32AccC8c4eC03F6E75bd3621BfC9Fbb234E1FC3",address:"0xe32AccC8c4eC03F6E75bd3621BfC9Fbb234E1FC3",type:"Forex",name:"CHF / USD",symbol:"CHF / USD",decimals:8},{value:"0xDB98056FecFff59D032aB628337A4887110df3dB",address:"0xDB98056FecFff59D032aB628337A4887110df3dB",type:"Crypto (USD)",name:"GMX / USD",symbol:"GMX / USD",decimals:8},{value:"0xc5C8E77B397E531B8EC06BFb0048328B30E9eCfB",address:"0xc5C8E77B397E531B8EC06BFb0048328B30E9eCfB",type:"Crypto (Stablecoin)",name:"DAI / USD",symbol:"DAI / USD",decimals:8},{value:"0xb7c8Fb1dB45007F98A68Da0588e1AA524C317f27",address:"0xb7c8Fb1dB45007F98A68Da0588e1AA524C317f27",type:"Crypto (ETH)",name:"LINK / ETH",symbol:"LINK / ETH",decimals:18},{value:"0x04180965a782E487d0632013ABa488A472243542",address:"0x04180965a782E487d0632013ABa488A472243542",type:"Crypto (USD)",name:"JOE / USD",symbol:"JOE / USD",decimals:8},{value:"0x4bC735Ef24bf286983024CAd5D03f0738865Aaef",address:"0x4bC735Ef24bf286983024CAd5D03f0738865Aaef",type:"Crypto (USD)",name:"1INCH / USD",symbol:"1INCH / USD",decimals:8},{value:"0x3dD6e51CB9caE717d5a8778CF79A04029f9cFDF8",address:"0x3dD6e51CB9caE717d5a8778CF79A04029f9cFDF8",type:"Forex",name:"JPY / USD",symbol:"JPY / USD",decimals:8},{value:"0xd0C7101eACbB49F3deCcCc166d238410D6D46d57",address:"0xd0C7101eACbB49F3deCcCc166d238410D6D46d57",type:"Crypto (USD)",name:"WBTC / USD",symbol:"WBTC / USD",decimals:8},{value:"0xB1552C5e96B312d0Bf8b554186F846C40614a540",address:"0xB1552C5e96B312d0Bf8b554186F846C40614a540",type:"Crypto (ETH)",name:"wstETH-stETH Exchange Rate",symbol:"wstETH-stETH Exchange Rate",decimals:18},{value:"0xbcD8bEA7831f392bb019ef3a672CC15866004536",address:"0xbcD8bEA7831f392bb019ef3a672CC15866004536",type:"Crypto",name:"CV Index",symbol:"CV Index",decimals:18},{value:"0xBF5C3fB2633e924598A46B9D07a174a9DBcF57C0",address:"0xBF5C3fB2633e924598A46B9D07a174a9DBcF57C0",type:"Crypto (USD)",name:"NEAR / USD",symbol:"NEAR / USD",decimals:8},{value:"0x9A7FB1b3950837a8D9b40517626E11D4127C098C",address:"0x9A7FB1b3950837a8D9b40517626E11D4127C098C",type:"Crypto (USD)",name:"DOGE / USD",symbol:"DOGE / USD",decimals:8},{value:"0xa668682974E3f121185a3cD94f00322beC674275",address:"0xa668682974E3f121185a3cD94f00322beC674275",type:"Crypto (ETH)",name:"CBETH / ETH",symbol:"CBETH / ETH",decimals:18},{value:"0xA33a06c119EC08F92735F9ccA37e07Af08C4f281",address:"0xA33a06c119EC08F92735F9ccA37e07Af08C4f281",type:"Crypto (USD)",name:"DODO / USD",symbol:"DODO / USD",decimals:8},{value:"0x59644ec622243878d1464A9504F9e9a31294128a",address:"0x59644ec622243878d1464A9504F9e9a31294128a",type:"Crypto (Stablecoin)",name:"MIMATIC / USD",symbol:"MIMATIC / USD",decimals:8},{value:"0x8bf61728eeDCE2F32c456454d87B5d6eD6150208",address:"0x8bf61728eeDCE2F32c456454d87B5d6eD6150208",type:"Crypto (USD)",name:"AVAX / USD",symbol:"AVAX / USD",decimals:8},{value:"0xdE89a55d04DEd40A410877ab87d4F567ee66a1f0",address:"0xdE89a55d04DEd40A410877ab87d4F567ee66a1f0",type:"Forex",name:"SEK / USD",symbol:"SEK / USD",decimals:8},{value:"0x1F954Dc24a49708C26E0C1777f16750B5C6d5a2c",address:"0x1F954Dc24a49708C26E0C1777f16750B5C6d5a2c",type:"Commodities",name:"XAU / USD",symbol:"XAU / USD",decimals:8},{value:"0x4Ee1f9ec1048979930aC832a3C1d18a0b4955a02",address:"0x4Ee1f9ec1048979930aC832a3C1d18a0b4955a02",type:"Crypto (Stablecoin)",name:"USDD / USD",symbol:"USDD / USD",decimals:8},{value:"0xb2A8BA74cbca38508BA1632761b56C897060147C",address:"0xb2A8BA74cbca38508BA1632761b56C897060147C",type:"Crypto (USD)",name:"SUSHI / USD",symbol:"SUSHI / USD",decimals:8},{value:"0xD9f615A9b820225edbA2d821c4A696a0924051c6",address:"0xD9f615A9b820225edbA2d821c4A696a0924051c6",type:"Crypto (USD)",name:"ADA / USD",symbol:"ADA / USD",decimals:8},{value:"0x9C917083fDb403ab5ADbEC26Ee294f6EcAda2720",address:"0x9C917083fDb403ab5ADbEC26Ee294f6EcAda2720",type:"Crypto (USD)",name:"UNI / USD",symbol:"UNI / USD",decimals:8},{value:"0x383b3624478124697BEF675F07cA37570b73992f",address:"0x383b3624478124697BEF675F07cA37570b73992f",type:"Crypto (USD)",name:"SPELL / USD",symbol:"SPELL / USD",decimals:8},{value:"0x36a121448D74Fa81450c992A1a44B9b7377CD3a5",address:"0x36a121448D74Fa81450c992A1a44B9b7377CD3a5",type:"Crypto (USD)",name:"FXS / USD",symbol:"FXS / USD",decimals:8},{value:"0x1bD872f3A606471787B1a304cE0356e4e87Af930",address:"0x1bD872f3A606471787B1a304cE0356e4e87Af930",type:"Crypto (ETH)",name:"frxETH-ETH Exchange Rate Low",symbol:"frxETH-ETH Exchange Rate Low",decimals:18}];var ethereumPairsGoerli=[{value:"0xF549af21578Cfe2385FFD3488B3039fd9e52f006",address:"0xF549af21578Cfe2385FFD3488B3039fd9e52f006",name:"ETH / USD",symbol:"ETH / USD",decimals:8},{value:"0x4b531A318B0e44B549F3b2f824721b3D0d51930A",address:"0x4b531A318B0e44B549F3b2f824721b3D0d51930A",name:"VeeFriends Floor Price",symbol:"VeeFriends Floor Price",decimals:18},{value:"0x9F6d70CDf08d893f0063742b51d3E9D1e18b7f74",address:"0x9F6d70CDf08d893f0063742b51d3E9D1e18b7f74",name:"Azuki Floor Price",symbol:"Azuki Floor Price",decimals:18},{value:"0xB677bfBc9B09a3469695f40477d05bc9BcB15F50",address:"0xB677bfBc9B09a3469695f40477d05bc9BcB15F50",name:"BAYC Floor Price",symbol:"BAYC Floor Price",decimals:18},{value:"0x3de1bE9407645533CD0CbeCf88dFE5297E7125e6",address:"0x3de1bE9407645533CD0CbeCf88dFE5297E7125e6",name:"Stader Labs PoR",symbol:"Stader Labs PoR",decimals:18},{value:"0x7b219F57a8e9C7303204Af681e9fA69d17ef626f",address:"0x7b219F57a8e9C7303204Af681e9fA69d17ef626f",name:"XAU / USD",symbol:"XAU / USD",decimals:18},{value:"0x870bc8BfEe8A7Bbd63Dc1ef09F2fF37DeBCfEF35",address:"0x870bc8BfEe8A7Bbd63Dc1ef09F2fF37DeBCfEF35",name:"Cryptoadz Floor Price",symbol:"Cryptoadz Floor Price",decimals:18},{value:"0xCbDcc8788019226d09FcCEb4C727C48A062D8124",address:"0xCbDcc8788019226d09FcCEb4C727C48A062D8124",name:"MAYC Floor Price",symbol:"MAYC Floor Price",decimals:18},{value:"0x47Db76c9c97F4bcFd54D8872FDb848Cab696092d",address:"0x47Db76c9c97F4bcFd54D8872FDb848Cab696092d",name:"LINK / USD",symbol:"LINK / USD",decimals:8},{value:"0xb4c4a493AB6356497713A78FFA6c60FB53517c63",address:"0xb4c4a493AB6356497713A78FFA6c60FB53517c63",name:"LINK / ETH",symbol:"LINK / ETH",decimals:18},{value:"0xe69BA7C8177bF69B7EE4b4C8a2DA1B52C9c15B8B",address:"0xe69BA7C8177bF69B7EE4b4C8a2DA1B52C9c15B8B",name:"ETHx Liquid Staking Balance PoR",symbol:"ETHx Liquid Staking Balance PoR",decimals:18},{value:"0xD3e3Cf81fA419e0937c39ac2A86E74E24559c499",address:"0xD3e3Cf81fA419e0937c39ac2A86E74E24559c499",name:"ETHx Supply",symbol:"ETHx Supply",decimals:18},{value:"0x0a12ec21c43ab2b4f69693Da1b0149e7652689c0",address:"0x0a12ec21c43ab2b4f69693Da1b0149e7652689c0",name:"BTC / USD",symbol:"BTC / USD",decimals:8},{value:"0xEDA76D1C345AcA04c6910f5824EC337C8a8F36d2",address:"0xEDA76D1C345AcA04c6910f5824EC337C8a8F36d2",name:"Doodles Floor Price",symbol:"Doodles Floor Price",decimals:18},{value:"0xAE45DCb3eB59E27f05C170752B218C6174394Df8",address:"0xAE45DCb3eB59E27f05C170752B218C6174394Df8",name:"CZK / USD",symbol:"CZK / USD",decimals:8},{value:"0x943C6B6124Fe7b34E0973A7b627a903f192D8B1F",address:"0x943C6B6124Fe7b34E0973A7b627a903f192D8B1F",name:"Optimism Healthcheck",symbol:"Optimism Healthcheck",decimals:0},{value:"0xcd3BBd46c6c6354e3B03780F99E9836d3AC7740b",address:"0xcd3BBd46c6c6354e3B03780F99E9836d3AC7740b",name:"StakeStar PoR",symbol:"StakeStar PoR",decimals:18},{value:"0x2748A42aBd328835DFDA748bdD1D77Ce3c3312EE",address:"0x2748A42aBd328835DFDA748bdD1D77Ce3c3312EE",name:"World of Women Floor Price",symbol:"World of Women Floor Price",decimals:18},{value:"0xdC5f59e61e51b90264b38F0202156F07956E2577",address:"0xdC5f59e61e51b90264b38F0202156F07956E2577",name:"SNX / USD",symbol:"SNX / USD",decimals:8},{value:"0xDe9C980F79b636B46b9c3bc04cfCC94A29D18D19",address:"0xDe9C980F79b636B46b9c3bc04cfCC94A29D18D19",name:"Swell PoR",symbol:"Swell PoR",decimals:18},{value:"0x982B232303af1EFfB49939b81AD6866B2E4eeD0B",address:"0x982B232303af1EFfB49939b81AD6866B2E4eeD0B",name:"JPY / USD",symbol:"JPY / USD",decimals:8},{value:"0x0d79df66BE487753B02D015Fb622DED7f0E9798d",address:"0x0d79df66BE487753B02D015Fb622DED7f0E9798d",name:"DAI / USD",symbol:"DAI / USD",decimals:8},{value:"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e",address:"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e",name:"ETH / USD",symbol:"ETH / USD",decimals:8},{value:"0xAb5c49580294Aff77670F839ea425f5b78ab3Ae7",address:"0xAb5c49580294Aff77670F839ea425f5b78ab3Ae7",name:"USDC / USD",symbol:"USDC / USD",decimals:8},{value:"0x13F38938A18ff26394c5ac8df94E349A97AaAb4e",address:"0x13F38938A18ff26394c5ac8df94E349A97AaAb4e",name:"CoolCats Floor Price",symbol:"CoolCats Floor Price",decimals:18},{value:"0x48731cF7e84dc94C5f84577882c14Be11a5B7456",address:"0x48731cF7e84dc94C5f84577882c14Be11a5B7456",name:"LINK / USD",symbol:"LINK / USD",decimals:8},{value:"0xE42f272EdF974e9c70a6d38dCb47CAB2A28CED3F",address:"0xE42f272EdF974e9c70a6d38dCb47CAB2A28CED3F",name:"CloneX Floor Price",symbol:"CloneX Floor Price",decimals:18},{value:"0x5c13b249846540F81c093Bc342b5d963a7518145",address:"0x5c13b249846540F81c093Bc342b5d963a7518145",name:"CryptoPunks Floor Price",symbol:"CryptoPunks Floor Price",decimals:18},{value:"0xA39434A63A52E749F02807ae27335515BA4b07F7",address:"0xA39434A63A52E749F02807ae27335515BA4b07F7",name:"BTC / USD",symbol:"BTC / USD",decimals:8},{value:"0x7A65Cf6C2ACE993f09231EC1Ea7363fb29C13f2F",address:"0x7A65Cf6C2ACE993f09231EC1Ea7363fb29C13f2F",name:"FORTH / USD",symbol:"FORTH / USD",decimals:8},{value:"0x44390589104C9164407A0E0562a9DBe6C24A0E05",address:"0x44390589104C9164407A0E0562a9DBe6C24A0E05",name:"EUR / USD",symbol:"EUR / USD",decimals:8},{value:"0x779877A7B0D9E8603169DdbD7836e478b4624789",address:"0x779877A7B0D9E8603169DdbD7836e478b4624789",name:"BTC / ETH",symbol:"BTC / ETH",decimals:18},{value:"0x73D9c953DaaB1c829D01E1FC0bd92e28ECfB66DB",address:"0x73D9c953DaaB1c829D01E1FC0bd92e28ECfB66DB",name:"GBP / USD",symbol:"GBP / USD",decimals:8}];var ethereumPairsMainnet=[{value:"0x8b6d9085f310396C6E4f0012783E9f850eaa8a82",address:"0x8b6d9085f310396C6E4f0012783E9f850eaa8a82",type:"Crypto (USD)",name:"UST / USD",symbol:"UST / USD",decimals:8},{value:"0x0e773A17a01E2c92F5d4c53435397E2bd48e215F",address:"0x0e773A17a01E2c92F5d4c53435397E2bd48e215F",type:"Crypto (ETH)",name:"GTC / ETH",symbol:"GTC / ETH",decimals:18},{value:"0xad35Bd71b9aFE6e4bDc266B345c198eaDEf9Ad94",address:"0xad35Bd71b9aFE6e4bDc266B345c198eaDEf9Ad94",type:"Crypto (Stablecoin)",name:"sUSD / USD",symbol:"sUSD / USD",decimals:8},{value:"0xAB4D1bc99781A445BC1D065663d9A831f787124e",address:"0xAB4D1bc99781A445BC1D065663d9A831f787124e",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 1 Week",symbol:"BTC Interest Rate Benchmark Curve 1 Week",decimals:8},{value:"0xE6A7b525609bF47889ac9d0e964ebB640750a01C",address:"0xE6A7b525609bF47889ac9d0e964ebB640750a01C",type:"Crypto (NFT)",name:"JPEGd Mutant Ape Floor Price ETH",symbol:"JPEGd Mutant Ape Floor Price ETH",decimals:18},{value:"0xBcE206caE7f0ec07b545EddE332A47C2F75bbeb3",address:"0xBcE206caE7f0ec07b545EddE332A47C2F75bbeb3",type:"Forex",name:"JPY / USD",symbol:"JPY / USD",decimals:8},{value:"0xb49f677943BC038e9857d61E7d053CaA2C1734C1",address:"0xb49f677943BC038e9857d61E7d053CaA2C1734C1",type:"Forex",name:"EUR / USD",symbol:"EUR / USD",decimals:8},{value:"0xad4A9bED9a5E2c1c9a6E43D35Db53c83873dd901",address:"0xad4A9bED9a5E2c1c9a6E43D35Db53c83873dd901",type:"US Treasuries",name:"STBT PoR",symbol:"STBT PoR",decimals:18},{value:"0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699",address:"0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699",type:"Crypto (USD)",name:"SNX / USD",symbol:"SNX / USD",decimals:8},{value:"0x8c110B94C5f1d347fAcF5E1E938AB2db60E3c9a8",address:"0x8c110B94C5f1d347fAcF5E1E938AB2db60E3c9a8",type:"Crypto (USD)",name:"SPELL / USD",symbol:"SPELL / USD",decimals:8},{value:"0x1d32df460AE5D738A88Faa44DDA2cA3764627461",address:"0x1d32df460AE5D738A88Faa44DDA2cA3764627461",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 1 Day",symbol:"BTC Interest Rate Benchmark Curve 1 Day",decimals:8},{value:"0x5fB3912d73d55E656E2Dfb35B11696006f5A5745",address:"0x5fB3912d73d55E656E2Dfb35B11696006f5A5745",type:"Crypto (NFT)",name:"JPEGd Milady Floor Price ETH",symbol:"JPEGd Milady Floor Price ETH",decimals:18},{value:"0x38C5ae3ee324ee027D88c5117ee58d07c9b4699b",address:"0x38C5ae3ee324ee027D88c5117ee58d07c9b4699b",type:"Crypto (USD)",name:"HBAR / USD",symbol:"HBAR / USD",decimals:8},{value:"0xF6f5b570aB6E39E55558AfD8E1E30c5f20E6527E",address:"0xF6f5b570aB6E39E55558AfD8E1E30c5f20E6527E",type:"Fiat",name:"GBPT PoR",symbol:"GBPT PoR",decimals:18},{value:"0xf3584F4dd3b467e73C2339EfD008665a70A4185c",address:"0xf3584F4dd3b467e73C2339EfD008665a70A4185c",type:"Commodities",name:"WTI / USD",symbol:"WTI / USD",decimals:8},{value:"0xAc559F25B1619171CbC396a50854A3240b6A4e99",address:"0xAc559F25B1619171CbC396a50854A3240b6A4e99",type:"Crypto (ETH)",name:"ETH / BTC",symbol:"ETH / BTC",decimals:8},{value:"0xFF3EEb22B5E3dE6e705b44749C2559d704923FD7",address:"0xFF3EEb22B5E3dE6e705b44749C2559d704923FD7",type:"Crypto (USD)",name:"AVAX / USD",symbol:"AVAX / USD",decimals:8},{value:"0xEEf0C605546958c1f899b6fB336C20671f9cD49F",address:"0xEEf0C605546958c1f899b6fB336C20671f9cD49F",type:"Crypto (Stablecoin)",name:"CRVUSD / USD",symbol:"CRVUSD / USD",decimals:8},{value:"0xD10aBbC76679a20055E167BB80A24ac851b37056",address:"0xD10aBbC76679a20055E167BB80A24ac851b37056",type:"Crypto (USD)",name:"APE / USD",symbol:"APE / USD",decimals:8},{value:"0x91b99C9b75aF469a71eE1AB528e8da994A5D7030",address:"0x91b99C9b75aF469a71eE1AB528e8da994A5D7030",type:"Forex",name:"IDR / USD",symbol:"IDR / USD",decimals:8},{value:"0x773616E4d11A78F511299002da57A0a94577F1f4",address:"0x773616E4d11A78F511299002da57A0a94577F1f4",type:"Crypto (Stablecoin)",name:"DAI / ETH",symbol:"DAI / ETH",decimals:18},{value:"0x8B4fC5b68cD50eAc1dD33f695901624a4a1A0A8b",address:"0x8B4fC5b68cD50eAc1dD33f695901624a4a1A0A8b",type:"Crypto (ETH)",name:"AXS / ETH",symbol:"AXS / ETH",decimals:18},{value:"0x7A364e8770418566e3eb2001A96116E6138Eb32F",address:"0x7A364e8770418566e3eb2001A96116E6138Eb32F",type:"Crypto (Stablecoin)",name:"MIM / USD",symbol:"MIM / USD",decimals:8},{value:"0x9f2ba149c2A0Ee76043d83558C4E79E9F3E5731B",address:"0x9f2ba149c2A0Ee76043d83558C4E79E9F3E5731B",type:"Crypto (NFT)",name:"Pudgy Penguins Floor Price",symbol:"Pudgy Penguins Floor Price",decimals:18},{value:"0xEb0adf5C06861d6c07174288ce4D0a8128164003",address:"0xEb0adf5C06861d6c07174288ce4D0a8128164003",type:"Crypto (USD)",name:"CAKE / USD",symbol:"CAKE / USD",decimals:8},{value:"0xF0985f7E2CaBFf22CecC5a71282a89582c382EFE",address:"0xF0985f7E2CaBFf22CecC5a71282a89582c382EFE",type:"Crypto (ETH)",name:"FTT / ETH",symbol:"FTT / ETH",decimals:18},{value:"0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c",address:"0x2c1d072e956AFFC0D435Cb7AC38EF18d24d9127c",type:"Crypto (USD)",name:"LINK / USD",symbol:"LINK / USD",decimals:8},{value:"0x639c3c1e3b5aa262b87e407779c866cC1406DDe6",address:"0x639c3c1e3b5aa262b87e407779c866cC1406DDe6",type:"Crypto (NFT)",name:"JPEGd Chromie Floor Price ETH",symbol:"JPEGd Chromie Floor Price ETH",decimals:18},{value:"0x3D7aE7E594f2f2091Ad8798313450130d0Aba3a0",address:"0x3D7aE7E594f2f2091Ad8798313450130d0Aba3a0",type:"Crypto (Stablecoin)",name:"LUSD / USD",symbol:"LUSD / USD",decimals:8},{value:"0xffa4Bb3a24B60C0262DBAaD60d77a3c3fa6173e8",address:"0xffa4Bb3a24B60C0262DBAaD60d77a3c3fa6173e8",type:"Crypto (ETH)",name:"SWAP / ETH",symbol:"SWAP / ETH",decimals:18},{value:"0x483d36F6a1d063d580c7a24F9A42B346f3a69fbb",address:"0x483d36F6a1d063d580c7a24F9A42B346f3a69fbb",type:"Crypto (USD)",name:"RAI / USD",symbol:"RAI / USD",decimals:8},{value:"0x05140252A265F2817aF6caF4a7F79a77F87E0a7c",address:"0x05140252A265F2817aF6caF4a7F79a77F87E0a7c",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 5 Month",symbol:"BTC Interest Rate Benchmark Curve 5 Month",decimals:8},{value:"0x3f12643D3f6f874d39C2a4c9f2Cd6f2DbAC877FC",address:"0x3f12643D3f6f874d39C2a4c9f2Cd6f2DbAC877FC",type:"Crypto (Stablecoin)",name:"GHO / USD",symbol:"GHO / USD",decimals:8},{value:"0x15c8eA24Ba2d36671Fa22aD4Cff0a8eafe144352",address:"0x15c8eA24Ba2d36671Fa22aD4Cff0a8eafe144352",type:"Crypto (ETH)",name:"ATOM / ETH",symbol:"ATOM / ETH",decimals:18},{value:"0xC1438AA3823A6Ba0C159CfA8D98dF5A994bA120b",address:"0xC1438AA3823A6Ba0C159CfA8D98dF5A994bA120b",type:"Crypto (ETH)",name:"BAL / ETH",symbol:"BAL / ETH",decimals:18},{value:"0x6bD37CB175B222E7ddFb90CCA170e0f2b21F2849",address:"0x6bD37CB175B222E7ddFb90CCA170e0f2b21F2849",type:"Crypto (NFT)",name:"JPEGd Otherdeed Floor Price ETH",symbol:"JPEGd Otherdeed Floor Price ETH",decimals:18},{value:"0x2465CefD3b488BE410b941b1d4b2767088e2A028",address:"0x2465CefD3b488BE410b941b1d4b2767088e2A028",type:"Crypto (USD)",name:"DOGE / USD",symbol:"DOGE / USD",decimals:8},{value:"0x7D476f061F8212A8C9317D5784e72B4212436E93",address:"0x7D476f061F8212A8C9317D5784e72B4212436E93",type:"Crypto (USD)",name:"OMG / USD",symbol:"OMG / USD",decimals:8},{value:"0x029849bbc0b1d93b85a8b6190e979fd38F5760E2",address:"0x029849bbc0b1d93b85a8b6190e979fd38F5760E2",type:"Crypto (ETH)",name:"DPI / ETH",symbol:"DPI / ETH",decimals:18},{value:"0x553303d460EE0afB37EdFf9bE42922D8FF63220e",address:"0x553303d460EE0afB37EdFf9bE42922D8FF63220e",type:"Crypto (USD)",name:"UNI / USD",symbol:"UNI / USD",decimals:8},{value:"0xCc70F09A6CC17553b2E31954cD36E4A2d89501f7",address:"0xCc70F09A6CC17553b2E31954cD36E4A2d89501f7",type:"Crypto (USD)",name:"SUSHI / USD",symbol:"SUSHI / USD",decimals:8},{value:"0x35f08E1b5a18F1F085AA092aAed10EDd47457484",address:"0x35f08E1b5a18F1F085AA092aAed10EDd47457484",type:"Crypto (NFT)",name:"JPEGd Cryptopunks Floor Price ETH",symbol:"JPEGd Cryptopunks Floor Price ETH",decimals:18},{value:"0xBAEbEFc1D023c0feCcc047Bff42E75F15Ff213E6",address:"0xBAEbEFc1D023c0feCcc047Bff42E75F15Ff213E6",type:"Crypto (USD)",name:"IMX / USD",symbol:"IMX / USD",decimals:8},{value:"0x027828052840a43Cc2D0187BcfA6e3D6AcE60336",address:"0x027828052840a43Cc2D0187BcfA6e3D6AcE60336",type:"Crypto (NFT)",name:"Doodles Floor Price",symbol:"Doodles Floor Price",decimals:18},{value:"0xDdf0B85C600DAF9e308AFed9F597ACA212354764",address:"0xDdf0B85C600DAF9e308AFed9F597ACA212354764",type:"Crypto (NFT)",name:"World of Women Floor Price",symbol:"World of Women Floor Price",decimals:18},{value:"0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757",address:"0x8e0b7e6062272B5eF4524250bFFF8e5Bd3497757",type:"Crypto (Stablecoin)",name:"SUSD / ETH",symbol:"SUSD / ETH",decimals:18},{value:"0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9",address:"0x82A44D92D6c329826dc557c5E1Be6ebeC5D5FeB9",type:"Crypto (ETH)",name:"MANA / ETH",symbol:"MANA / ETH",decimals:18},{value:"0x60cbE8D88EF519cF3C62414D76f50818D211fea1",address:"0x60cbE8D88EF519cF3C62414D76f50818D211fea1",type:"Crypto (ETH)",name:"Swell ETH PoR",symbol:"Swell ETH PoR",decimals:18},{value:"0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9",address:"0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9",type:"Crypto (Stablecoin)",name:"DAI / USD",symbol:"DAI / USD",decimals:8},{value:"0x7bAC85A8a13A4BcD8abb3eB7d6b4d632c5a57676",address:"0x7bAC85A8a13A4BcD8abb3eB7d6b4d632c5a57676",type:"Crypto (USD)",name:"MATIC / USD",symbol:"MATIC / USD",decimals:8},{value:"0x2885d15b8Af22648b98B122b22FDF4D2a56c6023",address:"0x2885d15b8Af22648b98B122b22FDF4D2a56c6023",type:"Crypto (USD)",name:"ZRX / USD",symbol:"ZRX / USD",decimals:8},{value:"0xa20623070413d42a5C01Db2c8111640DD7A5A03a",address:"0xa20623070413d42a5C01Db2c8111640DD7A5A03a",type:"Crypto (ETH)",name:"UST / ETH",symbol:"UST / ETH",decimals:18},{value:"0x9b0FC4bb9981e5333689d69BdBF66351B9861E62",address:"0x9b0FC4bb9981e5333689d69BdBF66351B9861E62",type:"Crypto (ETH)",name:"OCEAN / ETH",symbol:"OCEAN / ETH",decimals:18},{value:"0x7F0D2c2838c6AC24443d13e23d99490017bDe370",address:"0x7F0D2c2838c6AC24443d13e23d99490017bDe370",type:"Crypto (Stablecoin)",name:"FEI / ETH",symbol:"FEI / ETH",decimals:18},{value:"0x81243627cC533Ca6CF6F23c3f61add1D0f626674",address:"0x81243627cC533Ca6CF6F23c3f61add1D0f626674",type:"Fiat",name:"TUSD PoR",symbol:"TUSD PoR",decimals:18},{value:"0x2c881B6f3f6B5ff6C975813F87A4dad0b241C15b",address:"0x2c881B6f3f6B5ff6C975813F87A4dad0b241C15b",type:"Crypto (ETH)",name:"OGN / ETH",symbol:"OGN / ETH",decimals:18},{value:"0xa34317DB73e77d453b1B8d04550c44D10e981C8e",address:"0xa34317DB73e77d453b1B8d04550c44D10e981C8e",type:"Forex",name:"CAD / USD",symbol:"CAD / USD",decimals:8},{value:"0x2dE2EB5Fb9B8d7df45A9e144030c36128682c288",address:"0x2dE2EB5Fb9B8d7df45A9e144030c36128682c288",type:"Crypto (NFT)",name:"JPEGd Fidenza Floor Price ETH",symbol:"JPEGd Fidenza Floor Price ETH",decimals:18},{value:"0x5c0Ab2d9b5a7ed9f470386e82BB36A3613cDd4b5",address:"0x5c0Ab2d9b5a7ed9f470386e82BB36A3613cDd4b5",type:"Forex",name:"GBP / USD",symbol:"GBP / USD",decimals:8},{value:"0x14d04Fff8D21bd62987a5cE9ce543d2F1edF5D3E",address:"0x14d04Fff8D21bd62987a5cE9ce543d2F1edF5D3E",type:"Crypto (Stablecoin)",name:"FRAX / ETH",symbol:"FRAX / ETH",decimals:18},{value:"0x58921Ac140522867bf50b9E009599Da0CA4A2379",address:"0x58921Ac140522867bf50b9E009599Da0CA4A2379",type:"Crypto (ETH)",name:"BADGER / ETH",symbol:"BADGER / ETH",decimals:18},{value:"0x0ed39A19D2a68b722408d84e4d970827f61E6c0A",address:"0x0ed39A19D2a68b722408d84e4d970827f61E6c0A",type:"Crypto (Stablecoin)",name:"USDD / USD",symbol:"USDD / USD",decimals:8},{value:"0x614715d2Af89E6EC99A233818275142cE88d1Cfd",address:"0x614715d2Af89E6EC99A233818275142cE88d1Cfd",type:"Crypto (Stablecoin)",name:"BUSD / ETH",symbol:"BUSD / ETH",decimals:18},{value:"0x6f9D4D55Eb44915674d9f708AE17F23b2ae79AAc",address:"0x6f9D4D55Eb44915674d9f708AE17F23b2ae79AAc",type:"Crypto (NFT)",name:"JPEGd Meebits Floor Price ETH",symbol:"JPEGd Meebits Floor Price ETH",decimals:18},{value:"0x4E155eD98aFE9034b7A5962f6C84c86d869daA9d",address:"0x4E155eD98aFE9034b7A5962f6C84c86d869daA9d",type:"Crypto (USD)",name:"RPL / USD",symbol:"RPL / USD",decimals:8},{value:"0x32d1463EB53b73C095625719Afa544D5426354cB",address:"0x32d1463EB53b73C095625719Afa544D5426354cB",type:"Equities",name:"IB01 / USD",symbol:"IB01 / USD",decimals:8},{value:"0x9a51192e065ECC6BDEafE5e194ce54702DE4f1f5",address:"0x9a51192e065ECC6BDEafE5e194ce54702DE4f1f5",type:"Economic index",name:"Consumer Price Index",symbol:"Consumer Price Index",decimals:18},{value:"0xD4CE430C3b67b3E2F7026D86E7128588629e2455",address:"0xD4CE430C3b67b3E2F7026D86E7128588629e2455",type:"Crypto (ETH)",name:"REP / ETH",symbol:"REP / ETH",decimals:18},{value:"0xd27e6D02b72eB6FCe04Ad5690C419196B4EF2885",address:"0xd27e6D02b72eB6FCe04Ad5690C419196B4EF2885",type:"Equities",name:"IBTA / USD",symbol:"IBTA / USD",decimals:8},{value:"0xe7015CCb7E5F788B8c1010FC22343473EaaC3741",address:"0xe7015CCb7E5F788B8c1010FC22343473EaaC3741",type:"Crypto (ETH)",name:"KP3R / ETH",symbol:"KP3R / ETH",decimals:18},{value:"0xB9E1E3A9feFf48998E45Fa90847ed4D467E8BcfD",address:"0xB9E1E3A9feFf48998E45Fa90847ed4D467E8BcfD",type:"Crypto (Stablecoin)",name:"FRAX / USD",symbol:"FRAX / USD",decimals:8},{value:"0xa175FA75795c6Fb2aFA48B72d22054ee0DeDa4aC",address:"0xa175FA75795c6Fb2aFA48B72d22054ee0DeDa4aC",type:"Crypto",name:"Orchid",symbol:"Orchid",decimals:5},{value:"0xdbd020CAeF83eFd542f4De03e3cF0C28A4428bd5",address:"0xdbd020CAeF83eFd542f4De03e3cF0C28A4428bd5",type:"Crypto (USD)",name:"COMP / USD",symbol:"COMP / USD",decimals:8},{value:"0x9B97304EA12EFed0FAd976FBeCAad46016bf269e",address:"0x9B97304EA12EFed0FAd976FBeCAad46016bf269e",type:"Crypto (ETH)",name:"PAXG / ETH",symbol:"PAXG / ETH",decimals:18},{value:"0xf817B69EA583CAFF291E287CaE00Ea329d22765C",address:"0xf817B69EA583CAFF291E287CaE00Ea329d22765C",type:"Crypto (ETH)",name:"UMA / ETH",symbol:"UMA / ETH",decimals:18},{value:"0x393CC05baD439c9B36489384F11487d9C8410471",address:"0x393CC05baD439c9B36489384F11487d9C8410471",type:"Crypto (USD)",name:"RDNT / USD",symbol:"RDNT / USD",decimals:8},{value:"0x478909D4D798f3a1F11fFB25E4920C959B4aDe0b",address:"0x478909D4D798f3a1F11fFB25E4920C959B4aDe0b",type:"Crypto (USD)",name:"DYDX / USD",symbol:"DYDX / USD",decimals:8},{value:"0x2Da4983a622a8498bb1a21FaE9D8F6C664939962",address:"0x2Da4983a622a8498bb1a21FaE9D8F6C664939962",type:"Crypto (ETH)",name:"ZRX / ETH",symbol:"ZRX / ETH",decimals:18},{value:"0x5586bF404C7A22A4a4077401272cE5945f80189C",address:"0x5586bF404C7A22A4a4077401272cE5945f80189C",type:"Commodities",name:"CacheGold PoR USD",symbol:"CacheGold PoR USD",decimals:8},{value:"0x352f2Bc3039429fC2fe62004a1575aE74001CfcE",address:"0x352f2Bc3039429fC2fe62004a1575aE74001CfcE",type:"Crypto (NFT)",name:"Bored Ape Yacht Club Floor Price / ETH",symbol:"Bored Ape Yacht Club Floor Price / ETH",decimals:18},{value:"0xa89f5d2365ce98B3cD68012b6f503ab1416245Fc",address:"0xa89f5d2365ce98B3cD68012b6f503ab1416245Fc",type:"Crypto (Stablecoin)",name:"GUSD / USD",symbol:"GUSD / USD",decimals:8},{value:"0x0A8cD0115B1EE87EbA5b8E06A9a15ED93e230f7a",address:"0x0A8cD0115B1EE87EbA5b8E06A9a15ED93e230f7a",type:"Crypto",name:"HBTC PoR",symbol:"HBTC PoR",decimals:18},{value:"0x86392dC19c0b719886221c78AB11eb8Cf5c52812",address:"0x86392dC19c0b719886221c78AB11eb8Cf5c52812",type:"Crypto (ETH)",name:"STETH / ETH",symbol:"STETH / ETH",decimals:18},{value:"0xec1D1B3b0443256cc3860e24a46F108e699484Aa",address:"0xec1D1B3b0443256cc3860e24a46F108e699484Aa",type:"Crypto (USD)",name:"MKR / USD",symbol:"MKR / USD",decimals:8},{value:"0x89c7926c7c15fD5BFDB1edcFf7E7fC8283B578F6",address:"0x89c7926c7c15fD5BFDB1edcFf7E7fC8283B578F6",type:"Crypto (ETH)",name:"ALPHA / ETH",symbol:"ALPHA / ETH",decimals:18},{value:"0xc7de7f4d4C9c991fF62a07D18b3E31e349833A18",address:"0xc7de7f4d4C9c991fF62a07D18b3E31e349833A18",type:"Crypto (ETH)",name:"APE / ETH",symbol:"APE / ETH",decimals:18},{value:"0x7A9f34a0Aa917D438e9b6E630067062B7F8f6f3d",address:"0x7A9f34a0Aa917D438e9b6E630067062B7F8f6f3d",type:"Crypto (USD)",name:"STG / USD",symbol:"STG / USD",decimals:8},{value:"0x833D8Eb16D306ed1FbB5D7A2E019e106B960965A",address:"0x833D8Eb16D306ed1FbB5D7A2E019e106B960965A",type:"Crypto (Stablecoin)",name:"BUSD / USD",symbol:"BUSD / USD",decimals:8},{value:"0x194a9AaF2e0b67c35915cD01101585A33Fe25CAa",address:"0x194a9AaF2e0b67c35915cD01101585A33Fe25CAa",type:"Crypto (ETH)",name:"ALCX / ETH",symbol:"ALCX / ETH",decimals:18},{value:"0xDaeA8386611A157B08829ED4997A8A62B557014C",address:"0xDaeA8386611A157B08829ED4997A8A62B557014C",type:"Crypto (ETH)",name:"MLN / ETH",symbol:"MLN / ETH",decimals:18},{value:"0x17D054eCac33D91F7340645341eFB5DE9009F1C1",address:"0x17D054eCac33D91F7340645341eFB5DE9009F1C1",type:"Crypto (ETH)",name:"GRT / ETH",symbol:"GRT / ETH",decimals:18},{value:"0x7Bf3ad9582De40942C1EF876571d9864D71c548b",address:"0x7Bf3ad9582De40942C1EF876571d9864D71c548b",type:"Crypto (NFT)",name:"JPEGd Bored Ape Kennel Club Floor Price ETH",symbol:"JPEGd Bored Ape Kennel Club Floor Price ETH",decimals:18},{value:"0x5C00128d4d1c2F4f652C267d7bcdD7aC99C16E16",address:"0x5C00128d4d1c2F4f652C267d7bcdD7aC99C16E16",type:"Crypto (USD)",name:"ENS / USD",symbol:"ENS / USD",decimals:8},{value:"0xbA9B2a360eb8aBdb677d6d7f27E12De11AA052ef",address:"0xbA9B2a360eb8aBdb677d6d7f27E12De11AA052ef",type:"Crypto (ETH)",name:"ORN / ETH",symbol:"ORN / ETH",decimals:18},{value:"0x169E633A2D1E6c10dD91238Ba11c4A708dfEF37C",address:"0x169E633A2D1E6c10dD91238Ba11c4A708dfEF37C",type:"Crypto",name:"Fast Gas / Gwei",symbol:"Fast Gas / Gwei",decimals:0},{value:"0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6",address:"0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6",type:"Crypto (Stablecoin)",name:"USDC / USD",symbol:"USDC / USD",decimals:8},{value:"0x4e844125952D32AcdF339BE976c98E22F6F318dB",address:"0x4e844125952D32AcdF339BE976c98E22F6F318dB",type:"Crypto (ETH)",name:"LDO / ETH",symbol:"LDO / ETH",decimals:18},{value:"0x56a4857acbcfe3a66965c251628B1c9f1c408C19",address:"0x56a4857acbcfe3a66965c251628B1c9f1c408C19",type:"Crypto (USD)",name:"MANA / USD",symbol:"MANA / USD",decimals:8},{value:"0x449d117117838fFA61263B61dA6301AA2a88B13A",address:"0x449d117117838fFA61263B61dA6301AA2a88B13A",type:"Forex",name:"CHF / USD",symbol:"CHF / USD",decimals:8},{value:"0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46",address:"0xEe9F2375b4bdF6387aa8265dD4FB8F16512A1d46",type:"Crypto (Stablecoin)",name:"USDT / ETH",symbol:"USDT / ETH",decimals:18},{value:"0x77F9710E7d0A19669A13c055F62cd80d313dF022",address:"0x77F9710E7d0A19669A13c055F62cd80d313dF022",type:"Forex",name:"AUD / USD",symbol:"AUD / USD",decimals:8},{value:"0x8f83670260F8f7708143b836a2a6F11eF0aBac01",address:"0x8f83670260F8f7708143b836a2a6F11eF0aBac01",type:"Crypto (ETH)",name:"ANT / ETH",symbol:"ANT / ETH",decimals:18},{value:"0x8a12Be339B0cD1829b91Adc01977caa5E9ac121e",address:"0x8a12Be339B0cD1829b91Adc01977caa5E9ac121e",type:"Crypto (ETH)",name:"CRV / ETH",symbol:"CRV / ETH",decimals:18},{value:"0x3a08ebBaB125224b7b6474384Ee39fBb247D2200",address:"0x3a08ebBaB125224b7b6474384Ee39fBb247D2200",type:"Crypto (Stablecoin)",name:"PAX / ETH",symbol:"PAX / ETH",decimals:18},{value:"0x66a47b7206130e6FF64854EF0E1EDfa237E65339",address:"0x66a47b7206130e6FF64854EF0E1EDfa237E65339",type:"Crypto (USD)",name:"BADGER / USD",symbol:"BADGER / USD",decimals:8},{value:"0xdeb288F737066589598e9214E782fa5A8eD689e8",address:"0xdeb288F737066589598e9214E782fa5A8eD689e8",type:"Crypto (ETH)",name:"BTC / ETH",symbol:"BTC / ETH",decimals:18},{value:"0x547a514d5e3769680Ce22B2361c10Ea13619e8a9",address:"0x547a514d5e3769680Ce22B2361c10Ea13619e8a9",type:"Crypto (USD)",name:"AAVE / USD",symbol:"AAVE / USD",decimals:8},{value:"0x0d16d4528239e9ee52fa531af613AcdB23D88c94",address:"0x0d16d4528239e9ee52fa531af613AcdB23D88c94",type:"Crypto (ETH)",name:"BAT / ETH",symbol:"BAT / ETH",decimals:18},{value:"0x1E6cF0D433de4FE882A437ABC654F58E1e78548c",address:"0x1E6cF0D433de4FE882A437ABC654F58E1e78548c",type:"Crypto (USD)",name:"BNT / USD",symbol:"BNT / USD",decimals:8},{value:"0xA97477aB5ab6ED2f6A2B5Cbe59D71e88ad334b90",address:"0xA97477aB5ab6ED2f6A2B5Cbe59D71e88ad334b90",type:"Crypto (NFT)",name:"BEANZ Official Floor Price",symbol:"BEANZ Official Floor Price",decimals:18},{value:"0x9cB2A01A7E64992d32A34db7cEea4c919C391f6A",address:"0x9cB2A01A7E64992d32A34db7cEea4c919C391f6A",type:"Crypto (ETH)",name:"NMR / ETH",symbol:"NMR / ETH",decimals:18},{value:"0x01435677FB11763550905594A16B645847C1d0F3",address:"0x01435677FB11763550905594A16B645847C1d0F3",type:"Forex",name:"KRW / USD",symbol:"KRW / USD",decimals:8},{value:"0x90c2098473852E2F07678Fe1B6d595b1bd9b16Ed",address:"0x90c2098473852E2F07678Fe1B6d595b1bd9b16Ed",type:"Crypto (ETH)",name:"OHM / ETH",symbol:"OHM / ETH",decimals:18},{value:"0x611E0d2709416E002A3f38085e4e1cf77c015921",address:"0x611E0d2709416E002A3f38085e4e1cf77c015921",type:"Crypto (ETH)",name:"FARM / ETH",symbol:"FARM / ETH",decimals:18},{value:"0xcDa3708C5c2907FCca52BB3f9d3e4c2028b89319",address:"0xcDa3708C5c2907FCca52BB3f9d3e4c2028b89319",type:"Crypto (USD)",name:"ONT / USD",symbol:"ONT / USD",decimals:8},{value:"0x9cd36E0E8D3C27d630D00406ACFC3463154951Af",address:"0x9cd36E0E8D3C27d630D00406ACFC3463154951Af",type:"Crypto (NFT)",name:"Moonbirds Floor Price",symbol:"Moonbirds Floor Price",decimals:18},{value:"0x4ad7B025127e89263242aB68F0f9c4E5C033B489",address:"0x4ad7B025127e89263242aB68F0f9c4E5C033B489",type:"Crypto (ETH)",name:"RAI / ETH",symbol:"RAI / ETH",decimals:18},{value:"0xd962fC30A72A84cE50161031391756Bf2876Af5D",address:"0xd962fC30A72A84cE50161031391756Bf2876Af5D",type:"Crypto (USD)",name:"CVX / USD",symbol:"CVX / USD",decimals:8},{value:"0x01D391A48f4F7339aC64CA2c83a07C22F95F587a",address:"0x01D391A48f4F7339aC64CA2c83a07C22F95F587a",type:"Crypto (Stablecoin)",name:"EURT / USD",symbol:"EURT / USD",decimals:8},{value:"0xEC8761a0A73c34329CA5B1D3Dc7eD07F30e836e2",address:"0xEC8761a0A73c34329CA5B1D3Dc7eD07F30e836e2",type:"Crypto (USD)",name:"Total Marketcap / USD",symbol:"Total Marketcap / USD",decimals:8},{value:"0xd75AAaE4AF0c398ca13e2667Be57AF2ccA8B5de6",address:"0xd75AAaE4AF0c398ca13e2667Be57AF2ccA8B5de6",type:"Crypto (USD)",name:"OXT / USD",symbol:"OXT / USD",decimals:8},{value:"0x160AC928A16C93eD4895C2De6f81ECcE9a7eB7b4",address:"0x160AC928A16C93eD4895C2De6f81ECcE9a7eB7b4",type:"Crypto (ETH)",name:"LRC / ETH",symbol:"LRC / ETH",decimals:18},{value:"0x3886BA987236181D98F2401c507Fb8BeA7871dF2",address:"0x3886BA987236181D98F2401c507Fb8BeA7871dF2",type:"Crypto (Stablecoin)",name:"TUSD / ETH",symbol:"TUSD / ETH",decimals:18},{value:"0xDb299D394817D8e7bBe297E84AFfF7106CF92F5f",address:"0xDb299D394817D8e7bBe297E84AFfF7106CF92F5f",type:"Crypto",name:"APY TVL",symbol:"APY TVL",decimals:8},{value:"0xec746eCF986E2927Abd291a2A1716c940100f8Ba",address:"0xec746eCF986E2927Abd291a2A1716c940100f8Ba",type:"Crypto (Stablecoin)",name:"TUSD / USD",symbol:"TUSD / USD",decimals:8},{value:"0x9441D7556e7820B5ca42082cfa99487D56AcA958",address:"0x9441D7556e7820B5ca42082cfa99487D56AcA958",type:"Crypto (USD)",name:"BAT / USD",symbol:"BAT / USD",decimals:8},{value:"0x0606Be69451B1C9861Ac6b3626b99093b713E801",address:"0x0606Be69451B1C9861Ac6b3626b99093b713E801",type:"Crypto (ETH)",name:"FIL / ETH",symbol:"FIL / ETH",decimals:18},{value:"0x9a72298ae3886221820B1c878d12D872087D3a23",address:"0x9a72298ae3886221820B1c878d12D872087D3a23",type:"Crypto (ETH)",name:"OHMv2 / ETH",symbol:"OHMv2 / ETH",decimals:18},{value:"0x1B39Ee86Ec5979ba5C322b826B3ECb8C79991699",address:"0x1B39Ee86Ec5979ba5C322b826B3ECb8C79991699",type:"Crypto (ETH)",name:"COMP / ETH",symbol:"COMP / ETH",decimals:18},{value:"0xc04611C43842220fd941515F86d1DDdB15F04e46",address:"0xc04611C43842220fd941515F86d1DDdB15F04e46",type:"Equities",name:"SHV / USD",symbol:"SHV / USD",decimals:8},{value:"0xF4E1B57FB228879D057ac5AE33973e8C53e4A0e0",address:"0xF4E1B57FB228879D057ac5AE33973e8C53e4A0e0",type:"Equities",name:"CSPX / USD",symbol:"CSPX / USD",decimals:8},{value:"0x96d15851CBac05aEe4EFD9eA3a3DD9BDEeC9fC28",address:"0x96d15851CBac05aEe4EFD9eA3a3DD9BDEeC9fC28",type:"Crypto (Stablecoin)",name:"GUSD / ETH",symbol:"GUSD / ETH",decimals:18},{value:"0x536218f9E9Eb48863970252233c8F271f554C2d0",address:"0x536218f9E9Eb48863970252233c8F271f554C2d0",type:"Crypto (ETH)",name:"RETH / ETH",symbol:"RETH / ETH",decimals:18},{value:"0x6Ebc52C8C1089be9eB3945C4350B68B8E4C2233f",address:"0x6Ebc52C8C1089be9eB3945C4350B68B8E4C2233f",type:"Crypto (USD)",name:"FXS / USD",symbol:"FXS / USD",decimals:8},{value:"0xAF2Ce23Ef2dD9BB6F03668cA6eAd55aEa1e56FBa",address:"0xAF2Ce23Ef2dD9BB6F03668cA6eAd55aEa1e56FBa",type:"Crypto",name:"HOPE PoR",symbol:"HOPE PoR",decimals:8},{value:"0xD2A593BF7594aCE1faD597adb697b5645d5edDB2",address:"0xD2A593BF7594aCE1faD597adb697b5645d5edDB2",type:"Crypto (USD)",name:"DPI / USD",symbol:"DPI / USD",decimals:8},{value:"0x759bBC1be8F90eE6457C44abc7d443842a976d02",address:"0x759bBC1be8F90eE6457C44abc7d443842a976d02",type:"Crypto (USD)",name:"RSR / USD",symbol:"RSR / USD",decimals:8},{value:"0x86cF33a451dE9dc61a2862FD94FF4ad4Bd65A5d2",address:"0x86cF33a451dE9dc61a2862FD94FF4ad4Bd65A5d2",type:"Crypto (USD)",name:"GRT / USD",symbol:"GRT / USD",decimals:8},{value:"0xCC1f5d9e6956447630d703C8e93b2345c2DE3D13",address:"0xCC1f5d9e6956447630d703C8e93b2345c2DE3D13",type:"Crypto (USD)",name:"Calculated XSUSHI / USD",symbol:"Calculated XSUSHI / USD",decimals:8},{value:"0xBE456fd14720C3aCCc30A2013Bffd782c9Cb75D5",address:"0xBE456fd14720C3aCCc30A2013Bffd782c9Cb75D5",type:"Fiat",name:"TUSD Reserves",symbol:"TUSD Reserves",decimals:18},{value:"0x1B58B67B2b2Df71b4b0fb6691271E83A0fa36aC5",address:"0x1B58B67B2b2Df71b4b0fb6691271E83A0fa36aC5",type:"Crypto",name:"CV / Index",symbol:"CV / Index",decimals:18},{value:"0x775a0B15042ceE8925D3D81481c7b94ffBfc24a7",address:"0x775a0B15042ceE8925D3D81481c7b94ffBfc24a7",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 4 Month",symbol:"BTC Interest Rate Benchmark Curve 4 Month",decimals:8},{value:"0x7c5d4F8345e66f68099581Db340cd65B078C41f4",address:"0x7c5d4F8345e66f68099581Db340cd65B078C41f4",type:"Crypto (ETH)",name:"YFI / ETH",symbol:"YFI / ETH",decimals:18},{value:"0x26929b85fE284EeAB939831002e1928183a10fb1",address:"0x26929b85fE284EeAB939831002e1928183a10fb1",type:"Crypto (USD)",name:"TRU / USD",symbol:"TRU / USD",decimals:8},{value:"0x01cE1210Fe8153500F60f7131d63239373D7E26C",address:"0x01cE1210Fe8153500F60f7131d63239373D7E26C",type:"Crypto (USD)",name:"PERP / USD",symbol:"PERP / USD",decimals:8},{value:"0x021264d59DAbD26E7506Ee7278407891Bb8CDCCc",address:"0x021264d59DAbD26E7506Ee7278407891Bb8CDCCc",type:"Crypto (NFT)",name:"CloneX Floor Price",symbol:"CloneX Floor Price",decimals:18},{value:"0x656c0544eF4C98A6a98491833A89204Abb045d6b",address:"0x656c0544eF4C98A6a98491833A89204Abb045d6b",type:"Crypto (ETH)",name:"KNC / ETH",symbol:"KNC / ETH",decimals:18},{value:"0xa81FE04086865e63E12dD3776978E49DEEa2ea4e",address:"0xa81FE04086865e63E12dD3776978E49DEEa2ea4e",type:"Crypto",name:"WBTC PoR",symbol:"WBTC PoR",decimals:8},{value:"0x8dD1CD88F43aF196ae478e91b9F5E4Ac69A97C61",address:"0x8dD1CD88F43aF196ae478e91b9F5E4Ac69A97C61",type:"Crypto (ETH)",name:"SHIB / ETH",symbol:"SHIB / ETH",decimals:18},{value:"0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c",address:"0x79291A9d692Df95334B1a0B3B4AE6bC606782f8c",type:"Crypto (ETH)",name:"SNX / ETH",symbol:"SNX / ETH",decimals:18},{value:"0x7eed379bf00005CfeD29feD4009669dE9Bcc21ce",address:"0x7eed379bf00005CfeD29feD4009669dE9Bcc21ce",type:"Crypto (USD)",name:"ANKR / USD",symbol:"ANKR / USD",decimals:8},{value:"0x14e613AC84a31f709eadbdF89C6CC390fDc9540A",address:"0x14e613AC84a31f709eadbdF89C6CC390fDc9540A",type:"Crypto (USD)",name:"BNB / USD",symbol:"BNB / USD",decimals:8},{value:"0x3b41D5571468904D4e53b6a8d93A6BaC43f02dC9",address:"0x3b41D5571468904D4e53b6a8d93A6BaC43f02dC9",type:"Crypto (ETH)",name:"PERP / ETH",symbol:"PERP / ETH",decimals:18},{value:"0x37260ecF9Eb9AB1F813909a25CC8ADde99eD00fa",address:"0x37260ecF9Eb9AB1F813909a25CC8ADde99eD00fa",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 3 Week",symbol:"BTC Interest Rate Benchmark Curve 3 Week",decimals:8},{value:"0xd88b089f47d6f82e84589601fd7c329472077E08",address:"0xd88b089f47d6f82e84589601fd7c329472077E08",type:"Crypto (NFT)",name:"JPEGd Ringers Floor Price ETH",symbol:"JPEGd Ringers Floor Price ETH",decimals:18},{value:"0xCc72039A141c6e34a779eF93AEF5eB4C82A893c7",address:"0xCc72039A141c6e34a779eF93AEF5eB4C82A893c7",type:"Crypto (ETH)",name:"Nexus wETH Reserves",symbol:"Nexus wETH Reserves",decimals:18},{value:"0x23905C55dC11D609D5d11Dc604905779545De9a7",address:"0x23905C55dC11D609D5d11Dc604905779545De9a7",type:"Crypto (USD)",name:"ENJ / USD",symbol:"ENJ / USD",decimals:8},{value:"0x32EaFC72772821936BCc9b8A32dC394fEFcDBfD9",address:"0x32EaFC72772821936BCc9b8A32dC394fEFcDBfD9",type:"Crypto",name:"Arbitrum Healthcheck",symbol:"Arbitrum Healthcheck",decimals:0},{value:"0xFb0CfD6c19e25DB4a08D8a204a387cEa48Cc138f",address:"0xFb0CfD6c19e25DB4a08D8a204a387cEa48Cc138f",type:"Crypto (USD)",name:"SXP / USD",symbol:"SXP / USD",decimals:8},{value:"0x8917800a6BDd8fA8b7c94E25aE2219Db28050622",address:"0x8917800a6BDd8fA8b7c94E25aE2219Db28050622",type:"Crypto",name:"eFIL PoR",symbol:"eFIL PoR",decimals:18},{value:"0xeb988B77b94C186053282BfcD8B7ED55142D3cAB",address:"0xeb988B77b94C186053282BfcD8B7ED55142D3cAB",type:"Crypto (USD)",name:"XCN / USD",symbol:"XCN / USD",decimals:8},{value:"0xfdFD9C85aD200c506Cf9e21F1FD8dd01932FBB23",address:"0xfdFD9C85aD200c506Cf9e21F1FD8dd01932FBB23",type:"Crypto",name:"WBTC / BTC",symbol:"WBTC / BTC",decimals:8},{value:"0x35E3f7E558C04cE7eEE1629258EcbbA03B36Ec56",address:"0x35E3f7E558C04cE7eEE1629258EcbbA03B36Ec56",type:"Crypto (USD)",name:"SAND / USD",symbol:"SAND / USD",decimals:8},{value:"0x4ffC43a60e009B551865A93d232E33Fce9f01507",address:"0x4ffC43a60e009B551865A93d232E33Fce9f01507",type:"Crypto (USD)",name:"SOL / USD",symbol:"SOL / USD",decimals:8},{value:"0x6e3A4376B4C8D3ba49602f8542D9D3C4A87ba901",address:"0x6e3A4376B4C8D3ba49602f8542D9D3C4A87ba901",type:"Crypto (NFT)",name:"Otherdeed for Otherside Floor Price",symbol:"Otherdeed for Otherside Floor Price",decimals:18},{value:"0x9320f0429180ce49C6D4d10A4633c8c92cdb53cB",address:"0x9320f0429180ce49C6D4d10A4633c8c92cdb53cB",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 3 Month",symbol:"BTC Interest Rate Benchmark Curve 3 Month",decimals:8},{value:"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419",address:"0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419",type:"Crypto (ETH)",name:"ETH / USD",symbol:"ETH / USD",decimals:8},{value:"0x3147D7203354Dc06D9fd350c7a2437bcA92387a4",address:"0x3147D7203354Dc06D9fd350c7a2437bcA92387a4",type:"Crypto (ETH)",name:"REN / ETH",symbol:"REN / ETH",decimals:18},{value:"0xA8B9A447C73191744D5B79BcE864F343455E1150",address:"0xA8B9A447C73191744D5B79BcE864F343455E1150",type:"Crypto (NFT)",name:"Azuki Floor Price / ETH",symbol:"Azuki Floor Price / ETH",decimals:18},{value:"0x01B6710B01cF3dd8Ae64243097d91aFb03728Fdd",address:"0x01B6710B01cF3dd8Ae64243097d91aFb03728Fdd",type:"Crypto (NFT)",name:"CryptoPunks Floor Price / ETH",symbol:"CryptoPunks Floor Price / ETH",decimals:18},{value:"0x09023c0DA49Aaf8fc3fA3ADF34C6A7016D38D5e3",address:"0x09023c0DA49Aaf8fc3fA3ADF34C6A7016D38D5e3",type:"Crypto (Stablecoin)",name:"USDP / USD",symbol:"USDP / USD",decimals:8},{value:"0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2",address:"0x24551a8Fb2A7211A25a17B1481f043A8a8adC7f2",type:"Crypto (ETH)",name:"MKR / ETH",symbol:"MKR / ETH",decimals:18},{value:"0x6AF09DF7563C363B5763b9102712EbeD3b9e859B",address:"0x6AF09DF7563C363B5763b9102712EbeD3b9e859B",type:"Crypto (USD)",name:"LTC / USD",symbol:"LTC / USD",decimals:8},{value:"0x4C01bcfb622F9aF8053E013e18373E50e6e8632E",address:"0x4C01bcfb622F9aF8053E013e18373E50e6e8632E",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 1 Month",symbol:"BTC Interest Rate Benchmark Curve 1 Month",decimals:8},{value:"0x875D60C44cfbC38BaA4Eb2dDB76A767dEB91b97e",address:"0x875D60C44cfbC38BaA4Eb2dDB76A767dEB91b97e",type:"Crypto (ETH)",name:"RUNE / ETH",symbol:"RUNE / ETH",decimals:18},{value:"0x3E7d1eAB13ad0104d2750B8863b489D65364e32D",address:"0x3E7d1eAB13ad0104d2750B8863b489D65364e32D",type:"Crypto (Stablecoin)",name:"USDT / USD",symbol:"USDT / USD",decimals:8},{value:"0xF49f8F5b931B0e4B4246E4CcA7cD2083997Aa83d",address:"0xF49f8F5b931B0e4B4246E4CcA7cD2083997Aa83d",type:"Crypto (NFT)",name:"CoolCats Floor Price",symbol:"CoolCats Floor Price",decimals:18},{value:"0xB09fC5fD3f11Cf9eb5E1C5Dba43114e3C9f477b5",address:"0xB09fC5fD3f11Cf9eb5E1C5Dba43114e3C9f477b5",type:"Forex",name:"TRY / USD",symbol:"TRY / USD",decimals:8},{value:"0x1823C89715Fe3fB96A24d11c917aCA918894A090",address:"0x1823C89715Fe3fB96A24d11c917aCA918894A090",type:"Crypto (NFT)",name:"MAYC Floor Price",symbol:"MAYC Floor Price",decimals:18},{value:"0x5cB4280b9ca8B0363aA4f4ef609dF403e522ea67",address:"0x5cB4280b9ca8B0363aA4f4ef609dF403e522ea67",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 2 Week",symbol:"BTC Interest Rate Benchmark Curve 2 Week",decimals:8},{value:"0x72AFAECF99C9d9C8215fF44C77B94B99C28741e8",address:"0x72AFAECF99C9d9C8215fF44C77B94B99C28741e8",type:"Crypto (ETH)",name:"1INCH / ETH",symbol:"1INCH / ETH",decimals:18},{value:"0xCd627aA160A6fA45Eb793D19Ef54f5062F20f33f",address:"0xCd627aA160A6fA45Eb793D19Ef54f5062F20f33f",type:"Crypto (USD)",name:"CRV / USD",symbol:"CRV / USD",decimals:8},{value:"0x492575FDD11a0fCf2C6C719867890a7648d526eB",address:"0x492575FDD11a0fCf2C6C719867890a7648d526eB",type:"Crypto (ETH)",name:"AMPL / ETH",symbol:"AMPL / ETH",decimals:18},{value:"0xAE48c91dF1fE419994FFDa27da09D5aC69c30f55",address:"0xAE48c91dF1fE419994FFDa27da09D5aC69c30f55",type:"Crypto (USD)",name:"ADA / USD",symbol:"ADA / USD",decimals:8},{value:"0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc",address:"0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc",type:"Crypto (USD)",name:"KNC / USD",symbol:"KNC / USD",decimals:8},{value:"0x2DE7E4a9488488e0058B95854CC2f7955B35dC9b",address:"0x2DE7E4a9488488e0058B95854CC2f7955B35dC9b",type:"Crypto (ETH)",name:"FTM / ETH",symbol:"FTM / ETH",decimals:18},{value:"0x1C07AFb8E2B827c5A4739C6d59Ae3A5035f28734",address:"0x1C07AFb8E2B827c5A4739C6d59Ae3A5035f28734",type:"Crypto (USD)",name:"DOT / USD",symbol:"DOT / USD",decimals:8},{value:"0xaC9962D846D431254C7B3Da3AA12519a1E2Eb5e7",address:"0xaC9962D846D431254C7B3Da3AA12519a1E2Eb5e7",type:"Crypto (NFT)",name:"JPEGd Pudgy Penguins Floor Price ETH",symbol:"JPEGd Pudgy Penguins Floor Price ETH",decimals:18},{value:"0xDC530D9457755926550b59e8ECcdaE7624181557",address:"0xDC530D9457755926550b59e8ECcdaE7624181557",type:"Crypto (ETH)",name:"LINK / ETH",symbol:"LINK / ETH",decimals:18},{value:"0xe5Dc0A609Ab8bCF15d3f35cFaa1Ff40f521173Ea",address:"0xe5Dc0A609Ab8bCF15d3f35cFaa1Ff40f521173Ea",type:"Crypto (ETH)",name:"WNXM / ETH",symbol:"WNXM / ETH",decimals:18},{value:"0xdF2917806E30300537aEB49A7663062F4d1F2b5F",address:"0xdF2917806E30300537aEB49A7663062F4d1F2b5F",type:"Crypto (USD)",name:"BAL / USD",symbol:"BAL / USD",decimals:8},{value:"0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e",address:"0xD6aA3D25116d8dA79Ea0246c4826EB951872e02e",type:"Crypto (ETH)",name:"UNI / ETH",symbol:"UNI / ETH",decimals:18},{value:"0x84a24deCA415Acc0c395872a9e6a63E27D6225c8",address:"0x84a24deCA415Acc0c395872a9e6a63E27D6225c8",type:"Crypto (ETH)",name:"TRIBE / ETH",symbol:"TRIBE / ETH",decimals:18},{value:"0xf600984CCa37cd562E74E3EE514289e3613ce8E4",address:"0xf600984CCa37cd562E74E3EE514289e3613ce8E4",type:"Crypto (ETH)",name:"ILV / ETH",symbol:"ILV / ETH",decimals:18},{value:"0x134fE0a225Fb8e6683617C13cEB6B3319fB4fb82",address:"0x134fE0a225Fb8e6683617C13cEB6B3319fB4fb82",type:"Crypto (USD)",name:"WING / USD",symbol:"WING / USD",decimals:8},{value:"0xFaA8F6073845DBe5627dAA3208F78A3043F99bcA",address:"0xFaA8F6073845DBe5627dAA3208F78A3043F99bcA",type:"Crypto (NFT)",name:"Cryptoadz Floor Price",symbol:"Cryptoadz Floor Price",decimals:18},{value:"0x96284a8f283aEE951f359f44006C2d1b72e85957",address:"0x96284a8f283aEE951f359f44006C2d1b72e85957",type:"Crypto",name:"BTC Interest Rate Benchmark Curve 2 Month",symbol:"BTC Interest Rate Benchmark Curve 2 Month",decimals:8},{value:"0x0CA05B24795eb4f5bA5237e1D4470048cc0fE235",address:"0x0CA05B24795eb4f5bA5237e1D4470048cc0fE235",type:"Crypto (NFT)",name:"JPEGd Bored Ape Floor Price ETH",symbol:"JPEGd Bored Ape Floor Price ETH",decimals:18},{value:"0xe25277fF4bbF9081C75Ab0EB13B4A13a721f3E13",address:"0xe25277fF4bbF9081C75Ab0EB13B4A13a721f3E13",type:"Forex",name:"SGD / USD",symbol:"SGD / USD",decimals:8},{value:"0xA027702dbb89fbd58938e4324ac03B58d812b0E1",address:"0xA027702dbb89fbd58938e4324ac03B58d812b0E1",type:"Crypto (USD)",name:"YFI / USD",symbol:"YFI / USD",decimals:8},{value:"0xe572CeF69f43c2E488b33924AF04BDacE19079cf",address:"0xe572CeF69f43c2E488b33924AF04BDacE19079cf",type:"Crypto (ETH)",name:"SUSHI / ETH",symbol:"SUSHI / ETH",decimals:18},{value:"0x75FbD83b4bd51dEe765b2a01e8D3aa1B020F9d33",address:"0x75FbD83b4bd51dEe765b2a01e8D3aa1B020F9d33",type:"Crypto (ETH)",name:"CEL / ETH",symbol:"CEL / ETH",decimals:18},{value:"0xc929ad75B72593967DE83E7F7Cda0493458261D9",address:"0xc929ad75B72593967DE83E7F7Cda0493458261D9",type:"Crypto (USD)",name:"1INCH / USD",symbol:"1INCH / USD",decimals:8},{value:"0x3977CFc9e4f29C184D4675f4EB8e0013236e5f3e",address:"0x3977CFc9e4f29C184D4675f4EB8e0013236e5f3e",type:"Forex",name:"NZD / USD",symbol:"NZD / USD",decimals:8},{value:"0xe20CA8D7546932360e37E9D72c1a47334af57706",address:"0xe20CA8D7546932360e37E9D72c1a47334af57706",type:"Crypto (USD)",name:"AMPL / USD",symbol:"AMPL / USD",decimals:18},{value:"0xF017fcB346A1885194689bA23Eff2fE6fA5C483b",address:"0xF017fcB346A1885194689bA23Eff2fE6fA5C483b",type:"Crypto (ETH)",name:"CBETH / ETH",symbol:"CBETH / ETH",decimals:18},{value:"0xA9cdBbDE36803af377735233e6BD261cDA5aD11d",address:"0xA9cdBbDE36803af377735233e6BD261cDA5aD11d",type:"Crypto (NFT)",name:"JPEGd Azuki Floor Price ETH",symbol:"JPEGd Azuki Floor Price ETH",decimals:18},{value:"0x4cba1e1fdc738D0fe8DB3ee07728E2Bc4DA676c6",address:"0x4cba1e1fdc738D0fe8DB3ee07728E2Bc4DA676c6",type:"Crypto (ETH)",name:"RLC / ETH",symbol:"RLC / ETH",decimals:18},{value:"0xCfE54B5cD566aB89272946F602D76Ea879CAb4a8",address:"0xCfE54B5cD566aB89272946F602D76Ea879CAb4a8",type:"Crypto (ETH)",name:"STETH / USD",symbol:"STETH / USD",decimals:8},{value:"0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B",address:"0x24D9aB51950F3d62E9144fdC2f3135DAA6Ce8D1B",type:"Crypto (ETH)",name:"ENJ / ETH",symbol:"ENJ / ETH",decimals:18},{value:"0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c",address:"0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c",type:"Crypto (USD)",name:"BTC / USD",symbol:"BTC / USD",decimals:8},{value:"0xF05D9B6C08757EAcb1fbec18e36A1B7566a13DEB",address:"0xF05D9B6C08757EAcb1fbec18e36A1B7566a13DEB",type:"Crypto (ETH)",name:"Calculated XSUSHI / ETH",symbol:"Calculated XSUSHI / ETH",decimals:18},{value:"0x379589227b15F1a12195D3f2d90bBc9F31f95235",address:"0x379589227b15F1a12195D3f2d90bBc9F31f95235",type:"Commodities",name:"XAG / USD",symbol:"XAG / USD",decimals:8},{value:"0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012",address:"0x6Df09E975c830ECae5bd4eD9d90f3A95a4f88012",type:"Crypto (ETH)",name:"AAVE / ETH",symbol:"AAVE / ETH",decimals:18},{value:"0x35bf6767577091E7f04707c0290b3f889e968307",address:"0x35bf6767577091E7f04707c0290b3f889e968307",type:"Crypto (NFT)",name:"VeeFriends Floor Price",symbol:"VeeFriends Floor Price",decimals:18},{value:"0x13E6C463BEC76873E4e63ce5169e9a95b7e06801",address:"0x13E6C463BEC76873E4e63ce5169e9a95b7e06801",type:"Crypto (NFT)",name:"JPEGd CloneX Floor Price ETH",symbol:"JPEGd CloneX Floor Price ETH",decimals:18},{value:"0x986b5E1e1755e3C2440e960477f25201B0a8bbD4",address:"0x986b5E1e1755e3C2440e960477f25201B0a8bbD4",type:"Crypto (Stablecoin)",name:"USDC / ETH",symbol:"USDC / ETH",decimals:18},{value:"0xe2F95bC12FE8a3C35684Be7586C39fD7c0E5b403",address:"0xe2F95bC12FE8a3C35684Be7586C39fD7c0E5b403",type:"Crypto (USD)",name:"HIGH / USD",symbol:"HIGH / USD",decimals:8},{value:"0x214eD9Da11D2fbe465a6fc601a91E62EbEc1a0D6",address:"0x214eD9Da11D2fbe465a6fc601a91E62EbEc1a0D6",type:"Commodities",name:"XAU / USD",symbol:"XAU / USD",decimals:8},{value:"0xC9CbF687f43176B302F03f5e58470b77D07c61c6",address:"0xC9CbF687f43176B302F03f5e58470b77D07c61c6",type:"Crypto (ETH)",name:"CVX / ETH",symbol:"CVX / ETH",decimals:18},{value:"0x456834f736094Fb0AAD40a9BBc9D4a0f37818A54",address:"0x456834f736094Fb0AAD40a9BBc9D4a0f37818A54",type:"Crypto (USD)",name:"FOR / USD",symbol:"FOR / USD",decimals:8},{value:"0xeF8A4aF35cd47424672E3C590aBD37FBB7A7759a",address:"0xeF8A4aF35cd47424672E3C590aBD37FBB7A7759a",type:"Forex",name:"CNY / USD",symbol:"CNY / USD",decimals:8}];var getPairs=function(_a){var chainId=_a.chainId;var pairsList=[];switch(chainId){case"1":pairsList=ethereumPairsMainnet;break;case"5":pairsList=ethereumPairsGoerli;break;case"42161":pairsList=arbitrumPairsMainnet;break;case"421613":pairsList=arbitrumPairsGoerli;break;case"11155111":pairsList=[];break}return pairsList};var DataFeedDecimals=createPlugin$1({protocol:"CHAINLINK",type:"ORACLE",method:"decimals",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"chainlink_datafeed",options:getPairs({chainId:chainId})}),methodParams:{}},output:{decimals:new FctDecimals({innerIndex:0})}}}});var LatestRoundData=createPlugin$1({protocol:"CHAINLINK",type:"ORACLE",method:"latestRoundData",name:"priceFeeds",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"chainlink_datafeed",options:getPairs({chainId:chainId})}),methodParams:{}},output:{roundId:new FctUInt80({innerIndex:0}),price:new FctInt256({innerIndex:1,destination:"wei_amount"}),startedAt:new FctTimestamp({innerIndex:2}),updatedAt:new FctTimestamp({innerIndex:3}),answeredInRound:new FctUInt80({innerIndex:4})}}}});var ChainLink={getters:{DataFeedDecimals:DataFeedDecimals,LatestRoundData:LatestRoundData}};var __assign$i=undefined&&undefined.__assign||function(){__assign$i=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$i.apply(this,arguments)};var compoundTokens=cTokens.map(function(token){return __assign$i(__assign$i({},token),{value:token.address})});var isNative=function(address,chainId){if(chainId==="1")return address.toLowerCase()==="0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5".toLowerCase();return address.toLowerCase()==="0x20572e4c090f15667cF7378e16FaD2eA0e2f3EfF".toLowerCase()};var getCompoundPluginAddressesInput=function(_a){var chainId=_a.chainId;var tokens={};var labels=[];var chainTokens=compoundTokens.filter(function(token){return token.chainId===Number(chainId)});chainTokens.forEach(function(token,index){var address=index>0?new FctAddress({required:false,hidden:true,destination:"erc20",options:chainTokens}):new FctAddress({destination:"erc20",options:chainTokens});tokens["address".concat(index+1)]=address;labels.push("address".concat(index+1))});return{tokens:tokens,labels:labels}};var Borrow$1=createPlugin$1({protocol:"COMPOUND_V2",type:"ACTION",method:"borrow",description:"Borrow ETH or ERC20 tokens",supportedContracts:cTokens,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"ctoken",options:compoundTokens.filter(function(token){return token.chainId===Number(chainId)})}),methodParams:{borrowAmount:new FctValue({destination:"wei_amount"})}},output:{result:new FctValue({innerIndex:0})}}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var _a;var to=params.to,borrowAmount=params.methodParams.borrowAmount;if(!borrowAmount.value||!to.value||!vaultAddress)return[];if(typeof borrowAmount.value!=="string"||typeof to.value!=="string")return[];var asset=(to===null||to===void 0?void 0:to.value)&&((_a=compoundTokens.find(function(token){return token.address===to.value}))===null||_a===void 0?void 0:_a.assetAddress);if(!asset)return[];return[{address:vaultAddress,toSpend:[],toReceive:[{token:asset,amount:borrowAmount.value}]},{address:to.value,toSpend:[{token:asset,amount:borrowAmount.value}],toReceive:[]}]}});var __assign$h=undefined&&undefined.__assign||function(){__assign$h=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$h.apply(this,arguments)};var __awaiter$H=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$H=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var ClaimCOMP=createPlugin$1({protocol:"COMPOUND_V2",type:"ACTION",method:"claimComp",description:"Borrow ETH or ERC20 tokens",supportedContracts:[{chainId:1,address:"0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"},{chainId:5,address:"0x3cBe63aAcF6A064D32072a630A3eab7545C54d78"}],getParams:function(_a){var chainId=_a.chainId;return{input:__assign$h(__assign$h({to:new FctAddress({destination:"comptroller"})},getCompoundPluginAddressesInput({chainId:chainId}).tokens),{methodParams:{holder:new FctAddress({}),cTokens:new FctAddressList({required:false})}}),output:{}}},calculateValuesOnUserInput:function(_a){var input=_a.input,chainId=_a.chainId;var chainTokens=compoundTokens.filter(function(token){return token.chainId===Number(chainId)});var getParamsAsync=function(){return __awaiter$H(void 0,void 0,void 0,function(){var cTokens,tokensHash;return __generator$H(this,function(_a){cTokens=[];tokensHash=new Set;chainTokens.forEach(function(_token,index){var tokenLabel="address".concat(index+1);var nexTokenLabel="address".concat(index+2);if(!input[tokenLabel])return;if(!input[tokenLabel].value){if(!input[nexTokenLabel])return;if(!input[nexTokenLabel].value){input[nexTokenLabel].hidden=true;return}input[tokenLabel].value=input[nexTokenLabel].value;input[nexTokenLabel].value=undefined;return}cTokens.push(input[tokenLabel].value);tokensHash.add(input[tokenLabel].value);if(!input[nexTokenLabel])return;input[nexTokenLabel].options=chainTokens.filter(function(token){return!tokensHash.has(token.value)});input[nexTokenLabel].hidden=false});return[2,{params:{methodParams:{cTokens:cTokens}},error:undefined}]})})};return{get:getParamsAsync,depParamKeys:getCompoundPluginAddressesInput({chainId:chainId}).labels}}});var __assign$g=undefined&&undefined.__assign||function(){__assign$g=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$g.apply(this,arguments)};var __awaiter$G=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$G=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var EnterMarkets=createPlugin$1({protocol:"COMPOUND_V2",type:"ACTION",method:"enterMarkets",description:"Borrow ETH or ERC20 tokens",supportedContracts:[{chainId:1,address:"0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"},{chainId:5,address:"0x3cBe63aAcF6A064D32072a630A3eab7545C54d78"}],getParams:function(_a){var chainId=_a.chainId;return{input:__assign$g(__assign$g({to:new FctAddress({destination:"comptroller"})},getCompoundPluginAddressesInput({chainId:chainId}).tokens),{methodParams:{cTokens:new FctAddressList({readonly:true})}}),output:{}}},calculateValuesOnUserInput:function(_a){var input=_a.input,chainId=_a.chainId;var chainTokens=compoundTokens.filter(function(token){return token.chainId===Number(chainId)});var getParamsAsync=function(){return __awaiter$G(void 0,void 0,void 0,function(){var cTokens,tokensHash;return __generator$G(this,function(_a){cTokens=[];tokensHash=new Set;chainTokens.forEach(function(_token,index){var tokenLabel="address".concat(index+1);var nexTokenLabel="address".concat(index+2);if(!input[tokenLabel])return;if(!input[tokenLabel].value){if(!input[nexTokenLabel])return;if(!input[nexTokenLabel].value){input[nexTokenLabel].hidden=true;return}input[tokenLabel].value=input[nexTokenLabel].value;input[nexTokenLabel].value=undefined;return}cTokens.push(input[tokenLabel].value);tokensHash.add(input[tokenLabel].value);if(!input[nexTokenLabel])return;input[nexTokenLabel].options=chainTokens.filter(function(token){return!tokensHash.has(token.value)});input[nexTokenLabel].hidden=false});return[2,{params:{methodParams:{cTokens:cTokens}},error:undefined}]})})};return{get:getParamsAsync,depParamKeys:getCompoundPluginAddressesInput({chainId:chainId}).labels}}});var ExitMarket=createPlugin$1({protocol:"COMPOUND_V2",type:"ACTION",method:"exitMarket",description:"Borrow ETH or ERC20 tokens",supportedContracts:[{chainId:1,address:"0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"},{chainId:5,address:"0x3cBe63aAcF6A064D32072a630A3eab7545C54d78"}],getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"comptroller"}),methodParams:{cToken:new FctAddress({destination:"ctoken",options:compoundTokens.filter(function(token){return token.chainId===Number(chainId)})})}},output:{}}},initParams:{to:"0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"}});var __awaiter$F=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$F=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Mint=createPlugin$1({protocol:"COMPOUND_V2",type:"ACTION",method:"mint",name:"mint",description:"Mint cTokens",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"ctoken",options:compoundTokens.filter(function(token){return token.chainId===Number(chainId)})}),payToken:new FctAddress({destination:"erc20",readonly:true}),value:new FctValue({destination:"wei_amount",required:false,readonly:true}),amount:new FctValue({destination:"wei_amount"}),methodParams:{mintAmount:new FctValue({destination:"wei_amount",required:false,readonly:true})}},output:{}}},calculateValuesOnUserInput:function(_a){var input=_a.input,chainId=_a.chainId,provider=_a.provider;var getParamsAsync=function(){return __awaiter$F(void 0,void 0,void 0,function(){var to,value,amount,payToken,methodParams,underlyingToken,tokenContract,symbol,decimals,_a,_b,_c;var _d;return __generator$F(this,function(_e){switch(_e.label){case 0:to=input.to,value=input.value,amount=input.amount,payToken=input.payToken,methodParams=input.methodParams;if(!to.value||to.isVariable){return[2,{params:{value:undefined,payToken:undefined,methodParams:{mintAmount:undefined}},error:undefined}]}if(isNative(to.value,chainId)){value.value=amount.value;methodParams.mintAmount.value=undefined;methodParams.mintAmount.virtual=true;methodParams.mintAmount.required=false;value.required=true;amount.label="ETH Amount";amount.decimals=18;payToken.label="ETH";payToken.decimals=18;payToken.value=ZERO_ADDRESS$1;return[2,{params:{value:amount.value,payToken:ZERO_ADDRESS$1},error:undefined}]}underlyingToken=(_d=cTokens.find(function(cToken){if(typeof to.value==="string"&&cToken.address.toLowerCase()===to.value.toLowerCase())return true;return false}))===null||_d===void 0?void 0:_d.assetAddress;if(!underlyingToken)return[3,5];tokenContract=new Contract(underlyingToken,["function decimals() view returns (uint8 decimals)","function symbol() view returns (string symbol)"],provider);return[4,tokenContract.symbol()];case 1:symbol=_e.sent();return[4,tokenContract.decimals()];case 2:decimals=_e.sent();_a=amount;_b="".concat;return[4,tokenContract.symbol()];case 3:_a.label=_b.apply("",[_e.sent()," Amount"]);_c=amount;return[4,tokenContract.decimals()];case 4:_c.decimals=_e.sent();payToken.label=symbol;payToken.decimals=decimals;payToken.value=underlyingToken;_e.label=5;case 5:methodParams.mintAmount.required=true;value.required=false;value.value="0";methodParams.mintAmount.value=amount.value;methodParams.mintAmount.virtual=false;return[2,{params:{value:undefined,payToken:underlyingToken,methodParams:{mintAmount:amount.value}},error:undefined}]}})})};return{get:getParamsAsync,depParamKeys:["to","amount"]}},requiredApprovals:function(params,chainId){var _a;if(!params.to.value)return[];if(isNative(params.to.value,chainId))return[];var underlyingToken=(_a=cTokens.find(function(cToken){if(typeof(params===null||params===void 0?void 0:params.to.value)==="string"&&cToken.address.toLowerCase()===(params===null||params===void 0?void 0:params.to.value.toLowerCase()))return true;return false}))===null||_a===void 0?void 0:_a.assetAddress;return[{to:underlyingToken,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params.methodParams.mintAmount.value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){return __awaiter$F(this,void 0,void 0,function(){var to,amount,asset,cToken,exchangeRate,cTokens;var _a;return __generator$F(this,function(_b){switch(_b.label){case 0:to=params.to,amount=params.amount;if(!to.value||!amount.value||!vaultAddress)return[2,[]];if(typeof to.value!=="string"||typeof amount.value!=="string")return[2,[]];asset=(to===null||to===void 0?void 0:to.value)&&(((_a=compoundTokens.find(function(token){return token.address===to.value}))===null||_a===void 0?void 0:_a.assetAddress)||ZERO_ADDRESS$1);if(!asset)return[2,[]];cToken=new Contract(to.value,["function exchangeRateStored() view returns (uint256 exchangeRate)","function reserveFactorMantissa() view returns (uint256)"],new JsonRpcProvider);return[4,cToken.exchangeRateStored()];case 1:exchangeRate=_b.sent();cTokens=BigInt(amount.value)*BigInt(Math.pow(10,18))/exchangeRate;return[2,[{address:vaultAddress,toSpend:[{token:asset,amount:amount.value}],toReceive:[{token:to.value,amount:cTokens.toString()}]}]]}})})}});var __awaiter$E=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$E=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Redeem=createPlugin$1({protocol:"COMPOUND_V2",type:"ACTION",method:"redeem",description:"Redeem cTokens or cETH",supportedContracts:cTokens,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"ctoken",options:compoundTokens.filter(function(token){return token.chainId===Number(chainId)})}),receiveToken:new FctAddress({destination:"erc20",readonly:true}),methodParams:{redeemTokens:new FctValue({destination:"wei_amount"})}},output:{result:new FctValue({innerIndex:0})}}},calculateValuesOnUserInput:function(_a){var input=_a.input,chainId=_a.chainId,provider=_a.provider;var getParamsAsync=function(){return __awaiter$E(void 0,void 0,void 0,function(){var to,receiveToken,underlyingToken,tokenContract,symbol,decimals;var _a;return __generator$E(this,function(_b){switch(_b.label){case 0:to=input.to,receiveToken=input.receiveToken;if(!to.value||to.isVariable){return[2,{params:{value:undefined,receiveToken:undefined},error:undefined}]}if(isNative(to.value,chainId)){receiveToken.label="ETH";receiveToken.decimals=18;receiveToken.value=ZERO_ADDRESS$1;return[2,{params:{receiveToken:ZERO_ADDRESS$1},error:undefined}]}underlyingToken=(_a=cTokens.find(function(cToken){if(typeof to.value==="string"&&cToken.address.toLowerCase()===to.value.toLowerCase())return true;return false}))===null||_a===void 0?void 0:_a.assetAddress;if(!underlyingToken)return[3,3];tokenContract=new Contract(underlyingToken,["function decimals() view returns (uint8 decimals)","function symbol() view returns (string symbol)"],provider);return[4,tokenContract.symbol()];case 1:symbol=_b.sent();return[4,tokenContract.decimals()];case 2:decimals=_b.sent();receiveToken.label=symbol;receiveToken.decimals=decimals;receiveToken.value=underlyingToken;_b.label=3;case 3:return[2,{params:{receiveToken:underlyingToken},error:undefined}]}})})};return{get:getParamsAsync,depParamKeys:["to","amount"]}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var _a;var to=params.to,redeemTokens=params.methodParams.redeemTokens;if(!redeemTokens.value||!to.value||!vaultAddress)return[];if(typeof redeemTokens.value!=="string"||typeof to.value!=="string")return[];var asset=(to===null||to===void 0?void 0:to.value)&&((_a=compoundTokens.find(function(token){return token.address===to.value}))===null||_a===void 0?void 0:_a.assetAddress);if(!asset)return[];return[{address:vaultAddress,toSpend:[],toReceive:[{token:asset,amount:redeemTokens.value}]},{address:to.value,toSpend:[{token:asset,amount:redeemTokens.value}],toReceive:[]}]}});var __awaiter$D=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$D=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var RepayBorrow=createPlugin$1({protocol:"COMPOUND_V2",type:"ACTION",method:"repayBorrow",name:"repayBorrow",description:"Repay borrowed ERC20 tokens or ETH",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"ctoken",options:compoundTokens.filter(function(token){return token.chainId===Number(chainId)})}),value:new FctValue({destination:"wei_amount",required:false,readonly:true}),amount:new FctValue({destination:"wei_amount"}),methodParams:{repayAmount:new FctValue({destination:"wei_amount",required:false,readonly:true})}},output:{}}},calculateValuesOnUserInput:function(_a){var input=_a.input,chainId=_a.chainId;var getParamsAsync=function(){return __awaiter$D(void 0,void 0,void 0,function(){var to,value,amount,methodParams;return __generator$D(this,function(_a){to=input.to,value=input.value,amount=input.amount,methodParams=input.methodParams;if(!to.value||to.isVariable){return[2,{params:{value:undefined,methodParams:{repayAmount:undefined}},error:undefined}]}if(isNative(to.value,chainId)){value.value=amount.value;methodParams.repayAmount.value=undefined;methodParams.repayAmount.virtual=true;methodParams.repayAmount.required=false;value.required=true;return[2,{params:{value:amount.value},error:undefined}]}methodParams.repayAmount.required=true;value.required=false;value.value="0";methodParams.repayAmount.value=amount.value;methodParams.repayAmount.virtual=false;return[2,{params:{value:undefined,methodParams:{repayAmount:amount.value}},error:undefined}]})})};return{get:getParamsAsync,depParamKeys:["to","amount"]}},requiredApprovals:function(params,chainId){var _a;if(!params.to.value)return[];if(isNative(params.to.value,chainId))return[];var underlyingToken=(_a=cTokens.find(function(cToken){if(typeof(params===null||params===void 0?void 0:params.to.value)==="string"&&cToken.address.toLowerCase()===(params===null||params===void 0?void 0:params.to.value.toLocaleLowerCase()))return true;return false}))===null||_a===void 0?void 0:_a.assetAddress;return[{to:underlyingToken,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params.methodParams.repayAmount.value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var _a;var to=params.to,amount=params.amount;if(!amount.value||!to.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof to.value!=="string")return[];var asset=(to===null||to===void 0?void 0:to.value)&&((_a=compoundTokens.find(function(token){return token.address===to.value}))===null||_a===void 0?void 0:_a.assetAddress);if(!asset)return[];return[{address:vaultAddress,toSpend:[{token:asset,amount:amount.value}],toReceive:[]},{address:to.value,toSpend:[],toReceive:[{token:asset,amount:amount.value}]}]}});var BorrowBalance=createPlugin$1({protocol:"COMPOUND_V2",type:"GETTER",method:"borrowBalanceCurrent",description:"Borrow ETH or ERC20 tokens",supportedContracts:cTokens,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"ctoken",options:compoundTokens.filter(function(token){return token.chainId===Number(chainId)})}),methodParams:{account:new FctAddress({})}},output:{borrowedAmount:new FctValue({innerIndex:0})}}}});var CollateralFactor=createPlugin$1({protocol:"COMPOUND_V2",type:"GETTER",method:"markets",description:"Borrow ETH or ERC20 tokens",supportedContracts:[{chainId:1,address:"0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"},{chainId:5,address:"0x3cBe63aAcF6A064D32072a630A3eab7545C54d78"}],getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"comptroller"}),methodParams:{cToken:new FctAddress({destination:"ctoken",options:compoundTokens.filter(function(token){return token.chainId===Number(chainId)})})}},output:{isListed:new FctBoolean({innerIndex:0}),collateralFactor:new FctBoolean({innerIndex:1}),isComped:new FctBoolean({innerIndex:2})}}}});var GetAccountLiquidity=createPlugin$1({protocol:"COMPOUND_V2",type:"GETTER",method:"getAccountLiquidity",description:"Get account liquidity that represents the USD value borrowable by a user, before it reaches liquidation",supportedContracts:[{chainId:1,address:"0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"},{chainId:5,address:"0x3cBe63aAcF6A064D32072a630A3eab7545C54d78"}],getParams:function(){return{input:{to:new FctAddress({destination:"comptroller"}),methodParams:{account:new FctAddress({})}},output:{liquidity:new FctValue({innerIndex:1,destination:"wei_amount"}),shortfall:new FctValue({innerIndex:2})}}}});var GetAssetsIn=createPlugin$1({protocol:"COMPOUND_V2",type:"GETTER",method:"getAssetsIn",description:"Get the list of markets an account is currently entered into",supportedContracts:[{chainId:1,address:"0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"},{chainId:5,address:"0x3cBe63aAcF6A064D32072a630A3eab7545C54d78"}],getParams:function(_a){return{input:{to:new FctAddress({}),methodParams:{account:new FctAddress({})}},output:{addresses:new FctAddressList({innerIndex:0})}}}});var actions$i={Mint:Mint,Redeem:Redeem,Borrow:Borrow$1,RepayBorrow:RepayBorrow,EnterMarkets:EnterMarkets,ExitMarket:ExitMarket,ClaimCOMP:ClaimCOMP};var getters$h={GetAccountLiquidity:GetAccountLiquidity,CollateralFactor:CollateralFactor,BorrowBalance:BorrowBalance,GetAssetsIn:GetAssetsIn};var CompoundV2={actions:actions$i,getters:getters$h};var depositAssets=[{chainId:1,address:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",name:"USDC",symbol:"USDC",decimals:6},{chainId:1,address:"0xc00e94Cb662C3520282E6f5717214004A7f26888",name:"Compound",symbol:"COMP",decimals:18},{chainId:1,address:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",name:"Wrapped BTC",symbol:"WBTC",decimals:8},{chainId:1,address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",name:"Wrapped ETH",symbol:"WETH",decimals:18},{chainId:1,address:"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",name:"Uniswap",symbol:"UNI",decimals:18},{chainId:1,address:"0x514910771AF9Ca656af840dff83E8264EcF986CA",name:"Chainlink",symbol:"LINK",decimals:18},{chainId:5,address:"0x07865c6E87B9F70255377e024ace6630C1Eaa37F",name:"USDC",symbol:"USDC",decimals:6},{chainId:5,address:"0x3587b2F7E0E2D6166d6C14230e7Fe160252B0ba4",name:"Compound",symbol:"COMP",decimals:18},{chainId:5,address:"0xAAD4992D949f9214458594dF92B44165Fb84dC19",name:"Wrapped BTC",symbol:"WBTC",decimals:8},{chainId:5,address:"0x42a71137C09AE83D8d05974960fd607d40033499",name:"Wrapped ETH",symbol:"WETH",decimals:18},{chainId:42161,address:"0x912ce59144191c1204e64559fe8253a0e49e6548",name:"Arbitrum",symbol:"ARB",decimals:18},{chainId:42161,address:"0xfc5A1A6EB076a2C7aD06eD22C90d7E710E35ad0a",name:"GMX",symbol:"GMX",decimals:18},{chainId:42161,address:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",name:"USDC",symbol:"USDC.e",decimals:6},{chainId:42161,address:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",name:"Wrapped BTC",symbol:"WBTC",decimals:8},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",name:"Wrapped Ether",symbol:"WETH",decimals:18},{chainId:421613,address:"0x8FB1E3fC51F3b789dED7557E680551d93Ea9d892",name:"USDC",symbol:"USDC.e",decimals:6},{chainId:421613,address:"0x22d5e2dE578677791f6c90e0110Ec629be9d5Fb5",name:"Wrapped BTC",symbol:"WBTC",decimals:8},{chainId:421613,address:"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",name:"Wrapped Ether",symbol:"WETH",decimals:18}];var __assign$f=undefined&&undefined.__assign||function(){__assign$f=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$f.apply(this,arguments)};var Supply=createPlugin$1({protocol:"COMPOUND_V3",type:"ACTION",method:"supply",description:"Transfers an asset to the Compound protocol and adds it to the account's balance",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$f(__assign$f({},asset),{value:asset.address})})}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount;return[{to:asset.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amount.value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,asset=_a.asset,amount=_a.amount;if(!amount.value||!asset.value||!to.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];return[{address:vaultAddress,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[{token:to.value,amount:amount.value}]},{address:to.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]}]}});var __assign$e=undefined&&undefined.__assign||function(){__assign$e=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$e.apply(this,arguments)};var SupplyFrom=createPlugin$1({protocol:"COMPOUND_V3",type:"ACTION",method:"supplyFrom",description:"Transfers an asset to the Compound protocol and adds it to the account's balance",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{from:new FctAddress({}),destination:new FctAddress({}),asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$e(__assign$e({},asset),{value:asset.address})})}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount,from=_a.from;return[{to:asset.value,from:from.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amount.value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,asset=_a.asset,amount=_a.amount,from=_a.from,destination=_a.destination;if(!amount.value||!asset.value||!to.value||!from.value||!destination.value||!vaultAddress)return[];if(typeof from.value!=="string"||typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string"||typeof destination.value!=="string")return[];var flow=[{address:from.value,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[]},{address:to.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]}];if(destination.value.toLowerCase()===from.value.toLowerCase()){flow[0].toReceive=[{token:asset.value,amount:amount.value}]}else{flow.push({address:destination.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]})}return flow}});var __assign$d=undefined&&undefined.__assign||function(){__assign$d=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$d.apply(this,arguments)};var SupplyTo=createPlugin$1({protocol:"COMPOUND_V3",type:"ACTION",method:"supplyTo",description:"Transfers an asset to the Compound protocol and adds it to the account's balance",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{destination:new FctAddress({}),asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$d(__assign$d({},asset),{value:asset.address})})}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount;return[{to:asset.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amount.value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,asset=_a.asset,amount=_a.amount,destination=_a.destination;if(!amount.value||!asset.value||!to.value||!destination.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string"||typeof destination.value!=="string")return[];var flow=[{address:vaultAddress,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[]},{address:to.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]}];if(destination.value.toLowerCase()===vaultAddress.toLowerCase()){flow[0].toReceive=[{token:asset.value,amount:amount.value}]}else{flow.push({address:destination.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]})}return flow}});var __assign$c=undefined&&undefined.__assign||function(){__assign$c=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$c.apply(this,arguments)};var Withdraw$4=createPlugin$1({protocol:"COMPOUND_V3",type:"ACTION",method:"withdraw",description:"Withdraw collateral that is not currently supporting an open borrow.",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$c(__assign$c({},asset),{value:asset.address})})}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,asset=_a.asset,amount=_a.amount;if(!amount.value||!asset.value||!to.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string")return[];var flow=[{address:vaultAddress,toSpend:[{token:to.value,amount:amount.value}],toReceive:[{token:asset.value,amount:amount.value}]},{address:to.value,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[]}];return flow}});var __assign$b=undefined&&undefined.__assign||function(){__assign$b=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$b.apply(this,arguments)};var WithdrawFrom=createPlugin$1({protocol:"COMPOUND_V3",type:"ACTION",method:"withdrawFrom",description:"Withdraw collateral that is not currently supporting an open borrow.",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{src:new FctAddress({}),to:new FctAddress({}),asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$b(__assign$b({},asset),{value:asset.address})})}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,asset=_a.asset,amount=_a.amount,src=_a.src,destination=_a.to;if(!amount.value||!asset.value||!to.value||!src.value||!destination.value||!vaultAddress)return[];if(typeof src.value!=="string"||typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string"||typeof destination.value!=="string")return[];var flow=[{address:destination.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]},{address:to.value,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[]}];return flow}});var __assign$a=undefined&&undefined.__assign||function(){__assign$a=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$a.apply(this,arguments)};var WithdrawTo=createPlugin$1({protocol:"COMPOUND_V3",type:"ACTION",method:"withdrawTo",description:"Withdraw collateral that is not currently supporting an open borrow.",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{to:new FctAddress({}),asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$a(__assign$a({},asset),{value:asset.address})})}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,asset=_a.asset,amount=_a.amount,destination=_a.to;if(!amount.value||!asset.value||!to.value||!destination.value||!vaultAddress)return[];if(typeof amount.value!=="string"||typeof asset.value!=="string"||typeof to.value!=="string"||typeof destination.value!=="string")return[];var flow=[{address:destination.value,toSpend:[],toReceive:[{token:asset.value,amount:amount.value}]},{address:to.value,toSpend:[{token:asset.value,amount:amount.value}],toReceive:[]}];return flow}});var AccountData=createPlugin$1({protocol:"COMPOUND_V3",type:"GETTER",method:"userBasic",description:"The protocol tracks data like the principal and indexes for each account that supplies and borrows.",supportedContracts:cometList,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{account:new FctAddress({})}},output:{pricinpal:new FctValue({innerIndex:0}),baseTrackingIndex:new FctValue({innerIndex:1}),baseTrackingAccrued:new FctValue({innerIndex:2}),assetsIn:new FctValue({innerIndex:3})}}}});var BorrowBalanceOf=createPlugin$1({protocol:"COMPOUND_V3",type:"GETTER",method:"borrowBalanceOf",description:"Returns the current balance of borrowed base asset for a specified account in the protocol, including interest.",supportedContracts:cometList,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{account:new FctAddress({})}},output:{balance:new FctValue({innerIndex:0})}}}});var __assign$9=undefined&&undefined.__assign||function(){__assign$9=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$9.apply(this,arguments)};var CollateralBalanceOf=createPlugin$1({protocol:"COMPOUND_V3",type:"GETTER",method:"collateralBalanceOf",description:"Function returns the current balance of a collateral asset for a specified account in the protocol.",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{account:new FctAddress({}),asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$9(__assign$9({},asset),{value:asset.address})})})}},output:{balance:new FctValue({innerIndex:0})}}}});var __assign$8=undefined&&undefined.__assign||function(){__assign$8=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$8.apply(this,arguments)};var GetAssetInfo=createPlugin$1({protocol:"COMPOUND_V3",type:"GETTER",method:"getAssetInfoByAddress",description:"This function returns asset information of a specific asset.",supportedContracts:cometList,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{asset:new FctAddress({destination:"erc20",options:depositAssets.filter(function(token){return token.chainId===Number(chainId)}).map(function(asset){return __assign$8(__assign$8({},asset),{value:asset.address})})})}},output:{offset:new FctValue({innerIndex:0}),asset:new FctAddress({innerIndex:1}),priceFeed:new FctAddress({innerIndex:2}),scale:new FctValue({innerIndex:3}),borrowCollateralFactor:new FctValue({innerIndex:4}),liquidateCollateralFactor:new FctValue({innerIndex:5}),liquidationFactor:new FctValue({innerIndex:6}),supplyCap:new FctValue({innerIndex:7})}}}});var GetPrice=createPlugin$1({protocol:"COMPOUND_V3",type:"GETTER",method:"getPrice",description:"This function returns the price of an asset in USD with 8 decimal places. Requires Chainlink Price Feed address",supportedContracts:cometList,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{priceFeed:new FctAddress({})}},output:{price:new FctValue({innerIndex:0})}}}});var IsBorrowCollateralized=createPlugin$1({protocol:"COMPOUND_V3",type:"GETTER",method:"isBorrowCollateralized",description:"Function returns the current balance of a collateral asset for a specified account in the protocol.",supportedContracts:cometList,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{account:new FctAddress({})}},output:{hasEnoughLiquidity:new FctBoolean({innerIndex:0})}}}});var actions$h={Supply:Supply,SupplyFrom:SupplyFrom,SupplyTo:SupplyTo,Withdraw:Withdraw$4,WithdrawFrom:WithdrawFrom,WithdrawTo:WithdrawTo};var getters$g={CollateralBalanceOf:CollateralBalanceOf,IsBorrowCollateralized:IsBorrowCollateralized,AccountData:AccountData,BorrowBalanceOf:BorrowBalanceOf,GetAssetInfo:GetAssetInfo,GetPrice:GetPrice};var CompoundV3={actions:actions$h,getters:getters$g};var __awaiter$C=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$C=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var operatorOptions$2=[{name:"ADD",value:"+"},{name:"SUB",value:"-"},{name:"MUL",value:"*"},{name:"DIV",value:"/"},{name:"POW",value:"**"},{name:"MOD",value:"%"},{name:"ADD_DECIMALS",value:"*(10**X)"},{name:"SUB_DECIMALS",value:"/(10**X)"}];var sameDecimalsOperators=["+","-"];var zeroDecimalsOperators=["*","/","**","%"];var floatingDecimalsOperators=["*(10**X)","/(10**X)"];var Compute=createPlugin$1({protocol:"COMPUTED_VARIABLE",type:"COMPUTED_VARIABLE",method:"compute",name:"compute",getParams:function(){return{input:{methodParams:{id:new FctString({readonly:true}),value1:new FctValue({destination:"wei_amount"}),operator1:new FctString({options:operatorOptions$2,mode:"INPUT"}),value2:new FctValue({destination:"wei_amount"}),operator2:new FctString({options:operatorOptions$2,required:false,mode:"INPUT"}),value3:new FctValue({destination:"wei_amount",required:false}),operator3:new FctString({options:operatorOptions$2,required:false,mode:"INPUT"}),value4:new FctValue({destination:"wei_amount",required:false})}},output:{result:new FctValue({innerIndex:0})}}},calculateValuesOnUserInput:function(_a){var input=_a.input,output=_a.output;var getParamsAsync=function(){return __awaiter$C(void 0,void 0,void 0,function(){var error,params,setAndValidateParams,initDecimals,i,labelIndex,valueLabel,operatorLabel;return __generator$C(this,function(_a){error="";params={methodParams:{}};setAndValidateParams=function(fromIndex){if(!fromIndex)return;var decimals=input.methodParams.value1.decimals||0;for(var i=1;i<=4;i++){var labelIndex=String(i);var prevValueLabel="value".concat(String(i-1));var prevOperatorLabel="operator".concat(String(i-1));var valueLabel="value".concat(labelIndex);var operatorLabel="operator".concat(labelIndex);if(i<=fromIndex){input.methodParams[valueLabel].hidden=false;if(operatorLabel!=="operator4"){input.methodParams[operatorLabel].hidden=false}if(prevValueLabel==="value0"||prevOperatorLabel==="operator0"){params.methodParams[valueLabel]=input.methodParams[valueLabel].value;params.methodParams[operatorLabel]=input.methodParams[operatorLabel].value;continue}var prevValueParam=input.methodParams[prevValueLabel];var prevOperatorValue=input.methodParams[prevOperatorLabel].value;var newValueParam=input.methodParams[valueLabel];if(prevOperatorValue&&!isVariable(prevOperatorValue)&&sameDecimalsOperators.includes(prevOperatorValue)){var valueDecimals=prevValueParam.decimals||decimals||0;newValueParam.decimals=valueDecimals;output.result.decimals=valueDecimals;decimals=valueDecimals}if(prevOperatorValue&&!isVariable(prevOperatorValue)&&zeroDecimalsOperators.includes(prevOperatorValue)){newValueParam.decimals=0;if(prevOperatorValue==="**"&&newValueParam.value&&!isVariable(newValueParam.value)){decimals=decimals*Number(newValueParam.value);output.result.decimals=decimals}}if(prevOperatorValue&&!isVariable(prevOperatorValue)&&floatingDecimalsOperators.includes(prevOperatorValue)){if(prevOperatorValue==="*(10**X)"){decimals=Number(prevValueParam.decimals||decimals||0)+Number(newValueParam.value)}else{decimals=Number(prevValueParam.decimals||decimals||0)-Number(newValueParam.value)}if(decimals<0||decimals>64){error+="".concat(error?"\n":"").concat(valueLabel," wrong decimals amount you have ").concat(decimals," but result should be more than 0 and lesss than 64");newValueParam.value=undefined;decimals=0;continue}newValueParam.decimals=0;output.result.decimals=decimals}}else{input.methodParams[valueLabel].hidden=true;input.methodParams[valueLabel].value=undefined;if(operatorLabel!=="operator4"){input.methodParams[operatorLabel].hidden=true;input.methodParams[operatorLabel].value=undefined}}params.methodParams[valueLabel]=input.methodParams[valueLabel].value;if(operatorLabel!=="operator4"){params.methodParams[operatorLabel]=input.methodParams[operatorLabel].value}}};initDecimals=input.methodParams.value1.decimals||0;output.result.decimals=initDecimals;for(i=1;i<=4;i++){labelIndex=String(i);valueLabel="value".concat(labelIndex);operatorLabel=labelIndex!=="4"?"operator".concat(labelIndex):undefined;if(!input.methodParams[valueLabel].value||operatorLabel&&!input.methodParams[operatorLabel].value){setAndValidateParams(i);break}if(i===4){setAndValidateParams(i)}}return[2,{params:params,error:Boolean(error)?error:undefined}]})})};return{get:getParamsAsync,depParamKeys:["methodParams.value1","methodParams.operator1","methodParams.value2","methodParams.operator2","methodParams.value3","methodParams.operator3","methodParams.value4"]}},onChange:function(_a){var input=_a.input,output=_a.output;var _b=input.methodParams,id=_b.id,value1=_b.value1,operator1=_b.operator1,value2=_b.value2,operator2=_b.operator2,value3=_b.value3,operator3=_b.operator3,value4=_b.value4;output.result.set({value:{id:id.value,type:"computed",value1:value1.value||"",operator1:operator1.value||"",value2:value2.value||"",operator2:operator2.value||"",value3:value3.value||"",operator3:operator3.value||"",value4:value4.value||"",overflowProtection:true}})}});var __awaiter$B=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$B=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var operatorOptions$1=[{name:"HASH",value:"keccak256"}];var ComputeHash=createPlugin$1({protocol:"COMPUTED_VARIABLE",type:"COMPUTED_VARIABLE",method:"compute",name:"computeHash",getParams:function(){return{input:{methodParams:{id:new FctString({readonly:true}),value1:new FctAddress({}),operator1:new FctString({value:"keccak256",options:operatorOptions$1,mode:"INPUT"}),value2:new FctAddress({required:false}),operator2:new FctString({options:operatorOptions$1,required:false,mode:"INPUT"}),value3:new FctAddress({required:false}),operator3:new FctString({options:operatorOptions$1,required:false,mode:"INPUT"}),value4:new FctAddress({required:false})}},output:{result:new FctValue({innerIndex:0})}}},calculateValuesOnUserInput:function(_a){var input=_a.input;var getParamsAsync=function(){return __awaiter$B(void 0,void 0,void 0,function(){var error,params,setAndValidateParams,i,labelIndex,valueLabel,operatorLabel;return __generator$B(this,function(_a){error="";params={methodParams:{}};setAndValidateParams=function(fromIndex){if(!fromIndex)return;for(var i=1;i<=4;i++){var labelIndex=String(i);var prevValueLabel="value".concat(String(i-1));var prevOperatorLabel="operator".concat(String(i-1));var valueLabel="value".concat(labelIndex);var operatorLabel="operator".concat(labelIndex);if(i<=fromIndex){input.methodParams[valueLabel].hidden=false;if(operatorLabel!=="operator4"){input.methodParams[operatorLabel].hidden=false}if(prevValueLabel==="value0"||prevOperatorLabel==="operator0"){params.methodParams[valueLabel]=input.methodParams[valueLabel].value;params.methodParams[operatorLabel]=input.methodParams[operatorLabel].value;continue}}else{input.methodParams[valueLabel].hidden=true;input.methodParams[valueLabel].value=undefined;if(operatorLabel!=="operator4"){input.methodParams[operatorLabel].hidden=true;input.methodParams[operatorLabel].value=undefined}}params.methodParams[valueLabel]=input.methodParams[valueLabel].value;if(operatorLabel!=="operator4"){params.methodParams[operatorLabel]=input.methodParams[operatorLabel].value}}};for(i=1;i<=4;i++){labelIndex=String(i);valueLabel="value".concat(labelIndex);operatorLabel=labelIndex!=="4"?"operator".concat(labelIndex):undefined;if(!input.methodParams[valueLabel].value||operatorLabel&&!input.methodParams[operatorLabel].value){setAndValidateParams(i);break}if(i===4){setAndValidateParams(i)}}return[2,{params:params,error:Boolean(error)?error:undefined}]})})};return{get:getParamsAsync,depParamKeys:["methodParams.value1","methodParams.operator1","methodParams.value2","methodParams.operator2","methodParams.value3","methodParams.operator3","methodParams.value4"]}},onChange:function(_a){var input=_a.input,output=_a.output;var _b=input.methodParams,id=_b.id,value1=_b.value1,operator1=_b.operator1,value2=_b.value2,operator2=_b.operator2,value3=_b.value3,operator3=_b.operator3,value4=_b.value4;output.result.set({value:{id:id.value,type:"computed",value1:value1.value||"",operator1:operator1.value||"",value2:value2.value||"",operator2:operator2.value||"",value3:value3.value||"",operator3:operator3.value||"",value4:value4.value||"",overflowProtection:true}})}});var ComputedVariable={getters:{Compute:Compute,ComputeHash:ComputeHash}};var __awaiter$A=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$A=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var AddLiquidity=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"add_liquidity",name:"addLiquidity",description:"Deposit coins into the pool",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"curve_pool",options:supportedPools.filter(function(pool){return pool.chainId===Number(chainId)})}),poolLPToken:new FctAddress({destination:"curve_pool",readonly:true}),poolGaugeToken:new FctAddress({destination:"curve_gauge",readonly:true}),value:new FctValue({readonly:true,required:false}),amount1:new FctValue({}),amount2:new FctValue({}),amount3:new FctValue({}),amount4:new FctValue({}),methodParams:{amounts:new FctValueListN({readonly:true}),minMintAmount:new FctValue({destination:"wei_amount",required:false,decimals:18})}},output:{}}},initParams:{methodParams:{minMintAmount:"0"}},overrideSetMethodParams:function(_a){var input=_a.input;return function(params){var _a;Object.keys(input.methodParams).forEach(function(key,i){var paramKey=key;input.methodParams[paramKey].value=params[i]});(_a=input.methodParams.amounts.value)===null||_a===void 0?void 0:_a.forEach(function(value,i){input["amount".concat(i)].value=value})}},calculateValuesOnUserInput:function(_a){var input=_a.input;var to=input.to,methodParams=input.methodParams,poolLPToken=input.poolLPToken,poolGaugeToken=input.poolGaugeToken;var getParams=function(){return __awaiter$A(void 0,void 0,void 0,function(){var defaultReturn,pool,i,label;return __generator$A(this,function(_a){defaultReturn={poolLPToken:undefined,poolGaugeToken:undefined,value:undefined,amount1:undefined,amount2:undefined,amount3:undefined,amount4:undefined,methodParams:{amounts:undefined,minMintAmount:"0"}};if(!to.value||typeof to.value!=="string"){return[2,{params:defaultReturn,error:undefined}]}pool=to.options.find(function(p){return p.address===to.value});if(!pool)return[2,{params:defaultReturn,error:undefined}];methodParams.amounts.value=[];poolLPToken.value=pool.lpTokenAddress;poolLPToken.decimals=18;poolLPToken.label="Curve LP ".concat(pool.symbol);poolGaugeToken.value=pool.gaugeAddress;poolGaugeToken.decimals=18;poolGaugeToken.label="Curve Gauge ".concat(pool.symbol);pool.coins.forEach(function(coin,index){var label="amount".concat(index+1);if(!input[label])return;input[label].decimals=Number(coin.decimals);input[label].label=coin.symbol;if(!methodParams.amounts.value)return;input[label].hidden=false;input[label].readonly=false;input[label].required=true});for(i=1;i<5;i++){if(i<=pool.coins.length)continue;label="amount".concat(i);if(!input[label])continue;input[label].hidden=true;input[label].readonly=true;input[label].required=false;input[label].decimals=0}if(pool.assetTypeName==="eth"&&pool.coins[0].symbol==="ETH"){return[2,{params:{value:input.amount1.value||"0",receiveLPToken:pool.lpTokenAddress,receivedGaugeToken:pool.gaugeAddress,methodParams:{amounts:methodParams.amounts.value}},error:undefined}]}return[2,{params:{value:"0",poolLPToken:pool.lpTokenAddress,poolGaugeToken:pool.gaugeAddress,methodParams:{amounts:methodParams.amounts.value}},error:undefined}]})})};return{get:getParams,depParamKeys:["to","amount1","amount2","amount3","amount4"]}},requiredApprovals:function(params){var pool=supportedPools.find(function(p){return p.address===params.to.value});if(!pool)return[];if(pool.assetTypeName==="eth"&&pool.coins[0].symbol==="ETH"){if(!pool.coins[1])return[];if(typeof(params===null||params===void 0?void 0:params.amount2.value)==="string"&&BigNumber$1.from(params===null||params===void 0?void 0:params.amount2.value).lte("0"))return[];return[{to:pool.coins[1].address,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.amount2.value},method:"approve",protocol:"ERC20"}]}var approvals=[];pool.coins.forEach(function(coin,index){var label="amount".concat(index+1);if(!params[label])return;if(typeof params[label].value==="string"&&BigNumber$1.from(params[label].value).lte("0"))return;approvals.push({to:coin.address,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params[label].value},method:"approve",protocol:"ERC20"})});return approvals},getSubscribtions:function(_a){return[{callback:function(params){if(!params)return;var input=params;var setAmount=function(amountNumber){var amountsValue=input.methodParams.amounts.value||[];var amountLabel="amount".concat(amountNumber);var inputAmount=input[amountLabel];var amountIndex=Number(amountNumber)-1;if(inputAmount.hidden){var amounts=amountsValue.slice(0,amountIndex);input.methodParams.amounts.setQuiet({value:amounts});return}amountsValue[amountIndex]=inputAmount.value;input.methodParams.amounts.setQuiet({value:amountsValue});if(amountNumber!=="1")return;if(params.amount1.label==="ETH"){params.value.setQuiet({value:inputAmount.value});return}params.value.setQuiet({value:"0"});return};setAmount("1");setAmount("2");setAmount("3");setAmount("4");return},id:"set_amounts_array"}]},assetFlow:function(params,chainId,walletAddress,vaultAddress,provider,method){return __awaiter$A(this,void 0,void 0,function(){var to,pool,toSpend,lpTokenAddress,toReceive,PoolContract,lpTokenAmount;return __generator$A(this,function(_a){switch(_a.label){case 0:to=params.to;pool=to.options.find(function(p){return p.address===to.value});if(!pool||!to.value||!vaultAddress)return[2,[]];if(typeof to.value!=="string")return[2,[]];toSpend=[];pool.coins.forEach(function(coin,index){var label="amount".concat(index+1);if(!params[label])return;if(typeof params[label].value==="string"&&BigNumber$1.from(params[label].value).lte("0"))return;toSpend.push({token:coin.address,amount:params[label].value})});lpTokenAddress=getLPTokenFromPool(chainId,to.value);toReceive=[];if(!lpTokenAddress)return[3,2];PoolContract=new Contract(to.value,["function calc_token_amount(uint256[".concat(pool.coins.length,"] amounts, bool deposit) external view returns(uint256)")],provider);return[4,PoolContract.calc_token_amount(toSpend.map(function(s){return s.amount}),true)];case 1:lpTokenAmount=_a.sent();toReceive.push({token:lpTokenAddress,amount:lpTokenAmount});_a.label=2;case 2:return[2,[{address:vaultAddress,toSpend:toSpend,toReceive:toReceive}]]}})})}});var CreateLock=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"create_lock",name:"createCurveTokenLock",description:"Deposit CRV into the contract and create a new lock.",supportedContracts:votingEscrowContract,getParams:function(){return{input:{to:new FctAddress({destination:"curve_voting_escrow",options:votingEscrowContract}),methodParams:{value:new FctValue({destination:"wei_amount",decimals:18}),unlock_time:new FctTimestamp({})}},output:{}}},requiredApprovals:function(params){return[{to:"0xD533a949740bb3306d119CC777fa900bA034cd52",params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.value.value},method:"approve",protocol:"ERC20"}]}});var __awaiter$z=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$z=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var ExchangeOnPool=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"exchange",name:"exchangeOnPool",description:"Exchange tokens on Curve Finance using a pool address",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"curve_pool",options:supportedPools.filter(function(pool){return pool.chainId===Number(chainId)})}),poolLPToken:new FctAddress({destination:"curve_pool",readonly:true}),poolGaugeToken:new FctAddress({destination:"curve_gauge",readonly:true}),value:new FctValue({readonly:true,required:false}),methodParams:{index1:new FctInteger128({description:"Index value for the coin to send",destination:"index"}),index2:new FctInteger128({description:"Index value of the coin to receive",destination:"index"}),amount:new FctValue({destination:"wei_amount"}),amountMinReceived:new FctValue({destination:"wei_amount",required:false})}},output:{amountReceived:new FctValue({destination:"wei_amount",innerIndex:0})}}},initParams:{methodParams:{amountMinReceived:"0"}},calculateValuesOnUserInput:function(_a){var input=_a.input,output=_a.output,chainId=_a.chainId;var poolLPToken=input.poolLPToken,poolGaugeToken=input.poolGaugeToken;var getParamsAsync=function(){return __awaiter$z(void 0,void 0,void 0,function(){var address,index1,index2,pool;return __generator$z(this,function(_a){address=input.to.value;index1=input.methodParams.index1;index2=input.methodParams.index2;if(!address){index1.options=[];index2.options=[];return[2,{params:{poolLPToken:undefined,poolGaugeToken:undefined,value:undefined},error:undefined}]}index1.options=getSupportedIndexes(address,chainId);index2.options=getSupportedIndexes(address,chainId);pool=input.to.options.find(function(p){return p.address===address});if(!pool)return[2,{params:{value:undefined},error:undefined}];if(pool.implementation==="tricrypto-1"){index1._fctType="uint256";index2._fctType="uint256"}else{index1._fctType="int128";index2._fctType="int128"}if(index1.value){input.methodParams.amount.decimals=Number(pool.coins[Number(index1.value)].decimals)}if(index2.value){input.methodParams.amountMinReceived.decimals=Number(pool.coins[Number(index2.value)].decimals);output.amountReceived.decimals=Number(pool.coins[Number(index2.value)].decimals)}poolLPToken.value=pool.lpTokenAddress;poolLPToken.decimals=18;poolLPToken.label="Curve LP ".concat(pool.symbol);poolGaugeToken.value=pool.gaugeAddress;poolGaugeToken.decimals=18;poolGaugeToken.label="Curve Gauge ".concat(pool.symbol);if(pool.assetTypeName==="eth"){input.value.required=true;return[2,{params:{poolLPToken:pool.lpTokenAddress,poolGaugeToken:pool.gaugeAddress,value:input.methodParams.amount.value},error:undefined}]}input.value.required=false;return[2,{params:{poolLPToken:pool.lpTokenAddress,poolGaugeToken:pool.gaugeAddress,value:undefined},error:undefined}]})})};return{get:getParamsAsync,depParamKeys:["to","methodParams.index1","methodParams.index2","methodParams.amount"]}},requiredApprovals:function(params,chainId){if(params.methodParams.index1.value===ETH_ADDRESS)return[];var getTokenAddress=function(){if(!(params===null||params===void 0?void 0:params.to.value)||typeof(params===null||params===void 0?void 0:params.to.value)!=="string"||!(params===null||params===void 0?void 0:params.methodParams.index1.value)||typeof(params===null||params===void 0?void 0:params.methodParams.index1.value)!=="string")return undefined;var coins=getSupportedIndexes(params===null||params===void 0?void 0:params.to.value,chainId);if(!coins)return undefined;return coins[parseInt(params===null||params===void 0?void 0:params.methodParams.index1.value)].address};return[{to:getTokenAddress(),params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amount.value},method:"approve",protocol:"ERC20"}]}});var IncreaseAmount=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"increase_amount",name:"increaseCurveTokenLockAmount",description:"Deposit additional CRV into an existing lock.",supportedContracts:votingEscrowContract,getParams:function(){return{input:{to:new FctAddress({destination:"curve_voting_escrow",options:votingEscrowContract}),methodParams:{value:new FctValue({destination:"wei_amount",decimals:18})}},output:{}}},requiredApprovals:function(params){return[{to:"0xD533a949740bb3306d119CC777fa900bA034cd52",params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.value.value},method:"approve",protocol:"ERC20"}]}});var IncreaseUnlockTime=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"increase_unlock_time",name:"increaseCurveTokenLock",description:"Extend the unlock time on a lock that already exists.",supportedContracts:votingEscrowContract,getParams:function(){return{input:{to:new FctAddress({destination:"curve_voting_escrow",options:votingEscrowContract}),methodParams:{unlock_time:new FctTimestamp({})}},output:{}}}});var __awaiter$y=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$y=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var RemoveLiquidityOneCoin=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"remove_liquidity_one_coin",name:"removeLiquidityOneCoin",description:"Withdraw a single asset from the pool.",supportedContracts:supportedPools,getParams:function(){return{input:{to:new FctAddress({destination:"curve_pool",options:supportedPools}),methodParams:{amount:new FctValue({destination:"wei_amount"}),indexOfCoin:new FctInteger128({}),minAmount:new FctValue({destination:"wei_amount",required:false})}},output:{amountReceived:new FctValue({innerIndex:0,destination:"wei_amount"})}}},calculateValuesOnUserInput:function(_a){var input=_a.input,chainId=_a.chainId;var getParamsAsync=function(){return __awaiter$y(void 0,void 0,void 0,function(){var address,indexOfCoin;return __generator$y(this,function(_a){address=input===null||input===void 0?void 0:input.to.value;indexOfCoin=input===null||input===void 0?void 0:input.methodParams.indexOfCoin;if(!address){indexOfCoin.options=[];return[2,{params:{},error:undefined}]}if(indexOfCoin)indexOfCoin.options=getSupportedIndexes(address,chainId);return[2,{params:{},error:undefined}]})})};return{get:getParamsAsync,depParamKeys:["to"]}},initParams:{methodParams:{minAmount:"0"}}});var Stake=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"deposit",name:"deposit_LP_tokens",description:"Deposit LP tokens into the gauge.",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"curve_gauge",options:supportedGauges.filter(function(pool){return pool.chainId===Number(chainId)})}),methodParams:{amount:new FctValue({destination:"wei_amount",decimals:18}),receiver:new FctAddress({})}},output:{}}},requiredApprovals:function(params,chainId){var toAddress=(params===null||params===void 0?void 0:params.to.value)&&typeof(params===null||params===void 0?void 0:params.to.value)==="string"?getLPTokenFromGauge(chainId,params===null||params===void 0?void 0:params.to.value):undefined;if(!toAddress)return[];return[{to:toAddress,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amount.value},method:"approve",protocol:"ERC20"}]}});var Unstake=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"withdraw",name:"withdraw_LP_tokens",description:"Withdraw LP tokens from the gauge.",supportedContracts:supportedGauges,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"curve_gauge",options:supportedGauges.filter(function(pool){return pool.chainId===Number(chainId)})}),methodParams:{amount:new FctValue({destination:"wei_amount",decimals:18})}},output:{}}}});var Withdraw$3=createPlugin$1({protocol:"CURVE",type:"ACTION",method:"withdraw",name:"withdrawCurveToken",description:"Withdraw deposited CRV tokens once a lock has expired.",supportedContracts:votingEscrowContract,getParams:function(){return{input:{to:new FctAddress({destination:"curve_voting_escrow",options:votingEscrowContract}),methodParams:{}},output:{}}}});var __awaiter$x=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$x=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var CalculateTokenAmount=createPlugin$1({protocol:"CURVE",type:"GETTER",method:"calc_token_amount",description:"Estimate the amount of LP tokens minted or burned based on a deposit or withdrawal.",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"curve_pool",options:supportedPools.filter(function(pool){return pool.chainId===Number(chainId)})}),amount1:new FctValue({}),amount2:new FctValue({}),amount3:new FctValue({}),amount4:new FctValue({}),methodParams:{amounts:new FctValueListN({}),isDeposit:new FctBoolean({})}},output:{expectedAmount:new FctValue18({innerIndex:0,destination:"wei_amount"})}}},calculateValuesOnUserInput:function(_a){var input=_a.input;var to=input.to,methodParams=input.methodParams;var getParams=function(){return __awaiter$x(void 0,void 0,void 0,function(){var defaultReturn,pool,i,label;return __generator$x(this,function(_a){defaultReturn={amount1:undefined,amount2:undefined,amount3:undefined,amount4:undefined,methodParams:{amounts:undefined}};if(!to.value||typeof to.value!=="string"){return[2,{params:defaultReturn,error:undefined}]}pool=to.options.find(function(p){return p.address===to.value});if(!pool)return[2,{params:defaultReturn,error:undefined}];methodParams.amounts.value=[];pool.coins.forEach(function(coin,index){var label="amount".concat(index+1);if(!input[label])return;input[label].decimals=Number(coin.decimals);input[label].label=coin.symbol;if(!methodParams.amounts.value)return;input[label].hidden=false;input[label].readonly=false;input[label].required=true;if(input[label].value&&typeof input[label].value==="string"){methodParams.amounts.value.push(input[label].value)}});for(i=1;i<5;i++){if(i<=pool.coins.length)continue;label="amount".concat(i);if(!input[label])continue;input[label].hidden=true;input[label].readonly=true;input[label].required=false;input[label].decimals=0}return[2,{params:{methodParams:{amounts:methodParams.amounts.value}},error:undefined}]})})};return{get:getParams,depParamKeys:["to","amount1","amount2","amount3","amount4"]}},getSubscribtions:function(_a){return[{callback:function(params){if(!params)return;var input=params;var setAmount=function(amountNumber){var amountsValue=input.methodParams.amounts.value||[];var amountLabel="amount".concat(amountNumber);var inputAmount=input[amountLabel];var amountIndex=Number(amountNumber)-1;if(inputAmount.hidden){var amounts=amountsValue.slice(0,amountIndex);input.methodParams.amounts.setQuiet({value:amounts});return}amountsValue[amountIndex]=inputAmount.value||"0";input.methodParams.amounts.setQuiet({value:amountsValue})};setAmount("1");setAmount("2");setAmount("3");setAmount("4");return},id:"set_amounts_array"}]}});var GetBestRate=createPlugin$1({protocol:"CURVE",type:"GETTER",method:"get_best_rate",description:"Get the best rate for a token exchange on Curve Finance",supportedContracts:[{address:"0x55B916Ce078eA594c10a874ba67eCc3d62e29822",chainId:1}],getParams:function(){return{input:{to:new FctAddress({destination:"curve_exchange"}),methodParams:{from:new FctAddress({destination:"erc20"}),to:new FctAddress({destination:"erc20"}),amount:new FctValue({destination:"wei_amount"})}},output:{poolAddress:new FctAddress({innerIndex:0,destination:"curve_pool"}),expectedAmount:new FctValue({innerIndex:1,destination:"wei_amount"})}}}});var __awaiter$w=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$w=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var GetExchangeAmount=createPlugin$1({protocol:"CURVE",type:"GETTER",method:"get_exchange_amount",description:"Get the amount of tokens received for a token exchange on Curve Finance",supportedContracts:[{address:"0x55B916Ce078eA594c10a874ba67eCc3d62e29822",chainId:1}],getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"curve_exchange"}),methodParams:{pool:new FctAddress({destination:"curve_pool",options:supportedPools.filter(function(pool){return pool.chainId===Number(chainId)})}),from:new FctAddress({destination:"erc20"}),to:new FctAddress({destination:"erc20"}),amount:new FctValue({destination:"wei_amount"})}},output:{toBeReceivedAmount:new FctValue({innerIndex:0,destination:"wei_amount"})}}},initParams:{to:"0x55B916Ce078eA594c10a874ba67eCc3d62e29822"},calculateValuesOnUserInput:function(_a){var input=_a.input,chainId=_a.chainId;var getParamsAsync=function(){return __awaiter$w(void 0,void 0,void 0,function(){var address,from,to;return __generator$w(this,function(_a){address=input.methodParams.pool.value;from=input.methodParams.from;to=input.methodParams.to;if(!address){from.options=[];to.options=[];return[2,{params:{},error:undefined}]}from.options=getSupportedTokens$1(address,chainId);to.options=getSupportedTokens$1(address,chainId);return[2,{params:{},error:undefined}]})})};return{get:getParamsAsync,depParamKeys:["methodParams.pool"]}}});var Locked=createPlugin$1({protocol:"CURVE",type:"GETTER",method:"locked",name:"lockedCurveTokenAmount",description:"Get information about the current CRV lock for an address.",supportedContracts:votingEscrowContract,getParams:function(){return{input:{to:new FctAddress({destination:"curve_voting_escrow",options:votingEscrowContract}),methodParams:{user:new FctAddress({})}},output:{amount:new FctValue18({destination:"wei_amount",innerIndex:0}),end:new FctTimestamp({innerIndex:1})}}}});var actions$g={AddLiquidity:AddLiquidity,RemoveLiquidityOneCoin:RemoveLiquidityOneCoin,Stake:Stake,Unstake:Unstake,CreateLock:CreateLock,IncreaseAmount:IncreaseAmount,IncreaseUnlockTime:IncreaseUnlockTime,Withdraw:Withdraw$3,ExchangeOnPool:ExchangeOnPool};var getters$f={GetExchangeAmount:GetExchangeAmount,CalculateTokenAmount:CalculateTokenAmount,GetBestRate:GetBestRate,Locked:Locked};var Curve={actions:actions$g,getters:getters$f};var Approve$1=createPlugin$1({protocol:"ERC20",type:"ACTION",method:"approve",falseMeansFail:true,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{spender:new FctAddress({}),amount:new FctValue({destination:"wei_amount"})}},output:{}}}});var SimpleTransfer=createPlugin$1({protocol:"ERC20",type:"ACTION",method:"transfer",name:"simpleTransfer",falseMeansFail:true,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{from:new FctAddress({}),to:new FctAddress({}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},overrideSetMethodParams:function(_a){var input=_a.input;return function(params,method){if(method==="transferFrom"){Object.keys(input.methodParams).forEach(function(key,i){var paramKey=key;input.methodParams[paramKey].value=params[i]})}if(method==="transfer"){input.methodParams.to.value=params[0];input.methodParams.amount.value=params[1]}}},getSubscribtions:function(_a){var setMethod=_a.setMethod,vaultAddress=_a.vaultAddress;return[{callback:function(params){if(!params)return;var from=params.methodParams.from;var address=from===null||from===void 0?void 0:from.value;if(address&&vaultAddress&&vaultAddress.toLowerCase()===address.toLowerCase()){from.virtual=true;setMethod("transfer");return}from.virtual=false;setMethod("transferFrom");return},id:"set_method_name"}]},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,amount=_a.amount,from=_a.from;if(!vaultAddress)return[];var address=from.value;if(vaultAddress&&vaultAddress.toLowerCase()===address.toLowerCase())return[];var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:to.value,from:from.value,params:{spender:vaultAddress,amount:value},method:"approve",protocol:"ERC20"}]},assetFlow:function(params){var to=params.to,_a=params.methodParams,amount=_a.amount,from=_a.from,receiver=_a.to;if(!from.value||!to.value||!amount.value||!receiver.value)return[];if(typeof from.value!=="string"||typeof receiver.value!=="string")return[];return[{address:from.value,toSpend:[{token:to.value,amount:amount.value}],toReceive:[]},{address:receiver.value,toSpend:[],toReceive:[{token:to.value,amount:amount.value}]}]}});var Transfer=createPlugin$1({protocol:"ERC20",type:"ACTION",method:"transfer",falseMeansFail:true,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{recipient:new FctAddress({}),amount:new FctValue({destination:"wei_amount"})}},output:{}}}});var TransferFrom$1=createPlugin$1({protocol:"ERC20",type:"ACTION",method:"transferFrom",falseMeansFail:true,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{from:new FctAddress({}),to:new FctAddress({}),amount:new FctValue({destination:"wei_amount"})}},output:{}}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var to=params.to,_a=params.methodParams,amount=_a.amount,from=_a.from;if(!vaultAddress)return[];var address=from.value;if(vaultAddress&&vaultAddress.toLowerCase()===address.toLowerCase())return[];var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:to.value,from:from.value,params:{spender:vaultAddress,amount:value},method:"approve",protocol:"ERC20"}]}});var Allowance=createPlugin$1({protocol:"ERC20",type:"GETTER",method:"allowance",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{owner:new FctAddress({}),spender:new FctAddress({})}},output:{allowance:new FctValue({destination:"wei_amount",innerIndex:0})}}}});var BalanceOf$2=createPlugin$1({protocol:"ERC20",type:"GETTER",method:"balanceOf",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{owner:new FctAddress({})}},output:{balance:new FctValue({destination:"wei_amount",innerIndex:0})}}}});var Decimals=createPlugin$1({protocol:"ERC20",type:"GETTER",method:"decimals",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{}},output:{decimals:new FctDecimals({innerIndex:0})}}}});var Name$1=createPlugin$1({protocol:"ERC20",type:"GETTER",method:"name",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{}},output:{name:new FctString({innerIndex:0})}}}});var Symbol$2=createPlugin$1({protocol:"ERC20",type:"GETTER",method:"symbol",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{}},output:{symbol:new FctString({innerIndex:0})}}}});var TotalSupply$1=createPlugin$1({protocol:"ERC20",type:"GETTER",method:"totalSupply",getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),methodParams:{}},output:{totalSupply:new FctValue({destination:"wei_amount",innerIndex:0})}}}});var actions$f={Transfer:Transfer,Approve:Approve$1,TransferFrom:TransferFrom$1,SimpleTransfer:SimpleTransfer};var getters$e={Allowance:Allowance,BalanceOf:BalanceOf$2,Decimals:Decimals,Name:Name$1,Symbol:Symbol$2,TotalSupply:TotalSupply$1};var ERC20={actions:actions$f,getters:getters$e};var Approve=createPlugin$1({protocol:"ERC721",type:"ACTION",method:"approve",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{to:new FctAddress({}),tokenId:new FctValue({})}},output:{}}}});var SafeTransferFrom$1=createPlugin$1({protocol:"ERC721",type:"ACTION",method:"safeTransferFrom",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{from:new FctAddress({}),to:new FctAddress({}),tokenId:new FctValue({})}},output:{}}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var to=params.to,tokenId=params.methodParams.tokenId;if(!vaultAddress)return[];var from=params.methodParams.from.value;if(!vaultAddress||typeof from==="string"&&vaultAddress.toLowerCase()===from.toLowerCase())return[];return[{to:to.value,from:from,params:{to:vaultAddress,tokenId:tokenId.value},method:"approve",protocol:"ERC721"}]}});var SetApprovalForAll$1=createPlugin$1({protocol:"ERC721",type:"ACTION",method:"setApprovalForAll",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{operator:new FctAddress({}),_approved:new FctBoolean({})}},output:{}}}});var TransferFrom=createPlugin$1({protocol:"ERC721",type:"ACTION",method:"transferFrom",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{from:new FctAddress({}),to:new FctAddress({}),tokenId:new FctValue({})}},output:{}}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var to=params.to,tokenId=params.methodParams.tokenId;if(!vaultAddress)return[];var from=params.methodParams.from.value;if(!vaultAddress||typeof from==="string"&&vaultAddress.toLowerCase()===from.toLowerCase())return[];return[{to:to.value,from:from,params:{to:vaultAddress,tokenId:tokenId.value},method:"approve",protocol:"ERC721"}]}});var BalanceOf$1=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"balanceOf",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{owner:new FctAddress({})}},output:{balance:new FctValue({destination:"wei_amount",innerIndex:0})}}}});var GetApproved=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"getApproved",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{tokenId:new FctValue({})}},output:{operator:new FctAddress({innerIndex:0})}}}});var IsApprovedForAll$1=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"isApprovedForAll",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{owner:new FctAddress({}),operator:new FctAddress({})}},output:{isApproved:new FctBoolean({innerIndex:0})}}}});var Name=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"name",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{}},output:{undefined:new FctString({innerIndex:0})}}}});var OwnerOf=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"ownerOf",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{tokenId:new FctValue({})}},output:{owner:new FctAddress({innerIndex:0})}}}});var SupportsInterface$2=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"supportsInterface",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{interfaceId:new FctBytes4({})}},output:{isSupports:new FctBoolean({innerIndex:0})}}}});var Symbol$1=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"symbol",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{}},output:{symbol:new FctString({innerIndex:0})}}}});var TokenURI=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"tokenURI",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{tokenId:new FctValue({})}},output:{uri:new FctString({innerIndex:0})}}}});var TotalSupply=createPlugin$1({protocol:"ERC721",type:"GETTER",method:"totalSupply",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc721"}),methodParams:{}},output:{totalSupply:new FctValue({innerIndex:0,destination:"wei_amount"})}}}});var actions$e={Approve:Approve,SafeTransferFrom:SafeTransferFrom$1,SetApprovalForAll:SetApprovalForAll$1,TransferFrom:TransferFrom};var getters$d={TotalSupply:TotalSupply,BalanceOf:BalanceOf$1,GetApproved:GetApproved,IsApprovedForAll:IsApprovedForAll$1,Name:Name,OwnerOf:OwnerOf,SupportsInterface:SupportsInterface$2,Symbol:Symbol$1,TokenURI:TokenURI};var ERC721={actions:actions$e,getters:getters$d};var SafeBatchTransferFrom=createPlugin$1({protocol:"ERC1155",type:"ACTION",method:"safeBatchTransferFrom",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc1155"}),methodParams:{from:new FctAddress({}),to:new FctAddress({}),ids:new FctValueList({}),amounts:new FctValueList({}),data:new FctBytes({readonly:true})}},output:{}}},initParams:{methodParams:{data:"0x"}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var to=params.to,methodParams=params.methodParams;var from=methodParams.from.value;if(!vaultAddress||typeof from==="string"&&vaultAddress.toLowerCase()===from.toLowerCase())return[];return[{to:to.value,from:from,params:{operator:to.value,approved:"true"},method:"setApprovalForAll",protocol:"ERC1155"}]}});var SafeTransferFrom=createPlugin$1({protocol:"ERC1155",type:"ACTION",method:"safeTransferFrom",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc1155"}),methodParams:{from:new FctAddress({}),to:new FctAddress({}),id:new FctValue({}),amount:new FctValue({}),data:new FctBytes({readonly:true})}},output:{}}},initParams:{methodParams:{data:"0x"}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var to=params.to,methodParams=params.methodParams;var from=methodParams.from.value;if(!vaultAddress||typeof from==="string"&&vaultAddress.toLowerCase()===from.toLowerCase())return[];return[{to:to.value,from:from,params:{operator:vaultAddress,approved:"true",ids:[methodParams.id.value]},method:"setApprovalForAll",protocol:"ERC1155"}]}});var SetApprovalForAll=createPlugin$1({protocol:"ERC1155",type:"ACTION",method:"setApprovalForAll",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc1155"}),methodParams:{operator:new FctAddress({}),approved:new FctBoolean({})}},output:{}}}});var BalanceOf=createPlugin$1({protocol:"ERC1155",type:"GETTER",method:"balanceOf",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc1155"}),methodParams:{account:new FctAddress({}),id:new FctValue({})}},output:{balance:new FctValue({destination:"wei_amount",innerIndex:0})}}}});var IsApprovedForAll=createPlugin$1({protocol:"ERC1155",type:"GETTER",method:"isApprovedForAll",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc1155"}),methodParams:{account:new FctAddress({}),operator:new FctAddress({})}},output:{isApproved:new FctBoolean({innerIndex:0})}}}});var SupportsInterface$1=createPlugin$1({protocol:"ERC1155",type:"GETTER",method:"supportsInterface",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc1155"}),methodParams:{interfaceId:new FctBytes4({})}},output:{isSupports:new FctBoolean({innerIndex:0})}}}});var Uri=createPlugin$1({protocol:"ERC1155",type:"GETTER",method:"uri",supportedContracts:undefined,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({destination:"erc1155"}),methodParams:{id:new FctValue({})}},output:{uri:new FctString({innerIndex:0})}}}});var actions$d={SafeBatchTransferFrom:SafeBatchTransferFrom,SafeTransferFrom:SafeTransferFrom,SetApprovalForAll:SetApprovalForAll};var getters$c={BalanceOf:BalanceOf,IsApprovedForAll:IsApprovedForAll,SupportsInterface:SupportsInterface$1,Uri:Uri};var ERC1155={actions:actions$d,getters:getters$c};var fctUniswapContracts=[{chainId:1,address:"0x7501Ac7b420eF83e856dCD432aa5b81F5e65B292"},{chainId:5,address:"0xf0464C50e35f437fa18d19338246106a0f962d97"},{chainId:11155111,address:"0x300C0306F48ddd0b335F092872AC9ab8B4aC8406"}];var method$2={swapExactETHForTokens:"swap <amount> ETH for <X> Tokens",swapExactTokensForETH:"swap <amount> Tokens for <X> ETH",swapETHForExactTokens:"swap <X> ETH for <amount> Tokens",swapTokensForExactETH:"swap <X> Tokens for <amount> ETH",swapExactTokensForTokens:"swap <amount> Tokens for <X> Tokens",swapTokensForExactTokens:"swap <X> Tokens for <amount> Tokens"};var liquidity_method={addLiquidity:"add tokens to the liquidity pool",addLiquidityTokenEth:"add token and eth to the liquidity pool",addLiquidityEthToken:"add eth and token to the liquidity pool"};var ZERO_ADDRESS="0x0000000000000000000000000000000000000000";var __awaiter$v=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$v=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var getAddLiquidityGasLimit=function(_a){return __awaiter$v(void 0,[_a],void 0,function(_b){var isPairExist,addLiquidityGasLimit;var tokenA=_b.tokenA,tokenB=_b.tokenB,chainId=_b.chainId;return __generator$v(this,function(_c){switch(_c.label){case 0:return[4,new Uniswap({chainId:chainId,account:"0xf08fD75cCed9Eb65cff7451291Bf41e91c8457eD"}).isPairExist({token0:tokenA,token1:tokenB})];case 1:isPairExist=_c.sent();addLiquidityGasLimit=gasLimit[chainId].UNISWAP.addLiquidity;return[2,isPairExist?addLiquidityGasLimit:BigNumber$1.from(addLiquidityGasLimit).mul(BigNumber$1.from("10")).toString()]}})})};var __awaiter$u=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$u=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __values$6=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var method$1="addLiquidity_noMinProtection";var SimpleAddLiquidity=createPlugin$1({protocol:"UNISWAP",type:"LIBRARY",method:method$1,description:"Add liquidity on Uniswap",supportedContracts:fctUniswapContracts,toEns:"@lib:uniswap_v2",initParams:{methodParams:{method:liquidity_method.addLiquidity,amountADesired:"0",amountBDesired:"0"}},getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{method:new FctBytes32({messageType:"string",options:Object.keys(liquidity_method).map(function(key){var methodKey=key;return{name:key,value:liquidity_method[methodKey]}})}),tokenA:new FctAddress({destination:"erc20",options:getAllCurrencies({chainId:chainId})}),tokenB:new FctAddress({destination:"erc20",options:getAllCurrencies({chainId:chainId})}),amountADesired:new FctValue({destination:"wei_amount"}),amountBDesired:new FctValue({destination:"wei_amount"})}},output:{amountA:new FctValue({destination:"wei_amount",innerIndex:0}),amountB:new FctValue({destination:"wei_amount",innerIndex:1}),liquidity:new FctValue({destination:"wei_amount",innerIndex:2})}}},getParamsOnCreate:function(_a){return __awaiter$u(void 0,[_a],void 0,function(_b){var _c,amountADesired,amountBDesired,tokenA,tokenB,requiredParamsExact,requiredParamsExact_1,requiredParamsExact_1_1,param,isCurrencyANative,isCurrencyBNative,gasLimit;var e_1,_d;var chainId=_b.chainId,params=_b.params;return __generator$u(this,function(_e){switch(_e.label){case 0:_c=params.methodParams,amountADesired=_c.amountADesired,amountBDesired=_c.amountBDesired,tokenA=_c.tokenA,tokenB=_c.tokenB;requiredParamsExact=[{value:amountADesired.value,key:"amountADesired"},{value:amountBDesired.value,key:"amountBDesired"}];try{for(requiredParamsExact_1=__values$6(requiredParamsExact),requiredParamsExact_1_1=requiredParamsExact_1.next();!requiredParamsExact_1_1.done;requiredParamsExact_1_1=requiredParamsExact_1.next()){param=requiredParamsExact_1_1.value;if(!param.value){console.error("wrong param ".concat(param.key,": ").concat(param.value));return[2]}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(requiredParamsExact_1_1&&!requiredParamsExact_1_1.done&&(_d=requiredParamsExact_1.return))_d.call(requiredParamsExact_1)}finally{if(e_1)throw e_1.error}}isCurrencyANative=false;if(typeof tokenA.value==="string"){isCurrencyANative=getIsNative(tokenA.value);if(isCurrencyANative){params.methodParams.method.set({value:liquidity_method.addLiquidityEthToken});tokenA.set({value:ZERO_ADDRESS})}}isCurrencyBNative=false;if(typeof tokenB.value==="string"){isCurrencyBNative=getIsNative(tokenB.value);if(isCurrencyBNative){params.methodParams.method.set({value:liquidity_method.addLiquidityTokenEth});tokenB.set({value:ZERO_ADDRESS})}}if(amountADesired.isVariable&&!amountBDesired.isVariable){amountBDesired.set({value:maxValue})}if(!amountADesired.isVariable&&amountBDesired.isVariable){amountADesired.set({value:maxValue})}if(!params.methodParams.method.value){params.methodParams.method.set({value:liquidity_method.addLiquidity})}return[4,getAddLiquidityGasLimit({tokenA:tokenA.value,tokenB:tokenB.value,chainId:chainId})];case 1:gasLimit=_e.sent();return[2,{params:params,method:method$1,gasLimit:gasLimit}]}})})},requiredApprovals:function(params,chainId){return[{to:params.methodParams.tokenA.value,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:params===null||params===void 0?void 0:params.methodParams.amountADesired.value},method:"approve",protocol:"ERC20"},{to:params.methodParams.tokenB.value,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:params===null||params===void 0?void 0:params.methodParams.amountBDesired.value},method:"approve",protocol:"ERC20"}].filter(function(item){return typeof item.to==="string"?!getIsNative(item.to):true})}});var __awaiter$t=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$t=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __values$5=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var method="addLiquidityTo_noMinProtection";var SimpleAddLiquidityTo=createPlugin$1({protocol:"UNISWAP",type:"LIBRARY",method:method,description:"Add liquidity on Uniswap with LP tokens recipient address",supportedContracts:fctUniswapContracts,toEns:"@lib:uniswap_v2",initParams:{methodParams:{to:ZERO_ADDRESS,method:liquidity_method.addLiquidity,amountADesired:"0",amountBDesired:"0"}},getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"uniswap_router"}),methodParams:{method:new FctBytes32({messageType:"string",options:Object.keys(liquidity_method).map(function(key){var methodKey=key;return{name:key,value:liquidity_method[methodKey]}})}),tokenA:new FctAddress({destination:"erc20",options:getAllCurrencies({chainId:chainId})}),tokenB:new FctAddress({destination:"erc20",options:getAllCurrencies({chainId:chainId})}),amountADesired:new FctValue({destination:"wei_amount"}),amountBDesired:new FctValue({destination:"wei_amount"}),to:new FctAddress({})}},output:{amountA:new FctValue({destination:"wei_amount",innerIndex:0}),amountB:new FctValue({destination:"wei_amount",innerIndex:1}),liquidity:new FctValue({destination:"wei_amount",innerIndex:2})}}},getParamsOnCreate:function(_a){return __awaiter$t(void 0,[_a],void 0,function(_b){var _c,amountADesired,amountBDesired,tokenA,tokenB,requiredParamsExact,requiredParamsExact_1,requiredParamsExact_1_1,param,isCurrencyANative,isCurrencyBNative,gasLimit;var e_1,_d;var chainId=_b.chainId,params=_b.params;return __generator$t(this,function(_e){switch(_e.label){case 0:_c=params.methodParams,amountADesired=_c.amountADesired,amountBDesired=_c.amountBDesired,tokenA=_c.tokenA,tokenB=_c.tokenB;requiredParamsExact=[{value:amountADesired.value,key:"amountADesired"},{value:amountBDesired.value,key:"amountBDesired"}];try{for(requiredParamsExact_1=__values$5(requiredParamsExact),requiredParamsExact_1_1=requiredParamsExact_1.next();!requiredParamsExact_1_1.done;requiredParamsExact_1_1=requiredParamsExact_1.next()){param=requiredParamsExact_1_1.value;if(!param.value){console.error("wrong param ".concat(param.key,": ").concat(param.value));return[2]}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(requiredParamsExact_1_1&&!requiredParamsExact_1_1.done&&(_d=requiredParamsExact_1.return))_d.call(requiredParamsExact_1)}finally{if(e_1)throw e_1.error}}isCurrencyANative=false;if(typeof tokenA.value==="string"){isCurrencyANative=getIsNative(tokenA.value);if(isCurrencyANative){params.methodParams.method.set({value:liquidity_method.addLiquidityEthToken});tokenA.set({value:ZERO_ADDRESS})}}isCurrencyBNative=false;if(typeof tokenB.value==="string"){isCurrencyBNative=getIsNative(tokenB.value);if(isCurrencyBNative){params.methodParams.method.set({value:liquidity_method.addLiquidityTokenEth});tokenB.set({value:ZERO_ADDRESS})}}if(amountADesired.isVariable&&!amountBDesired.isVariable){amountBDesired.set({value:maxValue})}if(!amountADesired.isVariable&&amountBDesired.isVariable){amountADesired.set({value:maxValue})}if(!params.methodParams.method.value){params.methodParams.method.set({value:liquidity_method.addLiquidity})}return[4,getAddLiquidityGasLimit({tokenA:tokenA.value,tokenB:tokenB.value,chainId:chainId})];case 1:gasLimit=_e.sent();return[2,{params:params,method:method,gasLimit:gasLimit}]}})})},requiredApprovals:function(params,chainId){return[{to:params.methodParams.tokenA.value,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:params===null||params===void 0?void 0:params.methodParams.amountADesired.value},method:"approve",protocol:"ERC20"},{to:params.methodParams.tokenB.value,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:params===null||params===void 0?void 0:params.methodParams.amountBDesired.value},method:"approve",protocol:"ERC20"}].filter(function(item){return typeof item.to==="string"?!getIsNative(item.to):true})}});var __awaiter$s=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$s=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var SwapNoSlippageProtection=createPlugin$1({protocol:"UNISWAP",type:"LIBRARY",method:"swap_noSlippageProtection",supportedContracts:fctUniswapContracts,toEns:"@lib:uniswap_v2",initParams:{isExactIn:"true"},getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),addressIn:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountIn:new FctValue({destination:"wei_amount"}),addressOut:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountOut:new FctValue({destination:"wei_amount"}),isExactIn:new FctBoolean({}),snipperMode:new FctBoolean({}),methodParams:{amount:new FctValue({destination:"wei_amount",readonly:true}),method:new FctBytes32({messageType:"string",options:Object.keys(method$2).map(function(key){var methodKey=key;return{name:key,value:method$2[methodKey]}})}),path:new FctAddressList({destination:"ERC20_List"})}},output:{amountIn:new FctValue({innerIndex:0,destination:"wei_amount"}),amountOut:new FctValue({innerIndex:1,destination:"wei_amount"})}}},overrideSetMethodParams:function(_a){var input=_a.input;return function(params){Object.keys(input.methodParams).forEach(function(key,i){var paramKey=key;input.methodParams[paramKey].value=params[i]});var isExactIn=input.isExactIn.value==="true";if(isExactIn){input.amountIn.value=input.methodParams.amount.value}else{input.amountOut.value=input.methodParams.amount.value}}},calculateValuesOnUserInput:function(_a){var input=_a.input,output=_a.output,provider=_a.provider,chainId=_a.chainId;var getPathParams=function(_a){return __awaiter$s(void 0,[_a],void 0,function(_b){var isSnipperMode,isExactIn,uniswapService,tokenInAddress,tokenOutAddress,defaultReturn,decimalsIn,_c,decimalsOut,_d,amountIn,amountOut,amount,methodName,methodParamValue,path,isSimulationNeeded,res,swapPath,methodName,methodParamValue,e_1;var service=_b.service;return __generator$s(this,function(_e){switch(_e.label){case 0:if(!service)return[2];isSnipperMode=input.snipperMode.value==="true";isExactIn=input.isExactIn.value==="true";uniswapService=service;tokenInAddress=input.addressIn.value;tokenOutAddress=input.addressOut.value;if(isExactIn){input.amountIn.readonly=false;input.amountOut.readonly=true}if(!isExactIn){input.amountIn.readonly=true;input.amountOut.readonly=false}defaultReturn=isExactIn?{params:{amountOut:undefined,methodParams:{path:undefined,method:undefined,amount:undefined}},error:undefined}:{params:{amountIn:undefined,methodParams:{path:undefined,method:undefined,amount:undefined}},error:undefined};if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string"){return[2,defaultReturn]}if(!provider)return[3,2];return[4,getTokenDecimals({address:tokenInAddress,provider:provider})];case 1:_c=_e.sent();return[3,3];case 2:_c=0;_e.label=3;case 3:decimalsIn=_c;if(!provider)return[3,5];return[4,getTokenDecimals({address:tokenOutAddress,provider:provider})];case 4:_d=_e.sent();return[3,6];case 5:_d=0;_e.label=6;case 6:decimalsOut=_d;amountIn=output.amountIn,amountOut=output.amountOut;amountIn.decimals=decimalsIn;amountOut.decimals=decimalsOut;amount=isExactIn?input.amountIn.value:input.amountOut.value;if(amount===undefined)return[2,defaultReturn];if(isSnipperMode){methodName=getMethodName({isExactInput:isExactIn,protocol:"V2",isInputNative:getIsNative(tokenInAddress),isOutputNative:getIsNative(tokenOutAddress)});methodParamValue=method$2[methodName];path=[tokenInAddress,tokenOutAddress].map(function(tokenAddress){if(getIsNative(tokenAddress))return WETH9$1[Number(chainId)].address;return tokenAddress});if(isExactIn){return[2,{params:{amountOut:"0",methodParams:{path:path,method:methodParamValue,amount:amount}},isSimulationNeeded:false,error:undefined}]}return[2,{params:{amountIn:"0",methodParams:{path:path,method:methodParamValue,amount:amount}},isSimulationNeeded:false,error:undefined}]}isSimulationNeeded=false;if(!amount||isVariable(amount)){isSimulationNeeded=true;amount="1"+"0".repeat(isExactIn?decimalsIn:decimalsOut)}_e.label=7;case 7:_e.trys.push([7,9,,10]);return[4,uniswapService.create({cmd:"simulateSwap",protocol:"uniswap",token_in:tokenInAddress,token_in_decimals:decimalsIn,token_out:tokenOutAddress,token_out_decimals:decimalsOut,token_amount:amount,version:"v2",type:isExactIn?"in":"out"})];case 8:res=_e.sent();swapPath=res===null||res===void 0?void 0:res.path;if(!swapPath){return[2,{params:{amountIn:isExactIn?amount:undefined,amountOut:isExactIn?undefined:amount,methodParams:{path:undefined,amount:undefined,method:undefined}},error:"invalid trade"}]}methodName=getMethodName({isExactInput:isExactIn,protocol:"V2",isInputNative:getIsNative(tokenInAddress),isOutputNative:getIsNative(tokenOutAddress)});methodParamValue=method$2[methodName];if(isExactIn){return[2,{params:{amountOut:res.outputAmount,methodParams:{path:swapPath,method:methodParamValue,amount:amount}},isSimulationNeeded:isSimulationNeeded,error:undefined}]}return[2,{params:{amountIn:res.inputAmount,methodParams:{path:swapPath,method:methodParamValue,amount:amount}},isSimulationNeeded:isSimulationNeeded,error:undefined}];case 9:e_1=_e.sent();return[2,{params:{amountIn:isExactIn?amount:undefined,amountOut:isExactIn?undefined:amount,methodParams:{path:undefined,amount:undefined,method:undefined}},error:e_1.message}];case 10:return[2]}})})};var getDepParams=function(){var isExactIn=input.isExactIn.value==="true";return isExactIn?["addressIn","addressOut","isExactIn","snipperMode","amountIn"]:["addressIn","addressOut","isExactIn","snipperMode","amountOut"]};return{get:getPathParams,depParamKeys:getDepParams}},requiredApprovals:function(params,chainId){var _a=params.methodParams,amount=_a.amount,path=_a.path;if(params.methodParams.method.value===method$2.swapExactETHForTokens||params.methodParams.method.value===method$2.swapETHForExactTokens){return[]}return[{to:path.value&&path.value.length?path.value[0]:params.addressIn.value||undefined,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:params.amountIn.value||amount.value},method:"approve",protocol:"ERC20"}]},onCreate:function(_a){var input=_a.input;var setAmountIn=function(){if(input.isExactIn.value!=="true")return;input.methodParams.amount.set({value:input.amountIn.value});input.methodParams.amount.setEstimated({value:input.amountIn.estimatedValue})};var setAmountOut=function(){if(input.isExactIn.value==="true")return;input.methodParams.amount.set({value:input.amountOut.value});input.methodParams.amount.setEstimated({value:input.amountOut.estimatedValue})};input.amountIn.subscribe({callback:function(){setAmountIn()},id:"set amount by amountIn"});input.amountOut.subscribe({callback:function(){setAmountOut()},id:"set amount by amountOut"});input.isExactIn.subscribe({callback:function(_a){var value=_a.value;if(value==="true"){setAmountIn()}if(value==="false"){setAmountOut()}},id:"set amount on isExactIn change"});setAmountIn();setAmountOut()},estimateGasOnParams:function(params,method,chainId){var baseGas=BigNumber$1.from("140000");var path=params.methodParams.path;if(!path.value||!path.value.length){return chainId==="42161"||chainId==="421613"?baseGas.mul(13).toString():baseGas.toString()}var gasPerToken=BigNumber$1.from("80000");var gas=baseGas.add(gasPerToken.mul(path.value.length-2));if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var __awaiter$r=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$r=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var SwapToNoSlippageProtection=createPlugin$1({protocol:"UNISWAP",type:"LIBRARY",method:"swapTo_noSlippageProtection",supportedContracts:fctUniswapContracts,toEns:"@lib:uniswap_v2",initParams:{isExactIn:"true"},getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),addressIn:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountIn:new FctValue({destination:"wei_amount"}),addressOut:new FctAddress({destination:"erc20",mode:"INPUT",options:getAllCurrencies({chainId:chainId})}),amountOut:new FctValue({destination:"wei_amount"}),methodParams:{amount:new FctValue({destination:"wei_amount",readonly:true}),method:new FctBytes32({messageType:"string",options:Object.keys(method$2).map(function(key){var methodKey=key;return{name:key,value:method$2[methodKey]}})}),to:new FctAddress({}),path:new FctAddressList({destination:"ERC20_List"})},isExactIn:new FctBoolean({}),snipperMode:new FctBoolean({})},output:{amountIn:new FctValue({innerIndex:0,destination:"wei_amount"}),amountOut:new FctValue({innerIndex:1,destination:"wei_amount"})}}},overrideSetMethodParams:function(_a){var input=_a.input;return function(params){Object.keys(input.methodParams).forEach(function(key,i){var paramKey=key;input.methodParams[paramKey].value=params[i]});var isExactIn=input.isExactIn.value==="true";if(isExactIn){input.amountIn.value=input.methodParams.amount.value}else{input.amountOut.value=input.methodParams.amount.value}}},calculateValuesOnUserInput:function(_a){var input=_a.input,output=_a.output,provider=_a.provider,chainId=_a.chainId;var getPathParams=function(_a){return __awaiter$r(void 0,[_a],void 0,function(_b){var isSnipperMode,isExactIn,uniswapService,tokenInAddress,tokenOutAddress,defaultReturn,decimalsIn,_c,decimalsOut,_d,amountIn,amountOut,amount,methodName,methodParamValue,path,isSimulationNeeded,res,swapPath,methodName,methodParamValue,e_1;var service=_b.service;return __generator$r(this,function(_e){switch(_e.label){case 0:if(!service)return[2];isSnipperMode=input.snipperMode.value==="true";isExactIn=input.isExactIn.value==="true";uniswapService=service;tokenInAddress=input.addressIn.value;tokenOutAddress=input.addressOut.value;if(isExactIn){input.amountIn.readonly=false;input.amountOut.readonly=true}if(!isExactIn){input.amountIn.readonly=true;input.amountOut.readonly=false}defaultReturn=isExactIn?{params:{amountOut:undefined,methodParams:{path:undefined,method:undefined,amount:undefined}},error:undefined}:{params:{amountIn:undefined,methodParams:{path:undefined,method:undefined,amount:undefined}},error:undefined};if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2,defaultReturn];if(!provider)return[3,2];return[4,getTokenDecimals({address:tokenInAddress,provider:provider})];case 1:_c=_e.sent();return[3,3];case 2:_c=0;_e.label=3;case 3:decimalsIn=_c;if(!provider)return[3,5];return[4,getTokenDecimals({address:tokenOutAddress,provider:provider})];case 4:_d=_e.sent();return[3,6];case 5:_d=0;_e.label=6;case 6:decimalsOut=_d;amountIn=output.amountIn,amountOut=output.amountOut;amountIn.decimals=decimalsIn;amountOut.decimals=decimalsOut;amount=isExactIn?input.amountIn.value:input.amountOut.value;if(amount===undefined)return[2,defaultReturn];if(isSnipperMode){methodName=getMethodName({isExactInput:isExactIn,protocol:"V2",isInputNative:getIsNative(tokenInAddress),isOutputNative:getIsNative(tokenOutAddress)});methodParamValue=method$2[methodName];path=[tokenInAddress,tokenOutAddress].map(function(tokenAddress){if(getIsNative(tokenAddress))return WETH9$1[Number(chainId)].address;return tokenAddress});if(isExactIn){return[2,{params:{amountOut:"0",methodParams:{path:path,method:methodParamValue,amount:amount}},isSimulationNeeded:false,error:undefined}]}return[2,{params:{amountIn:"0",methodParams:{path:path,method:methodParamValue,amount:amount}},isSimulationNeeded:false,error:undefined}]}isSimulationNeeded=false;if(!amount||isVariable(amount)){isSimulationNeeded=true;amount="1"+"0".repeat(isExactIn?decimalsIn:decimalsOut)}_e.label=7;case 7:_e.trys.push([7,9,,10]);return[4,uniswapService.create({cmd:"simulateSwap",protocol:"uniswap",token_in:tokenInAddress,token_in_decimals:decimalsIn,token_out:tokenOutAddress,token_out_decimals:decimalsOut,token_amount:amount,version:"v2",type:isExactIn?"in":"out"})];case 8:res=_e.sent();console.log("1",res);swapPath=res===null||res===void 0?void 0:res.path;if(!swapPath){return[2,{params:{amountIn:isExactIn?amount:undefined,amountOut:isExactIn?undefined:amount,methodParams:{path:undefined,amount:undefined,method:undefined}},error:"invalid trade"}]}methodName=getMethodName({isExactInput:isExactIn,protocol:"V2",isInputNative:getIsNative(tokenInAddress),isOutputNative:getIsNative(tokenOutAddress)});methodParamValue=method$2[methodName];if(isExactIn){return[2,{params:{amountOut:res.outputAmount,methodParams:{path:swapPath,method:methodParamValue,amount:amount}},isSimulationNeeded:isSimulationNeeded,error:undefined}]}return[2,{params:{amountIn:res.inputAmount,methodParams:{path:swapPath,method:methodParamValue,amount:amount}},isSimulationNeeded:isSimulationNeeded,error:undefined}];case 9:e_1=_e.sent();return[2,{params:{amountIn:isExactIn?amount:undefined,amountOut:isExactIn?undefined:amount,methodParams:{path:undefined,amount:undefined,method:undefined}},error:e_1.message}];case 10:return[2]}})})};var getDepParams=function(){var isExactIn=input.isExactIn.value==="true";return isExactIn?["addressIn","addressOut","isExactIn","snipperMode","amountIn"]:["addressIn","addressOut","isExactIn","snipperMode","amountOut"]};return{get:getPathParams,depParamKeys:getDepParams}},requiredApprovals:function(params,chainId){var _a=params.methodParams,amount=_a.amount,path=_a.path;if(params.methodParams.method.value===method$2.swapExactETHForTokens||params.methodParams.method.value===method$2.swapETHForExactTokens){return[]}return[{to:path.value&&path.value.length?path.value[0]:params.addressIn.value||undefined,params:{spender:ROUTER_V2_ADDRESS[chainId],amount:params.amountIn.value||amount.value},method:"approve",protocol:"ERC20"}]},onCreate:function(_a){var input=_a.input;var setAmountIn=function(){if(input.isExactIn.value!=="true")return;input.methodParams.amount.set({value:input.amountIn.value});input.methodParams.amount.setEstimated({value:input.amountIn.estimatedValue})};var setAmountOut=function(){if(input.isExactIn.value==="true")return;input.methodParams.amount.set({value:input.amountOut.value});input.methodParams.amount.setEstimated({value:input.amountOut.estimatedValue})};input.amountIn.subscribe({callback:function(){setAmountIn()},id:"set amount by amountIn"});input.amountOut.subscribe({callback:function(){setAmountOut()},id:"set amount by amountOut"});input.isExactIn.subscribe({callback:function(_a){var value=_a.value;if(value==="true"){setAmountIn()}if(value==="false"){setAmountOut()}},id:"set amount on isExactIn change"});setAmountIn();setAmountOut()},estimateGasOnParams:function(params,_,chainId){var baseGas=BigNumber$1.from("140000");var path=params.methodParams.path;if(!path.value||!path.value.length){return chainId==="42161"||chainId==="421613"?baseGas.mul(13).toString():baseGas.toString()}var gasPerToken=BigNumber$1.from("80000");var gas=baseGas.add(gasPerToken.mul(path.value.length-2));if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var __awaiter$q=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$q=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var SimulateSwap=createPlugin$1({protocol:"UNISWAP",type:"GETTER",method:"simulateSwap",supportedContracts:fctUniswapContracts,initParams:{isExactIn:"true"},getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),addressIn:new FctAddress({options:getAllCurrencies({chainId:chainId})}),amountIn:new FctValue({destination:"wei_amount"}),addressOut:new FctAddress({options:getAllCurrencies({chainId:chainId})}),amountOut:new FctValue({destination:"wei_amount"}),isExactIn:new FctBoolean({}),methodParams:{amount:new FctValue({destination:"wei_amount"}),method:new FctBytes32({messageType:"string",options:Object.keys(method$2).map(function(key){var methodKey=key;return{name:key,value:method$2[methodKey]}})}),path:new FctAddressList({destination:"ERC20_List",options:getAllCurrencies({chainId:chainId})})}},output:{amountIn:new FctValue({innerIndex:0,destination:"wei_amount"}),amountOut:new FctValue({innerIndex:1,destination:"wei_amount"}),tokenIn:new FctAddress({innerIndex:2,destination:"erc20"}),tokenOut:new FctAddress({innerIndex:-1,destination:"erc20"})}}},calculateValuesOnUserInput:function(_a){var input=_a.input,provider=_a.provider;var getPathParams=function(_a){return __awaiter$q(void 0,[_a],void 0,function(_b){var isExactIn,uniswapService,tokenInAddress,tokenOutAddress,defaultReturn,amount,decimalsIn,_c,decimalsOut,_d,isSimulationNeeded,res,swapPath,methodName,methodParamValue,e_1;var service=_b.service;return __generator$q(this,function(_e){switch(_e.label){case 0:if(!service)return[2];isExactIn=input.isExactIn.value==="true";uniswapService=service;tokenInAddress=input.addressIn.value;tokenOutAddress=input.addressOut.value;if(isExactIn){input.amountIn.readonly=false;input.amountOut.readonly=true}if(!isExactIn){input.amountIn.readonly=true;input.amountOut.readonly=false}defaultReturn=isExactIn?{params:{amountOut:undefined,methodParams:{path:undefined,method:undefined,amount:undefined}},error:undefined}:{params:{amountIn:undefined,methodParams:{path:undefined,method:undefined,amount:undefined}},error:undefined};if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2,defaultReturn];amount=isExactIn?input.amountIn.value:input.amountOut.value;if(amount===undefined)return[2,defaultReturn];if(!provider)return[3,2];return[4,getTokenDecimals({address:tokenInAddress,provider:provider})];case 1:_c=_e.sent();return[3,3];case 2:_c=18;_e.label=3;case 3:decimalsIn=_c;if(!provider)return[3,5];return[4,getTokenDecimals({address:tokenOutAddress,provider:provider})];case 4:_d=_e.sent();return[3,6];case 5:_d=18;_e.label=6;case 6:decimalsOut=_d;isSimulationNeeded=false;if(!amount||isVariable(amount)){isSimulationNeeded=true;amount="1"+"0".repeat(isExactIn?decimalsIn:decimalsOut)}_e.label=7;case 7:_e.trys.push([7,9,,10]);return[4,uniswapService.create({cmd:"simulateSwap",protocol:"uniswap",token_in:tokenInAddress,token_in_decimals:decimalsIn,token_out:tokenOutAddress,token_out_decimals:decimalsOut,token_amount:amount,version:"v2",type:isExactIn?"in":"out"})];case 8:res=_e.sent();swapPath=res===null||res===void 0?void 0:res.path;if(!swapPath){return[2,{params:{amountIn:isExactIn?amount:undefined,amountOut:isExactIn?undefined:amount,methodParams:{path:undefined,amount:undefined,method:undefined}},error:"invalid trade"}]}methodName=getMethodName({isExactInput:isExactIn,protocol:"V2",isInputNative:getIsNative(tokenInAddress),isOutputNative:getIsNative(tokenOutAddress)});methodParamValue=method$2[methodName];if(isExactIn){return[2,{params:{amountOut:res.outputAmount,methodParams:{path:swapPath,method:methodParamValue,amount:amount}},isSimulationNeeded:isSimulationNeeded,error:undefined}]}return[2,{params:{amountIn:res.inputAmount,methodParams:{path:swapPath,method:methodParamValue,amount:amount}},isSimulationNeeded:isSimulationNeeded,error:undefined}];case 9:e_1=_e.sent();return[2,{params:{amountIn:isExactIn?amount:undefined,amountOut:isExactIn?undefined:amount,methodParams:{path:undefined,amount:undefined,method:undefined}},error:e_1.message}];case 10:return[2]}})})};var getDepParams=function(){var isExactIn=input.isExactIn.value==="true";return isExactIn?["addressIn","addressOut","isExactIn","amountIn"]:["addressIn","addressOut","isExactIn","amountOut"]};return{get:getPathParams,depParamKeys:getDepParams}},onCreate:function(_a){var input=_a.input;var setAmountIn=function(){if(input.isExactIn.value!=="true")return;input.methodParams.amount.set({value:input.amountIn.value})};var setAmountOut=function(){if(input.isExactIn.value==="true")return;input.methodParams.amount.set({value:input.amountOut.value})};input.amountIn.subscribe({callback:function(){setAmountIn()},id:"set amount by amountIn"});input.amountOut.subscribe({callback:function(){setAmountOut()},id:"set amount by amountOut"});input.isExactIn.subscribe({callback:function(_a){var value=_a.value;if(value==="true"){setAmountIn()}if(value==="false"){setAmountOut()}},id:"set amount on isExactIn change"});setAmountIn();setAmountOut()}});var actions$c={SwapToNoSlippageProtection:SwapToNoSlippageProtection,SwapNoSlippageProtection:SwapNoSlippageProtection,SimpleAddLiquidity:SimpleAddLiquidity,SimpleAddLiquidityTo:SimpleAddLiquidityTo};var getters$b={SimulateSwap:SimulateSwap};var FCT_UNISWAP={actions:actions$c,getters:getters$b};var _a$2,_b$2,_c$1;var exchangeRouterContracts=[{address:"0xdB7421cd7E92414029f16d45D8A15c2904052dDf",chainId:421613},{address:"0x3B070aA6847bd0fB56eFAdB351f49BBb7619dbc2",chainId:42161}];var syntheticsReaderContracts=[{address:"0x254feb5D92d01013bb6a975f2971872df622e6E7",chainId:421613},{address:"0x38d91ED96283d62182Fc6d990C24097A918a4d9b",chainId:42161}];var AddressZero$1=AddressZero$2;var NATIVE_TOKEN_ADDRESS="0x0000000000000000000000000000000000000000";var ETH_MAINNET=1;var ETH_GOERLI=5;var AVALANCHE_FUJI=43113;var ARBITRUM=42161;var ARBITRUM_GOERLI=421613;var MAX_EXCEEDING_THRESHOLD="1000000000";var MIN_EXCEEDING_THRESHOLD="0.01";var TRIGGER_PREFIX_ABOVE=">";var TRIGGER_PREFIX_BELOW="<";var CHAIN_IDS=[ARBITRUM,ARBITRUM_GOERLI];var USD_DECIMALS=30;var HIGH_EXECUTION_FEES_MAP=(_a$2={},_a$2[ARBITRUM]=3,_a$2[ARBITRUM_GOERLI]=3,_a$2[AVALANCHE_FUJI]=3,_a$2);var contracts=(_b$2={},_b$2[ARBITRUM_GOERLI]={Vault:AddressZero$1,Router:AddressZero$1,VaultReader:AddressZero$1,Reader:AddressZero$1,GlpManager:AddressZero$1,RewardRouter:AddressZero$1,RewardReader:AddressZero$1,GlpRewardRouter:AddressZero$1,NATIVE_TOKEN:"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",GLP:AddressZero$1,GMX:AddressZero$1,ES_GMX:AddressZero$1,BN_GMX:AddressZero$1,USDG:AddressZero$1,ES_GMX_IOU:AddressZero$1,StakedGmxTracker:AddressZero$1,BonusGmxTracker:AddressZero$1,FeeGmxTracker:AddressZero$1,StakedGlpTracker:AddressZero$1,FeeGlpTracker:AddressZero$1,StakedGmxDistributor:AddressZero$1,StakedGlpDistributor:AddressZero$1,GmxVester:AddressZero$1,GlpVester:AddressZero$1,OrderBook:AddressZero$1,OrderExecutor:AddressZero$1,OrderBookReader:AddressZero$1,PositionRouter:AddressZero$1,PositionManager:AddressZero$1,TraderJoeGmxAvaxPool:AddressZero$1,ReferralStorage:"0x995E905E471D53B7c5d0dbf6406860Cb3C029e95",ReferralReader:AddressZero$1,DataStore:"0xbA2314b0f71ebC705aeEBeA672cc3bcEc510D03b",EventEmitter:"0x2fbE45fCb58B7106CF0a3Be9225D5Ed5A1004cc4",ExchangeRouter:"0xdB7421cd7E92414029f16d45D8A15c2904052dDf",DepositVault:"0x838a9bdf8736eD522A60F5f715e4F3FC2BC91A08",WithdrawalVault:"0xaAac001C2a2727Ff2d484C4Ad7d2079C7094e7Ef",OrderVault:"0x82aFd2590814a7Ce3d7ea6b63F80481F8b227bA9",SyntheticsReader:"0x254feb5D92d01013bb6a975f2971872df622e6E7",SyntheticsRouter:"0xfB8e176df6B5bB7132889C012550bEaa6288014d",Timelock:AddressZero$1,Multicall:"0x6d85594c9BD6b0833bC85AE62B360654A1e52D70"},_b$2[ARBITRUM]={Vault:"0x489ee077994B6658eAfA855C308275EAd8097C4A",Router:"0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064",VaultReader:"0xfebB9f4CAC4cD523598fE1C5771181440143F24A",Reader:"0x2b43c90D1B727cEe1Df34925bcd5Ace52Ec37694",GlpManager:"0x3963FfC9dff443c2A94f21b129D429891E32ec18",RewardRouter:"0xA906F338CB21815cBc4Bc87ace9e68c87eF8d8F1",GlpRewardRouter:"0xB95DB5B167D75e6d04227CfFFA61069348d271F5",RewardReader:"0x8BFb8e82Ee4569aee78D03235ff465Bd436D40E0",NATIVE_TOKEN:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",GLP:"0x4277f8F2c384827B5273592FF7CeBd9f2C1ac258",GMX:"0xfc5A1A6EB076a2C7aD06eD22C90d7E710E35ad0a",ES_GMX:"0xf42Ae1D54fd613C9bb14810b0588FaAa09a426cA",BN_GMX:"0x35247165119B69A40edD5304969560D0ef486921",USDG:"0x45096e7aA921f27590f8F19e457794EB09678141",ES_GMX_IOU:"0x6260101218eC4cCfFF1b778936C6f2400f95A954",StakedGmxTracker:"0x908C4D94D34924765f1eDc22A1DD098397c59dD4",BonusGmxTracker:"0x4d268a7d4C16ceB5a606c173Bd974984343fea13",FeeGmxTracker:"0xd2D1162512F927a7e282Ef43a362659E4F2a728F",StakedGlpTracker:"0x1aDDD80E6039594eE970E5872D247bf0414C8903",FeeGlpTracker:"0x4e971a87900b931fF39d1Aad67697F49835400b6",StakedGmxDistributor:"0x23208B91A98c7C1CD9FE63085BFf68311494F193",StakedGlpDistributor:"0x60519b48ec4183a61ca2B8e37869E675FD203b34",GmxVester:"0x199070DDfd1CFb69173aa2F7e20906F26B363004",GlpVester:"0xA75287d2f8b217273E7FCD7E86eF07D33972042E",OrderBook:"0x09f77E8A13De9a35a7231028187e9fD5DB8a2ACB",OrderExecutor:"0x7257ac5D0a0aaC04AA7bA2AC0A6Eb742E332c3fB",OrderBookReader:"0xa27C20A7CF0e1C68C0460706bB674f98F362Bc21",PositionRouter:"0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868",PositionManager:"0x75E42e6f01baf1D6022bEa862A28774a9f8a4A0C",ReferralStorage:"0xe6fab3f0c7199b0d34d7fbe83394fc0e0d06e99d",ReferralReader:"0x8Aa382760BCdCe8644C33e6C2D52f6304A76F5c8",DataStore:"0xFD70de6b91282D8017aA4E741e9Ae325CAb992d8",EventEmitter:"0xC8ee91A54287DB53897056e12D9819156D3822Fb",ExchangeRouter:"0x3B070aA6847bd0fB56eFAdB351f49BBb7619dbc2",DepositVault:"0xF89e77e8Dc11691C9e8757e84aaFbCD8A67d7A55",WithdrawalVault:"0x0628D46b5D145f183AdB6Ef1f2c97eD1C4701C55",OrderVault:"0x31eF83a530Fde1B38EE9A18093A333D8Bbbc40D5",SyntheticsReader:"0x38d91ED96283d62182Fc6d990C24097A918a4d9b",SyntheticsRouter:"0x7452c558d45f8afC8c83dAe62C3f8A5BE19c71f6",Timelock:"0xaa50bD556CE0Fe61D4A57718BA43177a3aB6A597",Multicall:"0xcA11bde05977b3631167028862bE2a173976CA11"},_b$2);var BASIS_POINTS_DIVISOR=1e4;var MAX_ALLOWED_LEVERAGE=50*BASIS_POINTS_DIVISOR;var TOKENS=(_c$1={},_c$1[ETH_MAINNET]=[],_c$1[ETH_GOERLI]=[],_c$1[ARBITRUM]=[{name:"Ethereum",symbol:"ETH",decimals:18,value:AddressZero$2,isNative:true,isShortable:true,logoURI:"https://assets.coingecko.com/coins/images/279/small/ethereum.png?1595348880",coingeckoUrl:"https://www.coingecko.com/en/coins/ethereum",isV1Available:true},{name:"Wrapped Ethereum",symbol:"WETH",decimals:18,value:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",isWrapped:true,baseSymbol:"ETH",logoURI:"https://assets.coingecko.com/coins/images/2518/thumb/weth.png?1628852295",coingeckoUrl:"https://www.coingecko.com/en/coins/ethereum",isV1Available:true},{name:"Bitcoin (WBTC)",symbol:"BTC",decimals:8,value:"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",isShortable:true,logoURI:"https://assets.coingecko.com/coins/images/26115/thumb/btcb.png?1655921693",coingeckoUrl:"https://www.coingecko.com/en/coins/wrapped-bitcoin",explorerUrl:"https://arbiscan.io/address/0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",isV1Available:true},{name:"Arbitrum",symbol:"ARB",decimals:18,priceDecimals:3,value:"0x912CE59144191C1204E64559FE8253a0e49E6548",logoURI:"https://assets.coingecko.com/coins/images/16547/small/photo_2023-03-29_21.47.00.jpeg?1680097630",coingeckoUrl:"https://www.coingecko.com/en/coins/arbitrum",explorerUrl:"https://arbiscan.io/token/0x912ce59144191c1204e64559fe8253a0e49e6548"},{name:"Wrapped SOL (Wormhole)",symbol:"SOL",decimals:9,value:"0x2bcC6D6CdBbDC0a4071e48bb3B969b06B3330c07",logoURI:"https://assets.coingecko.com/coins/images/4128/small/solana.png?1640133422",coingeckoUrl:"https://www.coingecko.com/en/coins/solana",explorerUrl:"https://arbiscan.io/token/0x2bCc6D6CdBbDC0a4071e48bb3B969b06B3330c07"},{name:"Chainlink",symbol:"LINK",decimals:18,priceDecimals:3,value:"0xf97f4df75117a78c1A5a0DBb814Af92458539FB4",isStable:false,isShortable:true,logoURI:"https://assets.coingecko.com/coins/images/877/thumb/chainlink-new-logo.png?1547034700",coingeckoUrl:"https://www.coingecko.com/en/coins/chainlink",explorerUrl:"https://arbiscan.io/token/0xf97f4df75117a78c1a5a0dbb814af92458539fb4",isV1Available:true},{name:"Uniswap",symbol:"UNI",decimals:18,priceDecimals:3,value:"0xFa7F8980b0f1E64A2062791cc3b0871572f1F7f0",isStable:false,isShortable:true,logoURI:"https://assets.coingecko.com/coins/images/12504/thumb/uniswap-uni.png?1600306604",coingeckoUrl:"https://www.coingecko.com/en/coins/uniswap",explorerUrl:"https://arbiscan.io/token/0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",isV1Available:true},{name:"Bridged USDC (USDC.e)",symbol:"USDC.e",decimals:6,value:"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",isStable:true,logoURI:"https://assets.coingecko.com/coins/images/6319/thumb/USD_Coin_icon.png?1547042389",coingeckoUrl:"https://www.coingecko.com/en/coins/usd-coin",explorerUrl:"https://arbiscan.io/token/0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",isV1Available:true},{name:"USD Coin",symbol:"USDC",decimals:6,value:"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",isStable:true,isV1Available:true,logoURI:"https://assets.coingecko.com/coins/images/6319/thumb/USD_Coin_icon.png?1547042389",coingeckoUrl:"https://www.coingecko.com/en/coins/usd-coin",explorerUrl:"https://arbiscan.io/address/0xaf88d065e77c8cC2239327C5EDb3A432268e5831"},{name:"Tether",symbol:"USDT",decimals:6,value:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",isStable:true,logoURI:"https://assets.coingecko.com/coins/images/325/thumb/Tether-logo.png?1598003707",explorerUrl:"https://arbiscan.io/value/0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",coingeckoUrl:"https://www.coingecko.com/en/coins/tether",isV1Available:true},{name:"Dai",symbol:"DAI",decimals:18,value:"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",isStable:true,logoURI:"https://assets.coingecko.com/coins/images/9956/thumb/4943.png?1636636734",coingeckoUrl:"https://www.coingecko.com/en/coins/dai",explorerUrl:"https://arbiscan.io/token/0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",isV1Available:true},{name:"Frax",symbol:"FRAX",decimals:18,value:"0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F",isStable:true,logoURI:"https://assets.coingecko.com/coins/images/13422/small/frax_logo.png?1608476506",coingeckoUrl:"https://www.coingecko.com/en/coins/frax",explorerUrl:"https://arbiscan.io/token/0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F",isV1Available:true},{name:"Magic Internet Money",symbol:"MIM",decimals:18,value:"0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A",isStable:true,isTempHidden:true,logoURI:"https://assets.coingecko.com/coins/images/16786/small/mimlogopng.png",isV1Available:true},{name:"Bitcoin",symbol:"BTC",value:"0x47904963fc8b2340414262125aF798B9655E58Cd",isSynthetic:true,decimals:8,logoURI:"https://assets.coingecko.com/coins/images/1/small/bitcoin.png?1547033579",explorerUrl:"https://arbiscan.io/address/0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",coingeckoUrl:"https://www.coingecko.com/en/coins/bitcoin"},{name:"Dogecoin",symbol:"DOGE",decimals:8,priceDecimals:4,value:"0xC4da4c24fd591125c3F47b340b6f4f76111883d8",isSynthetic:true,logoURI:"https://assets.coingecko.com/coins/images/5/small/dogecoin.png?1547792256",coingeckoUrl:"https://www.coingecko.com/en/coins/dogecoin"},{name:"Litecoin",symbol:"LTC",decimals:8,value:"0xB46A094Bc4B0adBD801E14b9DB95e05E28962764",isSynthetic:true,logoURI:"https://assets.coingecko.com/coins/images/2/small/litecoin.png?1547033580",coingeckoUrl:"https://www.coingecko.com/en/coins/litecoin"},{name:"XRP",symbol:"XRP",decimals:6,priceDecimals:4,value:"0xc14e065b0067dE91534e032868f5Ac6ecf2c6868",logoURI:"https://assets.coingecko.com/coins/images/44/small/xrp-symbol-white-128.png?1605778731",coingeckoUrl:"https://www.coingecko.com/en/coins/xrp",isSynthetic:true},{name:"GMX",symbol:"GMX",value:AddressZero$1,decimals:18,isPlatformToken:true,logoURI:"https://assets.coingecko.com/coins/images/18323/small/arbit.png?1631532468",coingeckoUrl:"https://www.coingecko.com/en/coins/gmx",explorerUrl:"https://arbiscan.io/address/0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a"},{name:"Escrowed GMX",symbol:"esGMX",value:AddressZero$1,decimals:18,isPlatformToken:true},{name:"GMX LP",symbol:"GLP",value:AddressZero$1,decimals:18,logoURI:"https://github.com/gmx-io/gmx-assets/blob/main/GMX-Assets/PNG/GLP_LOGO%20ONLY.png?raw=true",reservesUrl:"https://portfolio.nansen.ai/dashboard/gmx?chain=ARBITRUM",isPlatformToken:true}],_c$1[ARBITRUM_GOERLI]=[{name:"Ethereum",symbol:"ETH",decimals:18,value:AddressZero$2,isNative:true,isShortable:true,logoURI:"https://assets.coingecko.com/coins/images/279/small/ethereum.png?1595348880"},{name:"Wrapped Ethereum",symbol:"WETH",decimals:18,value:"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",isWrapped:true,baseSymbol:"ETH",logoURI:"https://assets.coingecko.com/coins/images/2518/thumb/weth.png?1628852295",coingeckoUrl:"https://www.coingecko.com/en/coins/ethereum",explorerUrl:"https://goerli.arbiscan.io/address/0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3"},{name:"Bitcoin",symbol:"BTC",decimals:8,value:"0xCcF73F4Dcbbb573296BFA656b754Fe94BB957d62",isShortable:true,logoURI:"https://assets.coingecko.com/coins/images/7598/thumb/wrapped_bitcoin_wbtc.png?1548822744",coingeckoUrl:"https://www.coingecko.com/en/coins/bitcoin",explorerUrl:"https://goerli.arbiscan.io/address/0xCcF73F4Dcbbb573296BFA656b754Fe94BB957d62"},{name:"USD Coin",symbol:"USDC",decimals:6,value:"0x04FC936a15352a1b15b3B9c56EA002051e3DB3e5",isStable:true,logoURI:"https://assets.coingecko.com/coins/images/6319/thumb/USD_Coin_icon.png?1547042389",coingeckoUrl:"https://www.coingecko.com/en/coins/usd-coin",explorerUrl:"https://goerli.arbiscan.io/address/0x04FC936a15352a1b15b3B9c56EA002051e3DB3e5"},{name:"Tether",symbol:"USDT",decimals:6,value:"0xBFcBcdCbcc1b765843dCe4DF044B92FE68182a62",isStable:true,logoURI:"https://assets.coingecko.com/coins/images/325/small/Tether-logo.png",coingeckoUrl:"https://www.coingecko.com/en/coins/tether",explorerUrl:"https://goerli.arbiscan.io/address/0xBFcBcdCbcc1b765843dCe4DF044B92FE68182a62"},{name:"Dai",symbol:"DAI",value:"0x7b7c6c49fA99b37270077FBFA398748c27046984",decimals:18,isStable:true,logoURI:"https://assets.coingecko.com/coins/images/9956/thumb/4943.png?1636636734",coingeckoUrl:"https://www.coingecko.com/en/coins/dai",explorerUrl:"https://goerli.arbiscan.io/address/0x7b7c6c49fA99b37270077FBFA398748c27046984"},{name:"Solana",symbol:"SOL",decimals:18,value:"0x9A98a11279FaeB0fF695dFEC3C4B8a29138d0a2f",isSynthetic:true,logoURI:"https://assets.coingecko.com/coins/images/4128/small/solana.png?1640133422",coingeckoUrl:"https://www.coingecko.com/en/coins/solana"},{name:"Test token",symbol:"TEST",decimals:18,value:"0x13C52ccB49fE3228356D0C355641961646A0D9B2",isSynthetic:true,coingeckoUrl:"https://www.coingecko.com/en/coins/tether"},{name:"BNB",symbol:"BNB",isSynthetic:true,decimals:18,value:"0xa076E6db62f61bd1A4fC283F84739D2b0c80e2a3",coingeckoUrl:"https://www.coingecko.com/en/coins/binancecoin"},{name:"Cardano",symbol:"ADA",decimals:18,priceDecimals:4,value:"0x5F8a8f06da2848f846A2b5e3e42A4A2eEC5f337B",isSynthetic:true,coingeckoUrl:"https://www.coingecko.com/en/coins/cardano"},{name:"TRON",symbol:"TRX",decimals:18,priceDecimals:4,value:"0x7a9Ba06548D0499f6Debf97809CC351c1e85795D",isSynthetic:true,coingeckoUrl:"https://www.coingecko.com/en/coins/tron"},{name:"Polygon",symbol:"MATIC",decimals:18,priceDecimals:4,value:"0xd98D28787F5598749331052f952196428F61e3aD",isSynthetic:true,coingeckoUrl:"https://www.coingecko.com/en/coins/polygon"},{name:"Polkadot",symbol:"DOT",decimals:18,value:"0x7361D58cBc6495B6419397dFd5ebE2e2017F23E9",isSynthetic:true,coingeckoUrl:"https://www.coingecko.com/en/coins/polkadot"},{name:"Uniswap",symbol:"UNI",decimals:18,priceDecimals:3,value:"0x6DEbb9cC48819941F797a2F0c63f9168C19fD057",isSynthetic:true,coingeckoUrl:"https://www.coingecko.com/en/coins/uniswap"},{name:"Dogecoin",symbol:"DOGE",isSynthetic:true,isShortable:true,decimals:8,priceDecimals:4,value:"0x3e2fA75b78edF836299127FBAA776304B4712972",coingeckoUrl:"https://www.coingecko.com/en/coins/dogecoin"},{name:"Chainlink",symbol:"LINK",decimals:18,priceDecimals:3,value:"0x55602A94239a7926D92da5C53Fb96E80372382aa",isSynthetic:true,coingeckoUrl:"https://www.coingecko.com/en/coins/chainlink"},{name:"XRP",symbol:"XRP",decimals:6,priceDecimals:4,value:"0xF1C2093383453831e8c90ecf809691123116dAaC",isSynthetic:true,logoURI:"https://assets.coingecko.com/coins/images/44/small/xrp-symbol-white-128.png?1605778731",coingeckoUrl:"https://www.coingecko.com/en/coins/xrp"}],_c$1);var DataStoreAbi=[{inputs:[{internalType:"contract RoleStore",name:"_roleStore",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"msgSender",type:"address"},{internalType:"string",name:"role",type:"string"}],name:"Unauthorized",type:"error"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"address",name:"value",type:"address"}],name:"addAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"bytes32",name:"value",type:"bytes32"}],name:"addBytes32",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"addUint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"addressArrayValues",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"addressValues",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"int256",name:"value",type:"int256"}],name:"applyBoundedDeltaToUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"int256",name:"value",type:"int256"}],name:"applyDeltaToInt",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"int256",name:"value",type:"int256"},{internalType:"string",name:"errorMessage",type:"string"}],name:"applyDeltaToUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"applyDeltaToUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"boolArrayValues",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"boolValues",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"bytes32ArrayValues",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"bytes32Values",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"address",name:"value",type:"address"}],name:"containsAddress",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"bytes32",name:"value",type:"bytes32"}],name:"containsBytes32",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"containsUint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"int256",name:"value",type:"int256"}],name:"decrementInt",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"decrementUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getAddressArray",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"}],name:"getAddressCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getAddressValuesAt",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getBool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getBoolArray",outputs:[{internalType:"bool[]",name:"",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getBytes32",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getBytes32Array",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"}],name:"getBytes32Count",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getBytes32ValuesAt",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getInt",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getIntArray",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getStringArray",outputs:[{internalType:"string[]",name:"",type:"string[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getUintArray",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"}],name:"getUintCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getUintValuesAt",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"int256",name:"value",type:"int256"}],name:"incrementInt",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"incrementUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"intArrayValues",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"intValues",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"address",name:"value",type:"address"}],name:"removeAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeAddressArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeBool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeBoolArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"bytes32",name:"value",type:"bytes32"}],name:"removeBytes32",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeBytes32",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeBytes32Array",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeInt",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeIntArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeString",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeStringArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeUint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"setKey",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"removeUint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"removeUintArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"roleStore",outputs:[{internalType:"contract RoleStore",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"address",name:"value",type:"address"}],name:"setAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"address[]",name:"value",type:"address[]"}],name:"setAddressArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"bool",name:"value",type:"bool"}],name:"setBool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"bool[]",name:"value",type:"bool[]"}],name:"setBoolArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"bytes32",name:"value",type:"bytes32"}],name:"setBytes32",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"bytes32[]",name:"value",type:"bytes32[]"}],name:"setBytes32Array",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"int256",name:"value",type:"int256"}],name:"setInt",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"int256[]",name:"value",type:"int256[]"}],name:"setIntArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"string",name:"value",type:"string"}],name:"setString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"string[]",name:"value",type:"string[]"}],name:"setStringArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"setUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256[]",name:"value",type:"uint256[]"}],name:"setUintArray",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"stringArrayValues",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"stringValues",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"uintArrayValues",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"uintValues",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];var exchangeRouterAbi=[{inputs:[{internalType:"contract Router",name:"_router",type:"address"},{internalType:"contract RoleStore",name:"_roleStore",type:"address"},{internalType:"contract DataStore",name:"_dataStore",type:"address"},{internalType:"contract EventEmitter",name:"_eventEmitter",type:"address"},{internalType:"contract IDepositHandler",name:"_depositHandler",type:"address"},{internalType:"contract IWithdrawalHandler",name:"_withdrawalHandler",type:"address"},{internalType:"contract IOrderHandler",name:"_orderHandler",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"uint256",name:"adjustedClaimableAmount",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"}],name:"CollateralAlreadyClaimed",type:"error"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"DisabledFeature",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"}],name:"DisabledMarket",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"EmptyAddressInMarketTokenBalanceValidation",type:"error"},{inputs:[],name:"EmptyDeposit",type:"error"},{inputs:[],name:"EmptyHoldingAddress",type:"error"},{inputs:[],name:"EmptyMarket",type:"error"},{inputs:[],name:"EmptyOrder",type:"error"},{inputs:[],name:"EmptyReceiver",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"EmptyTokenTranferGasLimit",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"}],name:"InvalidClaimAffiliateRewardsInput",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"},{internalType:"uint256",name:"timeKeysLength",type:"uint256"}],name:"InvalidClaimCollateralInput",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"}],name:"InvalidClaimFundingFeesInput",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"}],name:"InvalidClaimUiFeesInput",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"expectedMinBalance",type:"uint256"}],name:"InvalidMarketTokenBalance",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"claimableFundingFeeAmount",type:"uint256"}],name:"InvalidMarketTokenBalanceForClaimableFunding",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"InvalidMarketTokenBalanceForCollateralAmount",type:"error"},{inputs:[{internalType:"uint256",name:"uiFeeFactor",type:"uint256"},{internalType:"uint256",name:"maxUiFeeFactor",type:"uint256"}],name:"InvalidUiFeeFactor",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"TokenTransferError",type:"error"},{inputs:[{internalType:"address",name:"msgSender",type:"address"},{internalType:"string",name:"role",type:"string"}],name:"Unauthorized",type:"error"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"cancelDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"cancelOrder",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"cancelWithdrawal",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"markets",type:"address[]"},{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"address",name:"receiver",type:"address"}],name:"claimAffiliateRewards",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"markets",type:"address[]"},{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"timeKeys",type:"uint256[]"},{internalType:"address",name:"receiver",type:"address"}],name:"claimCollateral",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"markets",type:"address[]"},{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"address",name:"receiver",type:"address"}],name:"claimFundingFees",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"markets",type:"address[]"},{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"address",name:"receiver",type:"address"}],name:"claimUiFees",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"callbackContract",type:"address"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"initialLongToken",type:"address"},{internalType:"address",name:"initialShortToken",type:"address"},{internalType:"address[]",name:"longTokenSwapPath",type:"address[]"},{internalType:"address[]",name:"shortTokenSwapPath",type:"address[]"},{internalType:"uint256",name:"minMarketTokens",type:"uint256"},{internalType:"bool",name:"shouldUnwrapNativeToken",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"callbackGasLimit",type:"uint256"}],internalType:"struct DepositUtils.CreateDepositParams",name:"params",type:"tuple"}],name:"createDeposit",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"callbackContract",type:"address"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"initialCollateralToken",type:"address"},{internalType:"address[]",name:"swapPath",type:"address[]"}],internalType:"struct BaseOrderUtils.CreateOrderParamsAddresses",name:"addresses",type:"tuple"},{components:[{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"},{internalType:"uint256",name:"initialCollateralDeltaAmount",type:"uint256"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"callbackGasLimit",type:"uint256"},{internalType:"uint256",name:"minOutputAmount",type:"uint256"}],internalType:"struct BaseOrderUtils.CreateOrderParamsNumbers",name:"numbers",type:"tuple"},{internalType:"enum Order.OrderType",name:"orderType",type:"uint8"},{internalType:"enum Order.DecreasePositionSwapType",name:"decreasePositionSwapType",type:"uint8"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"shouldUnwrapNativeToken",type:"bool"},{internalType:"bytes32",name:"referralCode",type:"bytes32"}],internalType:"struct BaseOrderUtils.CreateOrderParams",name:"params",type:"tuple"}],name:"createOrder",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"callbackContract",type:"address"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address[]",name:"longTokenSwapPath",type:"address[]"},{internalType:"address[]",name:"shortTokenSwapPath",type:"address[]"},{internalType:"uint256",name:"minLongTokenAmount",type:"uint256"},{internalType:"uint256",name:"minShortTokenAmount",type:"uint256"},{internalType:"bool",name:"shouldUnwrapNativeToken",type:"bool"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"callbackGasLimit",type:"uint256"}],internalType:"struct WithdrawalUtils.CreateWithdrawalParams",name:"params",type:"tuple"}],name:"createWithdrawal",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[],name:"dataStore",outputs:[{internalType:"contract DataStore",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"depositHandler",outputs:[{internalType:"contract IDepositHandler",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"eventEmitter",outputs:[{internalType:"contract EventEmitter",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"orderHandler",outputs:[{internalType:"contract IOrderHandler",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"roleStore",outputs:[{internalType:"contract RoleStore",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"router",outputs:[{internalType:"contract Router",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendTokens",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendWnt",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"callbackContract",type:"address"}],name:"setSavedCallbackContract",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"uiFeeFactor",type:"uint256"}],name:"setUiFeeFactor",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{components:[{internalType:"address[]",name:"primaryTokens",type:"address[]"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props[]",name:"primaryPrices",type:"tuple[]"}],internalType:"struct OracleUtils.SimulatePricesParams",name:"simulatedOracleParams",type:"tuple"}],name:"simulateExecuteDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{components:[{internalType:"address[]",name:"primaryTokens",type:"address[]"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props[]",name:"primaryPrices",type:"tuple[]"}],internalType:"struct OracleUtils.SimulatePricesParams",name:"simulatedOracleParams",type:"tuple"}],name:"simulateExecuteOrder",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{components:[{internalType:"address[]",name:"primaryTokens",type:"address[]"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props[]",name:"primaryPrices",type:"tuple[]"}],internalType:"struct OracleUtils.SimulatePricesParams",name:"simulatedOracleParams",type:"tuple"}],name:"simulateExecuteWithdrawal",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"uint256",name:"minOutputAmount",type:"uint256"}],name:"updateOrder",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"withdrawalHandler",outputs:[{internalType:"contract IWithdrawalHandler",name:"",type:"address"}],stateMutability:"view",type:"function"}];var MulticallAbi=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3[]",name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3Value[]",name:"calls",type:"tuple[]"}],name:"aggregate3Value",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getBasefee",outputs:[{internalType:"uint256",name:"basefee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getChainId",outputs:[{internalType:"uint256",name:"chainid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"}];var SyntheticsReaderAbi=[{inputs:[{internalType:"address",name:"market",type:"address"}],name:"DisabledMarket",type:"error"},{inputs:[],name:"EmptyMarket",type:"error"},{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"PRBMathUD60x18__Exp2InputTooBig",type:"error"},{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"PRBMathUD60x18__LogInputTooSmall",type:"error"},{inputs:[{internalType:"uint256",name:"prod1",type:"uint256"}],name:"PRBMath__MulDivFixedPointOverflow",type:"error"},{inputs:[],name:"UnableToGetBorrowingFactorEmptyPoolUsd",type:"error"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getAccountOrders",outputs:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"callbackContract",type:"address"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"initialCollateralToken",type:"address"},{internalType:"address[]",name:"swapPath",type:"address[]"}],internalType:"struct Order.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"enum Order.OrderType",name:"orderType",type:"uint8"},{internalType:"enum Order.DecreasePositionSwapType",name:"decreasePositionSwapType",type:"uint8"},{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"},{internalType:"uint256",name:"initialCollateralDeltaAmount",type:"uint256"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"callbackGasLimit",type:"uint256"},{internalType:"uint256",name:"minOutputAmount",type:"uint256"},{internalType:"uint256",name:"updatedAtBlock",type:"uint256"}],internalType:"struct Order.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"shouldUnwrapNativeToken",type:"bool"},{internalType:"bool",name:"isFrozen",type:"bool"}],internalType:"struct Order.Flags",name:"flags",type:"tuple"}],internalType:"struct Order.Props[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"contract IReferralStorage",name:"referralStorage",type:"address"},{internalType:"bytes32[]",name:"positionKeys",type:"bytes32[]"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices[]",name:"prices",type:"tuple[]"},{internalType:"address",name:"uiFeeReceiver",type:"address"}],name:"getAccountPositionInfoList",outputs:[{components:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"collateralToken",type:"address"}],internalType:"struct Position.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"uint256",name:"sizeInUsd",type:"uint256"},{internalType:"uint256",name:"sizeInTokens",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"borrowingFactor",type:"uint256"},{internalType:"uint256",name:"fundingFeeAmountPerSize",type:"uint256"},{internalType:"uint256",name:"longTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"shortTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"increasedAtBlock",type:"uint256"},{internalType:"uint256",name:"decreasedAtBlock",type:"uint256"}],internalType:"struct Position.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct Position.Flags",name:"flags",type:"tuple"}],internalType:"struct Position.Props",name:"position",type:"tuple"},{components:[{components:[{internalType:"bytes32",name:"referralCode",type:"bytes32"},{internalType:"address",name:"affiliate",type:"address"},{internalType:"address",name:"trader",type:"address"},{internalType:"uint256",name:"totalRebateFactor",type:"uint256"},{internalType:"uint256",name:"traderDiscountFactor",type:"uint256"},{internalType:"uint256",name:"totalRebateAmount",type:"uint256"},{internalType:"uint256",name:"traderDiscountAmount",type:"uint256"},{internalType:"uint256",name:"affiliateRewardAmount",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionReferralFees",name:"referral",type:"tuple"},{components:[{internalType:"uint256",name:"fundingFeeAmount",type:"uint256"},{internalType:"uint256",name:"claimableLongTokenAmount",type:"uint256"},{internalType:"uint256",name:"claimableShortTokenAmount",type:"uint256"},{internalType:"uint256",name:"latestFundingFeeAmountPerSize",type:"uint256"},{internalType:"uint256",name:"latestLongTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"latestShortTokenClaimableFundingAmountPerSize",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionFundingFees",name:"funding",type:"tuple"},{components:[{internalType:"uint256",name:"borrowingFeeUsd",type:"uint256"},{internalType:"uint256",name:"borrowingFeeAmount",type:"uint256"},{internalType:"uint256",name:"borrowingFeeReceiverFactor",type:"uint256"},{internalType:"uint256",name:"borrowingFeeAmountForFeeReceiver",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionBorrowingFees",name:"borrowing",type:"tuple"},{components:[{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"uint256",name:"uiFeeReceiverFactor",type:"uint256"},{internalType:"uint256",name:"uiFeeAmount",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionUiFees",name:"ui",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"collateralTokenPrice",type:"tuple"},{internalType:"uint256",name:"positionFeeFactor",type:"uint256"},{internalType:"uint256",name:"protocolFeeAmount",type:"uint256"},{internalType:"uint256",name:"positionFeeReceiverFactor",type:"uint256"},{internalType:"uint256",name:"feeReceiverAmount",type:"uint256"},{internalType:"uint256",name:"feeAmountForPool",type:"uint256"},{internalType:"uint256",name:"positionFeeAmountForPool",type:"uint256"},{internalType:"uint256",name:"positionFeeAmount",type:"uint256"},{internalType:"uint256",name:"totalCostAmountExcludingFunding",type:"uint256"},{internalType:"uint256",name:"totalCostAmount",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionFees",name:"fees",type:"tuple"},{components:[{internalType:"int256",name:"priceImpactUsd",type:"int256"},{internalType:"uint256",name:"priceImpactDiffUsd",type:"uint256"},{internalType:"uint256",name:"executionPrice",type:"uint256"}],internalType:"struct ReaderPricingUtils.ExecutionPriceResult",name:"executionPriceResult",type:"tuple"},{internalType:"int256",name:"basePnlUsd",type:"int256"},{internalType:"int256",name:"uncappedBasePnlUsd",type:"int256"},{internalType:"int256",name:"pnlAfterPriceImpactUsd",type:"int256"}],internalType:"struct ReaderUtils.PositionInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getAccountPositions",outputs:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"collateralToken",type:"address"}],internalType:"struct Position.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"uint256",name:"sizeInUsd",type:"uint256"},{internalType:"uint256",name:"sizeInTokens",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"borrowingFactor",type:"uint256"},{internalType:"uint256",name:"fundingFeeAmountPerSize",type:"uint256"},{internalType:"uint256",name:"longTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"shortTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"increasedAtBlock",type:"uint256"},{internalType:"uint256",name:"decreasedAtBlock",type:"uint256"}],internalType:"struct Position.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct Position.Flags",name:"flags",type:"tuple"}],internalType:"struct Position.Props[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"bool",name:"isLong",type:"bool"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices",name:"prices",type:"tuple"}],name:"getAdlState",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bool",name:"",type:"bool"},{internalType:"int256",name:"",type:"int256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getDeposit",outputs:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"callbackContract",type:"address"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"initialLongToken",type:"address"},{internalType:"address",name:"initialShortToken",type:"address"},{internalType:"address[]",name:"longTokenSwapPath",type:"address[]"},{internalType:"address[]",name:"shortTokenSwapPath",type:"address[]"}],internalType:"struct Deposit.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"uint256",name:"initialLongTokenAmount",type:"uint256"},{internalType:"uint256",name:"initialShortTokenAmount",type:"uint256"},{internalType:"uint256",name:"minMarketTokens",type:"uint256"},{internalType:"uint256",name:"updatedAtBlock",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"callbackGasLimit",type:"uint256"}],internalType:"struct Deposit.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"shouldUnwrapNativeToken",type:"bool"}],internalType:"struct Deposit.Flags",name:"flags",type:"tuple"}],internalType:"struct Deposit.Props",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"address",name:"marketKey",type:"address"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{internalType:"uint256",name:"positionSizeInUsd",type:"uint256"},{internalType:"uint256",name:"positionSizeInTokens",type:"uint256"},{internalType:"int256",name:"sizeDeltaUsd",type:"int256"},{internalType:"bool",name:"isLong",type:"bool"}],name:"getExecutionPrice",outputs:[{components:[{internalType:"int256",name:"priceImpactUsd",type:"int256"},{internalType:"uint256",name:"priceImpactDiffUsd",type:"uint256"},{internalType:"uint256",name:"executionPrice",type:"uint256"}],internalType:"struct ReaderPricingUtils.ExecutionPriceResult",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"address",name:"key",type:"address"}],name:"getMarket",outputs:[{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"getMarketBySalt",outputs:[{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices",name:"prices",type:"tuple"},{internalType:"address",name:"marketKey",type:"address"}],name:"getMarketInfo",outputs:[{components:[{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{internalType:"uint256",name:"borrowingFactorPerSecondForLongs",type:"uint256"},{internalType:"uint256",name:"borrowingFactorPerSecondForShorts",type:"uint256"},{components:[{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"fundingFeeAmountPerSize",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"claimableFundingAmountPerSize",type:"tuple"}],internalType:"struct ReaderUtils.BaseFundingValues",name:"baseFunding",type:"tuple"},{components:[{internalType:"bool",name:"longsPayShorts",type:"bool"},{internalType:"uint256",name:"fundingFactorPerSecond",type:"uint256"},{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"fundingFeeAmountPerSizeDelta",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"claimableFundingAmountPerSizeDelta",type:"tuple"}],internalType:"struct MarketUtils.GetNextFundingAmountPerSizeResult",name:"nextFunding",type:"tuple"},{components:[{internalType:"uint256",name:"virtualPoolAmountForLongToken",type:"uint256"},{internalType:"uint256",name:"virtualPoolAmountForShortToken",type:"uint256"},{internalType:"int256",name:"virtualInventoryForPositions",type:"int256"}],internalType:"struct Reader.VirtualInventory",name:"virtualInventory",type:"tuple"},{internalType:"bool",name:"isDisabled",type:"bool"}],internalType:"struct Reader.MarketInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices[]",name:"marketPricesList",type:"tuple[]"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getMarketInfoList",outputs:[{components:[{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{internalType:"uint256",name:"borrowingFactorPerSecondForLongs",type:"uint256"},{internalType:"uint256",name:"borrowingFactorPerSecondForShorts",type:"uint256"},{components:[{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"fundingFeeAmountPerSize",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"claimableFundingAmountPerSize",type:"tuple"}],internalType:"struct ReaderUtils.BaseFundingValues",name:"baseFunding",type:"tuple"},{components:[{internalType:"bool",name:"longsPayShorts",type:"bool"},{internalType:"uint256",name:"fundingFactorPerSecond",type:"uint256"},{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"fundingFeeAmountPerSizeDelta",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"long",type:"tuple"},{components:[{internalType:"uint256",name:"longToken",type:"uint256"},{internalType:"uint256",name:"shortToken",type:"uint256"}],internalType:"struct MarketUtils.CollateralType",name:"short",type:"tuple"}],internalType:"struct MarketUtils.PositionType",name:"claimableFundingAmountPerSizeDelta",type:"tuple"}],internalType:"struct MarketUtils.GetNextFundingAmountPerSizeResult",name:"nextFunding",type:"tuple"},{components:[{internalType:"uint256",name:"virtualPoolAmountForLongToken",type:"uint256"},{internalType:"uint256",name:"virtualPoolAmountForShortToken",type:"uint256"},{internalType:"int256",name:"virtualInventoryForPositions",type:"int256"}],internalType:"struct Reader.VirtualInventory",name:"virtualInventory",type:"tuple"},{internalType:"bool",name:"isDisabled",type:"bool"}],internalType:"struct Reader.MarketInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"},{internalType:"bytes32",name:"pnlFactorType",type:"bytes32"},{internalType:"bool",name:"maximize",type:"bool"}],name:"getMarketTokenPrice",outputs:[{internalType:"int256",name:"",type:"int256"},{components:[{internalType:"int256",name:"poolValue",type:"int256"},{internalType:"int256",name:"longPnl",type:"int256"},{internalType:"int256",name:"shortPnl",type:"int256"},{internalType:"int256",name:"netPnl",type:"int256"},{internalType:"uint256",name:"longTokenAmount",type:"uint256"},{internalType:"uint256",name:"shortTokenAmount",type:"uint256"},{internalType:"uint256",name:"longTokenUsd",type:"uint256"},{internalType:"uint256",name:"shortTokenUsd",type:"uint256"},{internalType:"uint256",name:"totalBorrowingFees",type:"uint256"},{internalType:"uint256",name:"borrowingFeePoolFactor",type:"uint256"},{internalType:"uint256",name:"impactPoolAmount",type:"uint256"}],internalType:"struct MarketPoolValueInfo.Props",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getMarkets",outputs:[{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{internalType:"bool",name:"maximize",type:"bool"}],name:"getNetPnl",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"maximize",type:"bool"}],name:"getOpenInterestWithPnl",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getOrder",outputs:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"callbackContract",type:"address"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"initialCollateralToken",type:"address"},{internalType:"address[]",name:"swapPath",type:"address[]"}],internalType:"struct Order.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"enum Order.OrderType",name:"orderType",type:"uint8"},{internalType:"enum Order.DecreasePositionSwapType",name:"decreasePositionSwapType",type:"uint8"},{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"},{internalType:"uint256",name:"initialCollateralDeltaAmount",type:"uint256"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"callbackGasLimit",type:"uint256"},{internalType:"uint256",name:"minOutputAmount",type:"uint256"},{internalType:"uint256",name:"updatedAtBlock",type:"uint256"}],internalType:"struct Order.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"shouldUnwrapNativeToken",type:"bool"},{internalType:"bool",name:"isFrozen",type:"bool"}],internalType:"struct Order.Flags",name:"flags",type:"tuple"}],internalType:"struct Order.Props",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"maximize",type:"bool"}],name:"getPnl",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"address",name:"marketAddress",type:"address"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices",name:"prices",type:"tuple"},{internalType:"bool",name:"isLong",type:"bool"},{internalType:"bool",name:"maximize",type:"bool"}],name:"getPnlToPoolFactor",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getPosition",outputs:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"collateralToken",type:"address"}],internalType:"struct Position.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"uint256",name:"sizeInUsd",type:"uint256"},{internalType:"uint256",name:"sizeInTokens",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"borrowingFactor",type:"uint256"},{internalType:"uint256",name:"fundingFeeAmountPerSize",type:"uint256"},{internalType:"uint256",name:"longTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"shortTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"increasedAtBlock",type:"uint256"},{internalType:"uint256",name:"decreasedAtBlock",type:"uint256"}],internalType:"struct Position.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct Position.Flags",name:"flags",type:"tuple"}],internalType:"struct Position.Props",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"contract IReferralStorage",name:"referralStorage",type:"address"},{internalType:"bytes32",name:"positionKey",type:"bytes32"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices",name:"prices",type:"tuple"},{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"bool",name:"usePositionSizeAsSizeDeltaUsd",type:"bool"}],name:"getPositionInfo",outputs:[{components:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"collateralToken",type:"address"}],internalType:"struct Position.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"uint256",name:"sizeInUsd",type:"uint256"},{internalType:"uint256",name:"sizeInTokens",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"uint256",name:"borrowingFactor",type:"uint256"},{internalType:"uint256",name:"fundingFeeAmountPerSize",type:"uint256"},{internalType:"uint256",name:"longTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"shortTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"increasedAtBlock",type:"uint256"},{internalType:"uint256",name:"decreasedAtBlock",type:"uint256"}],internalType:"struct Position.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"isLong",type:"bool"}],internalType:"struct Position.Flags",name:"flags",type:"tuple"}],internalType:"struct Position.Props",name:"position",type:"tuple"},{components:[{components:[{internalType:"bytes32",name:"referralCode",type:"bytes32"},{internalType:"address",name:"affiliate",type:"address"},{internalType:"address",name:"trader",type:"address"},{internalType:"uint256",name:"totalRebateFactor",type:"uint256"},{internalType:"uint256",name:"traderDiscountFactor",type:"uint256"},{internalType:"uint256",name:"totalRebateAmount",type:"uint256"},{internalType:"uint256",name:"traderDiscountAmount",type:"uint256"},{internalType:"uint256",name:"affiliateRewardAmount",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionReferralFees",name:"referral",type:"tuple"},{components:[{internalType:"uint256",name:"fundingFeeAmount",type:"uint256"},{internalType:"uint256",name:"claimableLongTokenAmount",type:"uint256"},{internalType:"uint256",name:"claimableShortTokenAmount",type:"uint256"},{internalType:"uint256",name:"latestFundingFeeAmountPerSize",type:"uint256"},{internalType:"uint256",name:"latestLongTokenClaimableFundingAmountPerSize",type:"uint256"},{internalType:"uint256",name:"latestShortTokenClaimableFundingAmountPerSize",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionFundingFees",name:"funding",type:"tuple"},{components:[{internalType:"uint256",name:"borrowingFeeUsd",type:"uint256"},{internalType:"uint256",name:"borrowingFeeAmount",type:"uint256"},{internalType:"uint256",name:"borrowingFeeReceiverFactor",type:"uint256"},{internalType:"uint256",name:"borrowingFeeAmountForFeeReceiver",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionBorrowingFees",name:"borrowing",type:"tuple"},{components:[{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"uint256",name:"uiFeeReceiverFactor",type:"uint256"},{internalType:"uint256",name:"uiFeeAmount",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionUiFees",name:"ui",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"collateralTokenPrice",type:"tuple"},{internalType:"uint256",name:"positionFeeFactor",type:"uint256"},{internalType:"uint256",name:"protocolFeeAmount",type:"uint256"},{internalType:"uint256",name:"positionFeeReceiverFactor",type:"uint256"},{internalType:"uint256",name:"feeReceiverAmount",type:"uint256"},{internalType:"uint256",name:"feeAmountForPool",type:"uint256"},{internalType:"uint256",name:"positionFeeAmountForPool",type:"uint256"},{internalType:"uint256",name:"positionFeeAmount",type:"uint256"},{internalType:"uint256",name:"totalCostAmountExcludingFunding",type:"uint256"},{internalType:"uint256",name:"totalCostAmount",type:"uint256"}],internalType:"struct PositionPricingUtils.PositionFees",name:"fees",type:"tuple"},{components:[{internalType:"int256",name:"priceImpactUsd",type:"int256"},{internalType:"uint256",name:"priceImpactDiffUsd",type:"uint256"},{internalType:"uint256",name:"executionPrice",type:"uint256"}],internalType:"struct ReaderPricingUtils.ExecutionPriceResult",name:"executionPriceResult",type:"tuple"},{internalType:"int256",name:"basePnlUsd",type:"int256"},{internalType:"int256",name:"uncappedBasePnlUsd",type:"int256"},{internalType:"int256",name:"pnlAfterPriceImpactUsd",type:"int256"}],internalType:"struct ReaderUtils.PositionInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices",name:"prices",type:"tuple"},{internalType:"bytes32",name:"positionKey",type:"bytes32"},{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"}],name:"getPositionPnlUsd",outputs:[{internalType:"int256",name:"",type:"int256"},{internalType:"int256",name:"",type:"int256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{components:[{internalType:"address",name:"marketToken",type:"address"},{internalType:"address",name:"indexToken",type:"address"},{internalType:"address",name:"longToken",type:"address"},{internalType:"address",name:"shortToken",type:"address"}],internalType:"struct Market.Props",name:"market",type:"tuple"},{components:[{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"indexTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"longTokenPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"shortTokenPrice",type:"tuple"}],internalType:"struct MarketUtils.MarketPrices",name:"prices",type:"tuple"},{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"address",name:"uiFeeReceiver",type:"address"}],name:"getSwapAmountOut",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"int256",name:"",type:"int256"},{components:[{internalType:"uint256",name:"feeReceiverAmount",type:"uint256"},{internalType:"uint256",name:"feeAmountForPool",type:"uint256"},{internalType:"uint256",name:"amountAfterFees",type:"uint256"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"uint256",name:"uiFeeReceiverFactor",type:"uint256"},{internalType:"uint256",name:"uiFeeAmount",type:"uint256"}],internalType:"struct SwapPricingUtils.SwapFees",name:"fees",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"address",name:"marketKey",type:"address"},{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"tokenInPrice",type:"tuple"},{components:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],internalType:"struct Price.Props",name:"tokenOutPrice",type:"tuple"}],name:"getSwapPriceImpact",outputs:[{internalType:"int256",name:"",type:"int256"},{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract DataStore",name:"dataStore",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getWithdrawal",outputs:[{components:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"address",name:"callbackContract",type:"address"},{internalType:"address",name:"uiFeeReceiver",type:"address"},{internalType:"address",name:"market",type:"address"},{internalType:"address[]",name:"longTokenSwapPath",type:"address[]"},{internalType:"address[]",name:"shortTokenSwapPath",type:"address[]"}],internalType:"struct Withdrawal.Addresses",name:"addresses",type:"tuple"},{components:[{internalType:"uint256",name:"marketTokenAmount",type:"uint256"},{internalType:"uint256",name:"minLongTokenAmount",type:"uint256"},{internalType:"uint256",name:"minShortTokenAmount",type:"uint256"},{internalType:"uint256",name:"updatedAtBlock",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"},{internalType:"uint256",name:"callbackGasLimit",type:"uint256"}],internalType:"struct Withdrawal.Numbers",name:"numbers",type:"tuple"},{components:[{internalType:"bool",name:"shouldUnwrapNativeToken",type:"bool"}],internalType:"struct Withdrawal.Flags",name:"flags",type:"tuple"}],internalType:"struct Withdrawal.Props",name:"",type:"tuple"}],stateMutability:"view",type:"function"}];var GetMarkets=createPlugin$1({protocol:"SyntheticsReader",type:"GETTER",method:"getMarkets",supportedContracts:syntheticsReaderContracts,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{dataStore:new FctAddress({}),start:new FctValue({}),end:new FctValue({})}},output:{"marketData_tuple[]":{marketToken:new FctAddress({}),indexToken:new FctAddress({}),longToken:new FctAddress({}),shortToken:new FctAddress({})}}}}});var TriggerThresholdType;(function(TriggerThresholdType){TriggerThresholdType["Above"]=">";TriggerThresholdType["Below"]="<"})(TriggerThresholdType||(TriggerThresholdType={}));var OrderType;(function(OrderType){OrderType[OrderType["MarketSwap"]=0]="MarketSwap";OrderType[OrderType["LimitSwap"]=1]="LimitSwap";OrderType[OrderType["MarketIncrease"]=2]="MarketIncrease";OrderType[OrderType["LimitIncrease"]=3]="LimitIncrease";OrderType[OrderType["MarketDecrease"]=4]="MarketDecrease";OrderType[OrderType["LimitDecrease"]=5]="LimitDecrease";OrderType[OrderType["StopLossDecrease"]=6]="StopLossDecrease";OrderType[OrderType["Liquidation"]=7]="Liquidation"})(OrderType||(OrderType={}));var DecreasePositionSwapType;(function(DecreasePositionSwapType){DecreasePositionSwapType[DecreasePositionSwapType["NoSwap"]=0]="NoSwap";DecreasePositionSwapType[DecreasePositionSwapType["SwapPnlTokenToCollateralToken"]=1]="SwapPnlTokenToCollateralToken";DecreasePositionSwapType[DecreasePositionSwapType["SwapCollateralTokenToPnlToken"]=2]="SwapCollateralTokenToPnlToken"})(DecreasePositionSwapType||(DecreasePositionSwapType={}));var TradeType;(function(TradeType){TradeType["Long"]="Long";TradeType["Short"]="Short";TradeType["Swap"]="Swap"})(TradeType||(TradeType={}));var TradeMode;(function(TradeMode){TradeMode["Market"]="Market";TradeMode["Limit"]="Limit";TradeMode["Trigger"]="Trigger"})(TradeMode||(TradeMode={}));var __assign$7=undefined&&undefined.__assign||function(){__assign$7=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$7.apply(this,arguments)};var __values$4=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var __read$6=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$5=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var _a$1,_b$1,_c;function buildUrl(baseUrl,path,query){var qs=query?"?".concat(JSON.stringify(query)):"";return"".concat(baseUrl).concat(path).concat(qs)}var PRECISION=expandDecimals(1,30);var TOKENS_MAP={};var V1_TOKENS={};var V2_TOKENS={};var TOKENS_BY_SYMBOL_MAP={};var WRAPPED_TOKENS_MAP={};var NATIVE_TOKENS_MAP={};var GMX_RPC_PROVIDERS=(_a$1={},_a$1[ARBITRUM]=["https://arb1.arbitrum.io/rpc"],_a$1[ARBITRUM_GOERLI]=["https://goerli-rollup.arbitrum.io/rpc"],_a$1);var GMX_FALLBACK_PROVIDERS=(_b$1={},_b$1[ARBITRUM]=["https://arb-mainnet.g.alchemy.com/v2/hxBqIr-vfpJ105JPYLei_ibbJLe66k46"],_b$1[ARBITRUM_GOERLI]=["https://arb-goerli.g.alchemy.com/v2/cZfd99JyN42V9Clbs_gOvA3GSBZH1-1j"],_b$1);function getRpcUrl(chainId){return sample(GMX_RPC_PROVIDERS[chainId])}function getFallbackRpcUrl(chainId){return sample(GMX_FALLBACK_PROVIDERS[chainId])}for(var j=0;j<CHAIN_IDS.length;j++){var chainId=CHAIN_IDS[j];TOKENS_MAP[chainId]={};TOKENS_BY_SYMBOL_MAP[chainId]={};V1_TOKENS[chainId]=[];V2_TOKENS[chainId]=[];var tokens=TOKENS[chainId];var wrappedTokenAddress=void 0;for(var i=0;i<tokens.length;i++){var token=tokens[i];TOKENS_MAP[chainId][token.value]=token;TOKENS_BY_SYMBOL_MAP[chainId][token.symbol]=token;if(token.isWrapped){WRAPPED_TOKENS_MAP[chainId]=token;wrappedTokenAddress=token.value}if(token.isNative){NATIVE_TOKENS_MAP[chainId]=token}if(token.isV1Available&&!token.isTempHidden){V1_TOKENS[chainId].push(token)}if(!token.isPlatformToken&&!token.isTempHidden){V2_TOKENS[chainId].push(token)}}NATIVE_TOKENS_MAP[chainId].wrappedAddress=wrappedTokenAddress}var DUST_USD=expandDecimals(1,USD_DECIMALS);var getContract=function(_a){var chainId=_a.chainId,name=_a.name;if(chainId===1)return;if(chainId===5)return;var chainIdNumber=Number(chainId);if(!contracts[chainIdNumber])return;return contracts[chainIdNumber][name]};function getToken(chainId,address){if(!TOKENS_MAP[chainId]){throw new Error("Incorrect chainId ".concat(chainId))}if(!TOKENS_MAP[chainId][address]){throw new Error('Incorrect address "'.concat(address,'" for chainId ').concat(chainId))}return TOKENS_MAP[chainId][address]}function getWrappedToken(chainId){return WRAPPED_TOKENS_MAP[chainId]}function convertTokenAddress(chainId,address,convertTo){var wrappedToken=getWrappedToken(chainId);if(convertTo==="wrapped"&&address===NATIVE_TOKEN_ADDRESS){return wrappedToken.value}if(convertTo==="native"&&address===wrappedToken.value){return NATIVE_TOKEN_ADDRESS}return address}function getMarketFullName(p){var indexToken=p.indexToken,longToken=p.longToken,shortToken=p.shortToken,isSpotOnly=p.isSpotOnly;return"".concat(getMarketIndexName({indexToken:indexToken,isSpotOnly:isSpotOnly})," [").concat(getMarketPoolName({longToken:longToken,shortToken:shortToken}),"]")}function getMarketIndexName(p){var indexToken=p.indexToken,isSpotOnly=p.isSpotOnly;if(isSpotOnly){return"SWAP-ONLY"}return"".concat(indexToken.baseSymbol||indexToken.symbol,"/USD")}function getMarketPoolName(p){var longToken=p.longToken,shortToken=p.shortToken;if(longToken.value===shortToken.value){return longToken.symbol}return"".concat(longToken.symbol,"-").concat(shortToken.symbol)}function hashData(dataTypes,dataValues){var bytes=defaultAbiCoder.encode(dataTypes,dataValues);var hash=keccak256$3(arrayify(bytes));return hash}function hashString(string){return hashData(["string"],[string])}var MIN_COLLATERAL_USD_KEY=hashString("MIN_COLLATERAL_USD");var MIN_POSITION_SIZE_USD_KEY=hashString("MIN_POSITION_SIZE_USD");function getByKey(obj,key){if(!obj||!key)return undefined;if(obj[key])return obj[key];return undefined}function getV2Tokens(chainId){return V2_TOKENS[chainId]}function getTokensMap(chainId){return TOKENS_MAP[chainId]}var ORACLE_KEEPER_URLS=(_c={},_c[ARBITRUM]=["https://arbitrum.gmx-oracle.io","https://arbitrum-2.gmx-oracle.io"],_c[ARBITRUM_GOERLI]=["https://oracle-api-arb-goerli-xyguy.ondigitalocean.app"],_c);function getOracleKeeperUrl(chainId,index){var urls=ORACLE_KEEPER_URLS[chainId];return urls[index||0]}function fetchTickers(chainId,index){return fetch(buildUrl(getOracleKeeperUrl(chainId,index),"/prices/tickers")).then(function(res){return res.json()}).then(function(res){if(!res.length){throw new Error("Invalid tickers response")}return res}).catch(function(e){if(chainId===ARBITRUM_GOERLI){console.error(e);return}if(index&&index>0){console.error(e);return}return fetchTickers(chainId,1)})}function bigNumberify(n){try{return BigNumber$1.from(n)}catch(e){console.error("bigNumberify error",e);return undefined}}function expandDecimals(n,decimals){return bigNumberify(n).mul(bigNumberify(10).pow(decimals))}function parseOraclePrice(price,tokenDecimals,oracleDecimals){return expandDecimals(price,tokenDecimals+oracleDecimals)}function convertToContractPrice(price,tokenDecimals){return price.div(expandDecimals(1,tokenDecimals))}function convertToContractTokenPrices(prices,tokenDecimals){return{min:convertToContractPrice(prices.minPrice,tokenDecimals),max:convertToContractPrice(prices.maxPrice,tokenDecimals)}}function getContractMarketPrices(tokensData,market){var indexToken=getByKey(tokensData,market.indexTokenAddress);var longToken=getByKey(tokensData,market.longTokenAddress);var shortToken=getByKey(tokensData,market.shortTokenAddress);if(!indexToken||!longToken||!shortToken){return undefined}return{indexTokenPrice:convertToContractTokenPrices(indexToken.prices,indexToken.decimals),longTokenPrice:convertToContractTokenPrices(longToken.prices,longToken.decimals),shortTokenPrice:convertToContractTokenPrices(shortToken.prices,shortToken.decimals)}}function getMarketsGraph(markets){var e_1,_a;var graph={abjacencyList:{},edges:[]};try{for(var markets_1=__values$4(markets),markets_1_1=markets_1.next();!markets_1_1.done;markets_1_1=markets_1.next()){var market=markets_1_1.value;var longTokenAddress=market.longTokenAddress,shortTokenAddress=market.shortTokenAddress,marketTokenAddress=market.marketTokenAddress,isSameCollaterals=market.isSameCollaterals,isDisabled=market.isDisabled;if(isSameCollaterals||isDisabled){continue}var longShortEdge={marketInfo:market,marketAddress:marketTokenAddress,from:longTokenAddress,to:shortTokenAddress};var shortLongEdge={marketInfo:market,marketAddress:marketTokenAddress,from:shortTokenAddress,to:longTokenAddress};graph.abjacencyList[longTokenAddress]=graph.abjacencyList[longTokenAddress]||[];graph.abjacencyList[longTokenAddress].push(longShortEdge);graph.abjacencyList[shortTokenAddress]=graph.abjacencyList[shortTokenAddress]||[];graph.abjacencyList[shortTokenAddress].push(shortLongEdge);graph.edges.push(longShortEdge,shortLongEdge)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(markets_1_1&&!markets_1_1.done&&(_a=markets_1.return))_a.call(markets_1)}finally{if(e_1)throw e_1.error}}return graph}function getTokenPoolType(marketInfo,tokenAddress){var longToken=marketInfo.longToken,shortToken=marketInfo.shortToken;if(tokenAddress===longToken.value||tokenAddress===NATIVE_TOKEN_ADDRESS&&longToken.isWrapped){return"long"}if(tokenAddress===shortToken.value||tokenAddress===NATIVE_TOKEN_ADDRESS&&shortToken.isWrapped){return"short"}return undefined}function convertToTokenAmount(usd,tokenDecimals,price){if(!usd||typeof tokenDecimals!=="number"||!(price===null||price===void 0?void 0:price.gt(0))){return undefined}return usd.mul(expandDecimals(1,tokenDecimals)).div(price)}function getMidPrice(prices){return prices.minPrice.add(prices.maxPrice).div(2)}function convertToUsd(tokenAmount,tokenDecimals,price){if(!tokenAmount||typeof tokenDecimals!=="number"||!price){return undefined}return tokenAmount.mul(price).div(expandDecimals(1,tokenDecimals))}function getNextPoolAmountsParams(p){var marketInfo=p.marketInfo,longToken=p.longToken,shortToken=p.shortToken,longPoolAmount=p.longPoolAmount,shortPoolAmount=p.shortPoolAmount,longDeltaUsd=p.longDeltaUsd,shortDeltaUsd=p.shortDeltaUsd;var longPrice=getMidPrice(longToken.prices);var shortPrice=getMidPrice(shortToken.prices);var longPoolUsd=convertToUsd(longPoolAmount,longToken.decimals,longPrice);var shortPoolUsd=convertToUsd(shortPoolAmount,shortToken.decimals,shortPrice);var longPoolUsdAdjustment=convertToUsd(marketInfo.longPoolAmountAdjustment,longToken.decimals,longPrice);var shortPoolUsdAdjustment=convertToUsd(marketInfo.shortPoolAmountAdjustment,shortToken.decimals,shortPrice);var nextLongPoolUsd=longPoolUsd.add(longDeltaUsd).add(longPoolUsdAdjustment);var nextShortPoolUsd=shortPoolUsd.add(shortDeltaUsd).add(shortPoolUsdAdjustment);return{longPoolUsd:longPoolUsd,shortPoolUsd:shortPoolUsd,nextLongPoolUsd:nextLongPoolUsd,nextShortPoolUsd:nextShortPoolUsd}}function applyImpactFactor(diff,factor,exponent){var _diff=Number(diff)/Math.pow(10,30);var _exponent=Number(exponent)/Math.pow(10,30);var result=bigNumberify(BigInt(Math.round(Math.pow(_diff,_exponent)*Math.pow(10,30))));result=result.mul(factor).div(expandDecimals(1,30));return result}function calculateImpactForSameSideRebalance(p){var currentDiff=p.currentDiff,nextDiff=p.nextDiff,hasPositiveImpact=p.hasPositiveImpact,factor=p.factor,exponentFactor=p.exponentFactor;var currentImpact=applyImpactFactor(currentDiff,factor,exponentFactor);var nextImpact=applyImpactFactor(nextDiff,factor,exponentFactor);var deltaDiff=currentImpact.sub(nextImpact).abs();return hasPositiveImpact?deltaDiff:BigNumber$1.from(0).sub(deltaDiff)}function calculateImpactForCrossoverRebalance(p){var currentDiff=p.currentDiff,nextDiff=p.nextDiff,factorNegative=p.factorNegative,factorPositive=p.factorPositive,exponentFactor=p.exponentFactor;var positiveImpact=applyImpactFactor(currentDiff,factorPositive,exponentFactor);var negativeImpactUsd=applyImpactFactor(nextDiff,factorNegative,exponentFactor);var deltaDiffUsd=positiveImpact.sub(negativeImpactUsd).abs();return positiveImpact.gt(negativeImpactUsd)?deltaDiffUsd:BigNumber$1.from(0).sub(deltaDiffUsd)}function getPriceImpactUsd(p){var nextLongUsd=p.nextLongUsd,nextShortUsd=p.nextShortUsd;if(nextLongUsd.lt(0)||nextShortUsd.lt(0)){if(p.fallbackToZero){return BigNumber$1.from(0)}else{throw new Error("Negative pool amount")}}var currentDiff=p.currentLongUsd.sub(p.currentShortUsd).abs();var nextDiff=nextLongUsd.sub(nextShortUsd).abs();var isSameSideRebalance=p.currentLongUsd.lt(p.currentShortUsd)===nextLongUsd.lt(nextShortUsd);var impactUsd;if(isSameSideRebalance){var hasPositiveImpact=nextDiff.lt(currentDiff);var factor=hasPositiveImpact?p.factorPositive:p.factorNegative;impactUsd=calculateImpactForSameSideRebalance({currentDiff:currentDiff,nextDiff:nextDiff,hasPositiveImpact:hasPositiveImpact,factor:factor,exponentFactor:p.exponentFactor})}else{impactUsd=calculateImpactForCrossoverRebalance({currentDiff:currentDiff,nextDiff:nextDiff,factorPositive:p.factorPositive,factorNegative:p.factorNegative,exponentFactor:p.exponentFactor})}return impactUsd}function getPriceImpactForSwap(marketInfo,tokenA,tokenB,usdDeltaTokenA,usdDeltaTokenB,opts){if(opts===void 0){opts={}}var tokenAPoolType=getTokenPoolType(marketInfo,tokenA.value);var tokenBPoolType=getTokenPoolType(marketInfo,tokenB.value);if(tokenAPoolType===undefined||tokenBPoolType===undefined||tokenAPoolType===tokenBPoolType&&!marketInfo.isSameCollaterals){throw new Error("Invalid tokens to swap ".concat(marketInfo.marketTokenAddress," ").concat(tokenA.value," ").concat(tokenB.value))}var _a=__read$6(tokenAPoolType==="long"?[tokenA,tokenB]:[tokenB,tokenA],2),longToken=_a[0],shortToken=_a[1];var _b=__read$6(tokenAPoolType==="long"?[usdDeltaTokenA,usdDeltaTokenB]:[usdDeltaTokenB,usdDeltaTokenA],2),longDeltaUsd=_b[0],shortDeltaUsd=_b[1];var _c=getNextPoolAmountsParams({marketInfo:marketInfo,longToken:longToken,shortToken:shortToken,longPoolAmount:marketInfo.longPoolAmount,shortPoolAmount:marketInfo.shortPoolAmount,longDeltaUsd:longDeltaUsd,shortDeltaUsd:shortDeltaUsd}),longPoolUsd=_c.longPoolUsd,shortPoolUsd=_c.shortPoolUsd,nextLongPoolUsd=_c.nextLongPoolUsd,nextShortPoolUsd=_c.nextShortPoolUsd;var priceImpactUsd=getPriceImpactUsd({currentLongUsd:longPoolUsd,currentShortUsd:shortPoolUsd,nextLongUsd:nextLongPoolUsd,nextShortUsd:nextShortPoolUsd,factorPositive:marketInfo.swapImpactFactorPositive,factorNegative:marketInfo.swapImpactFactorNegative,exponentFactor:marketInfo.swapImpactExponentFactor,fallbackToZero:opts.fallbackToZero});if(priceImpactUsd.gt(0)){return priceImpactUsd}var virtualInventoryLong=marketInfo.virtualPoolAmountForLongToken;var virtualInventoryShort=marketInfo.virtualPoolAmountForShortToken;if(!virtualInventoryLong.gt(0)||!virtualInventoryShort.gt(0)){return priceImpactUsd}var virtualInventoryParams=getNextPoolAmountsParams({marketInfo:marketInfo,longToken:longToken,shortToken:shortToken,longPoolAmount:virtualInventoryLong,shortPoolAmount:virtualInventoryShort,longDeltaUsd:longDeltaUsd,shortDeltaUsd:shortDeltaUsd});var priceImpactUsdForVirtualInventory=getPriceImpactUsd({currentLongUsd:virtualInventoryParams.longPoolUsd,currentShortUsd:virtualInventoryParams.shortPoolUsd,nextLongUsd:virtualInventoryParams.nextLongPoolUsd,nextShortUsd:virtualInventoryParams.nextShortPoolUsd,factorPositive:marketInfo.swapImpactFactorPositive,factorNegative:marketInfo.swapImpactFactorNegative,exponentFactor:marketInfo.swapImpactExponentFactor,fallbackToZero:opts.fallbackToZero});return priceImpactUsdForVirtualInventory.lt(priceImpactUsd)?priceImpactUsdForVirtualInventory:priceImpactUsd}function applyFactor(value,factor){return value.mul(factor).div(PRECISION)}function roundUpMagnitudeDivision(a,b){if(a.lt(0)){return a.sub(b).add(1).div(b)}return a.add(b).sub(1).div(b)}function getSwapFee(marketInfo,swapAmount,forPositiveImpact){var factor=forPositiveImpact?marketInfo.swapFeeFactorForPositiveImpact:marketInfo.swapFeeFactorForNegativeImpact;return applyFactor(swapAmount,factor)}function applySwapImpactWithCap(marketInfo,token,priceImpactDeltaUsd){var tokenPoolType=getTokenPoolType(marketInfo,token.value);if(!tokenPoolType){throw new Error("Token ".concat(token.value," is not a collateral of the market ").concat(marketInfo.marketTokenAddress))}var isLongCollateral=tokenPoolType==="long";var price=priceImpactDeltaUsd.gt(0)?token.prices.maxPrice:token.prices.minPrice;var impactDeltaAmount;if(priceImpactDeltaUsd.gt(0)){impactDeltaAmount=convertToTokenAmount(priceImpactDeltaUsd,token.decimals,price);var maxImpactAmount=isLongCollateral?marketInfo.swapImpactPoolAmountLong:marketInfo.swapImpactPoolAmountShort;if(impactDeltaAmount.gt(maxImpactAmount)){impactDeltaAmount=maxImpactAmount}}else{impactDeltaAmount=roundUpMagnitudeDivision(priceImpactDeltaUsd.mul(expandDecimals(1,token.decimals)),price)}return impactDeltaAmount}function getPoolUsdWithoutPnl(marketInfo,isLong,priceType){var _a,_b;var poolAmount=isLong?marketInfo.longPoolAmount:marketInfo.shortPoolAmount;var token=isLong?marketInfo.longToken:marketInfo.shortToken;var price;if(priceType==="minPrice"){price=(_a=token.prices)===null||_a===void 0?void 0:_a.minPrice}else if(priceType==="maxPrice"){price=(_b=token.prices)===null||_b===void 0?void 0:_b.maxPrice}else{price=getMidPrice(token.prices)}return convertToUsd(poolAmount,token.decimals,price)}function getReservedUsd(marketInfo,isLong){var indexToken=marketInfo.indexToken;if(isLong){return convertToUsd(marketInfo.longInterestInTokens,marketInfo.indexToken.decimals,indexToken.prices.maxPrice)}else{return marketInfo.shortInterestUsd}}function getAvailableUsdLiquidityForCollateral(marketInfo,isLong){var poolUsd=getPoolUsdWithoutPnl(marketInfo,isLong,"minPrice");if(marketInfo.isSpotOnly){return poolUsd}var reservedUsd=getReservedUsd(marketInfo,isLong);var maxReserveFactor=isLong?marketInfo.reserveFactorLong:marketInfo.reserveFactorShort;if(maxReserveFactor.eq(0)){return BigNumber$1.from(0)}var minPoolUsd=reservedUsd.mul(PRECISION).div(maxReserveFactor);var liqudiity=poolUsd.sub(minPoolUsd);return liqudiity}function getSwapStats(p){var marketInfo=p.marketInfo,tokenInAddress=p.tokenInAddress,tokenOutAddress=p.tokenOutAddress,usdIn=p.usdIn,shouldApplyPriceImpact=p.shouldApplyPriceImpact;var isWrap=tokenInAddress===NATIVE_TOKEN_ADDRESS;var isUnwrap=tokenOutAddress===NATIVE_TOKEN_ADDRESS;var tokenIn=getTokenPoolType(marketInfo,tokenInAddress)==="long"?marketInfo.longToken:marketInfo.shortToken;var tokenOut=getTokenPoolType(marketInfo,tokenOutAddress)==="long"?marketInfo.longToken:marketInfo.shortToken;var priceIn=tokenIn.prices.minPrice;var priceOut=tokenOut.prices.maxPrice;var amountIn=convertToTokenAmount(usdIn,tokenIn.decimals,priceIn);var priceImpactDeltaUsd;try{priceImpactDeltaUsd=getPriceImpactForSwap(marketInfo,tokenIn,tokenOut,usdIn,usdIn.mul(-1))}catch(e){return{swapFeeUsd:BigNumber$1.from(0),swapFeeAmount:BigNumber$1.from(0),isWrap:isWrap,isUnwrap:isUnwrap,marketAddress:marketInfo.marketTokenAddress,tokenInAddress:tokenInAddress,tokenOutAddress:tokenOutAddress,priceImpactDeltaUsd:BigNumber$1.from(0),amountIn:amountIn,amountInAfterFees:amountIn,usdIn:usdIn,amountOut:BigNumber$1.from(0),usdOut:BigNumber$1.from(0),isOutLiquidity:true}}var swapFeeAmount=getSwapFee(marketInfo,amountIn,priceImpactDeltaUsd.gt(0));var swapFeeUsd=getSwapFee(marketInfo,usdIn,priceImpactDeltaUsd.gt(0));var amountInAfterFees=amountIn.sub(swapFeeAmount);var usdInAfterFees=usdIn.sub(swapFeeUsd);var usdOut=usdInAfterFees;var amountOut=convertToTokenAmount(usdOut,tokenOut.decimals,priceOut);var cappedImpactDeltaUsd;if(priceImpactDeltaUsd.gt(0)){var positiveImpactAmount=applySwapImpactWithCap(marketInfo,tokenOut,priceImpactDeltaUsd);cappedImpactDeltaUsd=convertToUsd(positiveImpactAmount,tokenOut.decimals,priceOut)}else{var negativeImpactAmount=applySwapImpactWithCap(marketInfo,tokenIn,priceImpactDeltaUsd);cappedImpactDeltaUsd=convertToUsd(negativeImpactAmount,tokenIn.decimals,priceIn)}if(shouldApplyPriceImpact){usdOut=usdOut.add(cappedImpactDeltaUsd)}if(usdOut.lt(0)){usdOut=BigNumber$1.from(0)}amountOut=convertToTokenAmount(usdOut,tokenOut.decimals,priceOut);var liquidity=getAvailableUsdLiquidityForCollateral(marketInfo,getTokenPoolType(marketInfo,tokenOutAddress)==="long");var isOutLiquidity=liquidity.lt(usdOut);return{swapFeeUsd:swapFeeUsd,swapFeeAmount:swapFeeAmount,isWrap:isWrap,isUnwrap:isUnwrap,marketAddress:marketInfo.marketTokenAddress,tokenInAddress:tokenInAddress,tokenOutAddress:tokenOutAddress,priceImpactDeltaUsd:cappedImpactDeltaUsd,amountIn:amountIn,amountInAfterFees:amountInAfterFees,usdIn:usdIn,amountOut:amountOut,usdOut:usdOut,isOutLiquidity:isOutLiquidity}}var createSwapEstimator=function(marketsInfoData){return function(e,usdIn){var marketInfo=marketsInfoData[e.marketAddress];var swapStats=getSwapStats({marketInfo:marketInfo,usdIn:usdIn,tokenInAddress:e.from,tokenOutAddress:e.to,shouldApplyPriceImpact:true});var isOutLiquidity=swapStats===null||swapStats===void 0?void 0:swapStats.isOutLiquidity;var usdOut=swapStats===null||swapStats===void 0?void 0:swapStats.usdOut;if(!usdOut||isOutLiquidity){return{usdOut:BigNumber$1.from(0)}}return{usdOut:usdOut}}};function getOppositeCollateral(marketInfo,tokenAddress){var poolType=getTokenPoolType(marketInfo,tokenAddress);if(poolType==="long"){return marketInfo.shortToken}if(poolType==="short"){return marketInfo.longToken}return undefined}function getMaxSwapPathLiquidity(p){var e_2,_a;var marketsInfoData=p.marketsInfoData,swapPath=p.swapPath,initialCollateralAddress=p.initialCollateralAddress;if(swapPath.length===0){return BigNumber$1.from(0)}var minMarketLiquidity=MaxUint256$2;var tokenInAddress=initialCollateralAddress;try{for(var swapPath_1=__values$4(swapPath),swapPath_1_1=swapPath_1.next();!swapPath_1_1.done;swapPath_1_1=swapPath_1.next()){var marketAddress=swapPath_1_1.value;var marketInfo=getByKey(marketsInfoData,marketAddress);if(!marketInfo){return BigNumber$1.from(0)}var tokenOut=getOppositeCollateral(marketInfo,tokenInAddress);if(!tokenOut){return BigNumber$1.from(0)}var isTokenOutLong=getTokenPoolType(marketInfo,tokenOut.value)==="long";var liquidity=getAvailableUsdLiquidityForCollateral(marketInfo,isTokenOutLong);if(liquidity.lt(minMarketLiquidity)){minMarketLiquidity=liquidity}tokenInAddress=tokenOut.value}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(swapPath_1_1&&!swapPath_1_1.done&&(_a=swapPath_1.return))_a.call(swapPath_1)}finally{if(e_2)throw e_2.error}}if(minMarketLiquidity.eq(MaxUint256$2)){return BigNumber$1.from(0)}return minMarketLiquidity}function findAllPaths(marketsInfoData,graph,from,to,maxDepth){var e_3,_a;if(maxDepth===void 0){maxDepth=3}var routes=[];var edges=graph.abjacencyList[from];if(!(edges===null||edges===void 0?void 0:edges.length)){return undefined}try{for(var edges_1=__values$4(edges),edges_1_1=edges_1.next();!edges_1_1.done;edges_1_1=edges_1.next()){var e=edges_1_1.value;dfs(e,[],[],{})}}catch(e_3_1){e_3={error:e_3_1}}finally{try{if(edges_1_1&&!edges_1_1.done&&(_a=edges_1.return))_a.call(edges_1)}finally{if(e_3)throw e_3.error}}function dfs(edge,path,pathEdges,visited){var e_4,_a;if(path.length>=maxDepth||visited[edge.marketAddress]){return}visited[edge.marketAddress]=true;pathEdges.push(edge);path.push(edge.marketAddress);if(edge.to===to){routes.push({edged:pathEdges,path:path,liquidity:getMaxSwapPathLiquidity({marketsInfoData:marketsInfoData,swapPath:path,initialCollateralAddress:from})});return}var edges=graph.abjacencyList[edge.to];if(!(edges===null||edges===void 0?void 0:edges.length)){return}try{for(var edges_2=__values$4(edges),edges_2_1=edges_2.next();!edges_2_1.done;edges_2_1=edges_2.next()){var e=edges_2_1.value;dfs(e,__spreadArray$5([],__read$6(path),false),__spreadArray$5([],__read$6(pathEdges),false),__assign$7({},visited))}}catch(e_4_1){e_4={error:e_4_1}}finally{try{if(edges_2_1&&!edges_2_1.done&&(_a=edges_2.return))_a.call(edges_2)}finally{if(e_4)throw e_4.error}}}return routes}function getBestSwapPath(routes,usdIn,estimator){var e_5,_a;if(routes.length===0){return undefined}var bestPath=routes[0].path;var bestUsdOut=BigNumber$1.from(0);try{for(var routes_1=__values$4(routes),routes_1_1=routes_1.next();!routes_1_1.done;routes_1_1=routes_1.next()){var route=routes_1_1.value;try{var pathUsdOut=route.edged.reduce(function(prevUsdOut,edge){var usdOut=estimator(edge,prevUsdOut).usdOut;return usdOut},usdIn);if(pathUsdOut.gt(bestUsdOut)){bestPath=route.path;bestUsdOut=pathUsdOut}}catch(e){continue}}}catch(e_5_1){e_5={error:e_5_1}}finally{try{if(routes_1_1&&!routes_1_1.done&&(_a=routes_1.return))_a.call(routes_1)}finally{if(e_5)throw e_5.error}}return bestPath}function getSwapPathStats(p){var marketsInfoData=p.marketsInfoData,swapPath=p.swapPath,initialCollateralAddress=p.initialCollateralAddress,usdIn=p.usdIn,shouldUnwrapNativeToken=p.shouldUnwrapNativeToken,shouldApplyPriceImpact=p.shouldApplyPriceImpact,wrappedNativeTokenAddress=p.wrappedNativeTokenAddress;if(swapPath.length===0){return undefined}var swapSteps=[];var usdOut=usdIn;var tokenInAddress=initialCollateralAddress;var tokenOutAddress=initialCollateralAddress;var totalSwapPriceImpactDeltaUsd=BigNumber$1.from(0);var totalSwapFeeUsd=BigNumber$1.from(0);for(var i=0;i<swapPath.length;i++){var marketAddress=swapPath[i];var marketInfo=marketsInfoData[marketAddress];tokenOutAddress=getOppositeCollateral(marketInfo,tokenInAddress).value;if(i===swapPath.length-1&&shouldUnwrapNativeToken&&tokenOutAddress===wrappedNativeTokenAddress){tokenOutAddress=NATIVE_TOKEN_ADDRESS}var swapStep=getSwapStats({marketInfo:marketInfo,tokenInAddress:tokenInAddress,tokenOutAddress:tokenOutAddress,usdIn:usdOut,shouldApplyPriceImpact:shouldApplyPriceImpact});tokenInAddress=swapStep.tokenOutAddress;usdOut=swapStep.usdOut;totalSwapPriceImpactDeltaUsd=totalSwapPriceImpactDeltaUsd.add(swapStep.priceImpactDeltaUsd);totalSwapFeeUsd=totalSwapFeeUsd.add(swapStep.swapFeeUsd);swapSteps.push(swapStep)}var lastStep=swapSteps[swapSteps.length-1];var targetMarketAddress=lastStep.marketAddress;var amountOut=lastStep.amountOut;var totalFeesDeltaUsd=BigNumber$1.from(0).sub(totalSwapFeeUsd).add(totalSwapPriceImpactDeltaUsd);return{swapPath:swapPath,tokenInAddress:tokenInAddress,tokenOutAddress:tokenOutAddress,targetMarketAddress:targetMarketAddress,swapSteps:swapSteps,usdOut:usdOut,amountOut:amountOut,totalSwapFeeUsd:totalSwapFeeUsd,totalSwapPriceImpactDeltaUsd:totalSwapPriceImpactDeltaUsd,totalFeesDeltaUsd:totalFeesDeltaUsd}}function getTriggerThresholdType(orderType,isLong){if(orderType===OrderType.LimitIncrease){return isLong?TriggerThresholdType.Below:TriggerThresholdType.Above}if(orderType===OrderType.LimitDecrease){return isLong?TriggerThresholdType.Above:TriggerThresholdType.Below}if(orderType===OrderType.StopLossDecrease){return isLong?TriggerThresholdType.Below:TriggerThresholdType.Above}throw new Error("Invalid trigger order type")}function getIsEquivalentTokens(token1,token2){if(token1.value===token2.value){return true}if(token1.wrappedAddress===token2.value||token2.wrappedAddress===token1.value){return true}return false}function getShouldUseMaxPrice(isIncrease,isLong){return isIncrease?isLong:!isLong}function getMarkPrice(p){var prices=p.prices,isIncrease=p.isIncrease,isLong=p.isLong;var shouldUseMaxPrice=getShouldUseMaxPrice(isIncrease,isLong);return shouldUseMaxPrice?prices.maxPrice:prices.minPrice}function adjustForDecimals(amount,divDecimals,mulDecimals){return amount.mul(expandDecimals(1,mulDecimals)).div(expandDecimals(1,divDecimals))}function getAmountByRatio(p){var fromToken=p.fromToken,toToken=p.toToken,fromTokenAmount=p.fromTokenAmount,ratio=p.ratio,shouldInvertRatio=p.shouldInvertRatio;if(getIsEquivalentTokens(fromToken,toToken)||fromTokenAmount.eq(0)){return p.fromTokenAmount}var _ratio=shouldInvertRatio?PRECISION.mul(PRECISION).div(ratio):ratio;var adjustedDecimalsRatio=adjustForDecimals(_ratio,fromToken.decimals,toToken.decimals);return p.fromTokenAmount.mul(adjustedDecimalsRatio).div(PRECISION)}function getSwapAmountsByFromValue(p){var tokenIn=p.tokenIn,tokenOut=p.tokenOut,amountIn=p.amountIn,triggerRatio=p.triggerRatio,isLimit=p.isLimit,findSwapPath=p.findSwapPath;var priceIn=tokenIn.prices.minPrice;var priceOut=tokenOut.prices.maxPrice;var usdIn=convertToUsd(amountIn,tokenIn.decimals,priceIn);var amountOut=BigNumber$1.from(0);var usdOut=BigNumber$1.from(0);var minOutputAmount=BigNumber$1.from(0);var defaultAmounts={amountIn:amountIn,usdIn:usdIn,amountOut:amountOut,usdOut:usdOut,minOutputAmount:minOutputAmount,priceIn:priceIn,priceOut:priceOut,swapPathStats:undefined};if(amountIn.lte(0)){return defaultAmounts}if(getIsEquivalentTokens(tokenIn,tokenOut)){amountOut=amountIn;usdOut=usdIn;minOutputAmount=amountOut;return{amountIn:amountIn,usdIn:usdIn,amountOut:amountOut,usdOut:usdOut,minOutputAmount:minOutputAmount,priceIn:priceIn,priceOut:priceOut,swapPathStats:undefined}}var swapPathStats=findSwapPath(defaultAmounts.usdIn,{byLiquidity:isLimit});if(!swapPathStats){return defaultAmounts}if(isLimit){if(!triggerRatio){return defaultAmounts}amountOut=getAmountByRatio({fromToken:tokenIn,toToken:tokenOut,fromTokenAmount:amountIn,ratio:triggerRatio.ratio,shouldInvertRatio:triggerRatio.largestToken.value===tokenOut.value});usdOut=convertToUsd(amountOut,tokenOut.decimals,priceOut);usdOut=usdOut.sub(swapPathStats.totalSwapFeeUsd).add(swapPathStats.totalSwapPriceImpactDeltaUsd);amountOut=convertToTokenAmount(usdOut,tokenOut.decimals,priceOut);minOutputAmount=amountOut}else{usdOut=swapPathStats.usdOut;amountOut=swapPathStats.amountOut;minOutputAmount=amountOut}if(amountOut.lt(0)){amountOut=BigNumber$1.from(0);usdOut=BigNumber$1.from(0);minOutputAmount=BigNumber$1.from(0)}return{amountIn:amountIn,usdIn:usdIn,amountOut:amountOut,usdOut:usdOut,priceIn:priceIn,priceOut:priceOut,minOutputAmount:minOutputAmount,swapPathStats:swapPathStats}}function getSwapAmountsByToValue(p){var tokenIn=p.tokenIn,tokenOut=p.tokenOut,amountOut=p.amountOut,triggerRatio=p.triggerRatio,isLimit=p.isLimit,findSwapPath=p.findSwapPath;var priceIn=tokenIn.prices.minPrice;var priceOut=tokenOut.prices.maxPrice;var usdOut=convertToUsd(amountOut,tokenOut.decimals,priceOut);var minOutputAmount=amountOut;var amountIn=BigNumber$1.from(0);var usdIn=BigNumber$1.from(0);var defaultAmounts={amountIn:amountIn,usdIn:usdIn,amountOut:amountOut,usdOut:usdOut,minOutputAmount:minOutputAmount,priceIn:priceIn,priceOut:priceOut,swapPathStats:undefined};if(amountOut.lte(0)){return defaultAmounts}if(getIsEquivalentTokens(tokenIn,tokenOut)){amountIn=amountOut;usdIn=usdOut;return{amountIn:amountIn,usdIn:usdIn,amountOut:amountOut,usdOut:usdOut,minOutputAmount:minOutputAmount,priceIn:priceIn,priceOut:priceOut,swapPathStats:undefined}}var baseUsdIn=usdOut;var swapPathStats=findSwapPath(baseUsdIn,{byLiquidity:isLimit});if(!swapPathStats){return defaultAmounts}if(isLimit){if(!triggerRatio){return defaultAmounts}amountIn=getAmountByRatio({fromToken:tokenOut,toToken:tokenIn,fromTokenAmount:amountOut,ratio:triggerRatio.ratio,shouldInvertRatio:triggerRatio.largestToken.value===tokenIn.value});usdIn=convertToUsd(amountIn,tokenIn.decimals,priceIn);usdIn=usdIn.add(swapPathStats.totalSwapFeeUsd).sub(swapPathStats.totalSwapPriceImpactDeltaUsd);amountIn=convertToTokenAmount(usdIn,tokenIn.decimals,priceIn)}else{var adjustedUsdIn=swapPathStats.usdOut.gt(0)?baseUsdIn.mul(usdOut).div(swapPathStats.usdOut):BigNumber$1.from(0);usdIn=adjustedUsdIn;amountIn=convertToTokenAmount(usdIn,tokenIn.decimals,priceIn)}if(amountIn.lt(0)){amountIn=BigNumber$1.from(0);usdIn=BigNumber$1.from(0)}return{amountIn:amountIn,usdIn:usdIn,amountOut:amountOut,usdOut:usdOut,minOutputAmount:minOutputAmount,priceIn:priceIn,priceOut:priceOut,swapPathStats:swapPathStats}}function getNextOpenInterestParams(p){var currentLongUsd=p.currentLongUsd,currentShortUsd=p.currentShortUsd,usdDelta=p.usdDelta,isLong=p.isLong;var nextLongUsd=currentLongUsd;var nextShortUsd=currentShortUsd;if(isLong){nextLongUsd=currentLongUsd===null||currentLongUsd===void 0?void 0:currentLongUsd.add(usdDelta||0)}else{nextShortUsd=currentShortUsd===null||currentShortUsd===void 0?void 0:currentShortUsd.add(usdDelta||0)}return{currentLongUsd:currentLongUsd,currentShortUsd:currentShortUsd,nextLongUsd:nextLongUsd,nextShortUsd:nextShortUsd}}function getNextOpenInterestForVirtualInventory(p){var virtualInventory=p.virtualInventory,usdDelta=p.usdDelta,isLong=p.isLong;var currentLongUsd=BigNumber$1.from(0);var currentShortUsd=BigNumber$1.from(0);if(virtualInventory.gt(0)){currentShortUsd=virtualInventory}else{currentLongUsd=virtualInventory.mul(-1)}if(usdDelta.lt(0)){var offset=usdDelta.abs();currentLongUsd=currentLongUsd.add(offset);currentShortUsd=currentShortUsd.add(offset)}return getNextOpenInterestParams({currentLongUsd:currentLongUsd,currentShortUsd:currentShortUsd,usdDelta:usdDelta,isLong:isLong})}function getPriceImpactForPosition(marketInfo,sizeDeltaUsd,isLong,opts){if(opts===void 0){opts={}}var longInterestUsd=marketInfo.longInterestUsd,shortInterestUsd=marketInfo.shortInterestUsd;var _a=getNextOpenInterestParams({currentLongUsd:longInterestUsd,currentShortUsd:shortInterestUsd,usdDelta:sizeDeltaUsd,isLong:isLong}),currentLongUsd=_a.currentLongUsd,currentShortUsd=_a.currentShortUsd,nextLongUsd=_a.nextLongUsd,nextShortUsd=_a.nextShortUsd;var priceImpactUsd=getPriceImpactUsd({currentLongUsd:currentLongUsd,currentShortUsd:currentShortUsd,nextLongUsd:nextLongUsd,nextShortUsd:nextShortUsd,factorPositive:marketInfo.positionImpactFactorPositive,factorNegative:marketInfo.positionImpactFactorNegative,exponentFactor:marketInfo.positionImpactExponentFactor,fallbackToZero:opts.fallbackToZero});if(priceImpactUsd.gt(0)){return priceImpactUsd}if(!marketInfo.virtualInventoryForPositions.abs().gt(0)){return priceImpactUsd}var virtualInventoryParams=getNextOpenInterestForVirtualInventory({virtualInventory:marketInfo.virtualInventoryForPositions,usdDelta:sizeDeltaUsd,isLong:isLong});var priceImpactUsdForVirtualInventory=getPriceImpactUsd({currentLongUsd:virtualInventoryParams.currentLongUsd,currentShortUsd:virtualInventoryParams.currentShortUsd,nextLongUsd:virtualInventoryParams.nextLongUsd,nextShortUsd:virtualInventoryParams.nextShortUsd,factorPositive:marketInfo.positionImpactFactorPositive,factorNegative:marketInfo.positionImpactFactorNegative,exponentFactor:marketInfo.positionImpactExponentFactor,fallbackToZero:opts.fallbackToZero});return priceImpactUsdForVirtualInventory.lt(priceImpactUsd)?priceImpactUsdForVirtualInventory:priceImpactUsd}function getPositionFee(marketInfo,sizeDeltaUsd,forPositiveImpact,referralInfo){var factor=forPositiveImpact?marketInfo.positionFeeFactorForPositiveImpact:marketInfo.positionFeeFactorForNegativeImpact;var positionFeeUsd=applyFactor(sizeDeltaUsd,factor);if(!referralInfo){return{positionFeeUsd:positionFeeUsd,discountUsd:BigNumber$1.from(0),totalRebateUsd:BigNumber$1.from(0)}}var totalRebateUsd=applyFactor(positionFeeUsd,referralInfo.totalRebateFactor);var discountUsd=applyFactor(totalRebateUsd,referralInfo.discountFactor);positionFeeUsd=positionFeeUsd.sub(discountUsd);return{positionFeeUsd:positionFeeUsd,discountUsd:discountUsd,totalRebateUsd:totalRebateUsd}}function getPositionPendingFeesUsd(p){var pendingFundingFeesUsd=p.pendingFundingFeesUsd,pendingBorrowingFeesUsd=p.pendingBorrowingFeesUsd;return pendingBorrowingFeesUsd.add(pendingFundingFeesUsd)}function getLeverage(p){var pnl=p.pnl,sizeInUsd=p.sizeInUsd,collateralUsd=p.collateralUsd,pendingBorrowingFeesUsd=p.pendingBorrowingFeesUsd,pendingFundingFeesUsd=p.pendingFundingFeesUsd;var totalPendingFeesUsd=getPositionPendingFeesUsd({pendingFundingFeesUsd:pendingFundingFeesUsd,pendingBorrowingFeesUsd:pendingBorrowingFeesUsd});var remainingCollateralUsd=collateralUsd.add(pnl||0).sub(totalPendingFeesUsd);if(remainingCollateralUsd.lte(0)){return undefined}return sizeInUsd.mul(BASIS_POINTS_DIVISOR).div(remainingCollateralUsd)}function getPriceImpactByAcceptablePrice(p){var sizeDeltaUsd=p.sizeDeltaUsd,acceptablePrice=p.acceptablePrice,markPrice=p.indexPrice,isLong=p.isLong,isIncrease=p.isIncrease;var shouldFlipPriceDiff=isIncrease?!isLong:isLong;var priceDiff=markPrice.sub(acceptablePrice).mul(shouldFlipPriceDiff?-1:1);var priceImpactDeltaUsd=sizeDeltaUsd.mul(priceDiff).div(acceptablePrice);var priceImpactDeltaAmount=priceImpactDeltaUsd.div(markPrice);return{priceImpactDeltaUsd:priceImpactDeltaUsd,priceImpactDeltaAmount:priceImpactDeltaAmount}}function getCappedPositionImpactUsd(marketInfo,sizeDeltaUsd,isLong,opts){if(opts===void 0){opts={}}var priceImpactDeltaUsd=getPriceImpactForPosition(marketInfo,sizeDeltaUsd,isLong,opts);if(priceImpactDeltaUsd.lt(0)){return priceImpactDeltaUsd}var indexToken=marketInfo.indexToken;var impactPoolAmount=marketInfo===null||marketInfo===void 0?void 0:marketInfo.positionImpactPoolAmount;var maxPriceImpactUsdBasedOnImpactPool=convertToUsd(impactPoolAmount,indexToken.decimals,indexToken.prices.minPrice);var cappedImpactUsd=priceImpactDeltaUsd;if(cappedImpactUsd.gt(maxPriceImpactUsdBasedOnImpactPool)){cappedImpactUsd=maxPriceImpactUsdBasedOnImpactPool}var maxPriceImpactFactor=marketInfo.maxPositionImpactFactorPositive;var maxPriceImpactUsdBasedOnMaxPriceImpactFactor=applyFactor(sizeDeltaUsd.abs(),maxPriceImpactFactor);if(cappedImpactUsd.gt(maxPriceImpactUsdBasedOnMaxPriceImpactFactor)){cappedImpactUsd=maxPriceImpactUsdBasedOnMaxPriceImpactFactor}return cappedImpactUsd}function getBasisPoints(numerator,denominator){return numerator.mul(BASIS_POINTS_DIVISOR).div(denominator)}function getAcceptablePriceInfo(p){var marketInfo=p.marketInfo,isIncrease=p.isIncrease,isLong=p.isLong,indexPrice=p.indexPrice,sizeDeltaUsd=p.sizeDeltaUsd,maxNegativePriceImpactBps=p.maxNegativePriceImpactBps;var indexToken=marketInfo.indexToken;var values={acceptablePrice:BigNumber$1.from(0),acceptablePriceDeltaBps:BigNumber$1.from(0),priceImpactDeltaAmount:BigNumber$1.from(0),priceImpactDeltaUsd:BigNumber$1.from(0),priceImpactDiffUsd:BigNumber$1.from(0)};if(!sizeDeltaUsd.gt(0)){return values}var shouldFlipPriceImpact=getShouldUseMaxPrice(p.isIncrease,p.isLong);if(maxNegativePriceImpactBps===null||maxNegativePriceImpactBps===void 0?void 0:maxNegativePriceImpactBps.gt(0)){var priceDelta_1=indexPrice.mul(maxNegativePriceImpactBps).div(BASIS_POINTS_DIVISOR);priceDelta_1=shouldFlipPriceImpact?priceDelta_1===null||priceDelta_1===void 0?void 0:priceDelta_1.mul(-1):priceDelta_1;values.acceptablePrice=indexPrice.sub(priceDelta_1);values.acceptablePriceDeltaBps=maxNegativePriceImpactBps.mul(-1);var priceImpact=getPriceImpactByAcceptablePrice({sizeDeltaUsd:sizeDeltaUsd,acceptablePrice:values.acceptablePrice,indexPrice:indexPrice,isLong:isLong,isIncrease:isIncrease});values.priceImpactDeltaUsd=priceImpact.priceImpactDeltaUsd;values.priceImpactDeltaAmount=priceImpact.priceImpactDeltaAmount;return values}values.priceImpactDeltaUsd=getCappedPositionImpactUsd(marketInfo,isIncrease?sizeDeltaUsd:sizeDeltaUsd.mul(-1),isLong,{fallbackToZero:!isIncrease});if(!isIncrease&&values.priceImpactDeltaUsd.lt(0)){var minPriceImpactUsd=applyFactor(sizeDeltaUsd,marketInfo.maxPositionImpactFactorNegative).mul(-1);if(values.priceImpactDeltaUsd.lt(minPriceImpactUsd)){values.priceImpactDiffUsd=minPriceImpactUsd.sub(values.priceImpactDeltaUsd);values.priceImpactDeltaUsd=minPriceImpactUsd}}if(values.priceImpactDeltaUsd.gt(0)){values.priceImpactDeltaAmount=convertToTokenAmount(values.priceImpactDeltaUsd,indexToken.decimals,indexToken.prices.maxPrice)}else{values.priceImpactDeltaAmount=roundUpMagnitudeDivision(values.priceImpactDeltaUsd.mul(expandDecimals(1,indexToken.decimals)),indexToken.prices.minPrice)}var priceImpactForPriceAdjustment=shouldFlipPriceImpact?values.priceImpactDeltaUsd.mul(-1):values.priceImpactDeltaUsd;values.acceptablePrice=indexPrice.mul(sizeDeltaUsd.add(priceImpactForPriceAdjustment)).div(sizeDeltaUsd);var priceDelta=indexPrice.sub(values.acceptablePrice).mul(shouldFlipPriceImpact?1:-1);values.acceptablePriceDeltaBps=getBasisPoints(priceDelta,p.indexPrice);return values}function getIncreasePositionAmounts(p){var marketInfo=p.marketInfo,indexToken=p.indexToken,initialCollateralToken=p.initialCollateralToken,collateralToken=p.collateralToken,initialCollateralAmount=p.initialCollateralAmount,indexTokenAmount=p.indexTokenAmount,isLong=p.isLong,leverage=p.leverage,triggerPrice=p.triggerPrice,position=p.position,savedAcceptablePriceImpactBps=p.savedAcceptablePriceImpactBps,findSwapPath=p.findSwapPath,userReferralInfo=p.userReferralInfo,strategy=p.strategy;var values={initialCollateralAmount:BigNumber$1.from(0),initialCollateralUsd:BigNumber$1.from(0),collateralDeltaAmount:BigNumber$1.from(0),collateralDeltaUsd:BigNumber$1.from(0),swapPathStats:undefined,indexTokenAmount:BigNumber$1.from(0),sizeDeltaUsd:BigNumber$1.from(0),sizeDeltaInTokens:BigNumber$1.from(0),estimatedLeverage:BigNumber$1.from(0),indexPrice:BigNumber$1.from(0),initialCollateralPrice:BigNumber$1.from(0),collateralPrice:BigNumber$1.from(0),triggerPrice:BigNumber$1.from(0),acceptablePrice:BigNumber$1.from(0),acceptablePriceDeltaBps:BigNumber$1.from(0),positionFeeUsd:BigNumber$1.from(0),feeDiscountUsd:BigNumber$1.from(0),borrowingFeeUsd:BigNumber$1.from(0),fundingFeeUsd:BigNumber$1.from(0),positionPriceImpactDeltaUsd:BigNumber$1.from(0)};var isLimit=triggerPrice===null||triggerPrice===void 0?void 0:triggerPrice.gt(0);if(triggerPrice===null||triggerPrice===void 0?void 0:triggerPrice.gt(0)){values.triggerPrice=triggerPrice;values.triggerThresholdType=getTriggerThresholdType(OrderType.LimitIncrease,isLong);values.indexPrice=triggerPrice;values.initialCollateralPrice=getIsEquivalentTokens(indexToken,initialCollateralToken)?triggerPrice:initialCollateralToken.prices.minPrice;values.collateralPrice=getIsEquivalentTokens(indexToken,collateralToken)?triggerPrice:collateralToken.prices.minPrice}else{values.indexPrice=getMarkPrice({prices:indexToken.prices,isIncrease:true,isLong:isLong});values.initialCollateralPrice=initialCollateralToken.prices.minPrice;values.collateralPrice=collateralToken.prices.minPrice}values.borrowingFeeUsd=(position===null||position===void 0?void 0:position.pendingBorrowingFeesUsd)||BigNumber$1.from(0);values.fundingFeeUsd=(position===null||position===void 0?void 0:position.pendingFundingFeesUsd)||BigNumber$1.from(0);if(!values.indexPrice.gt(0)||!values.initialCollateralPrice.gt(0)||!values.collateralPrice.gt(0)){return values}if(strategy==="leverageByCollateral"&&leverage&&(initialCollateralAmount===null||initialCollateralAmount===void 0?void 0:initialCollateralAmount.gt(0))){values.estimatedLeverage=leverage;values.initialCollateralAmount=initialCollateralAmount;values.initialCollateralUsd=convertToUsd(initialCollateralAmount,initialCollateralToken.decimals,values.initialCollateralPrice);var swapAmounts=getSwapAmountsByFromValue({tokenIn:initialCollateralToken,tokenOut:collateralToken,amountIn:initialCollateralAmount,isLimit:false,findSwapPath:findSwapPath});values.swapPathStats=swapAmounts.swapPathStats;var baseCollateralUsd=convertToUsd(swapAmounts.amountOut,collateralToken.decimals,values.collateralPrice);var baseSizeDeltaUsd=baseCollateralUsd.mul(leverage).div(BASIS_POINTS_DIVISOR);var basePriceImpactDeltaUsd=getPriceImpactForPosition(marketInfo,baseSizeDeltaUsd,isLong);var basePositionFeeInfo=getPositionFee(marketInfo,baseSizeDeltaUsd,basePriceImpactDeltaUsd.gt(0),userReferralInfo);values.sizeDeltaUsd=baseCollateralUsd.sub(basePositionFeeInfo.positionFeeUsd).mul(leverage).div(BASIS_POINTS_DIVISOR);values.indexTokenAmount=convertToTokenAmount(values.sizeDeltaUsd,indexToken.decimals,values.indexPrice);var positionFeeInfo=getPositionFee(marketInfo,values.sizeDeltaUsd,basePriceImpactDeltaUsd.gt(0),userReferralInfo);values.positionFeeUsd=positionFeeInfo.positionFeeUsd;values.feeDiscountUsd=positionFeeInfo.discountUsd;values.collateralDeltaUsd=baseCollateralUsd.sub(values.positionFeeUsd).sub(values.borrowingFeeUsd).sub(values.fundingFeeUsd);values.collateralDeltaAmount=convertToTokenAmount(values.collateralDeltaUsd,collateralToken.decimals,values.collateralPrice)}else if(strategy==="leverageBySize"&&leverage&&(indexTokenAmount===null||indexTokenAmount===void 0?void 0:indexTokenAmount.gt(0))){values.estimatedLeverage=leverage;values.indexTokenAmount=indexTokenAmount;values.sizeDeltaUsd=convertToUsd(indexTokenAmount,indexToken.decimals,values.indexPrice);var basePriceImpactDeltaUsd=getPriceImpactForPosition(marketInfo,values.sizeDeltaUsd,isLong);var positionFeeInfo=getPositionFee(marketInfo,values.sizeDeltaUsd,basePriceImpactDeltaUsd.gt(0),userReferralInfo);values.positionFeeUsd=positionFeeInfo.positionFeeUsd;values.feeDiscountUsd=positionFeeInfo.discountUsd;values.collateralDeltaUsd=values.sizeDeltaUsd.mul(BASIS_POINTS_DIVISOR).div(leverage);values.collateralDeltaAmount=convertToTokenAmount(values.collateralDeltaUsd,collateralToken.decimals,values.collateralPrice);var baseCollateralUsd=values.collateralDeltaUsd.add(values.positionFeeUsd).add(values.borrowingFeeUsd).add(values.fundingFeeUsd);var baseCollateralAmount=convertToTokenAmount(baseCollateralUsd,collateralToken.decimals,values.collateralPrice);var swapAmounts=getSwapAmountsByToValue({tokenIn:initialCollateralToken,tokenOut:collateralToken,amountOut:baseCollateralAmount,isLimit:false,findSwapPath:findSwapPath});values.swapPathStats=swapAmounts.swapPathStats;values.initialCollateralAmount=swapAmounts.amountIn;values.initialCollateralUsd=convertToUsd(values.initialCollateralAmount,initialCollateralToken.decimals,values.initialCollateralPrice)}else if(strategy==="independent"){if(indexTokenAmount===null||indexTokenAmount===void 0?void 0:indexTokenAmount.gt(0)){values.indexTokenAmount=indexTokenAmount;values.sizeDeltaUsd=convertToUsd(indexTokenAmount,indexToken.decimals,values.indexPrice);var basePriceImpactDeltaUsd=getPriceImpactForPosition(marketInfo,values.sizeDeltaUsd,isLong);var positionFeeInfo=getPositionFee(marketInfo,values.sizeDeltaUsd,basePriceImpactDeltaUsd.gt(0),userReferralInfo);values.positionFeeUsd=positionFeeInfo.positionFeeUsd;values.feeDiscountUsd=positionFeeInfo.discountUsd}if(initialCollateralAmount===null||initialCollateralAmount===void 0?void 0:initialCollateralAmount.gt(0)){values.initialCollateralAmount=initialCollateralAmount;values.initialCollateralUsd=convertToUsd(initialCollateralAmount,initialCollateralToken.decimals,values.initialCollateralPrice);var swapAmounts=getSwapAmountsByFromValue({tokenIn:initialCollateralToken,tokenOut:collateralToken,amountIn:initialCollateralAmount,isLimit:false,findSwapPath:findSwapPath});values.swapPathStats=swapAmounts.swapPathStats;var baseCollateralUsd=convertToUsd(swapAmounts.amountOut,collateralToken.decimals,values.collateralPrice);values.collateralDeltaUsd=baseCollateralUsd.sub(values.positionFeeUsd).sub(values.borrowingFeeUsd).sub(values.fundingFeeUsd);values.collateralDeltaAmount=convertToTokenAmount(values.collateralDeltaUsd,collateralToken.decimals,values.collateralPrice)}values.estimatedLeverage=getLeverage({sizeInUsd:values.sizeDeltaUsd,collateralUsd:values.collateralDeltaUsd,pnl:BigNumber$1.from(0),pendingBorrowingFeesUsd:BigNumber$1.from(0),pendingFundingFeesUsd:BigNumber$1.from(0)})}var acceptablePriceInfo=getAcceptablePriceInfo({marketInfo:marketInfo,isIncrease:true,isLong:isLong,indexPrice:values.indexPrice,sizeDeltaUsd:values.sizeDeltaUsd});values.positionPriceImpactDeltaUsd=acceptablePriceInfo.priceImpactDeltaUsd;values.acceptablePrice=acceptablePriceInfo.acceptablePrice;values.acceptablePriceDeltaBps=acceptablePriceInfo.acceptablePriceDeltaBps;if(isLimit){var limitAcceptablePriceInfo=getAcceptablePriceInfo({marketInfo:marketInfo,isIncrease:true,isLong:isLong,indexPrice:values.indexPrice,sizeDeltaUsd:values.sizeDeltaUsd,maxNegativePriceImpactBps:savedAcceptablePriceImpactBps});values.acceptablePrice=limitAcceptablePriceInfo.acceptablePrice;values.acceptablePriceDeltaBps=limitAcceptablePriceInfo.acceptablePriceDeltaBps;if(values.positionPriceImpactDeltaUsd.lt(limitAcceptablePriceInfo.priceImpactDeltaUsd)){values.positionPriceImpactDeltaUsd=limitAcceptablePriceInfo.priceImpactDeltaUsd}}var priceImpactAmount=BigNumber$1.from(0);if(values.positionPriceImpactDeltaUsd.gt(0)){var price=(triggerPrice===null||triggerPrice===void 0?void 0:triggerPrice.gt(0))?triggerPrice:indexToken.prices.maxPrice;priceImpactAmount=convertToTokenAmount(values.positionPriceImpactDeltaUsd,indexToken.decimals,price)}else{var price=(triggerPrice===null||triggerPrice===void 0?void 0:triggerPrice.gt(0))?triggerPrice:indexToken.prices.minPrice;priceImpactAmount=convertToTokenAmount(values.positionPriceImpactDeltaUsd,indexToken.decimals,price)}values.sizeDeltaInTokens=convertToTokenAmount(values.sizeDeltaUsd,indexToken.decimals,values.indexPrice);if(isLong){values.sizeDeltaInTokens=values.sizeDeltaInTokens.add(priceImpactAmount)}else{values.sizeDeltaInTokens=values.sizeDeltaInTokens.sub(priceImpactAmount)}return values}function getTokenData(tokensData,address,convertTo){if(!address||!(tokensData===null||tokensData===void 0?void 0:tokensData[address])){return undefined}var token=tokensData[address];if(convertTo==="wrapped"&&token.isNative&&token.wrappedAddress){return tokensData[token.wrappedAddress]}if(convertTo==="native"&&token.isWrapped){return tokensData[NATIVE_TOKEN_ADDRESS]}return token}function adaptToV1TokenInfo(tokenData){var _a,_b;return __assign$7(__assign$7({},tokenData),{minPrice:(_a=tokenData.prices)===null||_a===void 0?void 0:_a.minPrice,maxPrice:(_b=tokenData.prices)===null||_b===void 0?void 0:_b.maxPrice})}function adaptToV1InfoTokens(tokensData){var infoTokens=Object.keys(tokensData).reduce(function(acc,address){var tokenData=getTokenData(tokensData,address);acc[address]=adaptToV1TokenInfo(tokenData);return acc},{});return infoTokens}var getAvailabeTokenData=function(_a){var e_6,_b;var chainId=_a.chainId,marketsInfoData=_a.marketsInfoData,tokensData=_a.tokensData;var marketsInfo=Object.values(marketsInfoData||{}).filter(function(market){return!market.isDisabled}).sort(function(a,b){return a.indexToken.symbol.localeCompare(b.indexToken.symbol)});var allMarkets=new Set;var tokensMap=getTokensMap(chainId);var nativeToken=getByKey(tokensData,NATIVE_TOKEN_ADDRESS);var indexTokens=new Set;var indexTokensWithPoolValue={};var collaterals=new Set;var longTokensWithPoolValue={};var shortTokensWithPoolValue={};try{for(var marketsInfo_1=__values$4(marketsInfo),marketsInfo_1_1=marketsInfo_1.next();!marketsInfo_1_1.done;marketsInfo_1_1=marketsInfo_1.next()){var marketInfo=marketsInfo_1_1.value;var longToken=marketInfo.longToken;var shortToken=marketInfo.shortToken;var indexToken=marketInfo.indexToken;if(marketInfo.isDisabled||!longToken||!shortToken||!indexToken){continue}if((longToken.isWrapped||shortToken.isWrapped)&&nativeToken){collaterals.add(nativeToken)}collaterals.add(longToken);collaterals.add(shortToken);var longPoolAmountUsd=convertToUsd(marketInfo.longPoolAmount,marketInfo.longToken.decimals,getMidPrice(marketInfo.longToken.prices));var shortPoolAmountUsd=convertToUsd(marketInfo.shortPoolAmount,marketInfo.shortToken.decimals,getMidPrice(marketInfo.shortToken.prices));longTokensWithPoolValue[longToken.value]=(longTokensWithPoolValue[longToken.value]||BigNumber$1.from(0)).add(longPoolAmountUsd);shortTokensWithPoolValue[shortToken.value]=(shortTokensWithPoolValue[shortToken.value]||BigNumber$1.from(0)).add(shortPoolAmountUsd);if(!marketInfo.isSpotOnly){indexTokens.add(indexToken);allMarkets.add(marketInfo);indexTokensWithPoolValue[indexToken.value]=(indexTokensWithPoolValue[indexToken.value]||BigNumber$1.from(0)).add(marketInfo.poolValueMax)}}}catch(e_6_1){e_6={error:e_6_1}}finally{try{if(marketsInfo_1_1&&!marketsInfo_1_1.done&&(_b=marketsInfo_1.return))_b.call(marketsInfo_1)}finally{if(e_6)throw e_6.error}}var sortedIndexTokensWithPoolValue=Object.keys(indexTokensWithPoolValue).sort(function(a,b){return indexTokensWithPoolValue[b].gt(indexTokensWithPoolValue[a])?1:-1});var sortedAllMarkets=Array.from(allMarkets).sort(function(a,b){return sortedIndexTokensWithPoolValue.indexOf(a.indexToken.value)-sortedIndexTokensWithPoolValue.indexOf(b.indexToken.value)});var sortedLongTokens=Object.keys(longTokensWithPoolValue).sort(function(a,b){return longTokensWithPoolValue[b].gt(longTokensWithPoolValue[a])?1:-1});var sortedShortTokens=Object.keys(shortTokensWithPoolValue).sort(function(a,b){return shortTokensWithPoolValue[b].gt(shortTokensWithPoolValue[a])?1:-1});var sortedLongAndShortTokens=sortedLongTokens.concat(sortedShortTokens);return{tokensMap:tokensMap,swapTokens:Array.from(collaterals),indexTokens:Array.from(indexTokens),infoTokens:adaptToV1InfoTokens(tokensData||{}),sortedIndexTokensWithPoolValue:sortedIndexTokensWithPoolValue,sortedLongAndShortTokens:sortedLongAndShortTokens,sortedAllMarkets:sortedAllMarkets}};var ACCOUNT_POSITION_LIST_KEY=hashString("ACCOUNT_POSITION_LIST");function accountPositionListKey(account){return hashData(["bytes32","address"],[ACCOUNT_POSITION_LIST_KEY,account])}function getTradeFlags(tradeType,tradeMode){var isLong=tradeType===TradeType.Long;var isShort=tradeType===TradeType.Short;var isSwap=tradeType===TradeType.Swap;var isPosition=isLong||isShort;var isMarket=tradeMode===TradeMode.Market;var isLimit=tradeMode===TradeMode.Limit;var isTrigger=tradeMode===TradeMode.Trigger;var isIncrease=isPosition&&(isMarket||isLimit);return{isLong:isLong,isShort:isShort,isSwap:isSwap,isPosition:isPosition,isIncrease:isIncrease,isMarket:isMarket,isLimit:isLimit,isTrigger:isTrigger}}function getPositionKey(account,marketAddress,collateralAddress,isLong){return"".concat(account,":").concat(marketAddress,":").concat(collateralAddress,":").concat(isLong)}function hashedPositionKey(account,market,collateralToken,isLong){return hashData(["address","address","address","bool"],[account,market,collateralToken,isLong])}var getKeysAndPricesParams=function(p){var e_7,_a,e_8,_b,e_9,_c;var account=p.account,marketsInfoData=p.marketsInfoData,tokensData=p.tokensData,existingPositionsKeysSet=p.existingPositionsKeysSet;var values={allPositionsKeys:[],contractPositionsKeys:[],marketsPrices:[]};if(!account||!marketsInfoData||!tokensData){return values}var markets=Object.values(marketsInfoData);try{for(var markets_2=__values$4(markets),markets_2_1=markets_2.next();!markets_2_1.done;markets_2_1=markets_2.next()){var market=markets_2_1.value;var marketPrices=getContractMarketPrices(tokensData,market);if(!marketPrices){continue}var collaterals=market.isSameCollaterals?[market.longTokenAddress]:[market.longTokenAddress,market.shortTokenAddress];try{for(var collaterals_1=(e_8=void 0,__values$4(collaterals)),collaterals_1_1=collaterals_1.next();!collaterals_1_1.done;collaterals_1_1=collaterals_1.next()){var collateralAddress=collaterals_1_1.value;try{for(var _d=(e_9=void 0,__values$4([true,false])),_e=_d.next();!_e.done;_e=_d.next()){var isLong=_e.value;var positionKey=getPositionKey(account,market.marketTokenAddress,collateralAddress,isLong);values.allPositionsKeys.push(positionKey);var contractPositionKey=hashedPositionKey(account,market.marketTokenAddress,collateralAddress,isLong);if(existingPositionsKeysSet===null||existingPositionsKeysSet===void 0?void 0:existingPositionsKeysSet.has(contractPositionKey)){values.contractPositionsKeys.push(contractPositionKey);values.marketsPrices.push(marketPrices)}}}catch(e_9_1){e_9={error:e_9_1}}finally{try{if(_e&&!_e.done&&(_c=_d.return))_c.call(_d)}finally{if(e_9)throw e_9.error}}}}catch(e_8_1){e_8={error:e_8_1}}finally{try{if(collaterals_1_1&&!collaterals_1_1.done&&(_b=collaterals_1.return))_b.call(collaterals_1)}finally{if(e_8)throw e_8.error}}}}catch(e_7_1){e_7={error:e_7_1}}finally{try{if(markets_2_1&&!markets_2_1.done&&(_a=markets_2.return))_a.call(markets_2)}finally{if(e_7)throw e_7.error}}return values};function getFeeItem(feeDeltaUsd,basis){if(!feeDeltaUsd)return undefined;return{deltaUsd:feeDeltaUsd,bps:(basis===null||basis===void 0?void 0:basis.gt(0))?getBasisPoints(feeDeltaUsd,basis):BigNumber$1.from(0)}}function getTotalFeeItem(feeItems){var totalFeeItem={deltaUsd:BigNumber$1.from(0),bps:BigNumber$1.from(0)};feeItems.filter(Boolean).forEach(function(feeItem){totalFeeItem.deltaUsd=totalFeeItem.deltaUsd.add(feeItem.deltaUsd);totalFeeItem.bps=totalFeeItem.bps.add(feeItem.bps)});return totalFeeItem}function getTradeFees(p){var isIncrease=p.isIncrease,initialCollateralUsd=p.initialCollateralUsd,sizeDeltaUsd=p.sizeDeltaUsd,swapSteps=p.swapSteps,positionFeeUsd=p.positionFeeUsd,swapPriceImpactDeltaUsd=p.swapPriceImpactDeltaUsd,positionPriceImpactDeltaUsd=p.positionPriceImpactDeltaUsd,borrowingFeeUsd=p.borrowingFeeUsd,fundingFeeUsd=p.fundingFeeUsd,feeDiscountUsd=p.feeDiscountUsd,swapProfitFeeUsd=p.swapProfitFeeUsd;var swapFees=initialCollateralUsd.gt(0)?swapSteps.map(function(step){return{tokenInAddress:step.tokenInAddress,tokenOutAddress:step.tokenOutAddress,marketAddress:step.marketAddress,deltaUsd:step.swapFeeUsd.mul(-1),bps:!step.usdIn.eq(0)?getBasisPoints(step.swapFeeUsd.mul(-1),step.usdIn):BigNumber$1.from(0)}}):undefined;var swapProfitFee=getFeeItem(swapProfitFeeUsd.mul(-1),initialCollateralUsd);var swapPriceImpact=getFeeItem(swapPriceImpactDeltaUsd,initialCollateralUsd);var positionFeeBeforeDiscount=getFeeItem(positionFeeUsd.add(feeDiscountUsd).mul(-1),sizeDeltaUsd);var positionFeeAfterDiscount=getFeeItem(positionFeeUsd.mul(-1),sizeDeltaUsd);var borrowFee=getFeeItem(borrowingFeeUsd.mul(-1),initialCollateralUsd);var fundingFee=getFeeItem(fundingFeeUsd.mul(-1),initialCollateralUsd);var positionPriceImpact=getFeeItem(positionPriceImpactDeltaUsd,sizeDeltaUsd);var totalFees=getTotalFeeItem(__spreadArray$5(__spreadArray$5([],__read$6(swapFees||[]),false),[swapProfitFee,swapPriceImpact,positionFeeAfterDiscount,positionPriceImpact,borrowFee,fundingFee],false));var payTotalFees=getTotalFeeItem(__spreadArray$5(__spreadArray$5([],__read$6(swapFees||[]),false),[swapProfitFee,swapPriceImpact,positionFeeAfterDiscount,borrowFee,fundingFee,!isIncrease?positionPriceImpact:undefined],false));return{totalFees:totalFees,payTotalFees:payTotalFees,swapFees:swapFees,swapProfitFee:swapProfitFee,swapPriceImpact:swapPriceImpact,positionFee:positionFeeBeforeDiscount,positionPriceImpact:positionPriceImpact,borrowFee:borrowFee,fundingFee:fundingFee,feeDiscountUsd:feeDiscountUsd}}function getIsWrap(token1,token2){return token1.isNative&&token2.isWrapped}function getIsUnwrap(token1,token2){return token1.isWrapped&&token2.isNative}function estimateExecuteIncreaseOrderGasLimit(gasLimits,order){var _a;var swapsCount=((_a=order.swapPath)===null||_a===void 0?void 0:_a.length)||0;return gasLimits.increaseOrder.add(gasLimits.singleSwap.mul(swapsCount)).add(order.callbackGasLimit||0)}function getHighExecutionFee(chainId){return HIGH_EXECUTION_FEES_MAP[chainId]||3}function getExecutionFee(chainId,gasLimts,tokensData,estimatedGasLimit,gasPrice){var nativeToken=getTokenData(tokensData,NATIVE_TOKEN_ADDRESS);if(!nativeToken)return undefined;var baseGasLimit=gasLimts.estimatedFeeBaseGasLimit;var multiplierFactor=gasLimts.estimatedFeeMultiplierFactor;var adjustedGasLimit=baseGasLimit.add(applyFactor(estimatedGasLimit,multiplierFactor));var feeTokenAmount=adjustedGasLimit.mul(gasPrice);var feeUsd=convertToUsd(feeTokenAmount,nativeToken.decimals,nativeToken.prices.minPrice);var isFeeHigh=feeUsd.gt(expandDecimals(getHighExecutionFee(chainId),USD_DECIMALS));var warning=isFeeHigh?'The network cost to send transactions is high at the moment, please check the "Max Execution Fee" value before proceeding.':undefined;return{feeUsd:feeUsd,feeTokenAmount:feeTokenAmount,feeToken:nativeToken,warning:warning}}var getOptimisticPositions=function(_a){var positionsData=_a.positionsData,allPositionsKeys=_a.allPositionsKeys;if(!allPositionsKeys){return undefined}return allPositionsKeys.reduce(function(acc,key){var position;if(getByKey(positionsData,key)){position=__assign$7({},getByKey(positionsData,key))}else{return acc}if(position.sizeInUsd.gt(0)){acc[key]=position}return acc},{})};function getPositionValueUsd(p){var indexToken=p.indexToken,sizeInTokens=p.sizeInTokens,markPrice=p.markPrice;return convertToUsd(sizeInTokens,indexToken.decimals,markPrice)}function getPositionPnlUsd(p){var marketInfo=p.marketInfo,sizeInUsd=p.sizeInUsd,sizeInTokens=p.sizeInTokens,markPrice=p.markPrice,isLong=p.isLong;var positionValueUsd=getPositionValueUsd({indexToken:marketInfo.indexToken,sizeInTokens:sizeInTokens,markPrice:markPrice});var totalPnl=isLong?positionValueUsd.sub(sizeInUsd):sizeInUsd.sub(positionValueUsd);if(totalPnl.lte(0)){return totalPnl}var poolPnl=isLong?p.marketInfo.pnlLongMax:p.marketInfo.pnlShortMax;var poolUsd=getPoolUsdWithoutPnl(marketInfo,isLong,"minPrice");var cappedPnl=getCappedPoolPnl({marketInfo:marketInfo,poolUsd:poolUsd,isLong:isLong,maximize:true});var WEI_PRECISION=expandDecimals(1,18);if(!cappedPnl.eq(poolPnl)&&cappedPnl.gt(0)&&poolPnl.gt(0)){totalPnl=totalPnl.mul(cappedPnl.div(WEI_PRECISION)).div(poolPnl.div(WEI_PRECISION))}return totalPnl}function getCappedPoolPnl(p){var marketInfo=p.marketInfo,poolUsd=p.poolUsd,isLong=p.isLong,maximize=p.maximize;var poolPnl;if(isLong){poolPnl=maximize?marketInfo.pnlLongMax:marketInfo.pnlLongMin}else{poolPnl=maximize?marketInfo.pnlShortMax:marketInfo.pnlShortMin}if(poolPnl.lt(0)){return poolPnl}var maxPnlFactor=isLong?marketInfo.maxPnlFactorForTradersLong:marketInfo.maxPnlFactorForTradersShort;var maxPnl=applyFactor(poolUsd,maxPnlFactor);return poolPnl.gt(maxPnl)?maxPnl:poolPnl}function getLiquidationPrice(p){var sizeInUsd=p.sizeInUsd,sizeInTokens=p.sizeInTokens,collateralUsd=p.collateralUsd,collateralAmount=p.collateralAmount,marketInfo=p.marketInfo,collateralToken=p.collateralToken,pendingFundingFeesUsd=p.pendingFundingFeesUsd,pendingBorrowingFeesUsd=p.pendingBorrowingFeesUsd,minCollateralUsd=p.minCollateralUsd,isLong=p.isLong,userReferralInfo=p.userReferralInfo,useMaxPriceImpact=p.useMaxPriceImpact;if(!sizeInUsd.gt(0)||!sizeInTokens.gt(0)){return undefined}var indexToken=marketInfo.indexToken;var closingFeeUsd=getPositionFee(marketInfo,sizeInUsd,false,userReferralInfo).positionFeeUsd;var totalPendingFeesUsd=getPositionPendingFeesUsd({pendingFundingFeesUsd:pendingFundingFeesUsd,pendingBorrowingFeesUsd:pendingBorrowingFeesUsd});var totalFeesUsd=totalPendingFeesUsd.add(closingFeeUsd);var maxNegativePriceImpactUsd=applyFactor(sizeInUsd,marketInfo.maxPositionImpactFactorForLiquidations).mul(-1);var priceImpactDeltaUsd=BigNumber$1.from(0);if(useMaxPriceImpact){priceImpactDeltaUsd=maxNegativePriceImpactUsd}else{priceImpactDeltaUsd=getPriceImpactForPosition(marketInfo,sizeInUsd.mul(-1),isLong,{fallbackToZero:true});if(priceImpactDeltaUsd.lt(maxNegativePriceImpactUsd)){priceImpactDeltaUsd=maxNegativePriceImpactUsd}if(priceImpactDeltaUsd.gt(0)){priceImpactDeltaUsd=BigNumber$1.from(0)}}var liquidationCollateralUsd=applyFactor(sizeInUsd,marketInfo.minCollateralFactor);if(liquidationCollateralUsd.lt(minCollateralUsd)){liquidationCollateralUsd=minCollateralUsd}var liquidationPrice;if(getIsEquivalentTokens(collateralToken,indexToken)){if(isLong){var denominator=sizeInTokens.add(collateralAmount);if(denominator.eq(0)){return undefined}liquidationPrice=sizeInUsd.add(liquidationCollateralUsd).sub(priceImpactDeltaUsd).add(totalFeesUsd).div(denominator).mul(expandDecimals(1,indexToken.decimals))}else{var denominator=sizeInTokens.sub(collateralAmount);if(denominator.eq(0)){return undefined}liquidationPrice=sizeInUsd.sub(liquidationCollateralUsd).add(priceImpactDeltaUsd).sub(totalFeesUsd).div(denominator).mul(expandDecimals(1,indexToken.decimals))}}else{if(sizeInTokens.eq(0)){return undefined}var remainingCollateralUsd=collateralUsd.add(priceImpactDeltaUsd).sub(totalPendingFeesUsd).sub(closingFeeUsd);if(isLong){liquidationPrice=liquidationCollateralUsd.sub(remainingCollateralUsd).add(sizeInUsd).div(sizeInTokens).mul(expandDecimals(1,indexToken.decimals))}else{liquidationPrice=liquidationCollateralUsd.sub(remainingCollateralUsd).sub(sizeInUsd).div(sizeInTokens.mul(-1)).mul(expandDecimals(1,indexToken.decimals))}}if(liquidationPrice.lte(0)){return undefined}return liquidationPrice}function getPositionNetValue(p){var pnl=p.pnl,closingFeeUsd=p.closingFeeUsd,collateralUsd=p.collateralUsd;var pendingFeesUsd=getPositionPendingFeesUsd(p);return collateralUsd.sub(pendingFeesUsd).sub(closingFeeUsd).add(pnl)}function getEntryPrice(p){var sizeInUsd=p.sizeInUsd,sizeInTokens=p.sizeInTokens,indexToken=p.indexToken;if(!sizeInTokens.gt(0)){return undefined}return sizeInUsd.div(sizeInTokens).mul(expandDecimals(1,indexToken.decimals))}function isMarketOrderType(orderType){return[OrderType.MarketDecrease,OrderType.MarketIncrease,OrderType.MarketSwap].includes(orderType)}function applySlippageToPrice(allowedSlippage,price,isIncrease,isLong){var shouldIncreasePrice=getShouldUseMaxPrice(isIncrease,isLong);var slippageBasisPoints=shouldIncreasePrice?BASIS_POINTS_DIVISOR+allowedSlippage:BASIS_POINTS_DIVISOR-allowedSlippage;return price.mul(slippageBasisPoints).div(BASIS_POINTS_DIVISOR)}function isVisibleOrder(orderType){return isLimitOrderType(orderType)||isTriggerDecreaseOrderType(orderType)||isLimitSwapOrderType(orderType)}function isLimitOrderType(orderType){return[OrderType.LimitIncrease,OrderType.LimitSwap].includes(orderType)}function isTriggerDecreaseOrderType(orderType){return[OrderType.LimitDecrease,OrderType.StopLossDecrease].includes(orderType)}function isIncreaseOrderType(orderType){return[OrderType.MarketIncrease,OrderType.LimitIncrease].includes(orderType)}function isSwapOrderType(orderType){return[OrderType.MarketSwap,OrderType.LimitSwap].includes(orderType)}function isLimitSwapOrderType(orderType){return orderType===OrderType.LimitSwap}function getOrderInfo(marketsInfoData,tokensData,wrappedNativeToken,order){if(isSwapOrderType(order.orderType)){var initialCollateralToken=getByKey(tokensData,order.initialCollateralTokenAddress);var outTokenAddress=getSwapPathOutputAddresses({marketsInfoData:marketsInfoData,swapPath:order.swapPath,initialCollateralAddress:order.initialCollateralTokenAddress,wrappedNativeTokenAddress:wrappedNativeToken.value,shouldUnwrapNativeToken:order.shouldUnwrapNativeToken}).outTokenAddress;var targetCollateralToken=getByKey(tokensData,outTokenAddress);if(!initialCollateralToken||!targetCollateralToken){return undefined}var swapPathStats=getSwapPathStats({marketsInfoData:marketsInfoData,swapPath:order.swapPath,initialCollateralAddress:order.initialCollateralTokenAddress,wrappedNativeTokenAddress:wrappedNativeToken.value,usdIn:convertToUsd(order.initialCollateralDeltaAmount,initialCollateralToken.decimals,initialCollateralToken.prices.minPrice),shouldUnwrapNativeToken:order.shouldUnwrapNativeToken,shouldApplyPriceImpact:true});var priceImpactAmount=convertToTokenAmount(swapPathStats===null||swapPathStats===void 0?void 0:swapPathStats.totalSwapPriceImpactDeltaUsd,targetCollateralToken.decimals,targetCollateralToken.prices.minPrice);var swapFeeAmount=convertToTokenAmount(swapPathStats===null||swapPathStats===void 0?void 0:swapPathStats.totalSwapFeeUsd,targetCollateralToken.decimals,targetCollateralToken.prices.minPrice);var toAmount=order.minOutputAmount.sub(priceImpactAmount||0).add(swapFeeAmount||0);var triggerRatio=getTokensRatioByAmounts({fromToken:initialCollateralToken,toToken:targetCollateralToken,fromTokenAmount:order.initialCollateralDeltaAmount,toTokenAmount:toAmount});var title=getSwapOrderTitle({initialCollateralToken:initialCollateralToken,targetCollateralToken:targetCollateralToken,minOutputAmount:order.minOutputAmount,initialCollateralAmount:order.initialCollateralDeltaAmount});var orderInfo=__assign$7(__assign$7({},order),{swapPathStats:swapPathStats,triggerRatio:triggerRatio,title:title,initialCollateralToken:initialCollateralToken,targetCollateralToken:targetCollateralToken});return orderInfo}else{var marketInfo=getByKey(marketsInfoData,order.marketAddress);var indexToken=marketInfo===null||marketInfo===void 0?void 0:marketInfo.indexToken;var initialCollateralToken=getByKey(tokensData,order.initialCollateralTokenAddress);var outTokenAddress=getSwapPathOutputAddresses({marketsInfoData:marketsInfoData,swapPath:order.swapPath,initialCollateralAddress:order.initialCollateralTokenAddress,wrappedNativeTokenAddress:wrappedNativeToken.value,shouldUnwrapNativeToken:order.shouldUnwrapNativeToken}).outTokenAddress;var targetCollateralToken=getByKey(tokensData,outTokenAddress);if(!marketInfo||!indexToken||!initialCollateralToken||!targetCollateralToken){return undefined}var title=getPositionOrderTitle({orderType:order.orderType,isLong:order.isLong,indexToken:indexToken,sizeDeltaUsd:order.sizeDeltaUsd});var acceptablePrice=parseContractPrice(order.contractAcceptablePrice,indexToken.decimals);var triggerPrice=parseContractPrice(order.contractTriggerPrice,indexToken.decimals);var swapPathStats=getSwapPathStats({marketsInfoData:marketsInfoData,swapPath:order.swapPath,initialCollateralAddress:order.initialCollateralTokenAddress,wrappedNativeTokenAddress:wrappedNativeToken.value,usdIn:convertToUsd(order.initialCollateralDeltaAmount,initialCollateralToken.decimals,initialCollateralToken.prices.minPrice),shouldUnwrapNativeToken:order.shouldUnwrapNativeToken,shouldApplyPriceImpact:true});var triggerThresholdType=getTriggerThresholdType(order.orderType,order.isLong);var orderInfo=__assign$7(__assign$7({},order),{title:title,swapPathStats:swapPathStats,marketInfo:marketInfo,indexToken:indexToken,initialCollateralToken:initialCollateralToken,targetCollateralToken:targetCollateralToken,acceptablePrice:acceptablePrice,triggerPrice:triggerPrice,triggerThresholdType:triggerThresholdType});return orderInfo}}function getSwapOrderTitle(p){var initialCollateralToken=p.initialCollateralToken,initialCollateralAmount=p.initialCollateralAmount,targetCollateralToken=p.targetCollateralToken,minOutputAmount=p.minOutputAmount;var fromTokenText=formatTokenAmount(initialCollateralAmount,initialCollateralToken.decimals,initialCollateralToken.symbol);var toTokenText=formatTokenAmount(minOutputAmount,targetCollateralToken.decimals,targetCollateralToken.symbol);return"Swap ".concat(fromTokenText," for ").concat(toTokenText)}function formatTokenAmount(amount,tokenDecimals,symbol,opts){if(opts===void 0){opts={}}var _a=opts.displayDecimals,displayDecimals=_a===void 0?4:_a,_b=opts.showAllSignificant,showAllSignificant=_b===void 0?false:_b,_c=opts.fallbackToZero,fallbackToZero=_c===void 0?false:_c,_d=opts.useCommas,useCommas=_d===void 0?false:_d,_e=opts.minThreshold,minThreshold=_e===void 0?"0":_e,maxThreshold=opts.maxThreshold;var symbolStr=symbol?" ".concat(symbol):"";if(!amount||!tokenDecimals){if(fallbackToZero){amount=BigNumber$1.from(0);tokenDecimals=displayDecimals}else{return undefined}}var amountStr;if(showAllSignificant){amountStr=formatAmountFree(amount,tokenDecimals,tokenDecimals)}else{var exceedingInfo=getLimitedDisplay(amount,tokenDecimals,{maxThreshold:maxThreshold,minThreshold:minThreshold});var symbol_1=exceedingInfo.symbol?"".concat(exceedingInfo.symbol," "):"";amountStr="".concat(symbol_1).concat(formatAmount(exceedingInfo.value,tokenDecimals,displayDecimals,useCommas))}return"".concat(amountStr).concat(symbolStr)}var formatAmountFree=function(amount,tokenDecimals,displayDecimals){if(!amount){return"..."}var amountStr=formatUnits$1(amount,tokenDecimals);amountStr=limitDecimals(amountStr,displayDecimals);return trimZeroDecimals(amountStr)};var trimZeroDecimals=function(amount){if(parseFloat(amount)===parseInt(amount)){return parseInt(amount).toString()}return amount};function parseContractPrice(price,tokenDecimals){return price.mul(expandDecimals(1,tokenDecimals))}function getSwapPathOutputAddresses(p){var e_10,_a;var marketsInfoData=p.marketsInfoData,initialCollateralAddress=p.initialCollateralAddress,swapPath=p.swapPath,wrappedNativeTokenAddress=p.wrappedNativeTokenAddress,shouldUnwrapNativeToken=p.shouldUnwrapNativeToken;if(swapPath.length===0){return{outTokenAddress:shouldUnwrapNativeToken&&initialCollateralAddress===wrappedNativeTokenAddress?NATIVE_TOKEN_ADDRESS:initialCollateralAddress,outMarketAddress:undefined}}var _b=__read$6(swapPath),firstMarketAddress=_b[0],marketAddresses=_b.slice(1);var outMarket=getByKey(marketsInfoData,firstMarketAddress);if(!outMarket){return{outTokenAddress:undefined,outMarketAddress:undefined}}var outTokenType=getTokenPoolType(outMarket,initialCollateralAddress);var outToken=outTokenType==="long"?outMarket.shortToken:outMarket.longToken;try{for(var marketAddresses_1=__values$4(marketAddresses),marketAddresses_1_1=marketAddresses_1.next();!marketAddresses_1_1.done;marketAddresses_1_1=marketAddresses_1.next()){var marketAddress=marketAddresses_1_1.value;outMarket=getByKey(marketsInfoData,marketAddress);if(!outMarket){return{outTokenAddress:undefined,outMarketAddress:undefined}}outTokenType=outMarket.longTokenAddress===outToken.value?"short":"long";outToken=outTokenType==="long"?outMarket.longToken:outMarket.shortToken}}catch(e_10_1){e_10={error:e_10_1}}finally{try{if(marketAddresses_1_1&&!marketAddresses_1_1.done&&(_a=marketAddresses_1.return))_a.call(marketAddresses_1)}finally{if(e_10)throw e_10.error}}var outTokenAddress=shouldUnwrapNativeToken&&outToken.value===wrappedNativeTokenAddress?NATIVE_TOKEN_ADDRESS:outToken.value;return{outTokenAddress:outTokenAddress,outMarketAddress:outMarket.marketTokenAddress}}function getTokensRatioByAmounts(p){var fromToken=p.fromToken,toToken=p.toToken,fromTokenAmount=p.fromTokenAmount,toTokenAmount=p.toTokenAmount;var adjustedFromAmount=fromTokenAmount.mul(PRECISION).div(expandDecimals(1,fromToken.decimals));var adjustedToAmount=toTokenAmount.mul(PRECISION).div(expandDecimals(1,toToken.decimals));var _a=__read$6(adjustedFromAmount.gt(adjustedToAmount)?[fromToken,toToken,adjustedFromAmount,adjustedToAmount]:[toToken,fromToken,adjustedToAmount,adjustedFromAmount],4),smallestToken=_a[0],largestToken=_a[1],largestAmount=_a[2],smallestAmount=_a[3];var ratio=smallestAmount.gt(0)?largestAmount.mul(PRECISION).div(smallestAmount):BigNumber$1.from(0);return{ratio:ratio,largestToken:largestToken,smallestToken:smallestToken}}function getPositionOrderTitle(p){var orderType=p.orderType,isLong=p.isLong,indexToken=p.indexToken,sizeDeltaUsd=p.sizeDeltaUsd;var longShortText=isLong?"Long":"Short";var tokenText="".concat(indexToken.symbol," ").concat(longShortText);var sizeText=formatUsd(sizeDeltaUsd);var increaseOrDecreaseText=isIncreaseOrderType(orderType)?"Increase":"Decrease";return"".concat(increaseOrDecreaseText," ").concat(tokenText," by ").concat(sizeText)}function formatUsd(usd,opts){if(opts===void 0){opts={}}var _a=opts.fallbackToZero,fallbackToZero=_a===void 0?false:_a,_b=opts.displayDecimals,displayDecimals=_b===void 0?2:_b;if(!usd){if(fallbackToZero){usd=BigNumber$1.from(0)}else{return undefined}}var exceedingInfo=getLimitedDisplay(usd,USD_DECIMALS,opts);var sign=usd.lt(0)?"-":"";var displayUsd=formatAmount(exceedingInfo.value,USD_DECIMALS,displayDecimals,true);return"".concat(exceedingInfo.symbol).concat(sign,"$").concat(displayUsd)}var formatAmount=function(amount,tokenDecimals,displayDecimals,useCommas,defaultValue){if(!defaultValue){defaultValue="..."}if(amount===undefined||amount.toString().length===0){return defaultValue}if(displayDecimals===undefined){displayDecimals=4}var amountStr=formatUnits$1(amount,tokenDecimals);amountStr=limitDecimals(amountStr,displayDecimals);if(displayDecimals!==0){amountStr=padDecimals(amountStr,displayDecimals)}if(useCommas){return numberWithCommas(amountStr)}return amountStr};var limitDecimals=function(amount,maxDecimals){var amountStr=amount.toString();if(maxDecimals===undefined){return amountStr}if(maxDecimals===0){return amountStr.split(".")[0]}var dotIndex=amountStr.indexOf(".");if(dotIndex!==-1){var decimals=amountStr.length-dotIndex-1;if(decimals>maxDecimals){amountStr=amountStr.substr(0,amountStr.length-(decimals-maxDecimals))}}return amountStr};function numberWithCommas(x){if(!x){return"..."}var parts=x.toString().split(".");parts[0]=parts[0].replace(/\B(?=(\d{3})+(?!\d))/g,",");return parts.join(".")}var padDecimals=function(amount,minDecimals){var amountStr=amount.toString();var dotIndex=amountStr.indexOf(".");if(dotIndex!==-1){var decimals=amountStr.length-dotIndex-1;if(decimals<minDecimals){amountStr=amountStr.padEnd(amountStr.length+(minDecimals-decimals),"0")}}else{amountStr=amountStr+".0000"}return amountStr};function getLimitedDisplay(amount,tokenDecimals,opts){if(opts===void 0){opts={}}var _a=opts.maxThreshold,maxThreshold=_a===void 0?MAX_EXCEEDING_THRESHOLD:_a,_b=opts.minThreshold,minThreshold=_b===void 0?MIN_EXCEEDING_THRESHOLD:_b;var max=expandDecimals(maxThreshold,tokenDecimals);var min=parseUnits(minThreshold,tokenDecimals);var absAmount=amount.abs();if(absAmount.eq(0)){return{symbol:"",value:absAmount}}var symbol=absAmount.gt(max)?TRIGGER_PREFIX_ABOVE:absAmount.lt(min)?TRIGGER_PREFIX_BELOW:"";var value=absAmount.gt(max)?max:absAmount.lt(min)?min:absAmount;return{symbol:symbol,value:value}}var applyAcceptablePrice=function(p){var marketInfo=p.marketInfo,isLong=p.isLong,values=p.values,isTrigger=p.isTrigger,savedAcceptablePriceImpactBps=p.savedAcceptablePriceImpactBps;var acceptablePriceInfo=getAcceptablePriceInfo({marketInfo:marketInfo,isIncrease:false,isLong:isLong,indexPrice:values.indexPrice,sizeDeltaUsd:values.sizeDeltaUsd});values.positionPriceImpactDeltaUsd=acceptablePriceInfo.priceImpactDeltaUsd;values.acceptablePrice=acceptablePriceInfo.acceptablePrice;values.acceptablePriceDeltaBps=acceptablePriceInfo.acceptablePriceDeltaBps;values.priceImpactDiffUsd=acceptablePriceInfo.priceImpactDiffUsd;if(isTrigger){if(values.triggerOrderType===OrderType.StopLossDecrease){if(isLong){values.acceptablePrice=BigNumber$1.from(0)}else{values.acceptablePrice=MaxUint256$2}}else{var triggerAcceptablePriceInfo=getAcceptablePriceInfo({marketInfo:marketInfo,isIncrease:false,isLong:isLong,indexPrice:values.indexPrice,sizeDeltaUsd:values.sizeDeltaUsd,maxNegativePriceImpactBps:savedAcceptablePriceImpactBps});values.acceptablePrice=triggerAcceptablePriceInfo.acceptablePrice;values.acceptablePriceDeltaBps=triggerAcceptablePriceInfo.acceptablePriceDeltaBps;values.priceImpactDiffUsd=triggerAcceptablePriceInfo.priceImpactDiffUsd;if(values.positionPriceImpactDeltaUsd.lt(triggerAcceptablePriceInfo.priceImpactDeltaUsd)){values.positionPriceImpactDeltaUsd=triggerAcceptablePriceInfo.priceImpactDeltaUsd}}}return values};function getIsFullClose(p){var position=p.position,sizeDeltaUsd=p.sizeDeltaUsd,indexPrice=p.indexPrice,remainingCollateralUsd=p.remainingCollateralUsd,minCollateralUsd=p.minCollateralUsd,minPositionSizeUsd=p.minPositionSizeUsd;var marketInfo=position.marketInfo,isLong=position.isLong;if(position.sizeInUsd.sub(sizeDeltaUsd).lt(DUST_USD)){return true}var estimatedPnl=getPositionPnlUsd({marketInfo:marketInfo,sizeInUsd:position.sizeInUsd,sizeInTokens:position.sizeInTokens,markPrice:indexPrice,isLong:isLong});var realizedPnl=estimatedPnl.mul(sizeDeltaUsd).div(position.sizeInUsd);var estimatedRemainingPnl=estimatedPnl.sub(realizedPnl);if(realizedPnl.lt(0)){var estimatedRemainingCollateralUsd=remainingCollateralUsd.sub(realizedPnl);var minCollateralFactor=isLong?marketInfo.minCollateralFactorForOpenInterestLong:marketInfo.minCollateralFactorForOpenInterestShort;var minCollateralFactorForMarket=marketInfo.minCollateralFactor;if(minCollateralFactorForMarket.gt(minCollateralFactor)){minCollateralFactor=minCollateralFactorForMarket}var minCollateralUsdForLeverage=applyFactor(position.sizeInUsd,minCollateralFactor);var willCollateralBeSufficient=estimatedRemainingCollateralUsd.gte(minCollateralUsdForLeverage);if(!willCollateralBeSufficient){if(estimatedRemainingCollateralUsd.add(estimatedRemainingPnl).lt(minCollateralUsd)||position.sizeInUsd.sub(sizeDeltaUsd).lt(minPositionSizeUsd)){return true}}}return false}function roundUpDivision(a,b){return a.add(b).sub(1).div(b)}function estimateCollateralCost(baseUsd,collateralToken,collateralPrice){var amount=convertToTokenAmount(baseUsd,collateralToken.decimals,collateralToken.prices.minPrice);var usd=convertToUsd(amount,collateralToken.decimals,collateralPrice);return{amount:amount,usd:usd}}function payForCollateralCost(p){var initialCostUsd=p.initialCostUsd,collateralToken=p.collateralToken,collateralPrice=p.collateralPrice,outputAmount=p.outputAmount,remainingCollateralAmount=p.remainingCollateralAmount;var values={outputAmount:BigNumber$1.from(outputAmount),remainingCollateralAmount:BigNumber$1.from(remainingCollateralAmount),paidOutputAmount:BigNumber$1.from(0),paidRemainingCollateralAmount:BigNumber$1.from(0)};var remainingCostAmount=convertToTokenAmount(initialCostUsd,collateralToken.decimals,collateralPrice);if(remainingCostAmount.eq(0)){return values}if(values.outputAmount.gt(0)){if(values.outputAmount.gt(remainingCostAmount)){values.outputAmount=values.outputAmount.sub(remainingCostAmount);values.paidOutputAmount=remainingCostAmount;remainingCostAmount=BigNumber$1.from(0)}else{remainingCostAmount=remainingCostAmount.sub(values.outputAmount);values.paidOutputAmount=values.outputAmount;values.outputAmount=BigNumber$1.from(0)}}if(remainingCostAmount.eq(0)){return values}if(values.remainingCollateralAmount.gt(remainingCostAmount)){values.remainingCollateralAmount=values.remainingCollateralAmount.sub(remainingCostAmount);values.paidRemainingCollateralAmount=remainingCostAmount;remainingCostAmount=BigNumber$1.from(0)}else{remainingCostAmount=remainingCostAmount.sub(remainingCollateralAmount);values.paidRemainingCollateralAmount=values.remainingCollateralAmount;values.remainingCollateralAmount=BigNumber$1.from(0)}return values}var parseValue=function(value,tokenDecimals){var pValue=parseFloat(value);if(isNaN(pValue)){return undefined}value=limitDecimals(value,tokenDecimals);var amount=parseUnits(value,tokenDecimals);return bigNumberify(amount)};function estimateExecuteDecreaseOrderGasLimit(gasLimits,order){var _a;var swapsCount=((_a=order.swapPath)===null||_a===void 0?void 0:_a.length)||0;return gasLimits.decreaseOrder.add(gasLimits.singleSwap.mul(swapsCount)).add(order.callbackGasLimit||0)}function applySlippageToMinOut(allowedSlippage,minOutputAmount){var slippageBasisPoints=BASIS_POINTS_DIVISOR-allowedSlippage;return minOutputAmount.mul(slippageBasisPoints).div(BASIS_POINTS_DIVISOR)}var POSITION_IMPACT_FACTOR_KEY=hashString("POSITION_IMPACT_FACTOR");var MAX_POSITION_IMPACT_FACTOR_KEY=hashString("MAX_POSITION_IMPACT_FACTOR");var POSITION_IMPACT_EXPONENT_FACTOR_KEY=hashString("POSITION_IMPACT_EXPONENT_FACTOR");var POSITION_FEE_FACTOR_KEY=hashString("POSITION_FEE_FACTOR");var SWAP_IMPACT_FACTOR_KEY=hashString("SWAP_IMPACT_FACTOR");var SWAP_IMPACT_EXPONENT_FACTOR_KEY=hashString("SWAP_IMPACT_EXPONENT_FACTOR");var SWAP_FEE_FACTOR_KEY=hashString("SWAP_FEE_FACTOR");hashString("FEE_RECEIVER_DEPOSIT_FACTOR");hashString("BORROWING_FEE_RECEIVER_FACTOR");hashString("FEE_RECEIVER_WITHDRAWAL_FACTOR");hashString("FEE_RECEIVER_SWAP_FACTOR");hashString("FEE_RECEIVER_POSITION_FACTOR");var OPEN_INTEREST_KEY=hashString("OPEN_INTEREST");var OPEN_INTEREST_IN_TOKENS_KEY=hashString("OPEN_INTEREST_IN_TOKENS");var POOL_AMOUNT_KEY=hashString("POOL_AMOUNT");var MAX_POOL_AMOUNT_KEY=hashString("MAX_POOL_AMOUNT");var RESERVE_FACTOR_KEY=hashString("RESERVE_FACTOR");var OPEN_INTEREST_RESERVE_FACTOR_KEY=hashString("OPEN_INTEREST_RESERVE_FACTOR");hashString("NONCE");var BORROWING_FACTOR_KEY=hashString("BORROWING_FACTOR");var BORROWING_EXPONENT_FACTOR_KEY=hashString("BORROWING_EXPONENT_FACTOR");hashString("CUMULATIVE_BORROWING_FACTOR");hashString("TOTAL_BORROWING");var FUNDING_FACTOR_KEY=hashString("FUNDING_FACTOR");var FUNDING_EXPONENT_FACTOR_KEY=hashString("FUNDING_EXPONENT_FACTOR");var MAX_PNL_FACTOR_KEY=hashString("MAX_PNL_FACTOR");hashString("MAX_PNL_FACTOR_FOR_WITHDRAWALS");hashString("MAX_PNL_FACTOR_FOR_DEPOSITS");var MAX_PNL_FACTOR_FOR_TRADERS_KEY=hashString("MAX_PNL_FACTOR_FOR_TRADERS");var MAX_POSITION_IMPACT_FACTOR_FOR_LIQUIDATIONS_KEY=hashString("MAX_POSITION_IMPACT_FACTOR_FOR_LIQUIDATIONS");var POSITION_IMPACT_POOL_AMOUNT_KEY=hashString("POSITION_IMPACT_POOL_AMOUNT");var SWAP_IMPACT_POOL_AMOUNT_KEY=hashString("SWAP_IMPACT_POOL_AMOUNT");hashString("MIN_COLLATERAL_USD");var MIN_COLLATERAL_FACTOR_KEY=hashString("MIN_COLLATERAL_FACTOR");var MIN_COLLATERAL_FACTOR_FOR_OPEN_INTEREST_MULTIPLIER_KEY=hashString("MIN_COLLATERAL_FACTOR_FOR_OPEN_INTEREST_MULTIPLIER");hashString("MIN_POSITION_SIZE_USD");hashString("MAX_LEVERAGE");var DEPOSIT_GAS_LIMIT_KEY=hashString("DEPOSIT_GAS_LIMIT");var WITHDRAWAL_GAS_LIMIT_KEY=hashString("WITHDRAWAL_GAS_LIMIT");var INCREASE_ORDER_GAS_LIMIT_KEY=hashString("INCREASE_ORDER_GAS_LIMIT");var DECREASE_ORDER_GAS_LIMIT_KEY=hashString("DECREASE_ORDER_GAS_LIMIT");var SWAP_ORDER_GAS_LIMIT_KEY=hashString("SWAP_ORDER_GAS_LIMIT");var SINGLE_SWAP_GAS_LIMIT_KEY=hashString("SINGLE_SWAP_GAS_LIMIT");hashString("TOKEN_TRANSFER_GAS_LIMIT");hashString("NATIVE_TOKEN_TRANSFER_GAS_LIMIT");var ESTIMATED_GAS_FEE_BASE_AMOUNT=hashString("ESTIMATED_GAS_FEE_BASE_AMOUNT");var ESTIMATED_GAS_FEE_MULTIPLIER_FACTOR=hashString("ESTIMATED_GAS_FEE_MULTIPLIER_FACTOR");hashString("MARKET_LIST");hashString("POSITION_LIST");hashString("ACCOUNT_POSITION_LIST");hashString("ORDER_LIST");var ACCOUNT_ORDER_LIST_KEY=hashString("ACCOUNT_ORDER_LIST");var CLAIMABLE_FUNDING_AMOUNT=hashString("CLAIMABLE_FUNDING_AMOUNT");var VIRTUAL_TOKEN_ID_KEY=hashString("VIRTUAL_TOKEN_ID");var VIRTUAL_MARKET_ID_KEY=hashString("VIRTUAL_MARKET_ID");hashString("VIRTUAL_INVENTORY_FOR_POSITIONS");hashString("VIRTUAL_INVENTORY_FOR_SWAPS");var POOL_AMOUNT_ADJUSTMENT_KEY=hashString("POOL_AMOUNT_ADJUSTMENT");hashString("AFFILIATE_REWARD");var IS_MARKET_DISABLED_KEY=hashString("IS_MARKET_DISABLED");function positionImpactFactorKey(market,isPositive){return hashData(["bytes32","address","bool"],[POSITION_IMPACT_FACTOR_KEY,market,isPositive])}function positionImpactExponentFactorKey(market){return hashData(["bytes32","address"],[POSITION_IMPACT_EXPONENT_FACTOR_KEY,market])}function maxPositionImpactFactorKey(market,isPositive){return hashData(["bytes32","address","bool"],[MAX_POSITION_IMPACT_FACTOR_KEY,market,isPositive])}function positionFeeFactorKey(market,forPositiveImpact){return hashData(["bytes32","address","bool"],[POSITION_FEE_FACTOR_KEY,market,forPositiveImpact])}function swapImpactFactorKey(market,isPositive){return hashData(["bytes32","address","bool"],[SWAP_IMPACT_FACTOR_KEY,market,isPositive])}function swapImpactExponentFactorKey(market){return hashData(["bytes32","address"],[SWAP_IMPACT_EXPONENT_FACTOR_KEY,market])}function swapFeeFactorKey(market,forPositiveImpact){return hashData(["bytes32","address","bool"],[SWAP_FEE_FACTOR_KEY,market,forPositiveImpact])}function openInterestKey(market,collateralToken,isLong){return hashData(["bytes32","address","address","bool"],[OPEN_INTEREST_KEY,market,collateralToken,isLong])}function openInterestInTokensKey(market,collateralToken,isLong){return hashData(["bytes32","address","address","bool"],[OPEN_INTEREST_IN_TOKENS_KEY,market,collateralToken,isLong])}function poolAmountKey(market,token){return hashData(["bytes32","address","address"],[POOL_AMOUNT_KEY,market,token])}function reserveFactorKey(market,isLong){return hashData(["bytes32","address","bool"],[RESERVE_FACTOR_KEY,market,isLong])}function openInterestReserveFactorKey(market,isLong){return hashData(["bytes32","address","bool"],[OPEN_INTEREST_RESERVE_FACTOR_KEY,market,isLong])}function borrowingFactorKey(market,isLong){return hashData(["bytes32","address","bool"],[BORROWING_FACTOR_KEY,market,isLong])}function borrowingExponentFactorKey(market,isLong){return hashData(["bytes32","address","bool"],[BORROWING_EXPONENT_FACTOR_KEY,market,isLong])}function fundingFactorKey(market){return hashData(["bytes32","address"],[FUNDING_FACTOR_KEY,market])}function fundingExponentFactorKey(market){return hashData(["bytes32","address"],[FUNDING_EXPONENT_FACTOR_KEY,market])}function maxPnlFactorKey(pnlFactorType,market,isLong){return hashData(["bytes32","bytes32","address","bool"],[MAX_PNL_FACTOR_KEY,pnlFactorType,market,isLong])}function positionImpactPoolAmountKey(market){return hashData(["bytes32","address"],[POSITION_IMPACT_POOL_AMOUNT_KEY,market])}function maxPositionImpactFactorForLiquidationsKey(market){return hashData(["bytes32","address"],[MAX_POSITION_IMPACT_FACTOR_FOR_LIQUIDATIONS_KEY,market])}function swapImpactPoolAmountKey(market,token){return hashData(["bytes32","address","address"],[SWAP_IMPACT_POOL_AMOUNT_KEY,market,token])}function depositGasLimitKey(singleToken){return hashData(["bytes32","bool"],[DEPOSIT_GAS_LIMIT_KEY,singleToken])}function withdrawalGasLimitKey(){return hashData(["bytes32"],[WITHDRAWAL_GAS_LIMIT_KEY])}function singleSwapGasLimitKey(){return SINGLE_SWAP_GAS_LIMIT_KEY}function increaseOrderGasLimitKey(){return INCREASE_ORDER_GAS_LIMIT_KEY}function decreaseOrderGasLimitKey(){return DECREASE_ORDER_GAS_LIMIT_KEY}function swapOrderGasLimitKey(){return SWAP_ORDER_GAS_LIMIT_KEY}function accountOrderListKey(account){return hashData(["bytes32","address"],[ACCOUNT_ORDER_LIST_KEY,account])}function minCollateralFactorKey(market){return hashData(["bytes32","address"],[MIN_COLLATERAL_FACTOR_KEY,market])}function minCollateralFactorForOpenInterest(market,isLong){return hashData(["bytes32","address","bool"],[MIN_COLLATERAL_FACTOR_FOR_OPEN_INTEREST_MULTIPLIER_KEY,market,isLong])}function claimableFundingAmountKey(market,token,account){return hashData(["bytes32","address","address","address"],[CLAIMABLE_FUNDING_AMOUNT,market,token,account])}function virtualTokenIdKey(token){return hashData(["bytes32","address"],[VIRTUAL_TOKEN_ID_KEY,token])}function virtualMarketIdKey(market){return hashData(["bytes32","address"],[VIRTUAL_MARKET_ID_KEY,market])}function poolAmountAdjustmentKey(market,token){return hashData(["bytes32","address","address"],[POOL_AMOUNT_ADJUSTMENT_KEY,market,token])}function isMarketDisabledKey(market){return hashData(["bytes32","address"],[IS_MARKET_DISABLED_KEY,market])}function maxPoolAmountKey(market,token){return hashData(["bytes32","address","address"],[MAX_POOL_AMOUNT_KEY,market,token])}function formatAbiItem(abiItem,{includeName=false}={}){if(abiItem.type!=="function"&&abiItem.type!=="event"&&abiItem.type!=="error")throw new InvalidDefinitionTypeError(abiItem.type);return`${abiItem.name}(${formatAbiParams(abiItem.inputs,{includeName:includeName})})`}function formatAbiParams(params,{includeName=false}={}){if(!params)return"";return params.map(param=>formatAbiParam(param,{includeName:includeName})).join(includeName?", ":",")}function formatAbiParam(param,{includeName}){if(param.type.startsWith("tuple")){return`(${formatAbiParams(param.components,{includeName:includeName})})${param.type.slice("tuple".length)}`}return param.type+(includeName&&param.name?` ${param.name}`:"")}function isHex(value,{strict=true}={}){if(!value)return false;if(typeof value!=="string")return false;return strict?/^0x[0-9a-fA-F]*$/.test(value):value.startsWith("0x")}function size$1(value){if(isHex(value,{strict:false}))return Math.ceil((value.length-2)/2);return value.length}const version="1.1.4";const getContractAddress=address=>address;const getUrl=url=>url;const getVersion=()=>`viem@${version}`;class BaseError extends Error{constructor(shortMessage,args={}){super();Object.defineProperty(this,"details",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"docsPath",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"metaMessages",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"shortMessage",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ViemError"});Object.defineProperty(this,"version",{enumerable:true,configurable:true,writable:true,value:getVersion()});const details=args.cause instanceof BaseError?args.cause.details:args.cause?.message?args.cause.message:args.details;const docsPath=args.cause instanceof BaseError?args.cause.docsPath||args.docsPath:args.docsPath;this.message=[shortMessage||"An error occurred.","",...args.metaMessages?[...args.metaMessages,""]:[],...docsPath?[`Docs: https://viem.sh${docsPath}.html${args.docsSlug?`#${args.docsSlug}`:""}`]:[],...details?[`Details: ${details}`]:[],`Version: ${this.version}`].join("\n");if(args.cause)this.cause=args.cause;this.details=details;this.docsPath=docsPath;this.metaMessages=args.metaMessages;this.shortMessage=shortMessage}walk(fn){return walk(this,fn)}}function walk(err,fn){if(fn?.(err))return err;if(err.cause)return walk(err.cause,fn);return err}class AbiConstructorNotFoundError extends BaseError{constructor({docsPath}){super(["A constructor was not found on the ABI.","Make sure you are using the correct ABI and that the constructor exists on it."].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiConstructorNotFoundError"})}}class AbiConstructorParamsNotFoundError extends BaseError{constructor({docsPath}){super(["Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.","Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists."].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiConstructorParamsNotFoundError"})}}class AbiDecodingDataSizeTooSmallError extends BaseError{constructor({data,params,size}){super([`Data size of ${size} bytes is too small for given parameters.`].join("\n"),{metaMessages:[`Params: (${formatAbiParams(params,{includeName:true})})`,`Data:   ${data} (${size} bytes)`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiDecodingDataSizeTooSmallError"});Object.defineProperty(this,"data",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"params",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"size",{enumerable:true,configurable:true,writable:true,value:void 0});this.data=data;this.params=params;this.size=size}}class AbiDecodingZeroDataError extends BaseError{constructor(){super('Cannot decode zero data ("0x") with ABI parameters.');Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiDecodingZeroDataError"})}}class AbiEncodingArrayLengthMismatchError extends BaseError{constructor({expectedLength,givenLength,type}){super([`ABI encoding array length mismatch for type ${type}.`,`Expected length: ${expectedLength}`,`Given length: ${givenLength}`].join("\n"));Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiEncodingArrayLengthMismatchError"})}}class AbiEncodingBytesSizeMismatchError extends BaseError{constructor({expectedSize,value}){super(`Size of bytes "${value}" (bytes${size$1(value)}) does not match expected size (bytes${expectedSize}).`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiEncodingBytesSizeMismatchError"})}}class AbiEncodingLengthMismatchError extends BaseError{constructor({expectedLength,givenLength}){super(["ABI encoding params/values length mismatch.",`Expected length (params): ${expectedLength}`,`Given length (values): ${givenLength}`].join("\n"));Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiEncodingLengthMismatchError"})}}class AbiErrorSignatureNotFoundError extends BaseError{constructor(signature,{docsPath}){super([`Encoded error signature "${signature}" not found on ABI.`,"Make sure you are using the correct ABI and that the error exists on it.",`You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiErrorSignatureNotFoundError"})}}class AbiEventSignatureEmptyTopicsError extends BaseError{constructor({docsPath}){super("Cannot extract event signature from empty topics.",{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiEventSignatureEmptyTopicsError"})}}class AbiEventSignatureNotFoundError extends BaseError{constructor(signature,{docsPath}){super([`Encoded event signature "${signature}" not found on ABI.`,"Make sure you are using the correct ABI and that the event exists on it.",`You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiEventSignatureNotFoundError"})}}class AbiEventNotFoundError extends BaseError{constructor(eventName,{docsPath}={}){super([`Event ${eventName?`"${eventName}" `:""}not found on ABI.`,"Make sure you are using the correct ABI and that the event exists on it."].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiEventNotFoundError"})}}class AbiFunctionNotFoundError extends BaseError{constructor(functionName,{docsPath}={}){super([`Function ${functionName?`"${functionName}" `:""}not found on ABI.`,"Make sure you are using the correct ABI and that the function exists on it."].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiFunctionNotFoundError"})}}class AbiFunctionOutputsNotFoundError extends BaseError{constructor(functionName,{docsPath}){super([`Function "${functionName}" does not contain any \`outputs\` on ABI.`,"Cannot decode function result without knowing what the parameter types are.","Make sure you are using the correct ABI and that the function exists on it."].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AbiFunctionOutputsNotFoundError"})}}class BytesSizeMismatchError extends BaseError{constructor({expectedSize,givenSize}){super(`Expected bytes${expectedSize}, got bytes${givenSize}.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"BytesSizeMismatchError"})}}class DecodeLogDataMismatch extends BaseError{constructor({abiItem,data,params,size}){super([`Data size of ${size} bytes is too small for non-indexed event parameters.`].join("\n"),{metaMessages:[`Params: (${formatAbiParams(params,{includeName:true})})`,`Data:   ${data} (${size} bytes)`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"DecodeLogDataMismatch"});Object.defineProperty(this,"abiItem",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"data",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"params",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"size",{enumerable:true,configurable:true,writable:true,value:void 0});this.abiItem=abiItem;this.data=data;this.params=params;this.size=size}}class DecodeLogTopicsMismatch extends BaseError{constructor({abiItem,param}){super([`Expected a topic for indexed event parameter${param.name?` "${param.name}"`:""} on event "${formatAbiItem(abiItem,{includeName:true})}".`].join("\n"));Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"DecodeLogTopicsMismatch"});Object.defineProperty(this,"abiItem",{enumerable:true,configurable:true,writable:true,value:void 0});this.abiItem=abiItem}}class InvalidAbiEncodingTypeError extends BaseError{constructor(type,{docsPath}){super([`Type "${type}" is not a valid encoding type.`,"Please provide a valid ABI type."].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidAbiEncodingType"})}}class InvalidAbiDecodingTypeError extends BaseError{constructor(type,{docsPath}){super([`Type "${type}" is not a valid decoding type.`,"Please provide a valid ABI type."].join("\n"),{docsPath:docsPath});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidAbiDecodingType"})}}class InvalidArrayError extends BaseError{constructor(value){super([`Value "${value}" is not a valid array.`].join("\n"));Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidArrayError"})}}class InvalidDefinitionTypeError extends BaseError{constructor(type){super([`"${type}" is not a valid definition type.`,'Valid types: "function", "event", "error"'].join("\n"));Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidDefinitionTypeError"})}}class FilterTypeNotSupportedError extends BaseError{constructor(type){super(`Filter type "${type}" is not supported.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"FilterTypeNotSupportedError"})}}class SliceOffsetOutOfBoundsError extends BaseError{constructor({offset,position,size}){super(`Slice ${position==="start"?"starting":"ending"} at offset "${offset}" is out-of-bounds (size: ${size}).`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"SliceOffsetOutOfBoundsError"})}}class SizeExceedsPaddingSizeError extends BaseError{constructor({size,targetSize,type}){super(`${type.charAt(0).toUpperCase()}${type.slice(1).toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"SizeExceedsPaddingSizeError"})}}function pad(hexOrBytes,{dir,size=32}={}){if(typeof hexOrBytes==="string")return padHex(hexOrBytes,{dir:dir,size:size});return padBytes(hexOrBytes,{dir:dir,size:size})}function padHex(hex_,{dir,size=32}={}){if(size===null)return hex_;const hex=hex_.replace("0x","");if(hex.length>size*2)throw new SizeExceedsPaddingSizeError({size:Math.ceil(hex.length/2),targetSize:size,type:"hex"});return`0x${hex[dir==="right"?"padEnd":"padStart"](size*2,"0")}`}function padBytes(bytes,{dir,size=32}={}){if(size===null)return bytes;if(bytes.length>size)throw new SizeExceedsPaddingSizeError({size:bytes.length,targetSize:size,type:"bytes"});const paddedBytes=new Uint8Array(size);for(let i=0;i<size;i++){const padEnd=dir==="right";paddedBytes[padEnd?i:size-i-1]=bytes[padEnd?i:bytes.length-i-1]}return paddedBytes}class IntegerOutOfRangeError extends BaseError{constructor({max,min,signed,size,value}){super(`Number "${value}" is not in safe ${size?`${size*8}-bit ${signed?"signed":"unsigned"} `:""}integer range ${max?`(${min} to ${max})`:`(above ${min})`}`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"IntegerOutOfRangeError"})}}class InvalidHexBooleanError extends BaseError{constructor(hex){super(`Hex value "${hex}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidHexBooleanError"})}}class SizeOverflowError extends BaseError{constructor({givenSize,maxSize}){super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"SizeOverflowError"})}}function trim(hexOrBytes,{dir="left"}={}){let data=typeof hexOrBytes==="string"?hexOrBytes.replace("0x",""):hexOrBytes;let sliceLength=0;for(let i=0;i<data.length-1;i++){if(data[dir==="left"?i:data.length-i-1].toString()==="0")sliceLength++;else break}data=dir==="left"?data.slice(sliceLength):data.slice(0,data.length-sliceLength);if(typeof hexOrBytes==="string"){if(data.length===1&&dir==="right")data=`${data}0`;return`0x${data.length%2===1?`0${data}`:data}`}return data}function assertSize(hexOrBytes,{size}){if(size$1(hexOrBytes)>size)throw new SizeOverflowError({givenSize:size$1(hexOrBytes),maxSize:size})}function hexToBigInt(hex,opts={}){const{signed}=opts;if(opts.size)assertSize(hex,{size:opts.size});const value=BigInt(hex);if(!signed)return value;const size=(hex.length-2)/2;const max=(1n<<BigInt(size)*8n-1n)-1n;if(value<=max)return value;return value-BigInt(`0x${"f".padStart(size*2,"f")}`)-1n}function hexToBool(hex_,opts={}){let hex=hex_;if(opts.size){assertSize(hex,{size:opts.size});hex=trim(hex)}if(trim(hex)==="0x00")return false;if(trim(hex)==="0x01")return true;throw new InvalidHexBooleanError(hex)}function hexToNumber(hex,opts={}){return Number(hexToBigInt(hex,opts))}function hexToString(hex,opts={}){let bytes=hexToBytes(hex);if(opts.size){assertSize(bytes,{size:opts.size});bytes=trim(bytes,{dir:"right"})}return(new TextDecoder).decode(bytes)}const hexes=Array.from({length:256},(_v,i)=>i.toString(16).padStart(2,"0"));function toHex(value,opts={}){if(typeof value==="number"||typeof value==="bigint")return numberToHex(value,opts);if(typeof value==="string"){return stringToHex(value,opts)}if(typeof value==="boolean")return boolToHex(value,opts);return bytesToHex(value,opts)}function boolToHex(value,opts={}){const hex=`0x${Number(value)}`;if(typeof opts.size==="number"){assertSize(hex,{size:opts.size});return pad(hex,{size:opts.size})}return hex}function bytesToHex(value,opts={}){let hexString="";for(let i=0;i<value.length;i++){hexString+=hexes[value[i]]}const hex=`0x${hexString}`;if(typeof opts.size==="number"){assertSize(hex,{size:opts.size});return pad(hex,{dir:"right",size:opts.size})}return hex}function numberToHex(value_,opts={}){const{signed,size}=opts;const value=BigInt(value_);let maxValue;if(size){if(signed)maxValue=(1n<<BigInt(size)*8n-1n)-1n;else maxValue=2n**(BigInt(size)*8n)-1n}else if(typeof value_==="number"){maxValue=BigInt(Number.MAX_SAFE_INTEGER)}const minValue=typeof maxValue==="bigint"&&signed?-maxValue-1n:0;if(maxValue&&value>maxValue||value<minValue){const suffix=typeof value_==="bigint"?"n":"";throw new IntegerOutOfRangeError({max:maxValue?`${maxValue}${suffix}`:undefined,min:`${minValue}${suffix}`,signed:signed,size:size,value:`${value_}${suffix}`})}const hex=`0x${(signed&&value<0?(1n<<BigInt(size*8))+BigInt(value):value).toString(16)}`;if(size)return pad(hex,{size:size});return hex}const encoder$1=new TextEncoder;function stringToHex(value_,opts={}){const value=encoder$1.encode(value_);return bytesToHex(value,opts)}const encoder=new TextEncoder;function toBytes$1(value,opts={}){if(typeof value==="number"||typeof value==="bigint")return numberToBytes(value,opts);if(typeof value==="boolean")return boolToBytes(value,opts);if(isHex(value))return hexToBytes(value,opts);return stringToBytes(value,opts)}function boolToBytes(value,opts={}){const bytes=new Uint8Array(1);bytes[0]=Number(value);if(typeof opts.size==="number"){assertSize(bytes,{size:opts.size});return pad(bytes,{size:opts.size})}return bytes}function hexToBytes(hex_,opts={}){let hex=hex_;if(opts.size){assertSize(hex,{size:opts.size});hex=pad(hex,{dir:"right",size:opts.size})}let hexString=hex.slice(2);if(hexString.length%2)hexString=`0${hexString}`;const bytes=new Uint8Array(hexString.length/2);for(let index=0;index<bytes.length;index++){const start=index*2;const hexByte=hexString.slice(start,start+2);const byte=Number.parseInt(hexByte,16);if(Number.isNaN(byte)||byte<0)throw new BaseError(`Invalid byte sequence ("${hexByte}" in "${hexString}").`);bytes[index]=byte}return bytes}function numberToBytes(value,opts){const hex=numberToHex(value,opts);return hexToBytes(hex)}function stringToBytes(value,opts={}){const bytes=encoder.encode(value);if(typeof opts.size==="number"){assertSize(bytes,{size:opts.size});return pad(bytes,{dir:"right",size:opts.size})}return bytes}const paramsRegex=/((function|event)\s)?(.*)(\((.*)\))/;function extractFunctionParts(def){const parts=def.match(paramsRegex);const type=parts?.[2]||undefined;const name=parts?.[3];const params=parts?.[5]||undefined;return{type:type,name:name,params:params}}function extractFunctionName(def){return extractFunctionParts(def).name}function extractFunctionParams(def){const params=extractFunctionParts(def).params;const splitParams=params?.split(",").map(x=>x.trim().split(" "));return splitParams?.map(param=>({type:param[0],name:param[1]==="indexed"?param[2]:param[1],...param[1]==="indexed"?{indexed:true}:{}}))}function number(n){if(!Number.isSafeInteger(n)||n<0)throw new Error(`Wrong positive integer: ${n}`)}function bool(b){if(typeof b!=="boolean")throw new Error(`Expected boolean, not ${b}`)}function bytes(b,...lengths){if(!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(lengths.length>0&&!lengths.includes(b.length))throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`)}function hash$1(hash){if(typeof hash!=="function"||typeof hash.create!=="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number(hash.outputLen);number(hash.blockLen)}function exists(instance,checkFinished=true){if(instance.destroyed)throw new Error("Hash instance has been destroyed");if(checkFinished&&instance.finished)throw new Error("Hash#digest() has already been called")}function output(out,instance){bytes(out);const min=instance.outputLen;if(out.length<min){throw new Error(`digestInto() expects output buffer of length at least ${min}`)}}const assert={number:number,bool:bool,bytes:bytes,hash:hash$1,exists:exists,output:output};const U32_MASK64=BigInt(2**32-1);const _32n=BigInt(32);function fromBig(n,le=false){if(le)return{h:Number(n&U32_MASK64),l:Number(n>>_32n&U32_MASK64)};return{h:Number(n>>_32n&U32_MASK64)|0,l:Number(n&U32_MASK64)|0}}function split(lst,le=false){let Ah=new Uint32Array(lst.length);let Al=new Uint32Array(lst.length);for(let i=0;i<lst.length;i++){const{h,l}=fromBig(lst[i],le);[Ah[i],Al[i]]=[h,l]}return[Ah,Al]}const toBig=(h,l)=>BigInt(h>>>0)<<_32n|BigInt(l>>>0);const shrSH=(h,l,s)=>h>>>s;const shrSL=(h,l,s)=>h<<32-s|l>>>s;const rotrSH=(h,l,s)=>h>>>s|l<<32-s;const rotrSL=(h,l,s)=>h<<32-s|l>>>s;const rotrBH=(h,l,s)=>h<<64-s|l>>>s-32;const rotrBL=(h,l,s)=>h>>>s-32|l<<64-s;const rotr32H=(h,l)=>l;const rotr32L=(h,l)=>h;const rotlSH=(h,l,s)=>h<<s|l>>>32-s;const rotlSL=(h,l,s)=>l<<s|h>>>32-s;const rotlBH=(h,l,s)=>l<<s-32|h>>>64-s;const rotlBL=(h,l,s)=>h<<s-32|l>>>64-s;function add(Ah,Al,Bh,Bl){const l=(Al>>>0)+(Bl>>>0);return{h:Ah+Bh+(l/2**32|0)|0,l:l|0}}const add3L=(Al,Bl,Cl)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0);const add3H=(low,Ah,Bh,Ch)=>Ah+Bh+Ch+(low/2**32|0)|0;const add4L=(Al,Bl,Cl,Dl)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0)+(Dl>>>0);const add4H=(low,Ah,Bh,Ch,Dh)=>Ah+Bh+Ch+Dh+(low/2**32|0)|0;const add5L=(Al,Bl,Cl,Dl,El)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0)+(Dl>>>0)+(El>>>0);const add5H=(low,Ah,Bh,Ch,Dh,Eh)=>Ah+Bh+Ch+Dh+Eh+(low/2**32|0)|0;const u64={fromBig:fromBig,split:split,toBig:toBig,shrSH:shrSH,shrSL:shrSL,rotrSH:rotrSH,rotrSL:rotrSL,rotrBH:rotrBH,rotrBL:rotrBL,rotr32H:rotr32H,rotr32L:rotr32L,rotlSH:rotlSH,rotlSL:rotlSL,rotlBH:rotlBH,rotlBL:rotlBL,add:add,add3L:add3L,add3H:add3H,add4L:add4L,add4H:add4H,add5H:add5H,add5L:add5L};const u32=arr=>new Uint32Array(arr.buffer,arr.byteOffset,Math.floor(arr.byteLength/4));const isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!isLE)throw new Error("Non little-endian hardware is not supported");Array.from({length:256},(v,i)=>i.toString(16).padStart(2,"0"));function utf8ToBytes(str){if(typeof str!=="string"){throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`)}return(new TextEncoder).encode(str)}function toBytes(data){if(typeof data==="string")data=utf8ToBytes(data);if(!(data instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);return data}class Hash{clone(){return this._cloneInto()}}function wrapConstructor(hashConstructor){const hashC=message=>hashConstructor().update(toBytes(message)).digest();const tmp=hashConstructor();hashC.outputLen=tmp.outputLen;hashC.blockLen=tmp.blockLen;hashC.create=()=>hashConstructor();return hashC}function wrapConstructorWithOpts(hashCons){const hashC=(msg,opts)=>hashCons(opts).update(toBytes(msg)).digest();const tmp=hashCons({});hashC.outputLen=tmp.outputLen;hashC.blockLen=tmp.blockLen;hashC.create=opts=>hashCons(opts);return hashC}const[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]];const _0n=BigInt(0);const _1n=BigInt(1);const _2n=BigInt(2);const _7n=BigInt(7);const _256n=BigInt(256);const _0x71n=BigInt(113);for(let round=0,R=_1n,x=1,y=0;round<24;round++){[x,y]=[y,(2*x+3*y)%5];SHA3_PI.push(2*(5*y+x));SHA3_ROTL.push((round+1)*(round+2)/2%64);let t=_0n;for(let j=0;j<7;j++){R=(R<<_1n^(R>>_7n)*_0x71n)%_256n;if(R&_2n)t^=_1n<<(_1n<<BigInt(j))-_1n}_SHA3_IOTA.push(t)}const[SHA3_IOTA_H,SHA3_IOTA_L]=u64.split(_SHA3_IOTA,true);const rotlH=(h,l,s)=>s>32?u64.rotlBH(h,l,s):u64.rotlSH(h,l,s);const rotlL=(h,l,s)=>s>32?u64.rotlBL(h,l,s):u64.rotlSL(h,l,s);function keccakP(s,rounds=24){const B=new Uint32Array(5*2);for(let round=24-rounds;round<24;round++){for(let x=0;x<10;x++)B[x]=s[x]^s[x+10]^s[x+20]^s[x+30]^s[x+40];for(let x=0;x<10;x+=2){const idx1=(x+8)%10;const idx0=(x+2)%10;const B0=B[idx0];const B1=B[idx0+1];const Th=rotlH(B0,B1,1)^B[idx1];const Tl=rotlL(B0,B1,1)^B[idx1+1];for(let y=0;y<50;y+=10){s[x+y]^=Th;s[x+y+1]^=Tl}}let curH=s[2];let curL=s[3];for(let t=0;t<24;t++){const shift=SHA3_ROTL[t];const Th=rotlH(curH,curL,shift);const Tl=rotlL(curH,curL,shift);const PI=SHA3_PI[t];curH=s[PI];curL=s[PI+1];s[PI]=Th;s[PI+1]=Tl}for(let y=0;y<50;y+=10){for(let x=0;x<10;x++)B[x]=s[y+x];for(let x=0;x<10;x++)s[y+x]^=~B[(x+2)%10]&B[(x+4)%10]}s[0]^=SHA3_IOTA_H[round];s[1]^=SHA3_IOTA_L[round]}B.fill(0)}class Keccak extends Hash{constructor(blockLen,suffix,outputLen,enableXOF=false,rounds=24){super();this.blockLen=blockLen;this.suffix=suffix;this.outputLen=outputLen;this.enableXOF=enableXOF;this.rounds=rounds;this.pos=0;this.posOut=0;this.finished=false;this.destroyed=false;assert.number(outputLen);if(0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200);this.state32=u32(this.state)}keccak(){keccakP(this.state32,this.rounds);this.posOut=0;this.pos=0}update(data){assert.exists(this);const{blockLen,state}=this;data=toBytes(data);const len=data.length;for(let pos=0;pos<len;){const take=Math.min(blockLen-this.pos,len-pos);for(let i=0;i<take;i++)state[this.pos++]^=data[pos++];if(this.pos===blockLen)this.keccak()}return this}finish(){if(this.finished)return;this.finished=true;const{state,suffix,pos,blockLen}=this;state[pos]^=suffix;if((suffix&128)!==0&&pos===blockLen-1)this.keccak();state[blockLen-1]^=128;this.keccak()}writeInto(out){assert.exists(this,false);assert.bytes(out);this.finish();const bufferOut=this.state;const{blockLen}=this;for(let pos=0,len=out.length;pos<len;){if(this.posOut>=blockLen)this.keccak();const take=Math.min(blockLen-this.posOut,len-pos);out.set(bufferOut.subarray(this.posOut,this.posOut+take),pos);this.posOut+=take;pos+=take}return out}xofInto(out){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(out)}xof(bytes){assert.number(bytes);return this.xofInto(new Uint8Array(bytes))}digestInto(out){assert.output(out,this);if(this.finished)throw new Error("digest() was already called");this.writeInto(out);this.destroy();return out}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=true;this.state.fill(0)}_cloneInto(to){const{blockLen,suffix,outputLen,rounds,enableXOF}=this;to||(to=new Keccak(blockLen,suffix,outputLen,enableXOF,rounds));to.state32.set(this.state32);to.pos=this.pos;to.posOut=this.posOut;to.finished=this.finished;to.rounds=rounds;to.suffix=suffix;to.outputLen=outputLen;to.enableXOF=enableXOF;to.destroyed=this.destroyed;return to}}const gen=(suffix,blockLen,outputLen)=>wrapConstructor(()=>new Keccak(blockLen,suffix,outputLen));gen(6,144,224/8);gen(6,136,256/8);gen(6,104,384/8);gen(6,72,512/8);gen(1,144,224/8);const keccak_256=gen(1,136,256/8);gen(1,104,384/8);gen(1,72,512/8);const genShake=(suffix,blockLen,outputLen)=>wrapConstructorWithOpts((opts={})=>new Keccak(blockLen,suffix,opts.dkLen===undefined?outputLen:opts.dkLen,true));genShake(31,168,128/8);genShake(31,136,256/8);function keccak256$1(value,to_){const to=to_||"hex";const bytes=keccak_256(isHex(value,{strict:false})?toBytes$1(value):value);if(to==="bytes")return bytes;return toHex(bytes)}const hash=value=>keccak256$1(toBytes$1(value));function hashFunction(def){const name=extractFunctionName(def);const params=extractFunctionParams(def)||[];return hash(`${name}(${params.map(({type})=>type).join(",")})`)}function hashAbiItem(def){return hash(`${def.name}(${def.inputs.map(({type})=>type).join(",")})`)}const getEventSelector=event=>{if(typeof event==="string")return hashFunction(event);return hashAbiItem(event)};class InvalidAddressError extends BaseError{constructor({address}){super(`Address "${address}" is invalid.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidAddressError"})}}const addressRegex=/^0x[a-fA-F0-9]{40}$/;function isAddress$2(address){return addressRegex.test(address)}function concat(values){if(typeof values[0]==="string")return concatHex(values);return concatBytes(values)}function concatBytes(values){let length=0;for(const arr of values){length+=arr.length}const result=new Uint8Array(length);let offset=0;for(const arr of values){result.set(arr,offset);offset+=arr.length}return result}function concatHex(values){return`0x${values.reduce((acc,x)=>acc+x.replace("0x",""),"")}`}function slice(value,start,end,{strict}={}){if(isHex(value,{strict:false}))return sliceHex(value,start,end,{strict:strict});return sliceBytes(value,start,end,{strict:strict})}function assertStartOffset(value,start){if(typeof start==="number"&&start>0&&start>size$1(value)-1)throw new SliceOffsetOutOfBoundsError({offset:start,position:"start",size:size$1(value)})}function assertEndOffset(value,start,end){if(typeof start==="number"&&typeof end==="number"&&size$1(value)!==end-start){throw new SliceOffsetOutOfBoundsError({offset:end,position:"end",size:size$1(value)})}}function sliceBytes(value_,start,end,{strict}={}){assertStartOffset(value_,start);const value=value_.slice(start,end);if(strict)assertEndOffset(value,start,end);return value}function sliceHex(value_,start,end,{strict}={}){assertStartOffset(value_,start);const value=`0x${value_.replace("0x","").slice((start??0)*2,(end??value_.length)*2)}`;if(strict)assertEndOffset(value,start,end);return value}function encodeAbiParameters(params,values){if(params.length!==values.length)throw new AbiEncodingLengthMismatchError({expectedLength:params.length,givenLength:values.length});const preparedParams=prepareParams({params:params,values:values});const data=encodeParams(preparedParams);if(data.length===0)return"0x";return data}function prepareParams({params,values}){const preparedParams=[];for(let i=0;i<params.length;i++){preparedParams.push(prepareParam({param:params[i],value:values[i]}))}return preparedParams}function prepareParam({param,value}){const arrayComponents=getArrayComponents(param.type);if(arrayComponents){const[length,type]=arrayComponents;return encodeArray(value,{length:length,param:{...param,type:type}})}if(param.type==="tuple"){return encodeTuple(value,{param:param})}if(param.type==="address"){return encodeAddress(value)}if(param.type==="bool"){return encodeBool(value)}if(param.type.startsWith("uint")||param.type.startsWith("int")){const signed=param.type.startsWith("int");return encodeNumber(value,{signed:signed})}if(param.type.startsWith("bytes")){return encodeBytes(value,{param:param})}if(param.type==="string"){return encodeString(value)}throw new InvalidAbiEncodingTypeError(param.type,{docsPath:"/docs/contract/encodeAbiParameters"})}function encodeParams(preparedParams){let staticSize=0;for(let i=0;i<preparedParams.length;i++){const{dynamic,encoded}=preparedParams[i];if(dynamic)staticSize+=32;else staticSize+=size$1(encoded)}const staticParams=[];const dynamicParams=[];let dynamicSize=0;for(let i=0;i<preparedParams.length;i++){const{dynamic,encoded}=preparedParams[i];if(dynamic){staticParams.push(numberToHex(staticSize+dynamicSize,{size:32}));dynamicParams.push(encoded);dynamicSize+=size$1(encoded)}else{staticParams.push(encoded)}}return concat([...staticParams,...dynamicParams])}function encodeAddress(value){if(!isAddress$2(value))throw new InvalidAddressError({address:value});return{dynamic:false,encoded:padHex(value.toLowerCase())}}function encodeArray(value,{length,param}){const dynamic=length===null;if(!Array.isArray(value))throw new InvalidArrayError(value);if(!dynamic&&value.length!==length)throw new AbiEncodingArrayLengthMismatchError({expectedLength:length,givenLength:value.length,type:`${param.type}[${length}]`});let dynamicChild=false;const preparedParams=[];for(let i=0;i<value.length;i++){const preparedParam=prepareParam({param:param,value:value[i]});if(preparedParam.dynamic)dynamicChild=true;preparedParams.push(preparedParam)}if(dynamic||dynamicChild){const data=encodeParams(preparedParams);if(dynamic){const length=numberToHex(preparedParams.length,{size:32});return{dynamic:true,encoded:preparedParams.length>0?concat([length,data]):length}}if(dynamicChild)return{dynamic:true,encoded:data}}return{dynamic:false,encoded:concat(preparedParams.map(({encoded})=>encoded))}}function encodeBytes(value,{param}){const[_,size_]=param.type.split("bytes");if(!size_){const partsLength=Math.ceil(size$1(value)/32);const parts=[];for(let i=0;i<partsLength;i++){parts.push(padHex(slice(value,i*32,(i+1)*32),{dir:"right"}))}return{dynamic:true,encoded:concat([padHex(numberToHex(size$1(value),{size:32})),...parts])}}if(size$1(value)!==parseInt(size_))throw new AbiEncodingBytesSizeMismatchError({expectedSize:parseInt(size_),value:value});return{dynamic:false,encoded:padHex(value,{dir:"right"})}}function encodeBool(value){return{dynamic:false,encoded:padHex(boolToHex(value))}}function encodeNumber(value,{signed}){return{dynamic:false,encoded:numberToHex(value,{size:32,signed:signed})}}function encodeString(value){const hexValue=stringToHex(value);const partsLength=Math.ceil(size$1(hexValue)/32);const parts=[];for(let i=0;i<partsLength;i++){parts.push(padHex(slice(hexValue,i*32,(i+1)*32),{dir:"right"}))}return{dynamic:true,encoded:concat([padHex(numberToHex(size$1(hexValue),{size:32})),...parts])}}function encodeTuple(value,{param}){let dynamic=false;const preparedParams=[];for(let i=0;i<param.components.length;i++){const param_=param.components[i];const index=Array.isArray(value)?i:param_.name;const preparedParam=prepareParam({param:param_,value:value[index]});preparedParams.push(preparedParam);if(preparedParam.dynamic)dynamic=true}return{dynamic:dynamic,encoded:dynamic?encodeParams(preparedParams):concat(preparedParams.map(({encoded})=>encoded))}}function getArrayComponents(type){const matches=type.match(/^(.*)\[(\d+)?\]$/);return matches?[matches[2]?Number(matches[2]):null,matches[1]]:undefined}function getAbiItem({abi,args=[],name}){const abiItems=abi.filter(x=>"name"in x&&x.name===name);if(abiItems.length===0)return undefined;if(abiItems.length===1)return abiItems[0];for(const abiItem of abiItems){if(!("inputs"in abiItem))continue;if(!args||args.length===0){if(!abiItem.inputs||abiItem.inputs.length===0)return abiItem;continue}if(!abiItem.inputs)continue;if(abiItem.inputs.length===0)continue;if(abiItem.inputs.length!==args.length)continue;const matched=args.every((arg,index)=>{const abiParameter="inputs"in abiItem&&abiItem.inputs[index];if(!abiParameter)return false;return isArgOfType(arg,abiParameter)});if(matched)return abiItem}return abiItems[0]}function isArgOfType(arg,abiParameter){const argType=typeof arg;const abiParameterType=abiParameter.type;switch(abiParameterType){case"address":return isAddress$2(arg);case"bool":return argType==="boolean";case"function":return argType==="string";case"string":return argType==="string";default:{if(abiParameterType==="tuple"&&"components"in abiParameter)return Object.values(abiParameter.components).every((component,index)=>{return isArgOfType(Object.values(arg)[index],component)});if(/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType))return argType==="number"||argType==="bigint";if(/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))return argType==="string"||arg instanceof Uint8Array;if(/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(abiParameterType)){return Array.isArray(arg)&&arg.every(x=>isArgOfType(x,{...abiParameter,type:abiParameterType.replace(/(\[[0-9]{0,}\])$/,"")}))}return false}}}function encodeEventTopics({abi,eventName,args}){let abiItem=abi[0];if(eventName){abiItem=getAbiItem({abi:abi,args:args,name:eventName});if(!abiItem)throw new AbiEventNotFoundError(eventName,{docsPath:"/docs/contract/encodeEventTopics"})}if(abiItem.type!=="event")throw new AbiEventNotFoundError(undefined,{docsPath:"/docs/contract/encodeEventTopics"});const definition=formatAbiItem(abiItem);const signature=getEventSelector(definition);let topics=[];if(args&&"inputs"in abiItem){const indexedInputs=abiItem.inputs?.filter(param=>"indexed"in param&&param.indexed);const args_=Array.isArray(args)?args:Object.values(args).length>0?indexedInputs?.map(x=>args[x.name])??[]:[];if(args_.length>0){topics=indexedInputs?.map((param,i)=>Array.isArray(args_[i])?args_[i].map((_,j)=>encodeArg({param:param,value:args_[i][j]})):args_[i]?encodeArg({param:param,value:args_[i]}):null)??[]}}return[signature,...topics]}function encodeArg({param,value}){if(param.type==="string"||param.type==="bytes")return keccak256$1(toBytes$1(value));if(param.type==="tuple"||param.type.match(/^(.*)\[(\d+)?\]$/))throw new FilterTypeNotSupportedError(param.type);return encodeAbiParameters([param],[value])}function createFilterRequestScope(client,{method}){const requestMap={};if(client.transport.type==="fallback")client.transport.onResponse?.(({method:method_,response:id,status,transport})=>{if(status==="success"&&method===method_)requestMap[id]=transport.request});return id=>requestMap[id]||client.request}async function createContractEventFilter(client,{address,abi,args,eventName,fromBlock,strict,toBlock}){const getRequest=createFilterRequestScope(client,{method:"eth_newFilter"});const topics=eventName?encodeEventTopics({abi:abi,args:args,eventName:eventName}):undefined;const id=await client.request({method:"eth_newFilter",params:[{address:address,fromBlock:typeof fromBlock==="bigint"?numberToHex(fromBlock):fromBlock,toBlock:typeof toBlock==="bigint"?numberToHex(toBlock):toBlock,topics:topics}]});return{abi:abi,args:args,eventName:eventName,id:id,request:getRequest(id),strict:strict,type:"event"}}function parseAccount(account){if(typeof account==="string")return{address:account,type:"json-rpc"};return account}const getFunctionSelector=fn=>{if(typeof fn==="string")return slice(hashFunction(fn),0,4);return slice(hashAbiItem(fn),0,4)};function encodeFunctionData({abi,args,functionName}){let abiItem=abi[0];if(functionName){abiItem=getAbiItem({abi:abi,args:args,name:functionName});if(!abiItem)throw new AbiFunctionNotFoundError(functionName,{docsPath:"/docs/contract/encodeFunctionData"})}if(abiItem.type!=="function")throw new AbiFunctionNotFoundError(undefined,{docsPath:"/docs/contract/encodeFunctionData"});const definition=formatAbiItem(abiItem);const signature=getFunctionSelector(definition);const data="inputs"in abiItem&&abiItem.inputs?encodeAbiParameters(abiItem.inputs,args??[]):undefined;return concatHex([signature,data??"0x"])}const panicReasons={1:"An `assert` condition failed.",17:"Arithmic operation resulted in underflow or overflow.",18:"Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",33:"Attempted to convert to an invalid type.",34:"Attempted to access a storage byte array that is incorrectly encoded.",49:"Performed `.pop()` on an empty array",50:"Array index is out of bounds.",65:"Allocated too much memory or created an array which is too large.",81:"Attempted to call a zero-initialized variable of internal function type."};const solidityError={inputs:[{name:"message",type:"string"}],name:"Error",type:"error"};const solidityPanic={inputs:[{name:"reason",type:"uint256"}],name:"Panic",type:"error"};function checksumAddress(address_,chainId){const hexAddress=chainId?`${chainId}${address_.toLowerCase()}`:address_.substring(2).toLowerCase();const hash=keccak256$1(stringToBytes(hexAddress),"bytes");const address=(chainId?hexAddress.substring(`${chainId}0x`.length):hexAddress).split("");for(let i=0;i<40;i+=2){if(hash[i>>1]>>4>=8&&address[i]){address[i]=address[i].toUpperCase()}if((hash[i>>1]&15)>=8&&address[i+1]){address[i+1]=address[i+1].toUpperCase()}}return`0x${address.join("")}`}function decodeAbiParameters(params,data){if(data==="0x"&&params.length>0)throw new AbiDecodingZeroDataError;if(size$1(data)&&size$1(data)<32)throw new AbiDecodingDataSizeTooSmallError({data:data,params:params,size:size$1(data)});return decodeParams({data:data,params:params})}function decodeParams({data,params}){const decodedValues=[];let position=0;for(let i=0;i<params.length;i++){if(position>=size$1(data))throw new AbiDecodingDataSizeTooSmallError({data:data,params:params,size:size$1(data)});const param=params[i];const{consumed,value}=decodeParam({data:data,param:param,position:position});decodedValues.push(value);position+=consumed}return decodedValues}function decodeParam({data,param,position}){const arrayComponents=getArrayComponents(param.type);if(arrayComponents){const[length,type]=arrayComponents;return decodeArray(data,{length:length,param:{...param,type:type},position:position})}if(param.type==="tuple"){return decodeTuple(data,{param:param,position:position})}if(param.type==="string"){return decodeString(data,{position:position})}if(param.type.startsWith("bytes")){return decodeBytes(data,{param:param,position:position})}const value=slice(data,position,position+32,{strict:true});if(param.type.startsWith("uint")||param.type.startsWith("int")){return decodeNumber(value,{param:param})}if(param.type==="address"){return decodeAddress(value)}if(param.type==="bool"){return decodeBool(value)}throw new InvalidAbiDecodingTypeError(param.type,{docsPath:"/docs/contract/decodeAbiParameters"})}function decodeAddress(value){return{consumed:32,value:checksumAddress(slice(value,-20))}}function decodeArray(data,{param,length,position}){if(!length){const offset=hexToNumber(slice(data,position,position+32,{strict:true}));const length=hexToNumber(slice(data,offset,offset+32,{strict:true}));let consumed=0;const value=[];for(let i=0;i<length;++i){const decodedChild=decodeParam({data:slice(data,offset+32),param:param,position:consumed});consumed+=decodedChild.consumed;value.push(decodedChild.value)}return{value:value,consumed:32}}if(hasDynamicChild(param)){const arrayComponents=getArrayComponents(param.type);const dynamicChild=!arrayComponents?.[0];let consumed=0;const value=[];for(let i=0;i<length;++i){const offset=hexToNumber(slice(data,position,position+32,{strict:true}));const decodedChild=decodeParam({data:slice(data,offset),param:param,position:dynamicChild?consumed:i*32});consumed+=decodedChild.consumed;value.push(decodedChild.value)}return{value:value,consumed:32}}let consumed=0;const value=[];for(let i=0;i<length;++i){const decodedChild=decodeParam({data:data,param:param,position:position+consumed});consumed+=decodedChild.consumed;value.push(decodedChild.value)}return{value:value,consumed:consumed}}function decodeBool(value){return{consumed:32,value:hexToBool(value)}}function decodeBytes(data,{param,position}){const[_,size]=param.type.split("bytes");if(!size){const offset=hexToNumber(slice(data,position,position+32,{strict:true}));const length=hexToNumber(slice(data,offset,offset+32,{strict:true}));if(length===0)return{consumed:32,value:"0x"};const value=slice(data,offset+32,offset+32+length,{strict:true});return{consumed:32,value:value}}const value=slice(data,position,position+parseInt(size),{strict:true});return{consumed:32,value:value}}function decodeNumber(value,{param}){const signed=param.type.startsWith("int");const size=parseInt(param.type.split("int")[1]||"256");return{consumed:32,value:size>48?hexToBigInt(value,{signed:signed}):hexToNumber(value,{signed:signed})}}function decodeString(data,{position}){const offset=hexToNumber(slice(data,position,position+32,{strict:true}));const length=hexToNumber(slice(data,offset,offset+32,{strict:true}));if(length===0)return{consumed:32,value:""};const value=hexToString(trim(slice(data,offset+32,offset+32+length,{strict:true})));return{consumed:32,value:value}}function decodeTuple(data,{param,position}){const hasUnnamedChild=param.components.length===0||param.components.some(({name})=>!name);const value=hasUnnamedChild?[]:{};let consumed=0;if(hasDynamicChild(param)){const offset=hexToNumber(slice(data,position,position+32,{strict:true}));for(let i=0;i<param.components.length;++i){const component=param.components[i];const decodedChild=decodeParam({data:slice(data,offset),param:component,position:consumed});consumed+=decodedChild.consumed;value[hasUnnamedChild?i:component?.name]=decodedChild.value}return{consumed:32,value:value}}for(let i=0;i<param.components.length;++i){const component=param.components[i];const decodedChild=decodeParam({data:data,param:component,position:position+consumed});consumed+=decodedChild.consumed;value[hasUnnamedChild?i:component?.name]=decodedChild.value}return{consumed:consumed,value:value}}function hasDynamicChild(param){const{type}=param;if(type==="string")return true;if(type==="bytes")return true;if(type.endsWith("[]"))return true;if(type==="tuple")return param.components?.some(hasDynamicChild);const arrayComponents=getArrayComponents(param.type);if(arrayComponents&&hasDynamicChild({...param,type:arrayComponents[1]}))return true;return false}function decodeErrorResult({abi,data}){const signature=slice(data,0,4);if(signature==="0x")throw new AbiDecodingZeroDataError;const abi_=[...abi||[],solidityError,solidityPanic];const abiItem=abi_.find(x=>x.type==="error"&&signature===getFunctionSelector(formatAbiItem(x)));if(!abiItem)throw new AbiErrorSignatureNotFoundError(signature,{docsPath:"/docs/contract/decodeErrorResult"});return{abiItem:abiItem,args:"inputs"in abiItem&&abiItem.inputs&&abiItem.inputs.length>0?decodeAbiParameters(abiItem.inputs,slice(data,4)):undefined,errorName:abiItem.name}}const stringify=(value,replacer,space)=>JSON.stringify(value,(key,value_)=>{const value=typeof value_==="bigint"?value_.toString():value_;return typeof replacer==="function"?replacer(key,value):value},space);function formatAbiItemWithArgs({abiItem,args,includeFunctionName=true,includeName=false}){if(!("name"in abiItem))return;if(!("inputs"in abiItem))return;if(!abiItem.inputs)return;return`${includeFunctionName?abiItem.name:""}(${abiItem.inputs.map((input,i)=>`${includeName&&input.name?`${input.name}: `:""}${typeof args[i]==="object"?stringify(args[i]):args[i]}`).join(", ")})`}const etherUnits={gwei:9,wei:18};const gweiUnits={ether:-9,wei:9};function formatUnits(value,decimals){let display=value.toString();const negative=display.startsWith("-");if(negative)display=display.slice(1);display=display.padStart(decimals,"0");let[integer,fraction]=[display.slice(0,display.length-decimals),display.slice(display.length-decimals)];fraction=fraction.replace(/(0+)$/,"");return`${negative?"-":""}${integer||"0"}${fraction?`.${fraction}`:""}`}function formatEther(wei,unit="wei"){return formatUnits(wei,etherUnits[unit])}function formatGwei(wei,unit="wei"){return formatUnits(wei,gweiUnits[unit])}function prettyPrint(args){const entries=Object.entries(args).map(([key,value])=>{if(value===undefined||value===false)return null;return[key,value]}).filter(Boolean);const maxLength=entries.reduce((acc,[key])=>Math.max(acc,key.length),0);return entries.map(([key,value])=>`  ${`${key}:`.padEnd(maxLength+1)}  ${value}`).join("\n")}class FeeConflictError extends BaseError{constructor(){super(["Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.","Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."].join("\n"));Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"FeeConflictError"})}}class TransactionNotFoundError extends BaseError{constructor({blockHash,blockNumber,blockTag,hash,index}){let identifier="Transaction";if(blockTag&&index!==undefined)identifier=`Transaction at block time "${blockTag}" at index "${index}"`;if(blockHash&&index!==undefined)identifier=`Transaction at block hash "${blockHash}" at index "${index}"`;if(blockNumber&&index!==undefined)identifier=`Transaction at block number "${blockNumber}" at index "${index}"`;if(hash)identifier=`Transaction with hash "${hash}"`;super(`${identifier} could not be found.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"TransactionNotFoundError"})}}class TransactionReceiptNotFoundError extends BaseError{constructor({hash}){super(`Transaction receipt with hash "${hash}" could not be found. The Transaction may not be processed on a block yet.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"TransactionReceiptNotFoundError"})}}class WaitForTransactionReceiptTimeoutError extends BaseError{constructor({hash}){super(`Timed out while waiting for transaction with hash "${hash}" to be confirmed.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"WaitForTransactionReceiptTimeoutError"})}}class CallExecutionError extends BaseError{constructor(cause,{account:account_,docsPath,chain,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value}){const account=account_?parseAccount(account_):undefined;const prettyArgs=prettyPrint({from:account?.address,to:to,value:typeof value!=="undefined"&&`${formatEther(value)} ${chain?.nativeCurrency.symbol||"ETH"}`,data:data,gas:gas,gasPrice:typeof gasPrice!=="undefined"&&`${formatGwei(gasPrice)} gwei`,maxFeePerGas:typeof maxFeePerGas!=="undefined"&&`${formatGwei(maxFeePerGas)} gwei`,maxPriorityFeePerGas:typeof maxPriorityFeePerGas!=="undefined"&&`${formatGwei(maxPriorityFeePerGas)} gwei`,nonce:nonce});super(cause.shortMessage,{cause:cause,docsPath:docsPath,metaMessages:[...cause.metaMessages?[...cause.metaMessages," "]:[],"Raw Call Arguments:",prettyArgs].filter(Boolean)});Object.defineProperty(this,"cause",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"CallExecutionError"});this.cause=cause}}class ContractFunctionExecutionError extends BaseError{constructor(cause,{abi,args,contractAddress,docsPath,functionName,sender}){const abiItem=getAbiItem({abi:abi,args:args,name:functionName});const formattedArgs=abiItem?formatAbiItemWithArgs({abiItem:abiItem,args:args,includeFunctionName:false,includeName:false}):undefined;const functionWithParams=abiItem?formatAbiItem(abiItem,{includeName:true}):undefined;const prettyArgs=prettyPrint({address:contractAddress&&getContractAddress(contractAddress),function:functionWithParams,args:formattedArgs&&formattedArgs!=="()"&&`${[...Array(functionName?.length??0).keys()].map(()=>" ").join("")}${formattedArgs}`,sender:sender});super(cause.shortMessage||`An unknown error occurred while executing the contract function "${functionName}".`,{cause:cause,docsPath:docsPath,metaMessages:[...cause.metaMessages?[...cause.metaMessages," "]:[],"Contract Call:",prettyArgs].filter(Boolean)});Object.defineProperty(this,"abi",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"args",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"cause",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"contractAddress",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"formattedArgs",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"functionName",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"sender",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ContractFunctionExecutionError"});this.abi=abi;this.args=args;this.cause=cause;this.contractAddress=contractAddress;this.functionName=functionName;this.sender=sender}}class ContractFunctionRevertedError extends BaseError{constructor({abi,data,functionName,message}){let decodedData=undefined;let metaMessages;let reason;if(data&&data!=="0x"){decodedData=decodeErrorResult({abi:abi,data:data});const{abiItem,errorName,args:errorArgs}=decodedData;if(errorName==="Error"){reason=errorArgs[0]}else if(errorName==="Panic"){const[firstArg]=errorArgs;reason=panicReasons[firstArg]}else{const errorWithParams=abiItem?formatAbiItem(abiItem,{includeName:true}):undefined;const formattedArgs=abiItem&&errorArgs?formatAbiItemWithArgs({abiItem:abiItem,args:errorArgs,includeFunctionName:false,includeName:false}):undefined;metaMessages=[errorWithParams?`Error: ${errorWithParams}`:"",formattedArgs&&formattedArgs!=="()"?`       ${[...Array(errorName?.length??0).keys()].map(()=>" ").join("")}${formattedArgs}`:""]}}else if(message)reason=message;super(reason&&reason!=="execution reverted"?[`The contract function "${functionName}" reverted with the following reason:`,reason].join("\n"):`The contract function "${functionName}" reverted.`,{metaMessages:metaMessages});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ContractFunctionRevertedError"});Object.defineProperty(this,"data",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"reason",{enumerable:true,configurable:true,writable:true,value:void 0});this.reason=reason;this.data=decodedData}}class ContractFunctionZeroDataError extends BaseError{constructor({functionName}){super(`The contract function "${functionName}" returned no data ("0x").`,{metaMessages:["This could be due to any of the following:",`  - The contract does not have the function "${functionName}",`,"  - The parameters passed to the contract function may be invalid, or","  - The address is not a contract."]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ContractFunctionZeroDataError"})}}class RawContractError extends BaseError{constructor({data,message}){super(message||"");Object.defineProperty(this,"code",{enumerable:true,configurable:true,writable:true,value:3});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"RawContractError"});Object.defineProperty(this,"data",{enumerable:true,configurable:true,writable:true,value:void 0});this.data=data}}const EXECUTION_REVERTED_ERROR_CODE=3;function getContractError(err,{abi,address,args,docsPath,functionName,sender}){const{code,data,message,shortMessage}=err instanceof RawContractError?err:err instanceof BaseError?err.walk(err=>"data"in err):{};let cause=err;if(err instanceof AbiDecodingZeroDataError){cause=new ContractFunctionZeroDataError({functionName:functionName})}else if(code===EXECUTION_REVERTED_ERROR_CODE&&(data||message||shortMessage)){cause=new ContractFunctionRevertedError({abi:abi,data:typeof data==="object"?data.data:data,functionName:functionName,message:shortMessage??message})}return new ContractFunctionExecutionError(cause,{abi:abi,args:args,contractAddress:address,docsPath:docsPath,functionName:functionName,sender:sender})}class AccountNotFoundError extends BaseError{constructor({docsPath}={}){super(["Could not find an Account to execute with this Action.","Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient."].join("\n"),{docsPath:docsPath,docsSlug:"account"});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"AccountNotFoundError"})}}class EstimateGasExecutionError extends BaseError{constructor(cause,{account,docsPath,chain,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value}){const prettyArgs=prettyPrint({from:account?.address,to:to,value:typeof value!=="undefined"&&`${formatEther(value)} ${chain?.nativeCurrency.symbol||"ETH"}`,data:data,gas:gas,gasPrice:typeof gasPrice!=="undefined"&&`${formatGwei(gasPrice)} gwei`,maxFeePerGas:typeof maxFeePerGas!=="undefined"&&`${formatGwei(maxFeePerGas)} gwei`,maxPriorityFeePerGas:typeof maxPriorityFeePerGas!=="undefined"&&`${formatGwei(maxPriorityFeePerGas)} gwei`,nonce:nonce});super(cause.shortMessage,{cause:cause,docsPath:docsPath,metaMessages:[...cause.metaMessages?[...cause.metaMessages," "]:[],"Estimate Gas Arguments:",prettyArgs].filter(Boolean)});Object.defineProperty(this,"cause",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"EstimateGasExecutionError"});this.cause=cause}}class ExecutionRevertedError extends BaseError{constructor({cause,message}={}){const reason=message?.replace("execution reverted: ","")?.replace("execution reverted","");super(`Execution reverted ${reason?`with reason: ${reason}`:"for an unknown reason"}.`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ExecutionRevertedError"})}}Object.defineProperty(ExecutionRevertedError,"code",{enumerable:true,configurable:true,writable:true,value:3});Object.defineProperty(ExecutionRevertedError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/execution reverted/});class FeeCapTooHighError extends BaseError{constructor({cause,maxFeePerGas}={}){super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${formatGwei(maxFeePerGas)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"FeeCapTooHigh"})}}Object.defineProperty(FeeCapTooHighError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/});class FeeCapTooLowError extends BaseError{constructor({cause,maxFeePerGas}={}){super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${formatGwei(maxFeePerGas)}`:""} gwei) cannot be lower than the block base fee.`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"FeeCapTooLow"})}}Object.defineProperty(FeeCapTooLowError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/});class NonceTooHighError extends BaseError{constructor({cause,nonce}={}){super(`Nonce provided for the transaction ${nonce?`(${nonce}) `:""}is higher than the next one expected.`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"NonceTooHighError"})}}Object.defineProperty(NonceTooHighError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/nonce too high/});class NonceTooLowError extends BaseError{constructor({cause,nonce}={}){super([`Nonce provided for the transaction ${nonce?`(${nonce}) `:""}is lower than the current nonce of the account.`,"Try increasing the nonce or find the latest nonce with `getTransactionCount`."].join("\n"),{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"NonceTooLowError"})}}Object.defineProperty(NonceTooLowError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/nonce too low|transaction already imported/});class NonceMaxValueError extends BaseError{constructor({cause,nonce}={}){super(`Nonce provided for the transaction ${nonce?`(${nonce}) `:""}exceeds the maximum allowed nonce.`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"NonceMaxValueError"})}}Object.defineProperty(NonceMaxValueError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/nonce has max value/});class InsufficientFundsError extends BaseError{constructor({cause}={}){super(["The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account."].join("\n"),{cause:cause,metaMessages:["This error could arise when the account does not have enough funds to:"," - pay for the total gas fee,"," - pay for the value to send."," ","The cost of the transaction is calculated as `gas * gas fee + value`, where:"," - `gas` is the amount of gas needed for transaction to execute,"," - `gas fee` is the gas fee,"," - `value` is the amount of ether to send to the recipient."]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InsufficientFundsError"})}}Object.defineProperty(InsufficientFundsError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/insufficient funds/});class IntrinsicGasTooHighError extends BaseError{constructor({cause,gas}={}){super(`The amount of gas ${gas?`(${gas}) `:""}provided for the transaction exceeds the limit allowed for the block.`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"IntrinsicGasTooHighError"})}}Object.defineProperty(IntrinsicGasTooHighError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/intrinsic gas too high|gas limit reached/});class IntrinsicGasTooLowError extends BaseError{constructor({cause,gas}={}){super(`The amount of gas ${gas?`(${gas}) `:""}provided for the transaction is too low.`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"IntrinsicGasTooLowError"})}}Object.defineProperty(IntrinsicGasTooLowError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/intrinsic gas too low/});class TransactionTypeNotSupportedError extends BaseError{constructor({cause}){super("The transaction type is not supported for this chain.",{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"TransactionTypeNotSupportedError"})}}Object.defineProperty(TransactionTypeNotSupportedError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/transaction type not valid/});class TipAboveFeeCapError extends BaseError{constructor({cause,maxPriorityFeePerGas,maxFeePerGas}={}){super([`The provided tip (\`maxPriorityFeePerGas\`${maxPriorityFeePerGas?` = ${formatGwei(maxPriorityFeePerGas)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${formatGwei(maxFeePerGas)} gwei`:""}).`].join("\n"),{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"TipAboveFeeCapError"})}}Object.defineProperty(TipAboveFeeCapError,"nodeMessage",{enumerable:true,configurable:true,writable:true,value:/max priority fee per gas higher than max fee per gas|tip higher than fee cap/});class UnknownNodeError extends BaseError{constructor({cause}){super(`An error occurred while executing: ${cause?.message}`,{cause:cause});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"UnknownNodeError"})}}class HttpRequestError extends BaseError{constructor({body,details,headers,status,url}){super("HTTP request failed.",{details:details,metaMessages:[status&&`Status: ${status}`,`URL: ${getUrl(url)}`,body&&`Request body: ${stringify(body)}`].filter(Boolean)});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"HttpRequestError"});Object.defineProperty(this,"body",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"headers",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"status",{enumerable:true,configurable:true,writable:true,value:void 0});Object.defineProperty(this,"url",{enumerable:true,configurable:true,writable:true,value:void 0});this.body=body;this.headers=headers;this.status=status;this.url=url}}class WebSocketRequestError extends BaseError{constructor({body,details,url}){super("WebSocket request failed.",{details:details,metaMessages:[`URL: ${getUrl(url)}`,`Request body: ${stringify(body)}`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"WebSocketRequestError"})}}class RpcRequestError extends BaseError{constructor({body,error,url}){super("RPC Request failed.",{cause:error,details:error.message,metaMessages:[`URL: ${getUrl(url)}`,`Request body: ${stringify(body)}`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"RpcRequestError"});Object.defineProperty(this,"code",{enumerable:true,configurable:true,writable:true,value:void 0});this.code=error.code}}class TimeoutError extends BaseError{constructor({body,url}){super("The request took too long to respond.",{details:"The request timed out.",metaMessages:[`URL: ${getUrl(url)}`,`Request body: ${stringify(body)}`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"TimeoutError"})}}const unknownErrorCode=-1;class RpcError extends BaseError{constructor(cause,{code,docsPath,metaMessages,shortMessage}){super(shortMessage,{cause:cause,docsPath:docsPath,metaMessages:metaMessages||cause?.metaMessages});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"RpcError"});Object.defineProperty(this,"code",{enumerable:true,configurable:true,writable:true,value:void 0});this.name=cause.name;this.code=cause instanceof RpcRequestError?cause.code:code??unknownErrorCode}}class ProviderRpcError extends RpcError{constructor(cause,options){super(cause,options);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ProviderRpcError"});Object.defineProperty(this,"data",{enumerable:true,configurable:true,writable:true,value:void 0});this.data=options.data}}class ParseRpcError extends RpcError{constructor(cause){super(cause,{code:-32700,shortMessage:"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ParseRpcError"})}}class InvalidRequestRpcError extends RpcError{constructor(cause){super(cause,{code:-32600,shortMessage:"JSON is not a valid request object."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidRequestRpcError"})}}class MethodNotFoundRpcError extends RpcError{constructor(cause){super(cause,{code:-32601,shortMessage:"The method does not exist / is not available."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"MethodNotFoundRpcError"})}}class InvalidParamsRpcError extends RpcError{constructor(cause){super(cause,{code:-32602,shortMessage:["Invalid parameters were provided to the RPC method.","Double check you have provided the correct parameters."].join("\n")});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidParamsRpcError"})}}class InternalRpcError extends RpcError{constructor(cause){super(cause,{code:-32603,shortMessage:"An internal error was received."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InternalRpcError"})}}class InvalidInputRpcError extends RpcError{constructor(cause){super(cause,{code:-32e3,shortMessage:["Missing or invalid parameters.","Double check you have provided the correct parameters."].join("\n")});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"InvalidInputRpcError"})}}class ResourceNotFoundRpcError extends RpcError{constructor(cause){super(cause,{code:-32001,shortMessage:"Requested resource not found."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ResourceNotFoundRpcError"})}}class ResourceUnavailableRpcError extends RpcError{constructor(cause){super(cause,{code:-32002,shortMessage:"Requested resource not available."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ResourceUnavailableRpcError"})}}class TransactionRejectedRpcError extends RpcError{constructor(cause){super(cause,{code:-32003,shortMessage:"Transaction creation failed."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"TransactionRejectedRpcError"})}}class MethodNotSupportedRpcError extends RpcError{constructor(cause){super(cause,{code:-32004,shortMessage:"Method is not implemented."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"MethodNotSupportedRpcError"})}}class LimitExceededRpcError extends RpcError{constructor(cause){super(cause,{code:-32005,shortMessage:"Request exceeds defined limit."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"LimitExceededRpcError"})}}class JsonRpcVersionUnsupportedError extends RpcError{constructor(cause){super(cause,{code:-32006,shortMessage:"Version of JSON-RPC protocol is not supported."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"JsonRpcVersionUnsupportedError"})}}class UserRejectedRequestError extends ProviderRpcError{constructor(cause){super(cause,{code:4001,shortMessage:"User rejected the request."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"UserRejectedRequestError"})}}class UnauthorizedProviderError extends ProviderRpcError{constructor(cause){super(cause,{code:4100,shortMessage:"The requested method and/or account has not been authorized by the user."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"UnauthorizedProviderError"})}}class UnsupportedProviderMethodError extends ProviderRpcError{constructor(cause){super(cause,{code:4200,shortMessage:"The Provider does not support the requested method."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"UnsupportedProviderMethodError"})}}class ProviderDisconnectedError extends ProviderRpcError{constructor(cause){super(cause,{code:4900,shortMessage:"The Provider is disconnected from all chains."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ProviderDisconnectedError"})}}class ChainDisconnectedError extends ProviderRpcError{constructor(cause){super(cause,{code:4901,shortMessage:"The Provider is not connected to the requested chain."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ChainDisconnectedError"})}}class SwitchChainError extends ProviderRpcError{constructor(cause){super(cause,{code:4902,shortMessage:"An error occurred when attempting to switch chain."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"SwitchChainError"})}}class UnknownRpcError extends RpcError{constructor(cause){super(cause,{shortMessage:"An unknown RPC error occurred."});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"UnknownRpcError"})}}function containsNodeError(err){return err instanceof TransactionRejectedRpcError||err instanceof InvalidInputRpcError||err instanceof RpcRequestError&&err.code===ExecutionRevertedError.code}function getNodeError(err,args){const message=err.details.toLowerCase();if(FeeCapTooHighError.nodeMessage.test(message))return new FeeCapTooHighError({cause:err,maxFeePerGas:args?.maxFeePerGas});else if(FeeCapTooLowError.nodeMessage.test(message))return new FeeCapTooLowError({cause:err,maxFeePerGas:args?.maxFeePerGas});else if(NonceTooHighError.nodeMessage.test(message))return new NonceTooHighError({cause:err,nonce:args?.nonce});else if(NonceTooLowError.nodeMessage.test(message))return new NonceTooLowError({cause:err,nonce:args?.nonce});else if(NonceMaxValueError.nodeMessage.test(message))return new NonceMaxValueError({cause:err,nonce:args?.nonce});else if(InsufficientFundsError.nodeMessage.test(message))return new InsufficientFundsError({cause:err});else if(IntrinsicGasTooHighError.nodeMessage.test(message))return new IntrinsicGasTooHighError({cause:err,gas:args?.gas});else if(IntrinsicGasTooLowError.nodeMessage.test(message))return new IntrinsicGasTooLowError({cause:err,gas:args?.gas});else if(TransactionTypeNotSupportedError.nodeMessage.test(message))return new TransactionTypeNotSupportedError({cause:err});else if(TipAboveFeeCapError.nodeMessage.test(message))return new TipAboveFeeCapError({cause:err,maxFeePerGas:args?.maxFeePerGas,maxPriorityFeePerGas:args?.maxPriorityFeePerGas});else if(message.match(ExecutionRevertedError.nodeMessage)||"code"in err.cause&&err.cause?.code===ExecutionRevertedError.code)return new ExecutionRevertedError({cause:err,message:err.cause.details||err.details});return new UnknownNodeError({cause:err.cause.cause})}function getEstimateGasError(err,{docsPath,...args}){let cause=err;if(containsNodeError(err))cause=getNodeError(err,args);return new EstimateGasExecutionError(cause,{docsPath:docsPath,...args})}function extract(value,{format}){if(!format)return{};const keys=Object.keys(format({}));return keys.reduce((data,key)=>{if(value?.hasOwnProperty(key)){data[key]=value[key]}return data},{})}function formatTransactionRequest(transactionRequest){return{...transactionRequest,gas:typeof transactionRequest.gas!=="undefined"?numberToHex(transactionRequest.gas):undefined,gasPrice:typeof transactionRequest.gasPrice!=="undefined"?numberToHex(transactionRequest.gasPrice):undefined,maxFeePerGas:typeof transactionRequest.maxFeePerGas!=="undefined"?numberToHex(transactionRequest.maxFeePerGas):undefined,maxPriorityFeePerGas:typeof transactionRequest.maxPriorityFeePerGas!=="undefined"?numberToHex(transactionRequest.maxPriorityFeePerGas):undefined,nonce:typeof transactionRequest.nonce!=="undefined"?numberToHex(transactionRequest.nonce):undefined,value:typeof transactionRequest.value!=="undefined"?numberToHex(transactionRequest.value):undefined}}function assertRequest(args){const{account:account_,gasPrice,maxFeePerGas,maxPriorityFeePerGas,to}=args;const account=account_?parseAccount(account_):undefined;if(account&&!isAddress$2(account.address))throw new InvalidAddressError({address:account.address});if(to&&!isAddress$2(to))throw new InvalidAddressError({address:to});if(typeof gasPrice!=="undefined"&&(typeof maxFeePerGas!=="undefined"||typeof maxPriorityFeePerGas!=="undefined"))throw new FeeConflictError;if(maxFeePerGas&&maxFeePerGas>2n**256n-1n)throw new FeeCapTooHighError({maxFeePerGas:maxFeePerGas});if(maxPriorityFeePerGas&&maxFeePerGas&&maxPriorityFeePerGas>maxFeePerGas)throw new TipAboveFeeCapError({maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas})}class BlockNotFoundError extends BaseError{constructor({blockHash,blockNumber}){let identifier="Block";if(blockHash)identifier=`Block at hash "${blockHash}"`;if(blockNumber)identifier=`Block at number "${blockNumber}"`;super(`${identifier} could not be found.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"BlockNotFoundError"})}}const transactionType={"0x0":"legacy","0x1":"eip2930","0x2":"eip1559"};function formatTransaction(transaction){const transaction_={...transaction,blockHash:transaction.blockHash?transaction.blockHash:null,blockNumber:transaction.blockNumber?BigInt(transaction.blockNumber):null,chainId:transaction.chainId?hexToNumber(transaction.chainId):undefined,gas:transaction.gas?BigInt(transaction.gas):undefined,gasPrice:transaction.gasPrice?BigInt(transaction.gasPrice):undefined,maxFeePerGas:transaction.maxFeePerGas?BigInt(transaction.maxFeePerGas):undefined,maxPriorityFeePerGas:transaction.maxPriorityFeePerGas?BigInt(transaction.maxPriorityFeePerGas):undefined,nonce:transaction.nonce?hexToNumber(transaction.nonce):undefined,to:transaction.to?transaction.to:null,transactionIndex:transaction.transactionIndex?Number(transaction.transactionIndex):null,type:transaction.type?transactionType[transaction.type]:undefined,typeHex:transaction.type?transaction.type:undefined,value:transaction.value?BigInt(transaction.value):undefined,v:transaction.v?BigInt(transaction.v):undefined};if(transaction_.type==="legacy"){delete transaction_["accessList"];delete transaction_["maxFeePerGas"];delete transaction_["maxPriorityFeePerGas"]}if(transaction_.type==="eip2930"){delete transaction_["maxFeePerGas"];delete transaction_["maxPriorityFeePerGas"]}return transaction_}function formatBlock(block){const transactions=block.transactions?.map(transaction=>{if(typeof transaction==="string")return transaction;return formatTransaction(transaction)});return{...block,baseFeePerGas:block.baseFeePerGas?BigInt(block.baseFeePerGas):null,difficulty:block.difficulty?BigInt(block.difficulty):undefined,gasLimit:block.gasLimit?BigInt(block.gasLimit):undefined,gasUsed:block.gasUsed?BigInt(block.gasUsed):undefined,hash:block.hash?block.hash:null,logsBloom:block.logsBloom?block.logsBloom:null,nonce:block.nonce?block.nonce:null,number:block.number?BigInt(block.number):null,size:block.size?BigInt(block.size):undefined,timestamp:block.timestamp?BigInt(block.timestamp):undefined,transactions:transactions,totalDifficulty:block.totalDifficulty?BigInt(block.totalDifficulty):null}}async function getBlock(client,{blockHash,blockNumber,blockTag="latest",includeTransactions=false}={}){const blockNumberHex=blockNumber!==undefined?numberToHex(blockNumber):undefined;let block=null;if(blockHash){block=await client.request({method:"eth_getBlockByHash",params:[blockHash,includeTransactions]})}else{block=await client.request({method:"eth_getBlockByNumber",params:[blockNumberHex||blockTag,includeTransactions]})}if(!block)throw new BlockNotFoundError({blockHash:blockHash,blockNumber:blockNumber});const format=client.chain?.formatters?.block?.format||formatBlock;return format(block)}async function getGasPrice$1(client){const gasPrice=await client.request({method:"eth_gasPrice"});return BigInt(gasPrice)}async function getTransactionCount(client,{address,blockTag="latest",blockNumber}){const count=await client.request({method:"eth_getTransactionCount",params:[address,blockNumber?numberToHex(blockNumber):blockTag]});return hexToNumber(count)}const defaultTip=1500000000n;async function prepareRequest(client,args){const{account:account_,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce}=args;if(!account_)throw new AccountNotFoundError;const account=parseAccount(account_);const block=await getBlock(client,{blockTag:"latest"});const request={...args,from:account.address};if(typeof nonce==="undefined")request.nonce=await getTransactionCount(client,{address:account.address,blockTag:"pending"});if(block.baseFeePerGas){if(typeof gasPrice!=="undefined")throw new BaseError("Chain does not support legacy `gasPrice`.");if(typeof maxFeePerGas==="undefined"){request.maxPriorityFeePerGas=maxPriorityFeePerGas??defaultTip;request.maxFeePerGas=block.baseFeePerGas*120n/100n+request.maxPriorityFeePerGas}else{if(typeof maxPriorityFeePerGas==="undefined"&&maxFeePerGas<defaultTip)throw new BaseError("`maxFeePerGas` cannot be less than the default `maxPriorityFeePerGas` (1.5 gwei).");request.maxFeePerGas=maxFeePerGas;request.maxPriorityFeePerGas=maxPriorityFeePerGas??defaultTip}}else{if(typeof maxFeePerGas!=="undefined"||typeof maxPriorityFeePerGas!=="undefined")throw new BaseError("Chain does not support EIP-1559 fees.");if(typeof gasPrice==="undefined")request.gasPrice=await getGasPrice$1(client)*120n/100n}if(typeof gas==="undefined")request.gas=await estimateGas(client,{...request,account:{address:account.address,type:"json-rpc"}});assertRequest(request);return request}async function estimateGas(client,args){const account_=args.account??client.account;if(!account_)throw new AccountNotFoundError({docsPath:"/docs/actions/public/estimateGas"});const account=parseAccount(account_);try{const{accessList,blockNumber,blockTag,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value,...rest}=account.type==="local"?await prepareRequest(client,args):args;const blockNumberHex=blockNumber?numberToHex(blockNumber):undefined;const block=blockNumberHex||blockTag;assertRequest(args);const format=client.chain?.formatters?.transactionRequest?.format||formatTransactionRequest;const request=format({...extract(rest,{format:format}),from:account.address,accessList:accessList,data:data,gas:gas,gasPrice:gasPrice,maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas,nonce:nonce,to:to,value:value});const balance=await client.request({method:"eth_estimateGas",params:block?[request,block]:[request]});return BigInt(balance)}catch(err){throw getEstimateGasError(err,{...args,account:account,chain:client.chain})}}async function estimateContractGas(client,{abi,address,args,functionName,...request}){const data=encodeFunctionData({abi:abi,args:args,functionName:functionName});try{const gas=await estimateGas(client,{data:data,to:address,...request});return gas}catch(err){const account=request.account?parseAccount(request.account):undefined;throw getContractError(err,{abi:abi,address:address,args:args,docsPath:"/docs/contract/simulateContract",functionName:functionName,sender:account?.address})}}const docsPath$2="/docs/contract/decodeFunctionResult";function decodeFunctionResult({abi,args,functionName,data}){let abiItem=abi[0];if(functionName){abiItem=getAbiItem({abi:abi,args:args,name:functionName});if(!abiItem)throw new AbiFunctionNotFoundError(functionName,{docsPath:docsPath$2})}if(abiItem.type!=="function")throw new AbiFunctionNotFoundError(undefined,{docsPath:docsPath$2});if(!abiItem.outputs)throw new AbiFunctionOutputsNotFoundError(abiItem.name,{docsPath:docsPath$2});const values=decodeAbiParameters(abiItem.outputs,data);if(values&&values.length>1)return values;if(values&&values.length===1)return values[0];return undefined}const multicall3Abi=[{inputs:[{components:[{name:"target",type:"address"},{name:"allowFailure",type:"bool"},{name:"callData",type:"bytes"}],name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{name:"success",type:"bool"},{name:"returnData",type:"bytes"}],name:"returnData",type:"tuple[]"}],stateMutability:"view",type:"function"}];const universalResolverAbi=[{name:"resolve",type:"function",stateMutability:"view",inputs:[{name:"name",type:"bytes"},{name:"data",type:"bytes"}],outputs:[{name:"",type:"bytes"},{name:"address",type:"address"}]}];const textResolverAbi=[{name:"text",type:"function",stateMutability:"view",inputs:[{name:"name",type:"bytes32"},{name:"key",type:"string"}],outputs:[{name:"",type:"string"}]}];const singleAddressResolverAbi=[{name:"addr",type:"function",stateMutability:"view",inputs:[{name:"name",type:"bytes32"}],outputs:[{name:"",type:"address"}]}];const universalSignatureValidatorAbi=[{inputs:[{internalType:"address",name:"_signer",type:"address"},{internalType:"bytes32",name:"_hash",type:"bytes32"},{internalType:"bytes",name:"_signature",type:"bytes"}],stateMutability:"nonpayable",type:"constructor"}];const aggregate3Signature="0x82ad56cb";class ChainDoesNotSupportContract extends BaseError{constructor({blockNumber,chain,contract}){super(`Chain "${chain.name}" does not support contract "${contract.name}".`,{metaMessages:["This could be due to any of the following:",...blockNumber&&contract.blockCreated&&contract.blockCreated>blockNumber?[`- The contract "${contract.name}" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`]:[`- The chain does not have the contract "${contract.name}" configured.`]]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ChainDoesNotSupportContract"})}}class ClientChainNotConfiguredError extends BaseError{constructor(){super("No chain was provided to the Client.");Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"ClientChainNotConfiguredError"})}}function defineChain(chain,config){return{...chain,formatters:config?.formatters,serializers:config?.serializers}}function getChainContractAddress({blockNumber,chain,contract:name}){const contract=chain?.contracts?.[name];if(!contract)throw new ChainDoesNotSupportContract({chain:chain,contract:{name:name}});if(blockNumber&&contract.blockCreated&&contract.blockCreated>blockNumber)throw new ChainDoesNotSupportContract({blockNumber:blockNumber,chain:chain,contract:{name:name,blockCreated:contract.blockCreated}});return contract.address}function getCallError(err,{docsPath,...args}){let cause=err;if(containsNodeError(err))cause=getNodeError(err,args);return new CallExecutionError(cause,{docsPath:docsPath,...args})}const schedulerCache=new Map;function createBatchScheduler({fn,id,shouldSplitBatch,wait=0}){const exec=async()=>{const scheduler=getScheduler();flush();const args=scheduler.map(({args})=>args);if(args.length===0)return;fn(args).then(data=>{scheduler.forEach(({pendingPromise},i)=>pendingPromise.resolve?.([data[i],data]))}).catch(err=>{scheduler.forEach(({pendingPromise})=>pendingPromise.reject?.(err))})};const flush=()=>schedulerCache.delete(id);const getBatchedArgs=()=>getScheduler().map(({args})=>args);const getScheduler=()=>schedulerCache.get(id)||[];const setScheduler=item=>schedulerCache.set(id,[...getScheduler(),item]);return{flush:flush,async schedule(args){const pendingPromise={};const promise=new Promise((resolve,reject)=>{pendingPromise.resolve=resolve;pendingPromise.reject=reject});const split=shouldSplitBatch?.([...getBatchedArgs(),args]);if(split)exec();const hasActiveScheduler=getScheduler().length>0;if(hasActiveScheduler){setScheduler({args:args,pendingPromise:pendingPromise});return promise}setScheduler({args:args,pendingPromise:pendingPromise});setTimeout(exec,wait);return promise}}}async function call(client,args){const{account:account_,batch=Boolean(client.batch?.multicall),blockNumber,blockTag="latest",accessList,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value,...rest}=args;const account=account_?parseAccount(account_):undefined;try{assertRequest(args);const blockNumberHex=blockNumber?numberToHex(blockNumber):undefined;const block=blockNumberHex||blockTag;const format=client.chain?.formatters?.transactionRequest?.format||formatTransactionRequest;const request=format({...extract(rest,{format:format}),from:account?.address,accessList:accessList,data:data,gas:gas,gasPrice:gasPrice,maxFeePerGas:maxFeePerGas,maxPriorityFeePerGas:maxPriorityFeePerGas,nonce:nonce,to:to,value:value});if(batch&&shouldPerformMulticall({request:request})){try{return await scheduleMulticall(client,{...request,blockNumber:blockNumber,blockTag:blockTag})}catch(err){if(!(err instanceof ClientChainNotConfiguredError)&&!(err instanceof ChainDoesNotSupportContract))throw err}}const response=await client.request({method:"eth_call",params:block?[request,block]:[request]});if(response==="0x")return{data:undefined};return{data:response}}catch(err){const data=getRevertErrorData(err);const{offchainLookup,offchainLookupSignature}=await Promise.resolve().then(function(){return ccip});if(data?.slice(0,10)===offchainLookupSignature&&to){return{data:await offchainLookup(client,{data:data,to:to})}}throw getCallError(err,{...args,account:account,chain:client.chain})}}function shouldPerformMulticall({request}){const{data,to,...request_}=request;if(!data)return false;if(data.startsWith(aggregate3Signature))return false;if(!to)return false;if(Object.values(request_).filter(x=>typeof x!=="undefined").length>0)return false;return true}async function scheduleMulticall(client,args){const{batchSize=1024,wait=0}=typeof client.batch?.multicall==="object"?client.batch.multicall:{};const{blockNumber,blockTag="latest",data,multicallAddress:multicallAddress_,to}=args;let multicallAddress=multicallAddress_;if(!multicallAddress){if(!client.chain)throw new ClientChainNotConfiguredError;multicallAddress=getChainContractAddress({blockNumber:blockNumber,chain:client.chain,contract:"multicall3"})}const blockNumberHex=blockNumber?numberToHex(blockNumber):undefined;const block=blockNumberHex||blockTag;const{schedule}=createBatchScheduler({id:`${client.uid}.${block}`,wait:wait,shouldSplitBatch(args){const size=args.reduce((size,{data})=>size+(data.length-2),0);return size>batchSize*2},fn:async requests=>{const calls=requests.map(request=>({allowFailure:true,callData:request.data,target:request.to}));const calldata=encodeFunctionData({abi:multicall3Abi,args:[calls],functionName:"aggregate3"});const data=await client.request({method:"eth_call",params:[{data:calldata,to:multicallAddress},block]});return decodeFunctionResult({abi:multicall3Abi,args:[calls],functionName:"aggregate3",data:data||"0x"})}});const[{returnData,success}]=await schedule({data:data,to:to});if(!success)throw new RawContractError({data:returnData});if(returnData==="0x")return{data:undefined};return{data:returnData}}function getRevertErrorData(err){if(!(err instanceof BaseError))return undefined;const error=err.walk();return typeof error.data==="object"?error.data.data:error.data}async function readContract(client,{abi,address,args,functionName,...callRequest}){const calldata=encodeFunctionData({abi:abi,args:args,functionName:functionName});try{const{data}=await call(client,{data:calldata,to:address,...callRequest});return decodeFunctionResult({abi:abi,args:args,functionName:functionName,data:data||"0x"})}catch(err){throw getContractError(err,{abi:abi,address:address,args:args,docsPath:"/docs/contract/readContract",functionName:functionName})}}async function simulateContract(client,{abi,address,args,dataSuffix,functionName,...callRequest}){const account=callRequest.account?parseAccount(callRequest.account):undefined;const calldata=encodeFunctionData({abi:abi,args:args,functionName:functionName});try{const{data}=await call(client,{batch:false,data:`${calldata}${dataSuffix?dataSuffix.replace("0x",""):""}`,to:address,...callRequest});const result=decodeFunctionResult({abi:abi,args:args,functionName:functionName,data:data||"0x"});return{result:result,request:{abi:abi,address:address,args:args,functionName:functionName,...callRequest}}}catch(err){throw getContractError(err,{abi:abi,address:address,args:args,docsPath:"/docs/contract/simulateContract",functionName:functionName,sender:account?.address})}}const listenersCache=new Map;const cleanupCache=new Map;let callbackCount=0;function observe(observerId,callbacks,fn){const callbackId=++callbackCount;const getListeners=()=>listenersCache.get(observerId)||[];const unsubscribe=()=>{const listeners=getListeners();listenersCache.set(observerId,listeners.filter(cb=>cb.id!==callbackId))};const unwatch=()=>{const cleanup=cleanupCache.get(observerId);if(getListeners().length===1&&cleanup)cleanup();unsubscribe()};const listeners=getListeners();listenersCache.set(observerId,[...listeners,{id:callbackId,fns:callbacks}]);if(listeners&&listeners.length>0)return unwatch;const emit={};for(const key in callbacks){emit[key]=(...args)=>{const listeners=getListeners();if(listeners.length===0)return;listeners.forEach(listener=>listener.fns[key]?.(...args))}}const cleanup=fn(emit);if(typeof cleanup==="function")cleanupCache.set(observerId,cleanup);return unwatch}async function wait(time){return new Promise(res=>setTimeout(res,time))}function poll(fn,{emitOnBegin,initialWaitTime,interval}){let active=true;const unwatch=()=>active=false;const watch=async()=>{let data;if(emitOnBegin)data=await fn({unpoll:unwatch});const initialWait=await initialWaitTime?.(data)??interval;await wait(initialWait);const poll=async()=>{if(!active)return;await fn({unpoll:unwatch});await wait(interval);poll()};poll()};watch();return unwatch}const promiseCache=new Map;const responseCache=new Map;function getCache(cacheKey){const buildCache=(cacheKey,cache)=>({clear:()=>cache.delete(cacheKey),get:()=>cache.get(cacheKey),set:data=>cache.set(cacheKey,data)});const promise=buildCache(cacheKey,promiseCache);const response=buildCache(cacheKey,responseCache);return{clear:()=>{promise.clear();response.clear()},promise:promise,response:response}}async function withCache(fn,{cacheKey,maxAge=Infinity}){const cache=getCache(cacheKey);const response=cache.response.get();if(response&&maxAge>0){const age=(new Date).getTime()-response.created.getTime();if(age<maxAge)return response.data}let promise=cache.promise.get();if(!promise){promise=fn();cache.promise.set(promise)}try{const data=await promise;cache.response.set({created:new Date,data:data});return data}finally{cache.promise.clear()}}const cacheKey=id=>`blockNumber.${id}`;async function getBlockNumber$1(client,{maxAge=client.pollingInterval}={}){const blockNumberHex=await withCache(()=>client.request({method:"eth_blockNumber"}),{cacheKey:cacheKey(client.uid),maxAge:maxAge});return BigInt(blockNumberHex)}const docsPath$1="/docs/contract/decodeEventLog";function decodeEventLog({abi,data,strict:strict_,topics}){const strict=strict_??true;const[signature,...argTopics]=topics;if(!signature)throw new AbiEventSignatureEmptyTopicsError({docsPath:docsPath$1});const abiItem=abi.find(x=>x.type==="event"&&signature===getEventSelector(formatAbiItem(x)));if(!(abiItem&&"name"in abiItem)||abiItem.type!=="event")throw new AbiEventSignatureNotFoundError(signature,{docsPath:docsPath$1});const{name,inputs}=abiItem;const isUnnamed=inputs?.some(x=>!("name"in x&&x.name));let args=isUnnamed?[]:{};const indexedInputs=inputs.filter(x=>"indexed"in x&&x.indexed);if(argTopics.length>0){for(let i=0;i<indexedInputs.length;i++){const param=indexedInputs[i];const topic=argTopics[i];if(!topic)throw new DecodeLogTopicsMismatch({abiItem:abiItem,param:param});args[param.name||i]=decodeTopic({param:param,value:topic})}}const nonIndexedInputs=inputs.filter(x=>!("indexed"in x&&x.indexed));if(nonIndexedInputs.length>0){if(data&&data!=="0x"){try{const decodedData=decodeAbiParameters(nonIndexedInputs,data);if(decodedData){if(isUnnamed)args=[...args,...decodedData];else{for(let i=0;i<nonIndexedInputs.length;i++){args[nonIndexedInputs[i].name]=decodedData[i]}}}}catch(err){if(strict){if(err instanceof AbiDecodingDataSizeTooSmallError)throw new DecodeLogDataMismatch({abiItem:abiItem,data:err.data,params:err.params,size:err.size});throw err}}}else if(strict){throw new DecodeLogDataMismatch({abiItem:abiItem,data:"0x",params:nonIndexedInputs,size:0})}}return{eventName:name,args:Object.values(args).length>0?args:undefined}}function decodeTopic({param,value}){if(param.type==="string"||param.type==="bytes"||param.type==="tuple"||param.type.match(/^(.*)\[(\d+)?\]$/))return value;const decodedArg=decodeAbiParameters([param],value)||[];return decodedArg[0]}function formatLog(log,{args,eventName}={}){return{...log,blockHash:log.blockHash?log.blockHash:null,blockNumber:log.blockNumber?BigInt(log.blockNumber):null,logIndex:log.logIndex?Number(log.logIndex):null,transactionHash:log.transactionHash?log.transactionHash:null,transactionIndex:log.transactionIndex?Number(log.transactionIndex):null,...eventName?{args:args,eventName:eventName}:{}}}async function getFilterChanges(_client,{filter}){const strict="strict"in filter&&filter.strict;const logs=await filter.request({method:"eth_getFilterChanges",params:[filter.id]});return logs.map(log=>{if(typeof log==="string")return log;try{const{eventName,args}="abi"in filter&&filter.abi?decodeEventLog({abi:filter.abi,data:log.data,topics:log.topics,strict:strict}):{eventName:undefined,args:undefined};return formatLog(log,{args:args,eventName:eventName})}catch(err){let eventName;let isUnnamed;if(err instanceof DecodeLogDataMismatch||err instanceof DecodeLogTopicsMismatch){if("strict"in filter&&filter.strict)return;eventName=err.abiItem.name;isUnnamed=err.abiItem.inputs?.some(x=>!("name"in x&&x.name))}return formatLog(log,{args:isUnnamed?[]:{},eventName:eventName})}}).filter(Boolean)}async function getLogs(client,{address,blockHash,fromBlock,toBlock,event,args,strict:strict_}={}){const strict=strict_??false;let topics=[];if(event)topics=encodeEventTopics({abi:[event],eventName:event.name,args:args});let logs;if(blockHash){logs=await client.request({method:"eth_getLogs",params:[{address:address,topics:topics,blockHash:blockHash}]})}else{logs=await client.request({method:"eth_getLogs",params:[{address:address,topics:topics,fromBlock:typeof fromBlock==="bigint"?numberToHex(fromBlock):fromBlock,toBlock:typeof toBlock==="bigint"?numberToHex(toBlock):toBlock}]})}return logs.map(log=>{try{const{eventName,args}=event?decodeEventLog({abi:[event],data:log.data,topics:log.topics,strict:strict}):{eventName:undefined,args:undefined};return formatLog(log,{args:args,eventName:eventName})}catch(err){let eventName;let isUnnamed;if(err instanceof DecodeLogDataMismatch||err instanceof DecodeLogTopicsMismatch){if(strict)return;eventName=err.abiItem.name;isUnnamed=err.abiItem.inputs?.some(x=>!("name"in x&&x.name))}return formatLog(log,{args:isUnnamed?[]:{},eventName:eventName})}}).filter(Boolean)}async function uninstallFilter(_client,{filter}){return filter.request({method:"eth_uninstallFilter",params:[filter.id]})}function watchContractEvent(client,{abi,address,args,batch=true,eventName,onError,onLogs,pollingInterval=client.pollingInterval,strict:strict_}){const observerId=stringify(["watchContractEvent",address,args,batch,client.uid,eventName,pollingInterval]);const strict=strict_??false;return observe(observerId,{onLogs:onLogs,onError:onError},emit=>{let previousBlockNumber;let filter;let initialized=false;const unwatch=poll(async()=>{if(!initialized){try{filter=await createContractEventFilter(client,{abi:abi,address:address,args:args,eventName:eventName,strict:strict})}catch{}initialized=true;return}try{let logs;if(filter){logs=await getFilterChanges(client,{filter:filter})}else{const blockNumber=await getBlockNumber$1(client);if(previousBlockNumber&&previousBlockNumber!==blockNumber){logs=await getLogs(client,{address:address,args:args,fromBlock:previousBlockNumber+1n,toBlock:blockNumber,event:getAbiItem({abi:abi,name:eventName})})}else{logs=[]}previousBlockNumber=blockNumber}if(logs.length===0)return;if(batch)emit.onLogs(logs);else logs.forEach(log=>emit.onLogs([log]))}catch(err){emit.onError?.(err)}},{emitOnBegin:true,interval:pollingInterval});return async()=>{if(filter)await uninstallFilter(client,{filter:filter});unwatch()}})}async function getChainId(client){const chainIdHex=await client.request({method:"eth_chainId"});return hexToNumber(chainIdHex)}const size=256;let index$3=size;let buffer;function uid(length=11){if(!buffer||index$3+length>size*2){buffer="";index$3=0;for(let i=0;i<size;i++){buffer+=(256+Math.random()*256|0).toString(16).substring(1)}}return buffer.substring(index$3,index$3+++length)}function createClient({chain,key="base",name="Base Client",pollingInterval=4e3,transport,type="base"}){const{config,request,value}=transport({chain:chain,pollingInterval:pollingInterval});return{chain:chain,key:key,name:name,pollingInterval:pollingInterval,request:request,transport:{...config,...value},type:type,uid:uid()}}function withRetry(fn,{delay:delay_=100,retryCount=2,shouldRetry=()=>true}={}){return new Promise((resolve,reject)=>{const attemptRetry=async({count=0}={})=>{const retry=async({error})=>{const delay=typeof delay_==="function"?delay_({count:count,error:error}):delay_;if(delay)await wait(delay);attemptRetry({count:count+1})};try{const data=await fn();resolve(data)}catch(err){if(count<retryCount&&await shouldRetry({count:count,error:err}))return retry({error:err});reject(err)}};attemptRetry()})}const isDeterministicError=error=>{if("code"in error)return error.code!==-1&&error.code!==-32004&&error.code!==-32005&&error.code!==-32042&&error.code!==-32603;if(error instanceof HttpRequestError&&error.status)return error.status!==403&&error.status!==408&&error.status!==413&&error.status!==429&&error.status!==500&&error.status!==502&&error.status!==503&&error.status!==504;return false};function buildRequest(request,{retryDelay=150,retryCount=3}={}){return async args=>withRetry(async()=>{try{return await request(args)}catch(err_){const err=err_;if(err.code===-32700)throw new ParseRpcError(err);if(err.code===-32600)throw new InvalidRequestRpcError(err);if(err.code===-32601)throw new MethodNotFoundRpcError(err);if(err.code===-32602)throw new InvalidParamsRpcError(err);if(err.code===-32603)throw new InternalRpcError(err);if(err.code===-32e3)throw new InvalidInputRpcError(err);if(err.code===-32001)throw new ResourceNotFoundRpcError(err);if(err.code===-32002)throw new ResourceUnavailableRpcError(err);if(err.code===-32003)throw new TransactionRejectedRpcError(err);if(err.code===-32004)throw new MethodNotSupportedRpcError(err);if(err.code===-32005)throw new LimitExceededRpcError(err);if(err.code===-32006)throw new JsonRpcVersionUnsupportedError(err);if(err.code===-32042)throw new MethodNotSupportedRpcError(err);if(err.code===4001)throw new UserRejectedRequestError(err);if(err.code===4100)throw new UnauthorizedProviderError(err);if(err.code===4200)throw new UnsupportedProviderMethodError(err);if(err.code===4900)throw new ProviderDisconnectedError(err);if(err.code===4901)throw new ChainDisconnectedError(err);if(err.code===4902)throw new SwitchChainError(err);if(err_ instanceof BaseError)throw err_;throw new UnknownRpcError(err)}},{delay:({count,error})=>{if(error&&error instanceof HttpRequestError){const retryAfter=error?.headers?.get("Retry-After");if(retryAfter?.match(/\d/))return parseInt(retryAfter)*1e3}return~~(1<<count)*retryDelay},retryCount:retryCount,shouldRetry:({error})=>!isDeterministicError(error)})}function createTransport({key,name,request,retryCount=3,retryDelay=150,timeout,type},value){return{config:{key:key,name:name,request:request,retryCount:retryCount,retryDelay:retryDelay,timeout:timeout,type:type},request:buildRequest(request,{retryCount:retryCount,retryDelay:retryDelay}),value:value}}class UrlRequiredError extends BaseError{constructor(){super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.",{docsPath:"/docs/clients/intro"})}}function withTimeout(fn,{errorInstance,timeout,signal}){return new Promise((resolve,reject)=>{(async()=>{let timeoutId;try{const controller=new AbortController;if(timeout>0){timeoutId=setTimeout(()=>{if(signal){controller.abort()}else{reject(errorInstance)}},timeout)}resolve(await fn({signal:controller?.signal}))}catch(err){if(err.name==="AbortError")reject(errorInstance);reject(err)}finally{clearTimeout(timeoutId)}})()})}let id$1=0;async function http$1(url,{body,fetchOptions={},timeout=1e4}){const{headers,method,signal:signal_}=fetchOptions;try{const response=await withTimeout(async({signal})=>{const response=await fetch(url,{...fetchOptions,body:Array.isArray(body)?stringify(body.map(body=>({jsonrpc:"2.0",id:id$1++,...body}))):stringify({jsonrpc:"2.0",id:id$1++,...body}),headers:{...headers,"Content-Type":"application/json"},method:method||"POST",signal:signal_||(timeout>0?signal:undefined)});return response},{errorInstance:new TimeoutError({body:body,url:url}),timeout:timeout,signal:true});let data;if(response.headers.get("Content-Type")?.startsWith("application/json")){data=await response.json()}else{data=await response.text()}if(!response.ok){throw new HttpRequestError({body:body,details:stringify(data.error)||response.statusText,headers:response.headers,status:response.status,url:url})}return data}catch(err){if(err instanceof HttpRequestError)throw err;if(err instanceof TimeoutError)throw err;throw new HttpRequestError({body:body,details:err.message,url:url})}}function webSocket(socket,{body,onResponse}){if(socket.readyState===socket.CLOSED||socket.readyState===socket.CLOSING)throw new WebSocketRequestError({body:body,url:socket.url,details:"Socket is closed."});const id_=id$1++;const callback=({data})=>{const message=JSON.parse(data);if(typeof message.id==="number"&&id_!==message.id)return;onResponse?.(message);if(body.method==="eth_subscribe"&&typeof message.result==="string"){socket.subscriptions.set(message.result,callback)}if(body.method==="eth_unsubscribe"){socket.subscriptions.delete(body.params?.[0])}};socket.requests.set(id_,callback);socket.send(JSON.stringify({jsonrpc:"2.0",...body,id:id_}));return socket}async function webSocketAsync(socket,{body,timeout=1e4}){return withTimeout(()=>new Promise(onResponse=>rpc.webSocket(socket,{body:body,onResponse:onResponse})),{errorInstance:new TimeoutError({body:body,url:socket.url}),timeout:timeout})}const rpc={http:http$1,webSocket:webSocket,webSocketAsync:webSocketAsync};function http(url,config={}){const{batch,fetchOptions,key="http",name="HTTP JSON-RPC",retryDelay}=config;return({chain,retryCount:retryCount_,timeout:timeout_})=>{const{batchSize=1e3,wait=0}=typeof batch==="object"?batch:{};const retryCount=config.retryCount??retryCount_;const timeout=timeout_??config.timeout??1e4;const url_=url||chain?.rpcUrls.default.http[0];if(!url_)throw new UrlRequiredError;return createTransport({key:key,name:name,async request({method,params}){const body={method:method,params:params};const{schedule}=createBatchScheduler({id:`${url}`,wait:wait,shouldSplitBatch(requests){return requests.length>batchSize},fn:body=>rpc.http(url_,{body:body,fetchOptions:fetchOptions,timeout:timeout})});const fn=async body=>batch?schedule(body):[await rpc.http(url_,{body:body,fetchOptions:fetchOptions,timeout:timeout})];const[{error,result}]=await fn(body);if(error)throw new RpcRequestError({body:body,error:error,url:url_});return result},retryCount:retryCount,retryDelay:retryDelay,timeout:timeout,type:"http"},{url:url})}}class OffchainLookupError extends BaseError{constructor({callbackSelector,cause,data,extraData,sender,urls}){super(cause.shortMessage||"An error occurred while fetching for an offchain result.",{cause:cause,metaMessages:[...cause.metaMessages||[],cause.metaMessages?.length?"":[],"Offchain Gateway Call:",urls&&["  Gateway URL(s):",...urls.map(url=>`    ${getUrl(url)}`)],`  Sender: ${sender}`,`  Data: ${data}`,`  Callback selector: ${callbackSelector}`,`  Extra data: ${extraData}`].flat()});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"OffchainLookupError"})}}class OffchainLookupResponseMalformedError extends BaseError{constructor({result,url}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${getUrl(url)}`,`Response: ${stringify(result)}`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"OffchainLookupResponseMalformedError"})}}class OffchainLookupSenderMismatchError extends BaseError{constructor({sender,to}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${to}`,`OffchainLookup sender address: ${sender}`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"OffchainLookupSenderMismatchError"})}}function isAddressEqual(a,b){if(!isAddress$2(a))throw new InvalidAddressError({address:a});if(!isAddress$2(b))throw new InvalidAddressError({address:b});return a.toLowerCase()===b.toLowerCase()}const offchainLookupSignature="0x556f1830";const offchainLookupAbiItem={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function offchainLookup(client,{blockNumber,blockTag,data,to}){const{args}=decodeErrorResult({data:data,abi:[offchainLookupAbiItem]});const[sender,urls,callData,callbackSelector,extraData]=args;try{if(!isAddressEqual(to,sender))throw new OffchainLookupSenderMismatchError({sender:sender,to:to});const result=await ccipFetch({data:callData,sender:sender,urls:urls});const{data:data_}=await call(client,{blockNumber:blockNumber,blockTag:blockTag,data:concat([callbackSelector,encodeAbiParameters([{type:"bytes"},{type:"bytes"}],[result,extraData])]),to:to});return data_}catch(err){throw new OffchainLookupError({callbackSelector:callbackSelector,cause:err,data:data,extraData:extraData,sender:sender,urls:urls})}}async function ccipFetch({data,sender,urls}){let error=new Error("An unknown error occurred.");for(let i=0;i<urls.length;i++){const url=urls[i];const method=url.includes("{sender}")||url.includes("{data}")?"GET":"POST";const body=method==="POST"?{data:data,sender:sender}:undefined;try{const response=await fetch(url.replace("{sender}",sender).replace("{data}",data),{body:JSON.stringify(body),method:method});let result;if(response.headers.get("Content-Type")?.startsWith("application/json")){result=(await response.json()).data}else{result=await response.text()}if(!response.ok){error=new HttpRequestError({body:body,details:stringify(result.error)||response.statusText,headers:response.headers,status:response.status,url:url});continue}if(!isHex(result)){error=new OffchainLookupResponseMalformedError({result:result,url:url});continue}return result}catch(err){error=new HttpRequestError({body:body,details:err.message,url:url})}}throw error}var ccip=Object.freeze({__proto__:null,ccipFetch:ccipFetch,offchainLookup:offchainLookup,offchainLookupAbiItem:offchainLookupAbiItem,offchainLookupSignature:offchainLookupSignature});const bytesRegex=/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;const integerRegex=/^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;function validateTypedData({domain,message,primaryType,types:types_}){const types=types_;const validateData=(struct,value_)=>{for(const param of struct){const{name,type:type_}=param;const type=type_;const value=value_[name];const integerMatch=type.match(integerRegex);if(integerMatch&&(typeof value==="number"||typeof value==="bigint")){const[_type,base,size_]=integerMatch;numberToHex(value,{signed:base==="int",size:parseInt(size_)/8})}if(type==="address"&&typeof value==="string"&&!isAddress$2(value))throw new InvalidAddressError({address:value});const bytesMatch=type.match(bytesRegex);if(bytesMatch){const[_type,size_]=bytesMatch;if(size_&&size$1(value)!==parseInt(size_))throw new BytesSizeMismatchError({expectedSize:parseInt(size_),givenSize:size$1(value)})}const struct=types[type];if(struct)validateData(struct,value)}};if(types["EIP712Domain"]&&domain)validateData(types["EIP712Domain"],domain);if(primaryType!=="EIP712Domain"){const type=types[primaryType];validateData(type,message)}}const docsPath="/docs/contract/encodeDeployData";function encodeDeployData({abi,args,bytecode}){if(!args||args.length===0)return bytecode;const description=abi.find(x=>"type"in x&&x.type==="constructor");if(!description)throw new AbiConstructorNotFoundError({docsPath:docsPath});if(!("inputs"in description))throw new AbiConstructorParamsNotFoundError({docsPath:docsPath});if(!description.inputs||description.inputs.length===0)throw new AbiConstructorParamsNotFoundError({docsPath:docsPath});const data=encodeAbiParameters(description.inputs,args);return concatHex([bytecode,data])}const statuses={"0x0":"reverted","0x1":"success"};function formatTransactionReceipt(transactionReceipt){return{...transactionReceipt,blockNumber:transactionReceipt.blockNumber?BigInt(transactionReceipt.blockNumber):null,contractAddress:transactionReceipt.contractAddress?transactionReceipt.contractAddress:null,cumulativeGasUsed:transactionReceipt.cumulativeGasUsed?BigInt(transactionReceipt.cumulativeGasUsed):null,effectiveGasPrice:transactionReceipt.effectiveGasPrice?BigInt(transactionReceipt.effectiveGasPrice):null,gasUsed:transactionReceipt.gasUsed?BigInt(transactionReceipt.gasUsed):null,logs:transactionReceipt.logs?transactionReceipt.logs.map(log=>formatLog(log)):null,to:transactionReceipt.to?transactionReceipt.to:null,transactionIndex:transactionReceipt.transactionIndex?hexToNumber(transactionReceipt.transactionIndex):null,status:transactionReceipt.status?statuses[transactionReceipt.status]:null,type:transactionReceipt.type?transactionType[transactionReceipt.type]||transactionReceipt.type:null}}function hashTypedData({domain:domain_,message,primaryType,types:types_}){const domain=typeof domain_==="undefined"?{}:domain_;const types={EIP712Domain:[typeof domain?.name==="string"&&{name:"name",type:"string"},domain?.version&&{name:"version",type:"string"},typeof domain?.chainId==="number"&&{name:"chainId",type:"uint256"},domain?.verifyingContract&&{name:"verifyingContract",type:"address"},domain?.salt&&{name:"salt",type:"bytes32"}].filter(Boolean),...types_};validateTypedData({domain:domain,message:message,primaryType:primaryType,types:types});const parts=["0x1901"];if(domain)parts.push(hashDomain({domain:domain,types:types}));if(primaryType!=="EIP712Domain"){parts.push(hashStruct({data:message,primaryType:primaryType,types:types}))}return keccak256$1(concat(parts))}function hashDomain({domain,types}){return hashStruct({data:domain,primaryType:"EIP712Domain",types:types})}function hashStruct({data,primaryType,types}){const encoded=encodeData({data:data,primaryType:primaryType,types:types});return keccak256$1(encoded)}function encodeData({data,primaryType,types}){const encodedTypes=[{type:"bytes32"}];const encodedValues=[hashType({primaryType:primaryType,types:types})];for(const field of types[primaryType]){const[type,value]=encodeField({types:types,name:field.name,type:field.type,value:data[field.name]});encodedTypes.push(type);encodedValues.push(value)}return encodeAbiParameters(encodedTypes,encodedValues)}function hashType({primaryType,types}){const encodedHashType=toHex(encodeType({primaryType:primaryType,types:types}));return keccak256$1(encodedHashType)}function encodeType({primaryType,types}){let result="";const unsortedDeps=findTypeDependencies({primaryType:primaryType,types:types});unsortedDeps.delete(primaryType);const deps=[primaryType,...Array.from(unsortedDeps).sort()];for(const type of deps){result+=`${type}(${types[type].map(({name,type:t})=>`${t} ${name}`).join(",")})`}return result}function findTypeDependencies({primaryType:primaryType_,types},results=new Set){const match=primaryType_.match(/^\w*/u);const primaryType=match?.[0];if(results.has(primaryType)||types[primaryType]===undefined){return results}results.add(primaryType);for(const field of types[primaryType]){findTypeDependencies({primaryType:field.type,types:types},results)}return results}function encodeField({types,name,type,value}){if(types[type]!==undefined){return[{type:"bytes32"},keccak256$1(encodeData({data:value,primaryType:type,types:types}))]}if(type==="bytes"){const prepend=value.length%2?"0":"";value=`0x${prepend+value.slice(2)}`;return[{type:"bytes32"},keccak256$1(value)]}if(type==="string")return[{type:"bytes32"},keccak256$1(toHex(value))];if(type.lastIndexOf("]")===type.length-1){const parsedType=type.slice(0,type.lastIndexOf("["));const typeValuePairs=value.map(item=>encodeField({name:name,type:parsedType,types:types,value:item}));return[{type:"bytes32"},keccak256$1(encodeAbiParameters(typeValuePairs.map(([t])=>t),typeValuePairs.map(([,v])=>v)))]}return[{type:type},value]}function hashMessage(message,to_){const messageBytes=(()=>{if(typeof message==="string")return stringToBytes(message);if(message.raw instanceof Uint8Array)return message.raw;return toBytes$1(message.raw)})();const prefixBytes=stringToBytes(`\x19Ethereum Signed Message:\n${messageBytes.length}`);return keccak256$1(concat([prefixBytes,messageBytes]),to_)}function encodedLabelToLabelhash(label){if(label.length!==66)return null;if(label.indexOf("[")!==0)return null;if(label.indexOf("]")!==65)return null;const hash=`0x${label.slice(1,65)}`;if(!isHex(hash))return null;return hash}function namehash(name){let result=new Uint8Array(32).fill(0);if(!name)return bytesToHex(result);const labels=name.split(".");for(let i=labels.length-1;i>=0;i-=1){const hashFromEncodedLabel=encodedLabelToLabelhash(labels[i]);const hashed=hashFromEncodedLabel?toBytes$1(hashFromEncodedLabel):keccak256$1(stringToBytes(labels[i]),"bytes");result=keccak256$1(concat([result,hashed]),"bytes")}return bytesToHex(result)}function encodeLabelhash(hash){return`[${hash.slice(2)}]`}function labelhash(label){const result=new Uint8Array(32).fill(0);if(!label)return bytesToHex(result);return encodedLabelToLabelhash(label)||keccak256$1(stringToBytes(label))}function packetToBytes(packet){const value=packet.replace(/^\.|\.$/gm,"");if(value.length===0)return new Uint8Array(1);const bytes=new Uint8Array(stringToBytes(value).byteLength+2);let offset=0;const list=value.split(".");for(let i=0;i<list.length;i++){let encoded=stringToBytes(list[i]);if(encoded.byteLength>255)encoded=stringToBytes(encodeLabelhash(labelhash(list[i])));bytes[offset]=encoded.length;bytes.set(encoded,offset+1);offset+=encoded.length+1}if(bytes.byteLength!==offset+1)return bytes.slice(0,offset+1);return bytes}async function getEnsAddress(client,{blockNumber,blockTag,name,universalResolverAddress:universalResolverAddress_}){let universalResolverAddress=universalResolverAddress_;if(!universalResolverAddress){if(!client.chain)throw new Error("client chain not configured. universalResolverAddress is required.");universalResolverAddress=getChainContractAddress({blockNumber:blockNumber,chain:client.chain,contract:"ensUniversalResolver"})}try{const res=await readContract(client,{address:universalResolverAddress,abi:universalResolverAbi,functionName:"resolve",args:[toHex(packetToBytes(name)),encodeFunctionData({abi:singleAddressResolverAbi,functionName:"addr",args:[namehash(name)]})],blockNumber:blockNumber,blockTag:blockTag});if(res[0]==="0x")return null;const address=decodeFunctionResult({abi:singleAddressResolverAbi,functionName:"addr",data:res[0]});return trim(address)==="0x00"?null:address}catch(err){if(err instanceof ContractFunctionExecutionError){const reason=err.cause?.reason;if(reason?.includes("Wildcard on non-extended resolvers is not supported"))return null}throw err}}class EnsAvatarInvalidMetadataError extends BaseError{constructor({data}){super("Unable to extract image from metadata. The metadata may be malformed or invalid.",{metaMessages:["- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.","",`Provided data: ${JSON.stringify(data)}`]});Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"EnsAvatarInvalidMetadataError"})}}class EnsAvatarInvalidNftUriError extends BaseError{constructor({reason}){super(`ENS NFT avatar URI is invalid. ${reason}`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"EnsAvatarInvalidNftUriError"})}}class EnsAvatarUriResolutionError extends BaseError{constructor({uri}){super(`Unable to resolve ENS avatar URI "${uri}". The URI may be malformed, invalid, or does not respond with a valid image.`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"EnsAvatarUriResolutionError"})}}class EnsAvatarUnsupportedNamespaceError extends BaseError{constructor({namespace}){super(`ENS NFT avatar namespace "${namespace}" is not supported. Must be "erc721" or "erc1155".`);Object.defineProperty(this,"name",{enumerable:true,configurable:true,writable:true,value:"EnsAvatarUnsupportedNamespaceError"})}}const networkRegex=/(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/;const ipfsHashRegex=/^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/;const base64Regex=/^data:([a-zA-Z\-/+]*);base64,([^"].*)/;const dataURIRegex=/^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;async function isImageUri(uri){try{const res=await fetch(uri,{method:"HEAD"});if(res.status===200){const contentType=res.headers.get("content-type");return contentType?.startsWith("image/")}return false}catch(error){if(typeof error==="object"&&typeof error.response!=="undefined"){return false}if(!globalThis.hasOwnProperty("Image"))return false;return new Promise(resolve=>{const img=new Image;img.onload=()=>{resolve(true)};img.onerror=()=>{resolve(false)};img.src=uri})}}function getGateway(custom,defaultGateway){if(!custom)return defaultGateway;if(custom.endsWith("/"))return custom.slice(0,-1);return custom}function resolveAvatarUri({uri,gatewayUrls}){const isEncoded=base64Regex.test(uri);if(isEncoded)return{uri:uri,isOnChain:true,isEncoded:isEncoded};const ipfsGateway=getGateway(gatewayUrls?.ipfs,"https://ipfs.io");const arweaveGateway=getGateway(gatewayUrls?.arweave,"https://arweave.net");const networkRegexMatch=uri.match(networkRegex);const{protocol,subpath,target,subtarget=""}=networkRegexMatch?.groups||{};const isIPNS=protocol==="ipns:/"||subpath==="ipns/";const isIPFS=protocol==="ipfs:/"||subpath==="ipfs/"||ipfsHashRegex.test(uri);if(uri.startsWith("http")&&!isIPNS&&!isIPFS){let replacedUri=uri;if(gatewayUrls?.arweave)replacedUri=uri.replace(/https:\/\/arweave.net/g,gatewayUrls?.arweave);return{uri:replacedUri,isOnChain:false,isEncoded:false}}if((isIPNS||isIPFS)&&target){return{uri:`${ipfsGateway}/${isIPNS?"ipns":"ipfs"}/${target}${subtarget}`,isOnChain:false,isEncoded:false}}else if(protocol==="ar:/"&&target){return{uri:`${arweaveGateway}/${target}${subtarget||""}`,isOnChain:false,isEncoded:false}}let parsedUri=uri.replace(dataURIRegex,"");if(parsedUri.startsWith("<svg")){parsedUri=`data:image/svg+xml;base64,${btoa(parsedUri)}`}if(parsedUri.startsWith("data:")||parsedUri.startsWith("{")){return{uri:parsedUri,isOnChain:true,isEncoded:false}}throw new EnsAvatarUriResolutionError({uri:uri})}function getJsonImage(data){if(typeof data!=="object"||!("image"in data)&&!("image_url"in data)&&!("image_data"in data)){throw new EnsAvatarInvalidMetadataError({data:data})}return data.image||data.image_url||data.image_data}async function getMetadataAvatarUri({gatewayUrls,uri}){try{const res=await fetch(uri).then(res=>res.json());const image=await parseAvatarUri({gatewayUrls:gatewayUrls,uri:getJsonImage(res)});return image}catch{throw new EnsAvatarUriResolutionError({uri:uri})}}async function parseAvatarUri({gatewayUrls,uri}){const{uri:resolvedURI,isOnChain}=resolveAvatarUri({uri:uri,gatewayUrls:gatewayUrls});if(isOnChain)return resolvedURI;const isImage=await isImageUri(resolvedURI);if(isImage)return resolvedURI;throw new EnsAvatarUriResolutionError({uri:uri})}function parseNftUri(uri){if(uri.startsWith("did:nft:")){uri=uri.replace("did:nft:","").replace(/_/g,"/")}const[reference,asset_namespace,tokenID]=uri.split("/");const[eip_namespace,chainID]=reference.split(":");const[erc_namespace,contractAddress]=asset_namespace.split(":");if(!eip_namespace||eip_namespace.toLowerCase()!=="eip155")throw new EnsAvatarInvalidNftUriError({reason:"Only EIP-155 supported"});if(!chainID)throw new EnsAvatarInvalidNftUriError({reason:"Chain ID not found"});if(!contractAddress)throw new EnsAvatarInvalidNftUriError({reason:"Contract address not found"});if(!tokenID)throw new EnsAvatarInvalidNftUriError({reason:"Token ID not found"});if(!erc_namespace)throw new EnsAvatarInvalidNftUriError({reason:"ERC namespace not found"});return{chainID:parseInt(chainID),namespace:erc_namespace.toLowerCase(),contractAddress:contractAddress,tokenID:tokenID}}async function getNftTokenUri(client,{nft}){if(nft.namespace==="erc721"){return readContract(client,{address:nft.contractAddress,abi:[{name:"tokenURI",type:"function",stateMutability:"view",inputs:[{name:"tokenId",type:"uint256"}],outputs:[{name:"",type:"string"}]}],functionName:"tokenURI",args:[BigInt(nft.tokenID)]})}if(nft.namespace==="erc1155"){return readContract(client,{address:nft.contractAddress,abi:[{name:"uri",type:"function",stateMutability:"view",inputs:[{name:"_id",type:"uint256"}],outputs:[{name:"",type:"string"}]}],functionName:"uri",args:[BigInt(nft.tokenID)]})}throw new EnsAvatarUnsupportedNamespaceError({namespace:nft.namespace})}async function parseAvatarRecord(client,{gatewayUrls,record}){if(/eip155:/i.test(record))return parseNftAvatarUri(client,{gatewayUrls:gatewayUrls,record:record});return parseAvatarUri({uri:record,gatewayUrls:gatewayUrls})}async function parseNftAvatarUri(client,{gatewayUrls,record}){const nft=parseNftUri(record);const nftUri=await getNftTokenUri(client,{nft:nft});const{uri:resolvedNftUri,isOnChain,isEncoded}=resolveAvatarUri({uri:nftUri,gatewayUrls:gatewayUrls});if(isOnChain&&(resolvedNftUri.includes("data:application/json;base64,")||resolvedNftUri.startsWith("{"))){const encodedJson=isEncoded?atob(resolvedNftUri.replace("data:application/json;base64,","")):resolvedNftUri;const decoded=JSON.parse(encodedJson);return parseAvatarUri({uri:getJsonImage(decoded),gatewayUrls:gatewayUrls})}let uriTokenId=nft.tokenID;if(nft.namespace==="erc1155")uriTokenId=uriTokenId.replace("0x","").padStart(64,"0");return getMetadataAvatarUri({gatewayUrls:gatewayUrls,uri:resolvedNftUri.replace(/(?:0x)?{id}/,uriTokenId)})}async function getEnsText(client,{blockNumber,blockTag,name,key,universalResolverAddress:universalResolverAddress_}){let universalResolverAddress=universalResolverAddress_;if(!universalResolverAddress){if(!client.chain)throw new Error("client chain not configured. universalResolverAddress is required.");universalResolverAddress=getChainContractAddress({blockNumber:blockNumber,chain:client.chain,contract:"ensUniversalResolver"})}const res=await readContract(client,{address:universalResolverAddress,abi:universalResolverAbi,functionName:"resolve",args:[toHex(packetToBytes(name)),encodeFunctionData({abi:textResolverAbi,functionName:"text",args:[namehash(name),key]})],blockNumber:blockNumber,blockTag:blockTag});if(res[0]==="0x")return null;const record=decodeFunctionResult({abi:textResolverAbi,functionName:"text",data:res[0]});return record===""?null:record}async function getEnsAvatar(client,{blockNumber,blockTag,gatewayUrls,name,universalResolverAddress}){const record=await getEnsText(client,{blockNumber:blockNumber,blockTag:blockTag,key:"avatar",name:name,universalResolverAddress:universalResolverAddress});if(!record)return null;try{return await parseAvatarRecord(client,{record:record,gatewayUrls:gatewayUrls})}catch{return null}}async function getEnsName(client,{address,blockNumber,blockTag,universalResolverAddress:universalResolverAddress_}){let universalResolverAddress=universalResolverAddress_;if(!universalResolverAddress){if(!client.chain)throw new Error("client chain not configured. universalResolverAddress is required.");universalResolverAddress=getChainContractAddress({blockNumber:blockNumber,chain:client.chain,contract:"ensUniversalResolver"})}const reverseNode=`${address.toLowerCase().substring(2)}.addr.reverse`;try{const res=await readContract(client,{address:universalResolverAddress,abi:[{name:"reverse",type:"function",stateMutability:"view",inputs:[{type:"bytes",name:"reverseName"}],outputs:[{type:"string",name:"resolvedName"},{type:"address",name:"resolvedAddress"},{type:"address",name:"reverseResolver"},{type:"address",name:"resolver"}]}],functionName:"reverse",args:[toHex(packetToBytes(reverseNode))],blockNumber:blockNumber,blockTag:blockTag});return res[0]}catch(error){if(error instanceof ContractFunctionExecutionError&&error.cause.reason===panicReasons[50])return null;throw error}}async function getEnsResolver(client,{blockNumber,blockTag,name,universalResolverAddress:universalResolverAddress_}){let universalResolverAddress=universalResolverAddress_;if(!universalResolverAddress){if(!client.chain)throw new Error("client chain not configured. universalResolverAddress is required.");universalResolverAddress=getChainContractAddress({blockNumber:blockNumber,chain:client.chain,contract:"ensUniversalResolver"})}const[resolverAddress]=await readContract(client,{address:universalResolverAddress,abi:[{inputs:[{type:"bytes"}],name:"findResolver",outputs:[{type:"address"},{type:"bytes32"}],stateMutability:"view",type:"function"}],functionName:"findResolver",args:[toHex(packetToBytes(name))],blockNumber:blockNumber,blockTag:blockTag});return resolverAddress}async function createBlockFilter(client){const getRequest=createFilterRequestScope(client,{method:"eth_newBlockFilter"});const id=await client.request({method:"eth_newBlockFilter"});return{id:id,request:getRequest(id),type:"block"}}async function createEventFilter(client,{address,args,event,fromBlock,strict,toBlock}={}){const getRequest=createFilterRequestScope(client,{method:"eth_newFilter"});let topics=[];if(event)topics=encodeEventTopics({abi:[event],eventName:event.name,args:args});const id=await client.request({method:"eth_newFilter",params:[{address:address,fromBlock:typeof fromBlock==="bigint"?numberToHex(fromBlock):fromBlock,toBlock:typeof toBlock==="bigint"?numberToHex(toBlock):toBlock,...topics.length?{topics:topics}:{}}]});return{abi:event?[event]:undefined,args:args,eventName:event?event.name:undefined,id:id,request:getRequest(id),strict:strict,type:"event"}}async function createPendingTransactionFilter(client){const getRequest=createFilterRequestScope(client,{method:"eth_newPendingTransactionFilter"});const id=await client.request({method:"eth_newPendingTransactionFilter"});return{id:id,request:getRequest(id),type:"transaction"}}async function getBalance(client,{address,blockNumber,blockTag="latest"}){const blockNumberHex=blockNumber?numberToHex(blockNumber):undefined;const balance=await client.request({method:"eth_getBalance",params:[address,blockNumberHex||blockTag]});return BigInt(balance)}async function getBlockTransactionCount(client,{blockHash,blockNumber,blockTag="latest"}={}){const blockNumberHex=blockNumber!==undefined?numberToHex(blockNumber):undefined;let count;if(blockHash){count=await client.request({method:"eth_getBlockTransactionCountByHash",params:[blockHash]})}else{count=await client.request({method:"eth_getBlockTransactionCountByNumber",params:[blockNumberHex||blockTag]})}return hexToNumber(count)}async function getBytecode(client,{address,blockNumber,blockTag="latest"}){const blockNumberHex=blockNumber!==undefined?numberToHex(blockNumber):undefined;const hex=await client.request({method:"eth_getCode",params:[address,blockNumberHex||blockTag]});if(hex==="0x")return undefined;return hex}function formatFeeHistory(feeHistory){return{baseFeePerGas:feeHistory.baseFeePerGas.map(value=>BigInt(value)),gasUsedRatio:feeHistory.gasUsedRatio,oldestBlock:BigInt(feeHistory.oldestBlock),reward:feeHistory.reward?.map(reward=>reward.map(value=>BigInt(value)))}}async function getFeeHistory(client,{blockCount,blockNumber,blockTag="latest",rewardPercentiles}){const blockNumberHex=blockNumber?numberToHex(blockNumber):undefined;const feeHistory=await client.request({method:"eth_feeHistory",params:[numberToHex(blockCount),blockNumberHex||blockTag,rewardPercentiles]});return formatFeeHistory(feeHistory)}async function getFilterLogs(_client,{filter}){const strict=filter.strict??false;const logs=await filter.request({method:"eth_getFilterLogs",params:[filter.id]});return logs.map(log=>{try{const{eventName,args}="abi"in filter&&filter.abi?decodeEventLog({abi:filter.abi,data:log.data,topics:log.topics,strict:strict}):{eventName:undefined,args:undefined};return formatLog(log,{args:args,eventName:eventName})}catch(err){let eventName;let isUnnamed;if(err instanceof DecodeLogDataMismatch||err instanceof DecodeLogTopicsMismatch){if("strict"in filter&&filter.strict)return;eventName=err.abiItem.name;isUnnamed=err.abiItem.inputs?.some(x=>!("name"in x&&x.name))}return formatLog(log,{args:isUnnamed?[]:{},eventName:eventName})}}).filter(Boolean)}async function getStorageAt(client,{address,blockNumber,blockTag="latest",slot}){const blockNumberHex=blockNumber!==undefined?numberToHex(blockNumber):undefined;const data=await client.request({method:"eth_getStorageAt",params:[address,slot,blockNumberHex||blockTag]});return data}async function getTransaction(client,{blockHash,blockNumber,blockTag="latest",hash,index}){const blockNumberHex=blockNumber!==undefined?numberToHex(blockNumber):undefined;let transaction=null;if(hash){transaction=await client.request({method:"eth_getTransactionByHash",params:[hash]})}else if(blockHash){transaction=await client.request({method:"eth_getTransactionByBlockHashAndIndex",params:[blockHash,numberToHex(index)]})}else if(blockNumberHex||blockTag){transaction=await client.request({method:"eth_getTransactionByBlockNumberAndIndex",params:[blockNumberHex||blockTag,numberToHex(index)]})}if(!transaction)throw new TransactionNotFoundError({blockHash:blockHash,blockNumber:blockNumber,blockTag:blockTag,hash:hash,index:index});const format=client.chain?.formatters?.transaction?.format||formatTransaction;return format(transaction)}async function getTransactionConfirmations(client,{hash,transactionReceipt}){const[blockNumber,transaction]=await Promise.all([getBlockNumber$1(client),hash?getTransaction(client,{hash:hash}):undefined]);const transactionBlockNumber=transactionReceipt?.blockNumber||transaction?.blockNumber;if(!transactionBlockNumber)return 0n;return blockNumber-transactionBlockNumber+1n}async function getTransactionReceipt(client,{hash}){const receipt=await client.request({method:"eth_getTransactionReceipt",params:[hash]});if(!receipt)throw new TransactionReceiptNotFoundError({hash:hash});const format=client.chain?.formatters?.transactionReceipt?.format||formatTransactionReceipt;return format(receipt)}async function multicall(client,args){const{allowFailure=true,batchSize:batchSize_,blockNumber,blockTag,contracts:contracts_,multicallAddress:multicallAddress_}=args;const batchSize=batchSize_??(typeof client.batch?.multicall==="object"&&client.batch.multicall.batchSize||1024);const contracts=contracts_;let multicallAddress=multicallAddress_;if(!multicallAddress){if(!client.chain)throw new Error("client chain not configured. multicallAddress is required.");multicallAddress=getChainContractAddress({blockNumber:blockNumber,chain:client.chain,contract:"multicall3"})}const chunkedCalls=[[]];let currentChunk=0;let currentChunkSize=0;for(let i=0;i<contracts.length;i++){const{abi,address,args,functionName}=contracts[i];try{const callData=encodeFunctionData({abi:abi,args:args,functionName:functionName});currentChunkSize+=callData.length;if(batchSize>0&&currentChunkSize>batchSize){currentChunk++;currentChunkSize=(callData.length-2)/2;chunkedCalls[currentChunk]=[]}chunkedCalls[currentChunk]=[...chunkedCalls[currentChunk],{allowFailure:true,callData:callData,target:address}]}catch(err){const error=getContractError(err,{abi:abi,address:address,args:args,docsPath:"/docs/contract/multicall",functionName:functionName});if(!allowFailure)throw error;chunkedCalls[currentChunk]=[...chunkedCalls[currentChunk],{allowFailure:true,callData:"0x",target:address}]}}const results=await Promise.all(chunkedCalls.map(calls=>readContract(client,{abi:multicall3Abi,address:multicallAddress,args:[calls],blockNumber:blockNumber,blockTag:blockTag,functionName:"aggregate3"})));return results.flat().map(({returnData,success},i)=>{const calls=chunkedCalls.flat();const{callData}=calls[i];const{abi,address,functionName,args}=contracts[i];try{if(callData==="0x")throw new AbiDecodingZeroDataError;if(!success)throw new RawContractError({data:returnData});const result=decodeFunctionResult({abi:abi,data:returnData,functionName:functionName});return allowFailure?{result:result,status:"success"}:result}catch(err){const error=getContractError(err,{abi:abi,address:address,args:args,docsPath:"/docs/contract/multicall",functionName:functionName});if(!allowFailure)throw error;return{error:error,result:undefined,status:"failure"}}})}const universalSignatureValidatorByteCode="0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572";BigInt(0);BigInt(1);BigInt(2);Array.from({length:256},(v,i)=>i.toString(16).padStart(2,"0"));function equalBytes(b1,b2){if(b1.length!==b2.length)return false;for(let i=0;i<b1.length;i++)if(b1[i]!==b2[i])return false;return true}function isBytesEqual(a_,b_){const a=isHex(a_)?toBytes$1(a_):a_;const b=isHex(b_)?toBytes$1(b_):b_;return equalBytes(a,b)}async function verifyHash(client,{address,hash,signature,...callRequest}){const signatureHex=isHex(signature)?signature:toHex(signature);try{const{data}=await call(client,{data:encodeDeployData({abi:universalSignatureValidatorAbi,args:[address,hash,signatureHex],bytecode:universalSignatureValidatorByteCode}),...callRequest});return isBytesEqual(data??"0x0","0x1")}catch(error){if(error instanceof CallExecutionError){return false}throw error}}async function verifyMessage(client,{address,message,signature,...callRequest}){const hash=hashMessage(message);return verifyHash(client,{address:address,hash:hash,signature:signature,...callRequest})}async function verifyTypedData(client,{address,signature,message,primaryType,types,domain,...callRequest}){const hash=hashTypedData({message:message,primaryType:primaryType,types:types,domain:domain});return verifyHash(client,{address:address,hash:hash,signature:signature,...callRequest})}function watchBlockNumber(client,{emitOnBegin=false,emitMissed=false,onBlockNumber,onError,poll:poll_,pollingInterval=client.pollingInterval}){const enablePolling=typeof poll_!=="undefined"?poll_:client.transport.type!=="webSocket";let prevBlockNumber;const pollBlockNumber=()=>{const observerId=stringify(["watchBlockNumber",client.uid,emitOnBegin,emitMissed,pollingInterval]);return observe(observerId,{onBlockNumber:onBlockNumber,onError:onError},emit=>poll(async()=>{try{const blockNumber=await getBlockNumber$1(client,{maxAge:0});if(prevBlockNumber){if(blockNumber===prevBlockNumber)return;if(blockNumber-prevBlockNumber>1&&emitMissed){for(let i=prevBlockNumber+1n;i<blockNumber;i++){emit.onBlockNumber(i,prevBlockNumber);prevBlockNumber=i}}}if(!prevBlockNumber||blockNumber>prevBlockNumber){emit.onBlockNumber(blockNumber,prevBlockNumber);prevBlockNumber=blockNumber}}catch(err){emit.onError?.(err)}},{emitOnBegin:emitOnBegin,interval:pollingInterval}))};const subscribeBlockNumber=()=>{let active=true;let unsubscribe=()=>active=false;(async()=>{try{const{unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["newHeads"],onData(data){if(!active)return;const blockNumber=hexToBigInt(data.result?.number);onBlockNumber(blockNumber,prevBlockNumber);prevBlockNumber=blockNumber},onError(error){onError?.(error)}});unsubscribe=unsubscribe_;if(!active)unsubscribe()}catch(err){onError?.(err)}})();return unsubscribe};return enablePolling?pollBlockNumber():subscribeBlockNumber()}async function waitForTransactionReceipt(client,{confirmations=1,hash,onReplaced,pollingInterval=client.pollingInterval,timeout}){const observerId=stringify(["waitForTransactionReceipt",client.uid,hash]);let transaction;let replacedTransaction;let receipt;let retrying=false;return new Promise((resolve,reject)=>{if(timeout)setTimeout(()=>reject(new WaitForTransactionReceiptTimeoutError({hash:hash})),timeout);const _unobserve=observe(observerId,{onReplaced:onReplaced,resolve:resolve,reject:reject},emit=>{const unwatch=watchBlockNumber(client,{emitMissed:true,emitOnBegin:true,poll:true,pollingInterval:pollingInterval,async onBlockNumber(blockNumber_){if(retrying)return;let blockNumber=blockNumber_;const done=async fn=>{unwatch();fn();_unobserve()};try{if(receipt){if(blockNumber-receipt.blockNumber+1n<confirmations)return;done(()=>emit.resolve(receipt));return}if(!transaction){retrying=true;await withRetry(async()=>{transaction=await getTransaction(client,{hash:hash});if(transaction.blockNumber)blockNumber=transaction.blockNumber},{delay:({count})=>~~(1<<count)*200,retryCount:6});retrying=false}receipt=await getTransactionReceipt(client,{hash:hash});if(confirmations>0&&blockNumber-receipt.blockNumber+1n<confirmations)return;done(()=>emit.resolve(receipt))}catch(err){if(transaction&&(err instanceof TransactionNotFoundError||err instanceof TransactionReceiptNotFoundError)){replacedTransaction=transaction;const block=await getBlock(client,{blockNumber:blockNumber,includeTransactions:true});const replacementTransaction=block.transactions.find(({from,nonce})=>from===replacedTransaction.from&&nonce===replacedTransaction.nonce);if(!replacementTransaction)return;receipt=await getTransactionReceipt(client,{hash:replacementTransaction.hash});if(blockNumber-receipt.blockNumber+1n<confirmations)return;let reason="replaced";if(replacementTransaction.to===replacedTransaction.to&&replacementTransaction.value===replacedTransaction.value){reason="repriced"}else if(replacementTransaction.from===replacementTransaction.to&&replacementTransaction.value===0n){reason="cancelled"}done(()=>{emit.onReplaced?.({reason:reason,replacedTransaction:replacedTransaction,transaction:replacementTransaction,transactionReceipt:receipt});emit.resolve(receipt)})}else{done(()=>emit.reject(err))}}}});return unwatch})})}function watchBlocks(client,{blockTag="latest",emitMissed=false,emitOnBegin=false,onBlock,onError,includeTransactions=false,poll:poll_,pollingInterval=client.pollingInterval}){const enablePolling=typeof poll_!=="undefined"?poll_:client.transport.type!=="webSocket";let prevBlock;const pollBlocks=()=>{const observerId=stringify(["watchBlocks",client.uid,emitMissed,emitOnBegin,includeTransactions,pollingInterval]);return observe(observerId,{onBlock:onBlock,onError:onError},emit=>poll(async()=>{try{const block=await getBlock(client,{blockTag:blockTag,includeTransactions:includeTransactions});if(block.number&&prevBlock?.number){if(block.number===prevBlock.number)return;if(block.number-prevBlock.number>1&&emitMissed){for(let i=prevBlock?.number+1n;i<block.number;i++){const block=await getBlock(client,{blockNumber:i,includeTransactions:includeTransactions});emit.onBlock(block,prevBlock);prevBlock=block}}}if(!prevBlock?.number||blockTag==="pending"&&!block?.number||block.number&&block.number>prevBlock.number){emit.onBlock(block,prevBlock);prevBlock=block}}catch(err){emit.onError?.(err)}},{emitOnBegin:emitOnBegin,interval:pollingInterval}))};const subscribeBlocks=()=>{let active=true;let unsubscribe=()=>active=false;(async()=>{try{const{unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["newHeads"],onData(data){if(!active)return;const format=client.chain?.formatters?.block?.format||formatBlock;const block=format(data.result);onBlock(block,prevBlock);prevBlock=block},onError(error){onError?.(error)}});unsubscribe=unsubscribe_;if(!active)unsubscribe()}catch(err){onError?.(err)}})();return unsubscribe};return enablePolling?pollBlocks():subscribeBlocks()}function watchEvent(client,{address,args,batch=true,event,onError,onLogs,pollingInterval=client.pollingInterval,strict:strict_}){const observerId=stringify(["watchEvent",address,args,batch,client.uid,event,pollingInterval]);const strict=strict_??false;return observe(observerId,{onLogs:onLogs,onError:onError},emit=>{let previousBlockNumber;let filter;let initialized=false;const unwatch=poll(async()=>{if(!initialized){try{filter=await createEventFilter(client,{address:address,args:args,event:event,strict:strict})}catch{}initialized=true;return}try{let logs;if(filter){logs=await getFilterChanges(client,{filter:filter})}else{const blockNumber=await getBlockNumber$1(client);if(previousBlockNumber&&previousBlockNumber!==blockNumber){logs=await getLogs(client,{address:address,args:args,fromBlock:previousBlockNumber+1n,toBlock:blockNumber,event:event})}else{logs=[]}previousBlockNumber=blockNumber}if(logs.length===0)return;if(batch)emit.onLogs(logs);else logs.forEach(log=>emit.onLogs([log]))}catch(err){emit.onError?.(err)}},{emitOnBegin:true,interval:pollingInterval});return async()=>{if(filter)await uninstallFilter(client,{filter:filter});unwatch()}})}function watchPendingTransactions(client,{batch=true,onError,onTransactions,poll:poll_,pollingInterval=client.pollingInterval}){const enablePolling=typeof poll_!=="undefined"?poll_:client.transport.type!=="webSocket";const pollPendingTransactions=()=>{const observerId=stringify(["watchPendingTransactions",client.uid,batch,pollingInterval]);return observe(observerId,{onTransactions:onTransactions,onError:onError},emit=>{let filter;const unwatch=poll(async()=>{try{if(!filter){try{filter=await createPendingTransactionFilter(client);return}catch(err){unwatch();throw err}}const hashes=await getFilterChanges(client,{filter:filter});if(hashes.length===0)return;if(batch)emit.onTransactions(hashes);else hashes.forEach(hash=>emit.onTransactions([hash]))}catch(err){emit.onError?.(err)}},{emitOnBegin:true,interval:pollingInterval});return async()=>{if(filter)await uninstallFilter(client,{filter:filter});unwatch()}})};const subscribePendingTransactions=()=>{let active=true;let unsubscribe=()=>active=false;(async()=>{try{const{unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["newPendingTransactions"],onData(data){if(!active)return;const transaction=data.result;onTransactions([transaction])},onError(error){onError?.(error)}});unsubscribe=unsubscribe_;if(!active)unsubscribe()}catch(err){onError?.(err)}})();return unsubscribe};return enablePolling?pollPendingTransactions():subscribePendingTransactions()}const publicActions=client=>({call:args=>call(client,args),createBlockFilter:()=>createBlockFilter(client),createContractEventFilter:args=>createContractEventFilter(client,args),createEventFilter:args=>createEventFilter(client,args),createPendingTransactionFilter:()=>createPendingTransactionFilter(client),estimateContractGas:args=>estimateContractGas(client,args),estimateGas:args=>estimateGas(client,args),getBalance:args=>getBalance(client,args),getBlock:args=>getBlock(client,args),getBlockNumber:args=>getBlockNumber$1(client,args),getBlockTransactionCount:args=>getBlockTransactionCount(client,args),getBytecode:args=>getBytecode(client,args),getChainId:()=>getChainId(client),getEnsAddress:args=>getEnsAddress(client,args),getEnsAvatar:args=>getEnsAvatar(client,args),getEnsName:args=>getEnsName(client,args),getEnsResolver:args=>getEnsResolver(client,args),getEnsText:args=>getEnsText(client,args),getFeeHistory:args=>getFeeHistory(client,args),getFilterChanges:args=>getFilterChanges(client,args),getFilterLogs:args=>getFilterLogs(client,args),getGasPrice:()=>getGasPrice$1(client),getLogs:args=>getLogs(client,args),getStorageAt:args=>getStorageAt(client,args),getTransaction:args=>getTransaction(client,args),getTransactionConfirmations:args=>getTransactionConfirmations(client,args),getTransactionCount:args=>getTransactionCount(client,args),getTransactionReceipt:args=>getTransactionReceipt(client,args),multicall:args=>multicall(client,args),readContract:args=>readContract(client,args),simulateContract:args=>simulateContract(client,args),verifyMessage:args=>verifyMessage(client,args),verifyTypedData:args=>verifyTypedData(client,args),uninstallFilter:args=>uninstallFilter(client,args),waitForTransactionReceipt:args=>waitForTransactionReceipt(client,args),watchBlocks:args=>watchBlocks(client,args),watchBlockNumber:args=>watchBlockNumber(client,args),watchContractEvent:args=>watchContractEvent(client,args),watchEvent:args=>watchEvent(client,args),watchPendingTransactions:args=>watchPendingTransactions(client,args)});function createPublicClient({batch,chain,key="public",name="Public Client",transport,pollingInterval}){const client={batch:batch,...createClient({chain:chain,key:key,name:name,pollingInterval:pollingInterval,transport:transport,type:"publicClient"})};return{...client,...publicActions(client)}}var arbitrum$1={id:42161,name:"Arbitrum One",network:"arbitrum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://arb-mainnet.g.alchemy.com/v2"],webSocket:["wss://arb-mainnet.g.alchemy.com/v2"]},infura:{http:["https://arbitrum-mainnet.infura.io/v3"],webSocket:["wss://arbitrum-mainnet.infura.io/ws/v3"]},default:{http:["https://arb1.arbitrum.io/rpc"]},public:{http:["https://arb1.arbitrum.io/rpc"]}},blockExplorers:{etherscan:{name:"Arbiscan",url:"https://arbiscan.io"},default:{name:"Arbiscan",url:"https://arbiscan.io"}},contracts:{multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:7654707}}};var arbitrumGoerli$1={id:421613,name:"Arbitrum Goerli",network:"arbitrum-goerli",nativeCurrency:{name:"Arbitrum Goerli Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://arb-goerli.g.alchemy.com/v2"],webSocket:["wss://arb-goerli.g.alchemy.com/v2"]},infura:{http:["https://arbitrum-goerli.infura.io/v3"],webSocket:["wss://arbitrum-goerli.infura.io/ws/v3"]},default:{http:["https://goerli-rollup.arbitrum.io/rpc"]},public:{http:["https://goerli-rollup.arbitrum.io/rpc"]}},blockExplorers:{etherscan:{name:"Arbiscan",url:"https://goerli.arbiscan.io/"},default:{name:"Arbiscan",url:"https://goerli.arbiscan.io/"}},contracts:{multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:88114}},testnet:true};const arbitrum=defineChain(arbitrum$1);const arbitrumGoerli=defineChain(arbitrumGoerli$1);var _format="hh-sol-artifact-1";var contractName="Errors";var sourceName="contracts/error/Errors.sol";var abi=[{inputs:[],name:"ActionAlreadySignalled",type:"error"},{inputs:[],name:"ActionNotSignalled",type:"error"},{inputs:[],name:"AdlNotEnabled",type:"error"},{inputs:[{internalType:"int256",name:"pnlToPoolFactor",type:"int256"},{internalType:"uint256",name:"maxPnlFactorForAdl",type:"uint256"}],name:"AdlNotRequired",type:"error"},{inputs:[{internalType:"bytes[]",name:"values",type:"bytes[]"},{internalType:"uint256",name:"index",type:"uint256"},{internalType:"string",name:"label",type:"string"}],name:"ArrayOutOfBoundsBytes",type:"error"},{inputs:[{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"uint256",name:"index",type:"uint256"},{internalType:"string",name:"label",type:"string"}],name:"ArrayOutOfBoundsUint256",type:"error"},{inputs:[{internalType:"uint256",name:"minOracleBlockNumber",type:"uint256"},{internalType:"uint256",name:"prevMinOracleBlockNumber",type:"uint256"}],name:"BlockNumbersNotSorted",type:"error"},{inputs:[{internalType:"uint256",name:"adjustedClaimableAmount",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"}],name:"CollateralAlreadyClaimed",type:"error"},{inputs:[{internalType:"uint256[]",name:"compactedValues",type:"uint256[]"},{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"slotIndex",type:"uint256"},{internalType:"string",name:"label",type:"string"}],name:"CompactedArrayOutOfBounds",type:"error"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"DepositNotFound",type:"error"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"DisabledFeature",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"}],name:"DisabledMarket",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"DuplicateTokenPrice",type:"error"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"string",name:"label",type:"string"}],name:"DuplicatedIndex",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"}],name:"DuplicatedMarketInSwapPath",type:"error"},{inputs:[],name:"EmptyAccount",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"EmptyAddressInMarketTokenBalanceValidation",type:"error"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"EmptyCompactedBlockNumber",type:"error"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"EmptyCompactedPrice",type:"error"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"EmptyCompactedTimestamp",type:"error"},{inputs:[],name:"EmptyDeposit",type:"error"},{inputs:[],name:"EmptyDepositAmounts",type:"error"},{inputs:[],name:"EmptyDepositAmountsAfterSwap",type:"error"},{inputs:[],name:"EmptyHoldingAddress",type:"error"},{inputs:[],name:"EmptyMarket",type:"error"},{inputs:[],name:"EmptyMarketTokenSupply",type:"error"},{inputs:[],name:"EmptyOrder",type:"error"},{inputs:[],name:"EmptyPosition",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"EmptyPriceFeed",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"EmptyPriceFeedMultiplier",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"EmptyPrimaryPrice",type:"error"},{inputs:[],name:"EmptyReceiver",type:"error"},{inputs:[{internalType:"uint256",name:"signerIndex",type:"uint256"}],name:"EmptySigner",type:"error"},{inputs:[],name:"EmptySizeDeltaInTokens",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"EmptyTokenTranferGasLimit",type:"error"},{inputs:[],name:"EmptyWithdrawal",type:"error"},{inputs:[],name:"EmptyWithdrawalAmount",type:"error"},{inputs:[],name:"EndOfOracleSimulation",type:"error"},{inputs:[{internalType:"uint256",name:"collateralAmount",type:"uint256"},{internalType:"int256",name:"collateralDeltaAmount",type:"int256"}],name:"InsufficientCollateralAmount",type:"error"},{inputs:[{internalType:"int256",name:"remainingCollateralUsd",type:"int256"}],name:"InsufficientCollateralUsd",type:"error"},{inputs:[{internalType:"uint256",name:"minExecutionFee",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"}],name:"InsufficientExecutionFee",type:"error"},{inputs:[{internalType:"uint256",name:"startingGas",type:"uint256"},{internalType:"uint256",name:"minHandleErrorGas",type:"uint256"}],name:"InsufficientExecutionGas",type:"error"},{inputs:[{internalType:"uint256",name:"remainingCostUsd",type:"uint256"},{internalType:"string",name:"step",type:"string"}],name:"InsufficientFundsToPayForCosts",type:"error"},{inputs:[{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"expected",type:"uint256"}],name:"InsufficientMarketTokens",type:"error"},{inputs:[{internalType:"uint256",name:"outputAmount",type:"uint256"},{internalType:"uint256",name:"minOutputAmount",type:"uint256"}],name:"InsufficientOutputAmount",type:"error"},{inputs:[{internalType:"uint256",name:"poolAmount",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"InsufficientPoolAmount",type:"error"},{inputs:[{internalType:"uint256",name:"reservedUsd",type:"uint256"},{internalType:"uint256",name:"maxReservedUsd",type:"uint256"}],name:"InsufficientReserve",type:"error"},{inputs:[{internalType:"uint256",name:"reservedUsd",type:"uint256"},{internalType:"uint256",name:"maxReservedUsd",type:"uint256"}],name:"InsufficientReserveForOpenInterest",type:"error"},{inputs:[{internalType:"uint256",name:"outputAmount",type:"uint256"},{internalType:"uint256",name:"minOutputAmount",type:"uint256"}],name:"InsufficientSwapOutputAmount",type:"error"},{inputs:[{internalType:"uint256",name:"wntAmount",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"}],name:"InsufficientWntAmount",type:"error"},{inputs:[{internalType:"uint256",name:"wntAmount",type:"uint256"},{internalType:"uint256",name:"executionFee",type:"uint256"}],name:"InsufficientWntAmountForExecutionFee",type:"error"},{inputs:[{internalType:"int256",name:"nextPnlToPoolFactor",type:"int256"},{internalType:"int256",name:"pnlToPoolFactor",type:"int256"}],name:"InvalidAdl",type:"error"},{inputs:[{internalType:"bytes32",name:"baseKey",type:"bytes32"}],name:"InvalidBaseKey",type:"error"},{inputs:[{internalType:"uint256",name:"minOracleBlockNumber",type:"uint256"},{internalType:"uint256",name:"currentBlockNumber",type:"uint256"}],name:"InvalidBlockNumber",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"}],name:"InvalidClaimAffiliateRewardsInput",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"},{internalType:"uint256",name:"timeKeysLength",type:"uint256"}],name:"InvalidClaimCollateralInput",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"}],name:"InvalidClaimFeesInput",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"}],name:"InvalidClaimFundingFeesInput",type:"error"},{inputs:[{internalType:"uint256",name:"marketsLength",type:"uint256"},{internalType:"uint256",name:"tokensLength",type:"uint256"}],name:"InvalidClaimUiFeesInput",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"InvalidCollateralTokenForMarket",type:"error"},{inputs:[{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"},{internalType:"uint256",name:"positionSizeInUsd",type:"uint256"}],name:"InvalidDecreaseOrderSize",type:"error"},{inputs:[{internalType:"uint256",name:"decreasePositionSwapType",type:"uint256"}],name:"InvalidDecreasePositionSwapType",type:"error"},{inputs:[{internalType:"bytes32",name:"baseKey",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"}],name:"InvalidFeeFactor",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"InvalidFeeReceiver",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"int256",name:"price",type:"int256"}],name:"InvalidFeedPrice",type:"error"},{inputs:[{internalType:"address",name:"keeper",type:"address"}],name:"InvalidKeeperForFrozenOrder",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"expectedMinBalance",type:"uint256"}],name:"InvalidMarketTokenBalance",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"claimableFundingFeeAmount",type:"uint256"}],name:"InvalidMarketTokenBalanceForClaimableFunding",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"collateralAmount",type:"uint256"}],name:"InvalidMarketTokenBalanceForCollateralAmount",type:"error"},{inputs:[{internalType:"uint256",name:"minPrice",type:"uint256"},{internalType:"uint256",name:"maxPrice",type:"uint256"}],name:"InvalidMedianMinMaxPrice",type:"error"},{inputs:[{internalType:"uint256",name:"minOracleBlockNumber",type:"uint256"},{internalType:"uint256",name:"maxOracleBlockNumber",type:"uint256"}],name:"InvalidMinMaxBlockNumber",type:"error"},{inputs:[{internalType:"address",name:"msgSender",type:"address"}],name:"InvalidNativeTokenSender",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"InvalidOraclePrice",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"InvalidOracleSigner",type:"error"},{inputs:[{internalType:"uint256",name:"primaryPriceMin",type:"uint256"},{internalType:"uint256",name:"primaryPriceMax",type:"uint256"},{internalType:"uint256",name:"triggerPrice",type:"uint256"},{internalType:"uint256",name:"orderType",type:"uint256"}],name:"InvalidOrderPrices",type:"error"},{inputs:[{internalType:"address",name:"tokenOut",type:"address"},{internalType:"address",name:"expectedTokenOut",type:"address"}],name:"InvalidOutputToken",type:"error"},{inputs:[{internalType:"int256",name:"poolValue",type:"int256"}],name:"InvalidPoolValueForDeposit",type:"error"},{inputs:[{internalType:"int256",name:"poolValue",type:"int256"}],name:"InvalidPoolValueForWithdrawal",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"}],name:"InvalidPositionMarket",type:"error"},{inputs:[{internalType:"uint256",name:"sizeInUsd",type:"uint256"},{internalType:"uint256",name:"sizeInTokens",type:"uint256"}],name:"InvalidPositionSizeValues",type:"error"},{inputs:[{internalType:"uint256",name:"primaryTokensLength",type:"uint256"},{internalType:"uint256",name:"primaryPricesLength",type:"uint256"}],name:"InvalidPrimaryPricesForSimulation",type:"error"},{inputs:[{internalType:"address",name:"recoveredSigner",type:"address"},{internalType:"address",name:"expectedSigner",type:"address"}],name:"InvalidSignature",type:"error"},{inputs:[{internalType:"uint256",name:"minPrice",type:"uint256"},{internalType:"uint256",name:"maxPrice",type:"uint256"}],name:"InvalidSignerMinMaxPrice",type:"error"},{inputs:[{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"},{internalType:"uint256",name:"positionSizeInUsd",type:"uint256"}],name:"InvalidSizeDeltaForAdl",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"}],name:"InvalidSwapMarket",type:"error"},{inputs:[{internalType:"address",name:"outputToken",type:"address"},{internalType:"address",name:"expectedOutputToken",type:"address"}],name:"InvalidSwapOutputToken",type:"error"},{inputs:[{internalType:"uint256",name:"timelockDelay",type:"uint256"}],name:"InvalidTimelockDelay",type:"error"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"InvalidTokenIn",type:"error"},{inputs:[{internalType:"uint256",name:"uiFeeFactor",type:"uint256"},{internalType:"uint256",name:"maxUiFeeFactor",type:"uint256"}],name:"InvalidUiFeeFactor",type:"error"},{inputs:[{internalType:"string",name:"reason",type:"string"}],name:"LiquidatablePosition",type:"error"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"address",name:"existingMarketAddress",type:"address"}],name:"MarketAlreadyExists",type:"error"},{inputs:[{internalType:"address",name:"key",type:"address"}],name:"MarketNotFound",type:"error"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"string",name:"label",type:"string"}],name:"MaskIndexOutOfBounds",type:"error"},{inputs:[{internalType:"uint256",name:"callbackGasLimit",type:"uint256"},{internalType:"uint256",name:"maxCallbackGasLimit",type:"uint256"}],name:"MaxCallbackGasLimitExceeded",type:"error"},{inputs:[{internalType:"uint256",name:"openInterest",type:"uint256"},{internalType:"uint256",name:"maxOpenInterest",type:"uint256"}],name:"MaxOpenInterestExceeded",type:"error"},{inputs:[{internalType:"uint256",name:"oracleSigners",type:"uint256"},{internalType:"uint256",name:"maxOracleSigners",type:"uint256"}],name:"MaxOracleSigners",type:"error"},{inputs:[{internalType:"uint256",name:"poolAmount",type:"uint256"},{internalType:"uint256",name:"maxPoolAmount",type:"uint256"}],name:"MaxPoolAmountExceeded",type:"error"},{inputs:[{internalType:"uint256",name:"oracleTimestamp",type:"uint256"},{internalType:"uint256",name:"currentTimestamp",type:"uint256"}],name:"MaxPriceAgeExceeded",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint256",name:"prevPrice",type:"uint256"}],name:"MaxPricesNotSorted",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint256",name:"refPrice",type:"uint256"},{internalType:"uint256",name:"maxRefPriceDeviationFactor",type:"uint256"}],name:"MaxRefPriceDeviationExceeded",type:"error"},{inputs:[{internalType:"uint256",name:"signerIndex",type:"uint256"},{internalType:"uint256",name:"maxSignerIndex",type:"uint256"}],name:"MaxSignerIndex",type:"error"},{inputs:[{internalType:"uint256",name:"swapPathLengh",type:"uint256"},{internalType:"uint256",name:"maxSwapPathLength",type:"uint256"}],name:"MaxSwapPathLengthExceeded",type:"error"},{inputs:[{internalType:"uint256",name:"timelockDelay",type:"uint256"}],name:"MaxTimelockDelayExceeded",type:"error"},{inputs:[{internalType:"uint256",name:"received",type:"uint256"},{internalType:"uint256",name:"expected",type:"uint256"}],name:"MinLongTokens",type:"error"},{inputs:[{internalType:"uint256",name:"received",type:"uint256"},{internalType:"uint256",name:"expected",type:"uint256"}],name:"MinMarketTokens",type:"error"},{inputs:[{internalType:"uint256",name:"oracleSigners",type:"uint256"},{internalType:"uint256",name:"minOracleSigners",type:"uint256"}],name:"MinOracleSigners",type:"error"},{inputs:[{internalType:"uint256",name:"positionSizeInUsd",type:"uint256"},{internalType:"uint256",name:"minPositionSizeUsd",type:"uint256"}],name:"MinPositionSize",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint256",name:"prevPrice",type:"uint256"}],name:"MinPricesNotSorted",type:"error"},{inputs:[{internalType:"uint256",name:"received",type:"uint256"},{internalType:"uint256",name:"expected",type:"uint256"}],name:"MinShortTokens",type:"error"},{inputs:[{internalType:"int256",name:"executionPrice",type:"int256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint256",name:"positionSizeInUsd",type:"uint256"},{internalType:"int256",name:"priceImpactUsd",type:"int256"},{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"}],name:"NegativeExecutionPrice",type:"error"},{inputs:[{internalType:"uint256",name:"tokensWithPricesLength",type:"uint256"}],name:"NonEmptyTokensWithPrices",type:"error"},{inputs:[{internalType:"address",name:"market",type:"address"}],name:"OpenInterestCannotBeUpdatedForSwapOnlyMarket",type:"error"},{inputs:[{internalType:"uint256[]",name:"minOracleBlockNumbers",type:"uint256[]"},{internalType:"uint256[]",name:"maxOracleBlockNumbers",type:"uint256[]"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"OracleBlockNumberNotWithinRange",type:"error"},{inputs:[{internalType:"uint256[]",name:"oracleBlockNumbers",type:"uint256[]"},{internalType:"uint256",name:"expectedBlockNumber",type:"uint256"}],name:"OracleBlockNumbersAreSmallerThanRequired",type:"error"},{inputs:[],name:"OrderAlreadyFrozen",type:"error"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"OrderNotFound",type:"error"},{inputs:[{internalType:"uint256",name:"price",type:"uint256"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"}],name:"OrderNotFulfillableAtAcceptablePrice",type:"error"},{inputs:[{internalType:"uint256",name:"orderType",type:"uint256"}],name:"OrderNotUpdatable",type:"error"},{inputs:[{internalType:"uint256",name:"orderType",type:"uint256"}],name:"OrderTypeCannotBeCreated",type:"error"},{inputs:[{internalType:"int256",name:"pnlToPoolFactor",type:"int256"},{internalType:"uint256",name:"maxPnlFactor",type:"uint256"}],name:"PnlFactorExceededForLongs",type:"error"},{inputs:[{internalType:"int256",name:"pnlToPoolFactor",type:"int256"},{internalType:"uint256",name:"maxPnlFactor",type:"uint256"}],name:"PnlFactorExceededForShorts",type:"error"},{inputs:[{internalType:"int256",name:"nextPnlToPoolFactor",type:"int256"},{internalType:"uint256",name:"minPnlFactorForAdl",type:"uint256"}],name:"PnlOvercorrected",type:"error"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"PositionNotFound",type:"error"},{inputs:[],name:"PositionShouldNotBeLiquidated",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"minPrice",type:"uint256"},{internalType:"uint256",name:"maxPrice",type:"uint256"}],name:"PriceAlreadySet",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"heartbeatDuration",type:"uint256"}],name:"PriceFeedNotUpdated",type:"error"},{inputs:[{internalType:"int256",name:"priceImpactUsd",type:"int256"},{internalType:"uint256",name:"sizeDeltaUsd",type:"uint256"}],name:"PriceImpactLargerThanOrderSize",type:"error"},{inputs:[{internalType:"uint256",name:"requestAge",type:"uint256"},{internalType:"uint256",name:"requestExpirationAge",type:"uint256"},{internalType:"string",name:"requestType",type:"string"}],name:"RequestNotYetCancellable",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"SelfTransferNotSupported",type:"error"},{inputs:[{internalType:"uint256",name:"signalTime",type:"uint256"}],name:"SignalTimeNotYetPassed",type:"error"},{inputs:[{internalType:"uint256",name:"amountAfterFees",type:"uint256"},{internalType:"int256",name:"negativeImpactAmount",type:"int256"}],name:"SwapPriceImpactExceedsAmountIn",type:"error"},{inputs:[],name:"ThereMustBeAtLeastOneRoleAdmin",type:"error"},{inputs:[],name:"ThereMustBeAtLeastOneTimelockMultiSig",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"TokenTransferError",type:"error"},{inputs:[],name:"UnableToGetBorrowingFactorEmptyPoolUsd",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"UnableToGetCachedTokenPrice",type:"error"},{inputs:[],name:"UnableToGetFundingFactorEmptyOpenInterest",type:"error"},{inputs:[{internalType:"address",name:"inputToken",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"UnableToGetOppositeToken",type:"error"},{inputs:[{internalType:"int256",name:"estimatedRemainingCollateralUsd",type:"int256"}],name:"UnableToWithdrawCollateral",type:"error"},{inputs:[{internalType:"address",name:"msgSender",type:"address"},{internalType:"string",name:"role",type:"string"}],name:"Unauthorized",type:"error"},{inputs:[{internalType:"uint256",name:"positionBorrowingFactor",type:"uint256"},{internalType:"uint256",name:"cumulativeBorrowingFactor",type:"uint256"}],name:"UnexpectedBorrowingFactor",type:"error"},{inputs:[],name:"UnexpectedMarket",type:"error"},{inputs:[{internalType:"int256",name:"poolValue",type:"int256"}],name:"UnexpectedPoolValue",type:"error"},{inputs:[],name:"UnexpectedPositionState",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"market",type:"address"}],name:"UnexpectedTokenForVirtualInventory",type:"error"},{inputs:[],name:"UnsupportedOrderType",type:"error"},{inputs:[{internalType:"int256",name:"usdDelta",type:"int256"},{internalType:"uint256",name:"longOpenInterest",type:"uint256"}],name:"UsdDeltaExceedsLongOpenInterest",type:"error"},{inputs:[{internalType:"int256",name:"usdDelta",type:"int256"},{internalType:"uint256",name:"poolUsd",type:"uint256"}],name:"UsdDeltaExceedsPoolValue",type:"error"},{inputs:[{internalType:"int256",name:"usdDelta",type:"int256"},{internalType:"uint256",name:"shortOpenInterest",type:"uint256"}],name:"UsdDeltaExceedsShortOpenInterest",type:"error"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"WithdrawalNotFound",type:"error"}];var bytecode="0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1757edc5d1f8308aefb387c9807a59afc7704ff6770f17f75680168e4f004c064736f6c63430008120033";var deployedBytecode="0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1757edc5d1f8308aefb387c9807a59afc7704ff6770f17f75680168e4f004c064736f6c63430008120033";var linkReferences={};var deployedLinkReferences={};var CustomErrors={_format:_format,contractName:contractName,sourceName:sourceName,abi:abi,bytecode:bytecode,deployedBytecode:deployedBytecode,linkReferences:linkReferences,deployedLinkReferences:deployedLinkReferences};var __awaiter$p=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$p=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var _a,_b;var MAX_TIMEOUT=2e3;function sleep(ms){return new Promise(function(resolve){setTimeout(function(){return resolve()},ms)})}var CHAIN_BY_CHAIN_ID=(_a={},_a[ARBITRUM_GOERLI]=arbitrumGoerli,_a[ARBITRUM]=arbitrum,_a);var BATCH_CONFIGS=(_b={},_b[ARBITRUM]={http:{batchSize:0,wait:0},client:{multicall:{batchSize:1024*1024,wait:0}}},_b[ARBITRUM_GOERLI]={http:{batchSize:0,wait:0},client:{multicall:{batchSize:1024*1024,wait:0}}},_b);function executeMulticall(chainId,library,request){return __awaiter$p(this,void 0,void 0,function(){var multicall;return __generator$p(this,function(_a){switch(_a.label){case 0:return[4,Multicall$1.getInstance(chainId)];case 1:multicall=_a.sent();return[2,multicall===null||multicall===void 0?void 0:multicall.call(request,MAX_TIMEOUT)]}})})}var Multicall$1=function(){function Multicall(chainId,rpcUrl){this.chainId=chainId;this.rpcUrl=rpcUrl;this.viemClient=Multicall.getViemClient(chainId,rpcUrl)}Multicall.getInstance=function(chainId){return __awaiter$p(this,void 0,void 0,function(){var instance,rpcUrl;return __generator$p(this,function(_a){instance=Multicall.instances[chainId];if(!instance||instance.chainId!==chainId){rpcUrl=getRpcUrl(chainId);if(!rpcUrl){return[2,undefined]}instance=new Multicall(chainId,rpcUrl);Multicall.instances[chainId]=instance}return[2,instance]})})};Multicall.getViemClient=function(chainId,rpcUrl){return createPublicClient({transport:http(rpcUrl,{retryCount:0,retryDelay:1e7,batch:BATCH_CONFIGS[chainId].http}),pollingInterval:undefined,batch:BATCH_CONFIGS[chainId].client,chain:CHAIN_BY_CHAIN_ID[chainId]})};Multicall.prototype.call=function(request,maxTimeout){return __awaiter$p(this,void 0,void 0,function(){var originalKeys,abis,encodedPayload,contractKeys,response,multicallResult;var _this=this;return __generator$p(this,function(_a){switch(_a.label){case 0:originalKeys=[];abis={};encodedPayload=[];contractKeys=Object.keys(request);contractKeys.forEach(function(contractKey){var contractCallConfig=request[contractKey];if(!contractCallConfig){return}Object.keys(contractCallConfig.calls).forEach(function(callKey){var call=contractCallConfig.calls[callKey];if(!call){return}abis[contractCallConfig.contractAddress]=abis[contractCallConfig.contractAddress]||contractCallConfig.abi.concat(CustomErrors.abi);var abi=abis[contractCallConfig.contractAddress];originalKeys.push({contractKey:contractKey,callKey:callKey});encodedPayload.push({address:contractCallConfig.contractAddress,functionName:call.methodName,abi:abi,args:call.params})})});return[4,Promise.race([this.viemClient.multicall({contracts:encodedPayload}),sleep(maxTimeout).then(function(){return Promise.reject(new Error("multicall timeout"))})]).catch(function(_viemError){var e=new Error(_viemError.message.slice(0,150));console.groupCollapsed("multicall error:");console.error(e);console.groupEnd();var rpcUrl=getFallbackRpcUrl(_this.chainId);if(!rpcUrl){throw e}var fallbackClient=Multicall.getViemClient(_this.chainId,rpcUrl);console.log("using multicall fallback for chain ".concat(_this.chainId));return fallbackClient.multicall({contracts:encodedPayload}).catch(function(_viemError){var e=new Error(_viemError.message.slice(0,150));console.groupCollapsed("multicall fallback error:");console.error(e);console.groupEnd();throw e})})];case 1:response=_a.sent();multicallResult={success:true,errors:{},data:{}};response.forEach(function(_a,i){var result=_a.result,status=_a.status,error=_a.error;var _b=originalKeys[i],contractKey=_b.contractKey,callKey=_b.callKey;if(status==="success"){var values=void 0;if(Array.isArray(result)||typeof result==="object"){values=result}else{values=[result]}multicallResult.data[contractKey]=multicallResult.data[contractKey]||{};multicallResult.data[contractKey][callKey]={contractKey:contractKey,callKey:callKey,returnValues:values,success:true}}else{multicallResult.success=false;multicallResult.errors[contractKey]=multicallResult.errors[contractKey]||{};multicallResult.errors[contractKey][callKey]=error;multicallResult.data[contractKey]=multicallResult.data[contractKey]||{};multicallResult.data[contractKey][callKey]={contractKey:contractKey,callKey:callKey,returnValues:[],success:false,error:error}}});return[2,multicallResult]}})})};Multicall.instances={};return Multicall}();var __awaiter$o=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$o=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};function runMulticall(chainId,name,library,params){return __awaiter$o(this,void 0,void 0,function(){var request,response,result,e_1;return __generator$o(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);request=typeof params.request==="function"?params.request(chainId,params.key):params.request;if(Object.keys(request).length===0){throw new Error("Multicall request is empty")}return[4,executeMulticall(chainId,library,request)];case 1:response=_a.sent();if(!response){throw new Error("Multicall response is empty")}result=typeof params.parseResponse==="function"?params.parseResponse(response,chainId,params.key):response;return[2,{data:result,isLoading:false}];case 2:e_1=_a.sent();console.error("Multicall request failed: ".concat(name),e_1);throw e_1;case 3:return[2]}})})}var __extends$4=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign$6=undefined&&undefined.__assign||function(){__assign$6=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$6.apply(this,arguments)};var __awaiter$n=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$n=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$5=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$4=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var __values$3=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var AddressZero=AddressZero$2;var DEFAULT_COUNT=1e3;var ALLOWED_SLIPPAGE=30;var GMXHelper=function(_super){__extends$4(GMXHelper,_super);function GMXHelper(){var _this=_super.apply(this,__spreadArray$4([],__read$5(arguments),false))||this;_this.getMarketsData=function(){return __awaiter$n(_this,void 0,void 0,function(){var chainId,getMarkets,res,marketData,data;return __generator$n(this,function(_a){switch(_a.label){case 0:chainId=String(this.chainId);if(chainId==="1"){console.error("unsupported chain");return[2]}if(chainId==="5"){console.error("unsupported chain");return[2]}getMarkets=new GetMarkets({chainId:String(this.chainId),initParams:{methodParams:{dataStore:getContract({chainId:this.chainId,name:"DataStore"}),start:"0",end:"100"}}});if(!this.signer){console.error("signer not set");return[2]}return[4,getMarkets.getOutputValues({provider:{provider:this.library,signer:this.signer}})];case 1:res=_a.sent();try{if(typeof res!=="object")return[2];if(!("marketData_tuple[]"in res))return[2];marketData=res["marketData_tuple[]"];data=marketData.reduce(function(acc,marketValues){try{var indexToken=getToken(Number(chainId),convertTokenAddress(Number(chainId),marketValues.indexToken,"native"));var longToken=getToken(Number(chainId),marketValues.longToken);var shortToken=getToken(Number(chainId),marketValues.shortToken);var isSameCollaterals=marketValues.longToken===marketValues.shortToken;var isSpotOnly=marketValues.indexToken===AddressZero$2;var name_1=getMarketFullName({indexToken:indexToken,longToken:longToken,shortToken:shortToken,isSpotOnly:isSpotOnly});acc.marketsData[marketValues.marketToken]={marketTokenAddress:marketValues.marketToken,indexTokenAddress:marketValues.indexToken,longTokenAddress:marketValues.longToken,shortTokenAddress:marketValues.shortToken,isSameCollaterals:isSameCollaterals,isSpotOnly:isSpotOnly,name:name_1,data:""};acc.marketsAddresses.push(marketValues.marketToken)}catch(e){console.warn("unsupported market",e)}return acc},{marketsData:{},marketsAddresses:[]});return[2,data]}catch(e){console.error(e);return[2,undefined]}return[2]}})})};_this.getTokenBalances=function(){return __awaiter$n(_this,void 0,void 0,function(){var data;var _this=this;return __generator$n(this,function(_a){switch(_a.label){case 0:return[4,runMulticall(this.chainId,"useTokenBalances",this.library,{key:this.account?[this.account]:null,request:function(){return getV2Tokens(_this.chainId).reduce(function(acc,token){if(token.isSynthetic)return acc;var address=token.value;if(address===NATIVE_TOKEN_ADDRESS){acc[address]={contractAddress:getContract({chainId:_this.chainId,name:"Multicall"}),abi:MulticallAbi,calls:{balance:{methodName:"getEthBalance",params:[_this.account]}}}}else{acc[address]={contractAddress:address,abi:erc20Abi,calls:{balance:{methodName:"balanceOf",params:[_this.account]}}}}return acc},{})},parseResponse:function(res){return Object.keys(res.data).reduce(function(tokenBalances,tokenAddress){tokenBalances[tokenAddress]=BigNumber$1.from(res.data[tokenAddress].balance.returnValues[0]);return tokenBalances},{})}})];case 1:data=_a.sent().data;return[2,{balancesData:data}]}})})};_this.getTokenRecentPrices=function(){return __awaiter$n(_this,void 0,void 0,function(){var res;var _this=this;return __generator$n(this,function(_a){switch(_a.label){case 0:return[4,fetchTickers(this.chainId).then(function(priceItems){var result={};priceItems.forEach(function(priceItem){var tokenConfig;try{tokenConfig=getToken(_this.chainId,priceItem.tokenAddress)}catch(e){return}result[tokenConfig.value]={minPrice:parseOraclePrice(priceItem.minPrice,tokenConfig.decimals,priceItem.oracleDecimals),maxPrice:parseOraclePrice(priceItem.maxPrice,tokenConfig.decimals,priceItem.oracleDecimals)}});var stableTokens=getV2Tokens(_this.chainId).filter(function(token){return token.isStable});stableTokens.forEach(function(token){if(!result[token.value]){result[token.value]={minPrice:expandDecimals(1,30),maxPrice:expandDecimals(1,30)}}});var wrappedToken=getWrappedToken(_this.chainId);if(result[wrappedToken.value]&&!result[NATIVE_TOKEN_ADDRESS]){result[NATIVE_TOKEN_ADDRESS]=result[wrappedToken.value]}return{pricesData:result,updatedAt:Date.now()}})];case 1:res=_a.sent();return[2,res]}})})};_this.getTokensData=function(){return __awaiter$n(_this,void 0,void 0,function(){var tokenConfigs,balancesData,_a,pricesData,pricesUpdatedAt,tokenAddresses;return __generator$n(this,function(_b){switch(_b.label){case 0:tokenConfigs=getTokensMap(this.chainId);return[4,this.getTokenBalances()];case 1:balancesData=_b.sent().balancesData;return[4,this.getTokenRecentPrices()];case 2:_a=_b.sent(),pricesData=_a.pricesData,pricesUpdatedAt=_a.updatedAt;tokenAddresses=getV2Tokens(this.chainId).map(function(token){return token.value});if(!pricesData){return[2,{tokensData:undefined,pricesUpdatedAt:undefined}]}return[2,{tokensData:tokenAddresses.reduce(function(acc,tokenAddress){var prices=pricesData[tokenAddress];var balance=balancesData===null||balancesData===void 0?void 0:balancesData[tokenAddress];var tokenConfig=tokenConfigs[tokenAddress];if(!prices){return acc}acc[tokenAddress]=__assign$6(__assign$6({},tokenConfig),{prices:prices,balance:balance});return acc},{}),pricesUpdatedAt:pricesUpdatedAt}]}})})};_this.getMarketsInfo=function(){return __awaiter$n(_this,void 0,void 0,function(){var account,markets,marketsData,marketsAddresses,dataStoreAddress,_a,tokensData,pricesUpdatedAt,res;var _this=this;return __generator$n(this,function(_b){switch(_b.label){case 0:account=this.account;return[4,this.getMarketsData()];case 1:markets=_b.sent();if(!markets)return[2];marketsData=markets.marketsData,marketsAddresses=markets.marketsAddresses;dataStoreAddress=getContract({chainId:this.chainId,name:"DataStore"});return[4,this.getTokensData()];case 2:_a=_b.sent(),tokensData=_a.tokensData,pricesUpdatedAt=_a.pricesUpdatedAt;return[4,runMulticall(this.chainId,"useMarketsInfo",this.library,{key:marketsAddresses.length>0&&[marketsAddresses.join("-"),dataStoreAddress,account,pricesUpdatedAt],refreshInterval:null,clearUnusedKeys:true,keepPreviousData:true,request:function(){return marketsAddresses.reduce(function(request,marketAddress){var _a;var market=getByKey(marketsData,marketAddress);var marketPrices=getContractMarketPrices(tokensData,market);if(!marketPrices){return request}var marketProps={marketToken:market.marketTokenAddress,indexToken:market.indexTokenAddress,longToken:market.longTokenAddress,shortToken:market.shortTokenAddress};return Object.assign(request,(_a={},_a["".concat(marketAddress,"-reader")]={contractAddress:getContract({chainId:_this.chainId,name:"SyntheticsReader"}),abi:SyntheticsReaderAbi,calls:{marketInfo:{methodName:"getMarketInfo",params:[dataStoreAddress,marketPrices,marketAddress]},marketTokenPriceMax:{methodName:"getMarketTokenPrice",params:[dataStoreAddress,marketProps,marketPrices.indexTokenPrice,marketPrices.longTokenPrice,marketPrices.shortTokenPrice,MAX_PNL_FACTOR_FOR_TRADERS_KEY,true]},marketTokenPriceMin:{methodName:"getMarketTokenPrice",params:[dataStoreAddress,marketProps,marketPrices.indexTokenPrice,marketPrices.longTokenPrice,marketPrices.shortTokenPrice,MAX_PNL_FACTOR_FOR_TRADERS_KEY,false]}}},_a["".concat(marketAddress,"-dataStore")]={contractAddress:dataStoreAddress,abi:DataStoreAbi,calls:{isDisabled:{methodName:"getBool",params:[isMarketDisabledKey(marketAddress)]},longPoolAmount:{methodName:"getUint",params:[poolAmountKey(marketAddress,market.longTokenAddress)]},shortPoolAmount:{methodName:"getUint",params:[poolAmountKey(marketAddress,market.shortTokenAddress)]},maxLongPoolAmount:{methodName:"getUint",params:[maxPoolAmountKey(marketAddress,market.longTokenAddress)]},maxShortPoolAmount:{methodName:"getUint",params:[maxPoolAmountKey(marketAddress,market.shortTokenAddress)]},longPoolAmountAdjustment:{methodName:"getUint",params:[poolAmountAdjustmentKey(marketAddress,market.longTokenAddress)]},shortPoolAmountAdjustment:{methodName:"getUint",params:[poolAmountAdjustmentKey(marketAddress,market.longTokenAddress)]},reserveFactorLong:{methodName:"getUint",params:[reserveFactorKey(marketAddress,true)]},reserveFactorShort:{methodName:"getUint",params:[reserveFactorKey(marketAddress,true)]},openInterestReserveFactorLong:{methodName:"getUint",params:[openInterestReserveFactorKey(marketAddress,true)]},openInterestReserveFactorShort:{methodName:"getUint",params:[openInterestReserveFactorKey(marketAddress,false)]},positionImpactPoolAmount:{methodName:"getUint",params:[positionImpactPoolAmountKey(marketAddress)]},swapImpactPoolAmountLong:{methodName:"getUint",params:[swapImpactPoolAmountKey(marketAddress,market.longTokenAddress)]},swapImpactPoolAmountShort:{methodName:"getUint",params:[swapImpactPoolAmountKey(marketAddress,market.shortTokenAddress)]},borrowingFactorLong:{methodName:"getUint",params:[borrowingFactorKey(marketAddress,true)]},borrowingFactorShort:{methodName:"getUint",params:[borrowingFactorKey(marketAddress,false)]},borrowingExponentFactorLong:{methodName:"getUint",params:[borrowingExponentFactorKey(marketAddress,true)]},borrowingExponentFactorShort:{methodName:"getUint",params:[borrowingExponentFactorKey(marketAddress,false)]},fundingFactor:{methodName:"getUint",params:[fundingFactorKey(marketAddress)]},fundingExponentFactor:{methodName:"getUint",params:[fundingExponentFactorKey(marketAddress)]},maxPnlFactorForTradersLong:{methodName:"getUint",params:[maxPnlFactorKey(MAX_PNL_FACTOR_FOR_TRADERS_KEY,marketAddress,true)]},maxPnlFactorForTradersShort:{methodName:"getUint",params:[maxPnlFactorKey(MAX_PNL_FACTOR_FOR_TRADERS_KEY,marketAddress,false)]},claimableFundingAmountLong:account?{methodName:"getUint",params:[claimableFundingAmountKey(marketAddress,market.longTokenAddress,account)]}:undefined,claimableFundingAmountShort:account?{methodName:"getUint",params:[claimableFundingAmountKey(marketAddress,market.shortTokenAddress,account)]}:undefined,positionFeeFactorForPositiveImpact:{methodName:"getUint",params:[positionFeeFactorKey(marketAddress,true)]},positionFeeFactorForNegativeImpact:{methodName:"getUint",params:[positionFeeFactorKey(marketAddress,false)]},positionImpactFactorPositive:{methodName:"getUint",params:[positionImpactFactorKey(marketAddress,true)]},positionImpactFactorNegative:{methodName:"getUint",params:[positionImpactFactorKey(marketAddress,false)]},maxPositionImpactFactorPositive:{methodName:"getUint",params:[maxPositionImpactFactorKey(marketAddress,true)]},maxPositionImpactFactorNegative:{methodName:"getUint",params:[maxPositionImpactFactorKey(marketAddress,false)]},maxPositionImpactFactorForLiquidations:{methodName:"getUint",params:[maxPositionImpactFactorForLiquidationsKey(marketAddress)]},minCollateralFactor:{methodName:"getUint",params:[minCollateralFactorKey(marketAddress)]},minCollateralFactorForOpenInterestLong:{methodName:"getUint",params:[minCollateralFactorForOpenInterest(marketAddress,true)]},minCollateralFactorForOpenInterestShort:{methodName:"getUint",params:[minCollateralFactorForOpenInterest(marketAddress,false)]},positionImpactExponentFactor:{methodName:"getUint",params:[positionImpactExponentFactorKey(marketAddress)]},swapFeeFactorForPositiveImpact:{methodName:"getUint",params:[swapFeeFactorKey(marketAddress,true)]},swapFeeFactorForNegativeImpact:{methodName:"getUint",params:[swapFeeFactorKey(marketAddress,false)]},swapImpactFactorPositive:{methodName:"getUint",params:[swapImpactFactorKey(marketAddress,true)]},swapImpactFactorNegative:{methodName:"getUint",params:[swapImpactFactorKey(marketAddress,false)]},swapImpactExponentFactor:{methodName:"getUint",params:[swapImpactExponentFactorKey(marketAddress)]},longInterestUsingLongToken:{methodName:"getUint",params:[openInterestKey(marketAddress,market.longTokenAddress,true)]},longInterestUsingShortToken:{methodName:"getUint",params:[openInterestKey(marketAddress,market.shortTokenAddress,true)]},shortInterestUsingLongToken:{methodName:"getUint",params:[openInterestKey(marketAddress,market.longTokenAddress,false)]},shortInterestUsingShortToken:{methodName:"getUint",params:[openInterestKey(marketAddress,market.shortTokenAddress,false)]},longInterestInTokensUsingLongToken:{methodName:"getUint",params:[openInterestInTokensKey(marketAddress,market.longTokenAddress,true)]},longInterestInTokensUsingShortToken:{methodName:"getUint",params:[openInterestInTokensKey(marketAddress,market.shortTokenAddress,true)]},shortInterestInTokensUsingLongToken:{methodName:"getUint",params:[openInterestInTokensKey(marketAddress,market.longTokenAddress,false)]},shortInterestInTokensUsingShortToken:{methodName:"getUint",params:[openInterestInTokensKey(marketAddress,market.shortTokenAddress,false)]},virtualMarketId:{methodName:"getBytes32",params:[virtualMarketIdKey(marketAddress)]},virtualLongTokenId:{methodName:"getBytes32",params:[virtualTokenIdKey(market.longTokenAddress)]},virtualShortTokenId:{methodName:"getBytes32",params:[virtualTokenIdKey(market.shortTokenAddress)]}}},_a))},{})},parseResponse:function(res){return marketsAddresses.reduce(function(acc,marketAddress){var _a,_b;var readerErrors=res.errors["".concat(marketAddress,"-reader")];var dataStoreErrors=res.errors["".concat(marketAddress,"-dataStore")];var readerValues=res.data["".concat(marketAddress,"-reader")];var dataStoreValues=res.data["".concat(marketAddress,"-dataStore")];if(!readerValues||!dataStoreValues||readerErrors||dataStoreErrors){return acc}var longInterestUsingLongToken=BigNumber$1.from(dataStoreValues.longInterestUsingLongToken.returnValues[0]);var longInterestUsingShortToken=BigNumber$1.from(dataStoreValues.longInterestUsingShortToken.returnValues[0]);var shortInterestUsingLongToken=BigNumber$1.from(dataStoreValues.shortInterestUsingLongToken.returnValues[0]);var shortInterestUsingShortToken=BigNumber$1.from(dataStoreValues.shortInterestUsingShortToken.returnValues[0]);var longInterestUsd=longInterestUsingLongToken.add(longInterestUsingShortToken);var shortInterestUsd=shortInterestUsingLongToken.add(shortInterestUsingShortToken);var longInterestInTokensUsingLongToken=BigNumber$1.from(dataStoreValues.longInterestInTokensUsingLongToken.returnValues[0]);var longInterestInTokensUsingShortToken=BigNumber$1.from(dataStoreValues.longInterestInTokensUsingShortToken.returnValues[0]);var shortInterestInTokensUsingLongToken=BigNumber$1.from(dataStoreValues.shortInterestInTokensUsingLongToken.returnValues[0]);var shortInterestInTokensUsingShortToken=BigNumber$1.from(dataStoreValues.shortInterestInTokensUsingShortToken.returnValues[0]);var longInterestInTokens=longInterestInTokensUsingLongToken.add(longInterestInTokensUsingShortToken);var shortInterestInTokens=shortInterestInTokensUsingLongToken.add(shortInterestInTokensUsingShortToken);var _c=readerValues.marketInfo.returnValues,nextFunding=_c.nextFunding,virtualInventory=_c.virtualInventory;var _d=__read$5(readerValues.marketTokenPriceMin.returnValues,2);_d[0];var poolValueInfoMin=_d[1];var _e=__read$5(readerValues.marketTokenPriceMax.returnValues,2);_e[0];var poolValueInfoMax=_e[1];var market=getByKey(marketsData,marketAddress);var longToken=getByKey(tokensData,market.longTokenAddress);var shortToken=getByKey(tokensData,market.shortTokenAddress);var indexToken=getByKey(tokensData,convertTokenAddress(_this.chainId,market.indexTokenAddress,"native"));acc[marketAddress]=__assign$6(__assign$6({},market),{isDisabled:dataStoreValues.isDisabled.returnValues[0],longToken:longToken,shortToken:shortToken,indexToken:indexToken,longInterestUsd:longInterestUsd,shortInterestUsd:shortInterestUsd,longInterestInTokens:longInterestInTokens,shortInterestInTokens:shortInterestInTokens,longPoolAmount:BigNumber$1.from(dataStoreValues.longPoolAmount.returnValues[0]),shortPoolAmount:BigNumber$1.from(dataStoreValues.shortPoolAmount.returnValues[0]),maxLongPoolAmount:BigNumber$1.from(dataStoreValues.maxLongPoolAmount.returnValues[0]),maxShortPoolAmount:BigNumber$1.from(dataStoreValues.maxShortPoolAmount.returnValues[0]),longPoolAmountAdjustment:BigNumber$1.from(dataStoreValues.longPoolAmountAdjustment.returnValues[0]),shortPoolAmountAdjustment:BigNumber$1.from(dataStoreValues.shortPoolAmountAdjustment.returnValues[0]),poolValueMin:BigNumber$1.from(poolValueInfoMin.poolValue),poolValueMax:BigNumber$1.from(poolValueInfoMax.poolValue),reserveFactorLong:BigNumber$1.from(dataStoreValues.reserveFactorLong.returnValues[0]),reserveFactorShort:BigNumber$1.from(dataStoreValues.reserveFactorShort.returnValues[0]),openInterestReserveFactorLong:BigNumber$1.from(dataStoreValues.openInterestReserveFactorLong.returnValues[0]),openInterestReserveFactorShort:BigNumber$1.from(dataStoreValues.openInterestReserveFactorShort.returnValues[0]),totalBorrowingFees:BigNumber$1.from(poolValueInfoMax.totalBorrowingFees),positionImpactPoolAmount:BigNumber$1.from(dataStoreValues.positionImpactPoolAmount.returnValues[0]),swapImpactPoolAmountLong:BigNumber$1.from(dataStoreValues.swapImpactPoolAmountLong.returnValues[0]),swapImpactPoolAmountShort:BigNumber$1.from(dataStoreValues.swapImpactPoolAmountShort.returnValues[0]),borrowingFactorLong:BigNumber$1.from(dataStoreValues.borrowingFactorLong.returnValues[0]),borrowingFactorShort:BigNumber$1.from(dataStoreValues.borrowingFactorShort.returnValues[0]),borrowingExponentFactorLong:BigNumber$1.from(dataStoreValues.borrowingExponentFactorLong.returnValues[0]),borrowingExponentFactorShort:BigNumber$1.from(dataStoreValues.borrowingExponentFactorShort.returnValues[0]),fundingFactor:BigNumber$1.from(dataStoreValues.fundingFactor.returnValues[0]),fundingExponentFactor:BigNumber$1.from(dataStoreValues.fundingExponentFactor.returnValues[0]),pnlLongMax:BigNumber$1.from(poolValueInfoMax.longPnl),pnlLongMin:BigNumber$1.from(poolValueInfoMin.longPnl),pnlShortMax:BigNumber$1.from(poolValueInfoMax.shortPnl),pnlShortMin:BigNumber$1.from(poolValueInfoMin.shortPnl),netPnlMax:BigNumber$1.from(poolValueInfoMax.netPnl),netPnlMin:BigNumber$1.from(poolValueInfoMin.netPnl),maxPnlFactorForTradersLong:BigNumber$1.from(dataStoreValues.maxPnlFactorForTradersLong.returnValues[0]),maxPnlFactorForTradersShort:BigNumber$1.from(dataStoreValues.maxPnlFactorForTradersShort.returnValues[0]),minCollateralFactor:BigNumber$1.from(dataStoreValues.minCollateralFactor.returnValues[0]),minCollateralFactorForOpenInterestLong:BigNumber$1.from(dataStoreValues.minCollateralFactorForOpenInterestLong.returnValues[0]),minCollateralFactorForOpenInterestShort:BigNumber$1.from(dataStoreValues.minCollateralFactorForOpenInterestShort.returnValues[0]),claimableFundingAmountLong:dataStoreValues.claimableFundingAmountLong?BigNumber$1.from((_a=dataStoreValues.claimableFundingAmountLong)===null||_a===void 0?void 0:_a.returnValues[0]):undefined,claimableFundingAmountShort:dataStoreValues.claimableFundingAmountShort?BigNumber$1.from((_b=dataStoreValues.claimableFundingAmountShort)===null||_b===void 0?void 0:_b.returnValues[0]):undefined,positionFeeFactorForPositiveImpact:BigNumber$1.from(dataStoreValues.positionFeeFactorForPositiveImpact.returnValues[0]),positionFeeFactorForNegativeImpact:BigNumber$1.from(dataStoreValues.positionFeeFactorForNegativeImpact.returnValues[0]),positionImpactFactorPositive:BigNumber$1.from(dataStoreValues.positionImpactFactorPositive.returnValues[0]),positionImpactFactorNegative:BigNumber$1.from(dataStoreValues.positionImpactFactorNegative.returnValues[0]),maxPositionImpactFactorPositive:BigNumber$1.from(dataStoreValues.maxPositionImpactFactorPositive.returnValues[0]),maxPositionImpactFactorNegative:BigNumber$1.from(dataStoreValues.maxPositionImpactFactorNegative.returnValues[0]),maxPositionImpactFactorForLiquidations:BigNumber$1.from(dataStoreValues.maxPositionImpactFactorForLiquidations.returnValues[0]),positionImpactExponentFactor:BigNumber$1.from(dataStoreValues.positionImpactExponentFactor.returnValues[0]),swapFeeFactorForPositiveImpact:BigNumber$1.from(dataStoreValues.swapFeeFactorForPositiveImpact.returnValues[0]),swapFeeFactorForNegativeImpact:BigNumber$1.from(dataStoreValues.swapFeeFactorForNegativeImpact.returnValues[0]),swapImpactFactorPositive:BigNumber$1.from(dataStoreValues.swapImpactFactorPositive.returnValues[0]),swapImpactFactorNegative:BigNumber$1.from(dataStoreValues.swapImpactFactorNegative.returnValues[0]),swapImpactExponentFactor:BigNumber$1.from(dataStoreValues.swapImpactExponentFactor.returnValues[0]),borrowingFactorPerSecondForLongs:BigNumber$1.from(readerValues.marketInfo.returnValues.borrowingFactorPerSecondForLongs),borrowingFactorPerSecondForShorts:BigNumber$1.from(readerValues.marketInfo.returnValues.borrowingFactorPerSecondForShorts),fundingFactorPerSecond:BigNumber$1.from(nextFunding.fundingFactorPerSecond),longsPayShorts:nextFunding.longsPayShorts,virtualPoolAmountForLongToken:BigNumber$1.from(virtualInventory.virtualPoolAmountForLongToken),virtualPoolAmountForShortToken:BigNumber$1.from(virtualInventory.virtualPoolAmountForShortToken),virtualInventoryForPositions:BigNumber$1.from(virtualInventory.virtualInventoryForPositions),virtualMarketId:dataStoreValues.virtualMarketId.returnValues[0],virtualLongTokenId:dataStoreValues.virtualLongTokenId.returnValues[0],virtualShortTokenId:dataStoreValues.virtualShortTokenId.returnValues[0]});return acc},{})}})];case 3:res=_b.sent();return[2,{marketsInfoData:res.data,tokensData:tokensData,pricesUpdatedAt:pricesUpdatedAt}]}})})};_this.getSwapRoutes=function(p){var e_1,_a;var _b;if(!p.marketsInfoData)return;var fromTokenAddress=p.fromTokenAddress,toTokenAddress=p.toTokenAddress,marketsInfoData=p.marketsInfoData;var chainId=_this.chainId;var wrappedToken=getWrappedToken(chainId);var isWrap=fromTokenAddress===NATIVE_TOKEN_ADDRESS&&toTokenAddress===wrappedToken.value;var isUnwrap=fromTokenAddress===wrappedToken.value&&toTokenAddress===NATIVE_TOKEN_ADDRESS;var isSameToken=fromTokenAddress===toTokenAddress;var wrappedFromAddress=convertTokenAddress(chainId,fromTokenAddress,"wrapped");var wrappedToAddress=convertTokenAddress(chainId,toTokenAddress,"wrapped");var graph=getMarketsGraph(Object.values(marketsInfoData));var estimator=createSwapEstimator(marketsInfoData);var allRoutes=isWrap||isUnwrap||isSameToken?undefined:(_b=findAllPaths(marketsInfoData,graph,wrappedFromAddress,wrappedToAddress))===null||_b===void 0?void 0:_b.sort(function(a,b){return b.liquidity.sub(a.liquidity).gt(0)?1:-1}).slice(0,5);var maxLiquidity=BigNumber$1.from(0);var maxLiquidityPath=undefined;if(!allRoutes||!marketsInfoData||!wrappedFromAddress){return{maxLiquidity:maxLiquidity,maxLiquidityPath:maxLiquidityPath}}try{for(var allRoutes_1=__values$3(allRoutes),allRoutes_1_1=allRoutes_1.next();!allRoutes_1_1.done;allRoutes_1_1=allRoutes_1.next()){var route=allRoutes_1_1.value;var liquidity=getMaxSwapPathLiquidity({marketsInfoData:marketsInfoData,swapPath:route.path,initialCollateralAddress:wrappedFromAddress});if(liquidity.gt(maxLiquidity)){maxLiquidity=liquidity;maxLiquidityPath=route.path}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(allRoutes_1_1&&!allRoutes_1_1.done&&(_a=allRoutes_1.return))_a.call(allRoutes_1)}finally{if(e_1)throw e_1.error}}var findSwapPath=function(usdIn,opts){if(!(allRoutes===null||allRoutes===void 0?void 0:allRoutes.length)||!estimator||!marketsInfoData||!fromTokenAddress){return undefined}var swapPath=undefined;if(opts.byLiquidity){swapPath=allRoutes[0].path}else{swapPath=getBestSwapPath(allRoutes,usdIn,estimator)}if(!swapPath){return undefined}var swapPathStats=getSwapPathStats({marketsInfoData:marketsInfoData,swapPath:swapPath,initialCollateralAddress:fromTokenAddress,wrappedNativeTokenAddress:wrappedToken.value,shouldUnwrapNativeToken:toTokenAddress===NATIVE_TOKEN_ADDRESS,shouldApplyPriceImpact:true,usdIn:usdIn});if(!swapPathStats){return undefined}return swapPathStats};return{maxSwapLiquidity:maxLiquidity,maxLiquiditySwapPath:maxLiquidityPath,findSwapPath:findSwapPath}};_this.getTokenData=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var tokensData;var address=_b.address;return __generator$n(this,function(_c){switch(_c.label){case 0:return[4,this.getTokensData()];case 1:tokensData=_c.sent().tokensData;if(!tokensData)return[2];return[2,tokensData[address]]}})})};_this.getPositions=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var existingPositionsKeysSet,keysAndPrices,positionsData,optimisticPositionsData;var _this=this;var marketsInfoData=_b.marketsInfoData,tokensData=_b.tokensData,pricesUpdatedAt=_b.pricesUpdatedAt;return __generator$n(this,function(_c){switch(_c.label){case 0:return[4,runMulticall(this.chainId,"usePositions-keys",this.library,{key:this.account?[this.account,pricesUpdatedAt]:null,refreshInterval:null,clearUnusedKeys:true,keepPreviousData:true,request:function(){return{dataStore:{contractAddress:getContract({chainId:_this.chainId,name:"DataStore"})||"",abi:DataStoreAbi,calls:{keys:{methodName:"getBytes32ValuesAt",params:[accountPositionListKey(_this.account),0,1e3]}}}}},parseResponse:function(res){return new Set(res.data.dataStore.keys.returnValues)}})];case 1:existingPositionsKeysSet=_c.sent().data;keysAndPrices=getKeysAndPricesParams({marketsInfoData:marketsInfoData,tokensData:tokensData,account:this.account,existingPositionsKeysSet:existingPositionsKeysSet});return[4,runMulticall(this.chainId,"usePositionsData",this.library,{key:keysAndPrices.contractPositionsKeys.length?[keysAndPrices.contractPositionsKeys.join("-"),pricesUpdatedAt]:null,refreshInterval:null,clearUnusedKeys:true,keepPreviousData:true,request:function(){return{reader:{contractAddress:getContract({chainId:_this.chainId,name:"SyntheticsReader"})||"",abi:SyntheticsReaderAbi,calls:{positions:{methodName:"getAccountPositionInfoList",params:[getContract({chainId:_this.chainId,name:"DataStore"}),getContract({chainId:_this.chainId,name:"ReferralStorage"}),keysAndPrices.contractPositionsKeys,keysAndPrices.marketsPrices,AddressZero$2]}}}}},parseResponse:function(res){var positions=res.data.reader.positions.returnValues;return positions.reduce(function(positionsMap,positionInfo,i){var position=positionInfo.position,fees=positionInfo.fees;var addresses=position.addresses,numbers=position.numbers,flags=position.flags,data=position.data;var account=addresses.account,marketAddress=addresses.market,collateralTokenAddress=addresses.collateralToken;if(BigNumber$1.from(numbers.increasedAtBlock).eq(0)){return positionsMap}var positionKey=getPositionKey(account,marketAddress,collateralTokenAddress,flags.isLong);var contractPositionKey=keysAndPrices.contractPositionsKeys[i];positionsMap[positionKey]={key:positionKey,contractKey:contractPositionKey,account:account,marketAddress:marketAddress,collateralTokenAddress:collateralTokenAddress,sizeInUsd:BigNumber$1.from(numbers.sizeInUsd),sizeInTokens:BigNumber$1.from(numbers.sizeInTokens),collateralAmount:BigNumber$1.from(numbers.collateralAmount),increasedAtBlock:BigNumber$1.from(numbers.increasedAtBlock),decreasedAtBlock:BigNumber$1.from(numbers.decreasedAtBlock),isLong:flags.isLong,pendingBorrowingFeesUsd:BigNumber$1.from(fees.borrowing.borrowingFeeUsd),fundingFeeAmount:BigNumber$1.from(fees.funding.fundingFeeAmount),claimableLongTokenAmount:BigNumber$1.from(fees.funding.claimableLongTokenAmount),claimableShortTokenAmount:BigNumber$1.from(fees.funding.claimableShortTokenAmount),data:data};return positionsMap},{})}})];case 2:positionsData=_c.sent().data;optimisticPositionsData=getOptimisticPositions({positionsData:positionsData,allPositionsKeys:keysAndPrices===null||keysAndPrices===void 0?void 0:keysAndPrices.allPositionsKeys});return[2,{positionsData:optimisticPositionsData}]}})})};_this.getIncreaseAmounts=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var toToken,fromToken,market,tradeOptions,swapRoute,values;var marketsInfoData=_b.marketsInfoData,fromTokenAddress=_b.fromTokenAddress,toTokenAddress=_b.toTokenAddress,fromTokenAmount=_b.fromTokenAmount,toTokenAmount=_b.toTokenAmount,collateralInToken=_b.collateralInToken,tradeType=_b.tradeType,tradeMode=_b.tradeMode,marketAddress=_b.marketAddress,tokensData=_b.tokensData;return __generator$n(this,function(_c){switch(_c.label){case 0:if(!toTokenAddress||!fromTokenAddress){return[2,undefined]}return[4,this.getTokenData({address:toTokenAddress})];case 1:toToken=_c.sent();return[4,this.getTokenData({address:fromTokenAddress})];case 2:fromToken=_c.sent();if(!toToken||!fromToken){console.error("token not found");return[2,undefined]}if(!marketsInfoData||!marketAddress)return[2];market=marketsInfoData[marketAddress];tradeOptions=this.getSelectedTradeOption({tradeType:tradeType,tradeMode:tradeMode,marketsInfoData:marketsInfoData,market:market,tokensData:tokensData,fromTokenAddress:fromTokenAddress,toTokenAddress:toTokenAddress,collateralInToken:collateralInToken});swapRoute=this.getSwapRoutes({marketsInfoData:marketsInfoData,fromTokenAddress:fromTokenAddress,toTokenAddress:(tradeOptions===null||tradeOptions===void 0?void 0:tradeOptions.collateralAddress)||toTokenAddress});if(!swapRoute){console.error("swapRoute not found");return[2,undefined]}if(!tradeOptions){console.error("trade error");return[2]}if(!tradeOptions.marketInfo){console.error("marketInfo error");return[2]}if(!tradeOptions.collateralToken){console.error("collateralToken error");return[2]}if(!(swapRoute===null||swapRoute===void 0?void 0:swapRoute.findSwapPath)){console.error("swapRoute error");return[2]}values=getIncreasePositionAmounts({marketInfo:tradeOptions===null||tradeOptions===void 0?void 0:tradeOptions.marketInfo,indexToken:toToken,initialCollateralToken:fromToken,collateralToken:tradeOptions.collateralToken,isLong:tradeOptions.tradeType===TradeType.Long,initialCollateralAmount:BigNumber$1.from(fromTokenAmount),indexTokenAmount:BigNumber$1.from(toTokenAmount),leverage:BigNumber$1.from("15000"),triggerPrice:undefined,position:undefined,findSwapPath:swapRoute.findSwapPath,strategy:"leverageByCollateral",userReferralInfo:undefined});return[2,{marketInfo:tradeOptions===null||tradeOptions===void 0?void 0:tradeOptions.marketInfo,values:values}]}})})};_this.getCloseAmounts=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var _c,minCollateralUsd,minPositionSizeUsd,savedAcceptablePriceImpactBps,values,positionsInfoData,position,collateralToken,marketInfo,indexToken,isLong,pnlToken,markPrice,isTrigger,maxCloseAmount,closeSizeUsd,estimatedCollateralUsd,estimatedCollateralDeltaUsd,profitUsd,profitAmount,positionFeeInfo,estimatedPositionFeeCost,estimatedDiscountCost,borrowFeeCost,fundingFeeCost,swapProfitStats,negativePnlUsd,negativePriceImpactUsd,priceImpactDiffUsd,totalFeesUsd,payedInfo;var closingPositionKey=_b.closingPositionKey,marketsInfoData=_b.marketsInfoData,tokensData=_b.tokensData,pricesUpdatedAt=_b.pricesUpdatedAt;return __generator$n(this,function(_d){switch(_d.label){case 0:return[4,this.getPositionsConstants()];case 1:_c=_d.sent(),minCollateralUsd=_c.minCollateralUsd,minPositionSizeUsd=_c.minPositionSizeUsd;savedAcceptablePriceImpactBps=undefined;values={isFullClose:false,sizeDeltaUsd:BigNumber$1.from(0),sizeDeltaInTokens:BigNumber$1.from(0),collateralDeltaUsd:BigNumber$1.from(0),collateralDeltaAmount:BigNumber$1.from(0),indexPrice:BigNumber$1.from(0),collateralPrice:BigNumber$1.from(0),triggerPrice:BigNumber$1.from(0),acceptablePrice:BigNumber$1.from(0),positionPriceImpactDeltaUsd:BigNumber$1.from(0),priceImpactDiffUsd:BigNumber$1.from(0),acceptablePriceDeltaBps:BigNumber$1.from(0),estimatedPnl:BigNumber$1.from(0),estimatedPnlPercentage:BigNumber$1.from(0),realizedPnl:BigNumber$1.from(0),positionFeeUsd:BigNumber$1.from(0),borrowingFeeUsd:BigNumber$1.from(0),fundingFeeUsd:BigNumber$1.from(0),feeDiscountUsd:BigNumber$1.from(0),swapProfitFeeUsd:BigNumber$1.from(0),payedOutputUsd:BigNumber$1.from(0),payedRemainingCollateralUsd:BigNumber$1.from(0),payedRemainingCollateralAmount:BigNumber$1.from(0),receiveTokenAmount:BigNumber$1.from(0),receiveUsd:BigNumber$1.from(0),triggerOrderType:undefined,triggerThresholdType:undefined,decreaseSwapType:DecreasePositionSwapType.NoSwap};return[4,this.getPositionsInfo({tokensData:tokensData,marketsInfoData:marketsInfoData,pricesUpdatedAt:pricesUpdatedAt})];case 2:positionsInfoData=_d.sent().positionsInfoData;position=getByKey(positionsInfoData,closingPositionKey);if(!position){console.error("position not found");return[2]}collateralToken=position.collateralToken,marketInfo=position.marketInfo,indexToken=position.indexToken,isLong=position.isLong;pnlToken=isLong?marketInfo.longToken:marketInfo.shortToken;values.decreaseSwapType=getIsEquivalentTokens(pnlToken,collateralToken)?DecreasePositionSwapType.NoSwap:DecreasePositionSwapType.SwapPnlTokenToCollateralToken;markPrice=getMarkPrice({prices:indexToken.prices,isIncrease:false,isLong:isLong});isTrigger=false;values.indexPrice=markPrice;values.collateralPrice=collateralToken.prices.minPrice;maxCloseAmount=formatAmountFree(position===null||position===void 0?void 0:position.sizeInUsd,USD_DECIMALS);closeSizeUsd=parseValue(maxCloseAmount||"0",USD_DECIMALS);estimatedCollateralUsd=convertToUsd(position.collateralAmount,collateralToken.decimals,values.collateralPrice);values.sizeDeltaUsd=closeSizeUsd;estimatedCollateralDeltaUsd=BigNumber$1.from(0);values.isFullClose=getIsFullClose({position:position,sizeDeltaUsd:values.sizeDeltaUsd,indexPrice:values.indexPrice,remainingCollateralUsd:estimatedCollateralUsd.sub(estimatedCollateralDeltaUsd),minCollateralUsd:minCollateralUsd||BigNumber$1.from("0"),minPositionSizeUsd:minPositionSizeUsd||BigNumber$1.from("0")});if(values.isFullClose){values.sizeDeltaUsd=position.sizeInUsd;values.sizeDeltaInTokens=position.sizeInTokens}else{if(position.isLong){values.sizeDeltaInTokens=roundUpDivision(position.sizeInTokens.mul(values.sizeDeltaUsd),position.sizeInUsd)}else{values.sizeDeltaInTokens=position.sizeInTokens.mul(values.sizeDeltaUsd).div(position.sizeInUsd)}}values.estimatedPnl=getPositionPnlUsd({marketInfo:marketInfo,sizeInUsd:position.sizeInUsd,sizeInTokens:position.sizeInTokens,markPrice:values.indexPrice,isLong:isLong});values.realizedPnl=values.estimatedPnl.mul(values.sizeDeltaInTokens).div(position.sizeInTokens);values.estimatedPnlPercentage=!estimatedCollateralUsd.eq(0)?getBasisPoints(values.estimatedPnl,estimatedCollateralUsd):BigNumber$1.from(0);applyAcceptablePrice({marketInfo:marketInfo,isLong:isLong,isTrigger:isTrigger,savedAcceptablePriceImpactBps:savedAcceptablePriceImpactBps,values:values});profitUsd=BigNumber$1.from(0);if(values.realizedPnl.gt(0)){profitUsd=profitUsd.add(values.realizedPnl)}if(values.positionPriceImpactDeltaUsd.gt(0)){profitUsd=profitUsd.add(values.positionPriceImpactDeltaUsd)}profitAmount=convertToTokenAmount(profitUsd,collateralToken.decimals,values.collateralPrice);positionFeeInfo=getPositionFee(marketInfo,values.sizeDeltaUsd,values.positionPriceImpactDeltaUsd.gt(0),undefined);estimatedPositionFeeCost=estimateCollateralCost(positionFeeInfo.positionFeeUsd,collateralToken,values.collateralPrice);estimatedDiscountCost=estimateCollateralCost(positionFeeInfo.discountUsd,collateralToken,values.collateralPrice);values.positionFeeUsd=estimatedPositionFeeCost.usd;values.feeDiscountUsd=estimatedDiscountCost.usd;borrowFeeCost=estimateCollateralCost(position.pendingBorrowingFeesUsd,collateralToken,values.collateralPrice);values.borrowingFeeUsd=borrowFeeCost.usd;fundingFeeCost=estimateCollateralCost(position.pendingFundingFeesUsd,collateralToken,values.collateralPrice);values.fundingFeeUsd=fundingFeeCost.usd;if(profitUsd.gt(0)&&values.decreaseSwapType===DecreasePositionSwapType.SwapPnlTokenToCollateralToken){swapProfitStats=getSwapStats({marketInfo:marketInfo,tokenInAddress:pnlToken.value,tokenOutAddress:collateralToken.value,usdIn:profitUsd,shouldApplyPriceImpact:true});values.swapProfitFeeUsd=swapProfitStats.swapFeeUsd.add(swapProfitStats.priceImpactDeltaUsd.mul(-1))}else{values.swapProfitFeeUsd=BigNumber$1.from(0)}negativePnlUsd=values.realizedPnl.lt(0)?values.realizedPnl.abs():BigNumber$1.from(0);negativePriceImpactUsd=values.positionPriceImpactDeltaUsd.lt(0)?values.positionPriceImpactDeltaUsd.abs():BigNumber$1.from(0);priceImpactDiffUsd=values.priceImpactDiffUsd.gt(0)?values.priceImpactDiffUsd:BigNumber$1.from(0);totalFeesUsd=values.positionFeeUsd.add(values.borrowingFeeUsd).add(values.fundingFeeUsd).add(values.swapProfitFeeUsd).add(negativePnlUsd).add(negativePriceImpactUsd).add(priceImpactDiffUsd);payedInfo=payForCollateralCost({initialCostUsd:totalFeesUsd,collateralToken:collateralToken,collateralPrice:values.collateralPrice,outputAmount:profitAmount,remainingCollateralAmount:position.collateralAmount});values.payedOutputUsd=convertToUsd(payedInfo.paidOutputAmount,collateralToken.decimals,values.collateralPrice);values.payedRemainingCollateralAmount=payedInfo.paidRemainingCollateralAmount;values.payedRemainingCollateralUsd=convertToUsd(payedInfo.paidRemainingCollateralAmount,collateralToken.decimals,values.collateralPrice);values.receiveTokenAmount=payedInfo.outputAmount;if(values.isFullClose){values.collateralDeltaUsd=estimatedCollateralUsd;values.collateralDeltaAmount=position.collateralAmount;values.receiveTokenAmount=payedInfo.outputAmount.add(payedInfo.remainingCollateralAmount)}else{values.collateralDeltaUsd=BigNumber$1.from(0);values.collateralDeltaAmount=BigNumber$1.from(0);values.receiveTokenAmount=payedInfo.outputAmount}values.receiveUsd=convertToUsd(values.receiveTokenAmount,collateralToken.decimals,values.collateralPrice);return[2,{marketInfo:marketInfo,values:values,position:position}]}})})};_this.getSelectedPosition=function(_a){var marketAddress=_a.marketAddress,collateralAddress=_a.collateralAddress,isLong=_a.isLong,positionsInfoData=_a.positionsInfoData;var positionKey=getPositionKey(_this.account,marketAddress,collateralAddress,isLong);var selectedPosition=getByKey(positionsInfoData,positionKey);return selectedPosition};_this.getIncreasePositionParams=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var marketsInfoData,_c,tokens,_d,tokensData,pricesUpdatedAt,increasePositionAmounts,values,marketInfo,isNativePayment,initialCollateralTokenAddress,tradeFlags,fees,wntCollateralAmount,totalWntAmount,shouldApplySlippage,acceptablePrice,orderVaultAddress,multicall,exchangeRouter,encodedPayload;var _e,_f,_g,_h;var fromTokenAddress=_b.fromTokenAddress,toTokenAddress=_b.toTokenAddress,fromTokenAmount=_b.fromTokenAmount,toTokenAmount=_b.toTokenAmount,collateralInToken=_b.collateralInToken,tradeType=_b.tradeType,tradeMode=_b.tradeMode,marketAddress=_b.marketAddress,referralCode=_b.referralCode;return __generator$n(this,function(_j){switch(_j.label){case 0:_c=this.marketsInfo;if(_c)return[3,2];return[4,this.getMarketsInfo()];case 1:_c=(_e=_j.sent())===null||_e===void 0?void 0:_e.marketsInfoData;_j.label=2;case 2:marketsInfoData=_c;_d=this.tokensData;if(_d)return[3,4];return[4,this.getTokensData()];case 3:_d=_j.sent();_j.label=4;case 4:tokens=_d;if(!tokens){return[2]}tokensData=tokens.tokensData,pricesUpdatedAt=tokens.pricesUpdatedAt;return[4,this.getIncreaseAmounts({marketsInfoData:marketsInfoData,fromTokenAddress:fromTokenAddress,toTokenAddress:toTokenAddress,collateralInToken:collateralInToken,fromTokenAmount:fromTokenAmount,toTokenAmount:toTokenAmount,tradeType:tradeType,tradeMode:tradeMode,marketAddress:marketAddress,tokensData:tokensData})];case 5:increasePositionAmounts=_j.sent();if(!increasePositionAmounts){console.error("get increasePositionAmounts error");return[2]}values=increasePositionAmounts.values,marketInfo=increasePositionAmounts.marketInfo;isNativePayment=fromTokenAddress===NATIVE_TOKEN_ADDRESS;initialCollateralTokenAddress=convertTokenAddress(this.chainId,fromTokenAddress,"wrapped");tradeFlags=getTradeFlags(tradeType,tradeMode);return[4,this.getIncreaseAmountsFees({increaseAmounts:values,marketsInfoData:marketsInfoData,tokensData:tokensData,pricesUpdatedAt:pricesUpdatedAt})];case 6:fees=_j.sent();wntCollateralAmount=isNativePayment?values.initialCollateralAmount:BigNumber$1.from(0);totalWntAmount=wntCollateralAmount.add(((_f=fees===null||fees===void 0?void 0:fees.executionFee)===null||_f===void 0?void 0:_f.feeTokenAmount.toString())||"0");shouldApplySlippage=isMarketOrderType(OrderType.MarketIncrease);acceptablePrice=shouldApplySlippage?applySlippageToPrice(ALLOWED_SLIPPAGE,values.acceptablePrice,true,tradeFlags.isLong):values.acceptablePrice;orderVaultAddress=getContract({chainId:this.chainId,name:"OrderVault"});multicall=[{method:"sendWnt",params:[orderVaultAddress,totalWntAmount]},!isNativePayment?{method:"sendTokens",params:[initialCollateralTokenAddress,orderVaultAddress,values.initialCollateralAmount]}:undefined,{method:"createOrder",params:[{addresses:{receiver:this.account,initialCollateralToken:initialCollateralTokenAddress,callbackContract:AddressZero,market:marketAddress,swapPath:(_g=values.swapPathStats)===null||_g===void 0?void 0:_g.swapPath,uiFeeReceiver:AddressZero},numbers:{sizeDeltaUsd:values.sizeDeltaUsd,initialCollateralDeltaAmount:BigNumber$1.from(0),triggerPrice:convertToContractPrice(values.triggerPrice||BigNumber$1.from(0),marketInfo.indexToken.decimals).toString(),acceptablePrice:convertToContractPrice(acceptablePrice,marketInfo.indexToken.decimals),executionFee:((_h=fees===null||fees===void 0?void 0:fees.executionFee)===null||_h===void 0?void 0:_h.feeTokenAmount)||"0",callbackGasLimit:BigNumber$1.from(0),minOutputAmount:BigNumber$1.from(0)},orderType:tradeFlags.isLimit?OrderType.LimitIncrease:OrderType.MarketIncrease,decreasePositionSwapType:DecreasePositionSwapType.NoSwap,isLong:tradeFlags.isLong,shouldUnwrapNativeToken:isNativePayment,referralCode:referralCode||HashZero}]}];exchangeRouter=new Contract(getContract({chainId:this.chainId,name:"ExchangeRouter"})||"",exchangeRouterAbi,this.library.getSigner());encodedPayload=multicall.filter(Boolean).map(function(call){return exchangeRouter.interface.encodeFunctionData(call.method,call.params)});return[2,{encodedPayload:encodedPayload,totalWntAmount:totalWntAmount}]}})})};_this.getClosePositionParams=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var marketsInfoData,_c,tokens,_d,tokensData,pricesUpdatedAt,closePositionAmounts,values,position,isNativeReceive,swapRoutes,findSwapPath,receiveToken,swapAmounts,shouldSwap,fees,totalWntAmount,shouldApplySlippage,orderVaultAddress,initialCollateralTokenAddress,acceptablePrice,minOutputUsd,minOutputAmount,multicall,exchangeRouter,encodedPayload;var _e,_f,_g,_h;var closingPositionKey=_b.closingPositionKey,receiveTokenAddress=_b.receiveTokenAddress;return __generator$n(this,function(_j){switch(_j.label){case 0:_c=this.marketsInfo;if(_c)return[3,2];return[4,this.getMarketsInfo()];case 1:_c=(_e=_j.sent())===null||_e===void 0?void 0:_e.marketsInfoData;_j.label=2;case 2:marketsInfoData=_c;_d=this.tokensData;if(_d)return[3,4];return[4,this.getTokensData()];case 3:_d=_j.sent();_j.label=4;case 4:tokens=_d;if(!tokens){return[2]}tokensData=tokens.tokensData,pricesUpdatedAt=tokens.pricesUpdatedAt;return[4,this.getCloseAmounts({closingPositionKey:closingPositionKey,marketsInfoData:marketsInfoData,tokensData:tokensData,pricesUpdatedAt:pricesUpdatedAt})];case 5:closePositionAmounts=_j.sent();if(!closePositionAmounts){console.error("get closePositionAmounts error");return[2]}values=closePositionAmounts.values,position=closePositionAmounts.position;isNativeReceive=receiveTokenAddress===NATIVE_TOKEN_ADDRESS;swapRoutes=this.getSwapRoutes({marketsInfoData:marketsInfoData,fromTokenAddress:position===null||position===void 0?void 0:position.collateralTokenAddress,toTokenAddress:receiveTokenAddress});if(!swapRoutes)return[2];findSwapPath=swapRoutes.findSwapPath;return[4,this.getTokenData({address:receiveTokenAddress})];case 6:receiveToken=_j.sent();if(!receiveToken){console.error("Get receive token error");return[2]}shouldSwap=position&&receiveToken&&!getIsEquivalentTokens(position.collateralToken,receiveToken);if(!shouldSwap||!receiveToken||!(values===null||values===void 0?void 0:values.receiveTokenAmount)||!position){swapAmounts=undefined}else{swapAmounts=getSwapAmountsByFromValue({tokenIn:position.collateralToken,tokenOut:receiveToken,amountIn:values.receiveTokenAmount,isLimit:false,findSwapPath:findSwapPath})}return[4,this.getDecreaseAmountsFees({decreaseAmounts:values,swapAmounts:swapAmounts,marketsInfoData:marketsInfoData,tokensData:tokensData,pricesUpdatedAt:pricesUpdatedAt,receiveTokenAddress:receiveTokenAddress,position:position})];case 7:fees=_j.sent();values.receiveTokenAmount;totalWntAmount=((_f=fees===null||fees===void 0?void 0:fees.executionFee)===null||_f===void 0?void 0:_f.feeTokenAmount.toString())||"0";shouldApplySlippage=isMarketOrderType(OrderType.MarketIncrease);orderVaultAddress=getContract({chainId:this.chainId,name:"OrderVault"});initialCollateralTokenAddress=convertTokenAddress(this.chainId,position.collateralTokenAddress,"wrapped");acceptablePrice=shouldApplySlippage?applySlippageToPrice(ALLOWED_SLIPPAGE,values.acceptablePrice,false,position.isLong):values.acceptablePrice;minOutputUsd=BigNumber$1.from(0);minOutputAmount=shouldApplySlippage?applySlippageToMinOut(ALLOWED_SLIPPAGE,minOutputUsd):minOutputUsd;multicall=[{method:"sendWnt",params:[orderVaultAddress,totalWntAmount.toString()]},{method:"createOrder",params:[{addresses:{receiver:this.account,initialCollateralToken:initialCollateralTokenAddress,callbackContract:AddressZero,market:position.marketAddress,swapPath:((_g=swapAmounts===null||swapAmounts===void 0?void 0:swapAmounts.swapPathStats)===null||_g===void 0?void 0:_g.swapPath)||[],uiFeeReceiver:AddressZero$2},numbers:{sizeDeltaUsd:values.sizeDeltaUsd.toString(),initialCollateralDeltaAmount:(values.collateralDeltaAmount||BigNumber$1.from(0)).toString(),triggerPrice:convertToContractPrice(values.triggerPrice||BigNumber$1.from(0),position.indexToken.decimals).toString(),acceptablePrice:convertToContractPrice(acceptablePrice,position.indexToken.decimals).toString(),executionFee:(_h=fees===null||fees===void 0?void 0:fees.executionFee)===null||_h===void 0?void 0:_h.feeTokenAmount.toString(),callbackGasLimit:BigNumber$1.from(0).toString(),minOutputAmount:minOutputAmount.toString()},orderType:OrderType.MarketDecrease,decreasePositionSwapType:values.decreaseSwapType,isLong:position.isLong,shouldUnwrapNativeToken:isNativeReceive,referralCode:HashZero}]}];exchangeRouter=new Contract(getContract({chainId:this.chainId,name:"ExchangeRouter"})||"",exchangeRouterAbi,this.library.getSigner());encodedPayload=multicall.filter(Boolean).map(function(call){return exchangeRouter.interface.encodeFunctionData(call.method,call.params)});return[2,{encodedPayload:encodedPayload,totalWntAmount:totalWntAmount}]}})})};_this.getSelectedTradeOption=function(_a){var marketsInfoData=_a.marketsInfoData,tradeType=_a.tradeType,tradeMode=_a.tradeMode,tokensData=_a.tokensData,fromTokenAddress=_a.fromTokenAddress,toTokenAddress=_a.toTokenAddress,collateralInToken=_a.collateralInToken,market=_a.market;if(!marketsInfoData){console.error("missing market info");return}if(!market){console.error("missing market info");return}var availableTokensOptions=getAvailabeTokenData({chainId:_this.chainId,marketsInfoData:marketsInfoData,tokensData:tokensData});var avaialbleTradeModes=function(){var _a;if(!tradeType){return[]}return(_a={},_a[TradeType.Long]=[TradeMode.Market,TradeMode.Limit,TradeMode.Trigger],_a[TradeType.Short]=[TradeMode.Market,TradeMode.Limit,TradeMode.Trigger],_a[TradeType.Swap]=[TradeMode.Market,TradeMode.Limit],_a)[tradeType]};var tradeFlags=getTradeFlags(tradeType,tradeMode);var isSwap=tradeFlags.isSwap;tradeFlags.isLong;tradeFlags.isPosition;var fromToken=getByKey(tokensData,fromTokenAddress);var toToken=getByKey(tokensData,toTokenAddress);var isWrapOrUnwrap=Boolean(isSwap&&fromToken&&toToken&&(getIsWrap(fromToken,toToken)||getIsUnwrap(fromToken,toToken)));var marketAddress=market.marketTokenAddress;var collateralAddress=collateralInToken||toTokenAddress?market[tradeFlags.isLong?"longTokenAddress":"shortTokenAddress"]:undefined;var marketInfo=marketsInfoData[marketAddress];var collateralToken=getByKey(tokensData,collateralAddress);return{tradeType:tradeType,tradeMode:tradeMode,tradeFlags:tradeFlags,isWrapOrUnwrap:isWrapOrUnwrap,fromTokenAddress:fromTokenAddress,fromToken:fromToken,toTokenAddress:toTokenAddress,toToken:toToken,marketAddress:marketAddress,marketInfo:marketInfo,collateralAddress:collateralAddress,collateralToken:collateralToken,availableTokensOptions:availableTokensOptions,avaialbleTradeModes:avaialbleTradeModes()}};_this.getIncreaseAmountsFees=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var gasLimits,estimatedGas,gasPrice,positionsInfoData;var _c,_d,_e,_f,_g;var increaseAmounts=_b.increaseAmounts,tokensData=_b.tokensData,marketsInfoData=_b.marketsInfoData,pricesUpdatedAt=_b.pricesUpdatedAt;return __generator$n(this,function(_h){switch(_h.label){case 0:if(!tokensData)return[2];return[4,this.getGasLimits()];case 1:gasLimits=_h.sent().gasLimits;if(!gasLimits)return[2];estimatedGas=estimateExecuteIncreaseOrderGasLimit(gasLimits,{swapPath:((_c=increaseAmounts.swapPathStats)===null||_c===void 0?void 0:_c.swapPath)||[]});return[4,this.getGasPrice()];case 2:gasPrice=_h.sent();if(!gasPrice){return[2]}return[4,this.getPositionsInfo({tokensData:tokensData,marketsInfoData:marketsInfoData,pricesUpdatedAt:pricesUpdatedAt})];case 3:positionsInfoData=_h.sent().positionsInfoData;return[2,{fees:getTradeFees({isIncrease:true,initialCollateralUsd:increaseAmounts.initialCollateralUsd,sizeDeltaUsd:increaseAmounts.sizeDeltaUsd,swapSteps:((_d=increaseAmounts.swapPathStats)===null||_d===void 0?void 0:_d.swapSteps)||[],positionFeeUsd:increaseAmounts.positionFeeUsd,swapPriceImpactDeltaUsd:((_e=increaseAmounts.swapPathStats)===null||_e===void 0?void 0:_e.totalSwapPriceImpactDeltaUsd)||BigNumber$1.from(0),positionPriceImpactDeltaUsd:increaseAmounts.positionPriceImpactDeltaUsd,borrowingFeeUsd:((_f=positionsInfoData===null||positionsInfoData===void 0?void 0:positionsInfoData.pendingBorrowingFeesUsd)===null||_f===void 0?void 0:_f.sizeInUsd)||BigNumber$1.from(0),fundingFeeUsd:((_g=positionsInfoData===null||positionsInfoData===void 0?void 0:positionsInfoData.pendingFundingFeesUsd)===null||_g===void 0?void 0:_g.sizeInUsd)||BigNumber$1.from(0),feeDiscountUsd:increaseAmounts.feeDiscountUsd,swapProfitFeeUsd:BigNumber$1.from(0)}),executionFee:getExecutionFee(this.chainId,gasLimits,tokensData,estimatedGas,gasPrice),feesType:"increase"}]}})})};_this.getDecreaseAmountsFees=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var gasLimits,gasPrice,estimatedGas;var _c,_d,_e;var decreaseAmounts=_b.decreaseAmounts,position=_b.position;_b.receiveTokenAddress;var swapAmounts=_b.swapAmounts,tokensData=_b.tokensData;_b.marketsInfoData;_b.pricesUpdatedAt;return __generator$n(this,function(_f){switch(_f.label){case 0:if(!tokensData)return[2];return[4,this.getGasLimits()];case 1:gasLimits=_f.sent().gasLimits;return[4,this.getGasPrice()];case 2:gasPrice=_f.sent();if(!gasPrice){return[2]}if(!gasLimits)return[2];estimatedGas=estimateExecuteDecreaseOrderGasLimit(gasLimits,{swapPath:((_c=swapAmounts===null||swapAmounts===void 0?void 0:swapAmounts.swapPathStats)===null||_c===void 0?void 0:_c.swapPath)||[]});return[2,{fees:getTradeFees({isIncrease:false,initialCollateralUsd:position.collateralUsd,sizeDeltaUsd:decreaseAmounts.sizeDeltaUsd,swapSteps:((_d=swapAmounts===null||swapAmounts===void 0?void 0:swapAmounts.swapPathStats)===null||_d===void 0?void 0:_d.swapSteps)||[],positionFeeUsd:decreaseAmounts.positionFeeUsd,swapPriceImpactDeltaUsd:((_e=swapAmounts===null||swapAmounts===void 0?void 0:swapAmounts.swapPathStats)===null||_e===void 0?void 0:_e.totalSwapPriceImpactDeltaUsd)||BigNumber$1.from(0),positionPriceImpactDeltaUsd:decreaseAmounts.positionPriceImpactDeltaUsd,borrowingFeeUsd:decreaseAmounts.borrowingFeeUsd,fundingFeeUsd:decreaseAmounts.fundingFeeUsd,feeDiscountUsd:decreaseAmounts.feeDiscountUsd,swapProfitFeeUsd:decreaseAmounts.swapProfitFeeUsd}),executionFee:getExecutionFee(this.chainId,gasLimits,tokensData,estimatedGas,gasPrice)}]}})})};_this.getPositionsInfo=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var positionsData,minCollateralUsd,positionsInfoData;var marketsInfoData=_b.marketsInfoData,tokensData=_b.tokensData,pricesUpdatedAt=_b.pricesUpdatedAt;return __generator$n(this,function(_c){switch(_c.label){case 0:return[4,this.getPositions({marketsInfoData:marketsInfoData,tokensData:tokensData,pricesUpdatedAt:pricesUpdatedAt})];case 1:positionsData=_c.sent().positionsData;return[4,this.getPositionsConstants()];case 2:minCollateralUsd=_c.sent().minCollateralUsd;if(!marketsInfoData||!tokensData||!positionsData||!minCollateralUsd){return[2,{isLoading:true}]}positionsInfoData=Object.keys(positionsData).reduce(function(acc,positionKey){var position=getByKey(positionsData,positionKey);var marketInfo=getByKey(marketsInfoData,position===null||position===void 0?void 0:position.marketAddress);var indexToken=marketInfo===null||marketInfo===void 0?void 0:marketInfo.indexToken;var pnlToken=position.isLong?marketInfo===null||marketInfo===void 0?void 0:marketInfo.longToken:marketInfo===null||marketInfo===void 0?void 0:marketInfo.shortToken;var collateralToken=getByKey(tokensData,position.collateralTokenAddress);if(!marketInfo||!indexToken||!pnlToken||!collateralToken){return acc}var markPrice=getMarkPrice({prices:indexToken.prices,isLong:position.isLong,isIncrease:false});var collateralMinPrice=collateralToken.prices.minPrice;var entryPrice=getEntryPrice({sizeInTokens:position.sizeInTokens,sizeInUsd:position.sizeInUsd,indexToken:indexToken});var pendingFundingFeesUsd=convertToUsd(position.fundingFeeAmount,collateralToken.decimals,collateralToken.prices.minPrice);var pendingClaimableFundingFeesLongUsd=convertToUsd(position.claimableLongTokenAmount,marketInfo.longToken.decimals,marketInfo.longToken.prices.minPrice);var pendingClaimableFundingFeesShortUsd=convertToUsd(position.claimableShortTokenAmount,marketInfo.shortToken.decimals,marketInfo.shortToken.prices.minPrice);var pendingClaimableFundingFeesUsd=pendingClaimableFundingFeesLongUsd===null||pendingClaimableFundingFeesLongUsd===void 0?void 0:pendingClaimableFundingFeesLongUsd.add(pendingClaimableFundingFeesShortUsd);var totalPendingFeesUsd=getPositionPendingFeesUsd({pendingBorrowingFeesUsd:position.pendingBorrowingFeesUsd,pendingFundingFeesUsd:pendingFundingFeesUsd});var closingPriceImpactDeltaUsd=getPriceImpactForPosition(marketInfo,position.sizeInUsd.mul(-1),position.isLong,{fallbackToZero:true});var positionFeeInfo=getPositionFee(marketInfo,position.sizeInUsd,closingPriceImpactDeltaUsd.gt(0),undefined);var closingFeeUsd=positionFeeInfo.positionFeeUsd;var collateralUsd=convertToUsd(position.collateralAmount,collateralToken.decimals,collateralMinPrice);var remainingCollateralUsd=collateralUsd.sub(totalPendingFeesUsd);var remainingCollateralAmount=convertToTokenAmount(remainingCollateralUsd,collateralToken.decimals,collateralMinPrice);var pnl=getPositionPnlUsd({marketInfo:marketInfo,sizeInUsd:position.sizeInUsd,sizeInTokens:position.sizeInTokens,markPrice:markPrice,isLong:position.isLong});var pnlPercentage=collateralUsd&&!collateralUsd.eq(0)?getBasisPoints(pnl,collateralUsd):BigNumber$1.from(0);var netValue=getPositionNetValue({collateralUsd:collateralUsd,pnl:pnl,pendingBorrowingFeesUsd:position.pendingBorrowingFeesUsd,pendingFundingFeesUsd:pendingFundingFeesUsd,closingFeeUsd:closingFeeUsd});var pnlAfterFees=pnl.sub(totalPendingFeesUsd).sub(closingFeeUsd);var pnlAfterFeesPercentage=!collateralUsd.eq(0)?getBasisPoints(pnlAfterFees,collateralUsd.add(closingFeeUsd)):BigNumber$1.from(0);var leverage=getLeverage({sizeInUsd:position.sizeInUsd,collateralUsd:collateralUsd,pnl:undefined,pendingBorrowingFeesUsd:position.pendingBorrowingFeesUsd,pendingFundingFeesUsd:pendingFundingFeesUsd});var hasLowCollateral=(leverage===null||leverage===void 0?void 0:leverage.gt(MAX_ALLOWED_LEVERAGE))||false;var liquidationPrice=getLiquidationPrice({marketInfo:marketInfo,collateralToken:collateralToken,sizeInUsd:position.sizeInUsd,sizeInTokens:position.sizeInTokens,collateralUsd:collateralUsd,collateralAmount:position.collateralAmount,userReferralInfo:undefined,minCollateralUsd:minCollateralUsd,pendingBorrowingFeesUsd:position.pendingBorrowingFeesUsd,pendingFundingFeesUsd:pendingFundingFeesUsd,isLong:position.isLong});acc[positionKey]=__assign$6(__assign$6({},position),{marketInfo:marketInfo,indexToken:indexToken,collateralToken:collateralToken,pnlToken:pnlToken,markPrice:markPrice,entryPrice:entryPrice,liquidationPrice:liquidationPrice,collateralUsd:collateralUsd,remainingCollateralUsd:remainingCollateralUsd,remainingCollateralAmount:remainingCollateralAmount,hasLowCollateral:hasLowCollateral,leverage:leverage,pnl:pnl,pnlPercentage:pnlPercentage,pnlAfterFees:pnlAfterFees,pnlAfterFeesPercentage:pnlAfterFeesPercentage,netValue:netValue,closingFeeUsd:closingFeeUsd,pendingFundingFeesUsd:pendingFundingFeesUsd,pendingClaimableFundingFeesUsd:pendingClaimableFundingFeesUsd});return acc},{});return[2,{positionsInfoData:positionsInfoData,isLoading:false}]}})})};_this.getGasLimits=function(){return __awaiter$n(_this,void 0,void 0,function(){var data;var _this=this;return __generator$n(this,function(_a){switch(_a.label){case 0:return[4,runMulticall(this.chainId,"useGasLimitsConfig",this.library,{key:[],refreshInterval:6e4,request:function(){return{dataStore:{contractAddress:getContract({chainId:_this.chainId,name:"DataStore"})||"",abi:DataStoreAbi,calls:{depositSingleToken:{methodName:"getUint",params:[depositGasLimitKey(true)]},depositMultiToken:{methodName:"getUint",params:[depositGasLimitKey(false)]},withdrawalMultiToken:{methodName:"getUint",params:[withdrawalGasLimitKey()]},singleSwap:{methodName:"getUint",params:[singleSwapGasLimitKey()]},swapOrder:{methodName:"getUint",params:[swapOrderGasLimitKey()]},increaseOrder:{methodName:"getUint",params:[increaseOrderGasLimitKey()]},decreaseOrder:{methodName:"getUint",params:[decreaseOrderGasLimitKey()]},estimatedFeeBaseGasLimit:{methodName:"getUint",params:[ESTIMATED_GAS_FEE_BASE_AMOUNT]},estimatedFeeMultiplierFactor:{methodName:"getUint",params:[ESTIMATED_GAS_FEE_MULTIPLIER_FACTOR]}}}}},parseResponse:function(res){var results=res.data.dataStore;return{depositSingleToken:BigNumber$1.from(results.depositSingleToken.returnValues[0]),depositMultiToken:BigNumber$1.from(results.depositMultiToken.returnValues[0]),withdrawalMultiToken:BigNumber$1.from(results.withdrawalMultiToken.returnValues[0]),singleSwap:BigNumber$1.from(results.singleSwap.returnValues[0]),swapOrder:BigNumber$1.from(results.swapOrder.returnValues[0]),increaseOrder:BigNumber$1.from(results.increaseOrder.returnValues[0]),decreaseOrder:BigNumber$1.from(results.decreaseOrder.returnValues[0]),estimatedFeeBaseGasLimit:BigNumber$1.from(results.estimatedFeeBaseGasLimit.returnValues[0]),estimatedFeeMultiplierFactor:BigNumber$1.from(results.estimatedFeeMultiplierFactor.returnValues[0])}}})];case 1:data=_a.sent().data;return[2,{gasLimits:data}]}})})};_this.getPositionsConstants=function(){return __awaiter$n(_this,void 0,void 0,function(){var data;return __generator$n(this,function(_a){switch(_a.label){case 0:return[4,runMulticall(this.chainId,"usePositionsConstants",this.library,{key:[],refreshInterval:6e4,request:{dataStore:{contractAddress:getContract({chainId:this.chainId,name:"DataStore"})||"",abi:DataStoreAbi,calls:{minCollateralUsd:{methodName:"getUint",params:[MIN_COLLATERAL_USD_KEY]},minPositionSizeUsd:{methodName:"getUint",params:[MIN_POSITION_SIZE_USD_KEY]}}}},parseResponse:function(res){return{minCollateralUsd:BigNumber$1.from(res.data.dataStore.minCollateralUsd.returnValues[0]),minPositionSizeUsd:BigNumber$1.from(res.data.dataStore.minPositionSizeUsd.returnValues[0])}}})];case 1:data=_a.sent().data;return[2,data||{}]}})})};_this.getGasPrice=function(){return __awaiter$n(_this,void 0,void 0,function(){var provider,executionFeeBufferBps,gasPrice,buffer,e_2;return __generator$n(this,function(_a){switch(_a.label){case 0:provider=this.library;executionFeeBufferBps="1000";_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,provider.getGasPrice()];case 2:gasPrice=_a.sent();if(executionFeeBufferBps){buffer=gasPrice.mul(executionFeeBufferBps).div(BASIS_POINTS_DIVISOR);gasPrice=gasPrice.add(buffer)}return[2,gasPrice];case 3:e_2=_a.sent();console.error(e_2);return[2];case 4:return[2]}})})};_this.getOrdersInfo=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var ordersData,wrappedToken,ordersInfoData;var account=_b.account,marketsInfoData=_b.marketsInfoData,tokensData=_b.tokensData;return __generator$n(this,function(_c){switch(_c.label){case 0:return[4,this.getOrders({account:account})];case 1:ordersData=_c.sent().ordersData;wrappedToken=getWrappedToken(this.chainId);if(!marketsInfoData||!ordersData||!tokensData){return[2,{isLoading:true}]}ordersInfoData=Object.keys(ordersData).filter(function(orderKey){return isVisibleOrder(ordersData[orderKey].orderType)}).reduce(function(acc,orderKey){var order=getByKey(ordersData,orderKey);var orderInfo=getOrderInfo(marketsInfoData,tokensData,wrappedToken,order);if(!orderInfo){console.warn("OrderInfo parsing error",JSON.stringify(order));return acc}acc[orderKey]=orderInfo;return acc},{});return[2,{ordersInfoData:ordersInfoData,isLoading:false}]}})})};_this.getOrders=function(_a){return __awaiter$n(_this,[_a],void 0,function(_b){var data;var _this=this;var account=_b.account;return __generator$n(this,function(_c){switch(_c.label){case 0:return[4,runMulticall(this.chainId,"useOrdersData",this.library,{key:account?[account]:null,request:function(){return{dataStore:{contractAddress:getContract({chainId:_this.chainId,name:"DataStore"})||"",abi:DataStoreAbi,calls:{count:{methodName:"getBytes32Count",params:[accountOrderListKey(account)]},keys:{methodName:"getBytes32ValuesAt",params:[accountOrderListKey(account),0,DEFAULT_COUNT]}}},reader:{contractAddress:getContract({chainId:_this.chainId,name:"SyntheticsReader"})||"",abi:SyntheticsReaderAbi,calls:{orders:{methodName:"getAccountOrders",params:[getContract({chainId:_this.chainId,name:"DataStore"}),account,0,DEFAULT_COUNT]}}}}},parseResponse:function(res){var count=Number(res.data.dataStore.count.returnValues[0]);var orderKeys=res.data.dataStore.keys.returnValues;var orders=res.data.reader.orders.returnValues;return{count:count,ordersData:orders.reduce(function(acc,order,i){var key=orderKeys[i];var data=order.data;acc[key]={key:key,account:order.addresses.account,receiver:order.addresses.receiver,callbackContract:order.addresses.callbackContract,marketAddress:order.addresses.market,initialCollateralTokenAddress:order.addresses.initialCollateralToken,swapPath:order.addresses.swapPath,sizeDeltaUsd:BigNumber$1.from(order.numbers.sizeDeltaUsd),initialCollateralDeltaAmount:BigNumber$1.from(order.numbers.initialCollateralDeltaAmount),contractTriggerPrice:BigNumber$1.from(order.numbers.triggerPrice),contractAcceptablePrice:BigNumber$1.from(order.numbers.acceptablePrice),executionFee:BigNumber$1.from(order.numbers.executionFee),callbackGasLimit:BigNumber$1.from(order.numbers.callbackGasLimit),minOutputAmount:BigNumber$1.from(order.numbers.minOutputAmount),updatedAtBlock:BigNumber$1.from(order.numbers.updatedAtBlock),isLong:order.flags.isLong,shouldUnwrapNativeToken:order.flags.shouldUnwrapNativeToken,isFrozen:order.flags.isFrozen,orderType:order.numbers.orderType,decreasePositionSwapType:order.numbers.decreasePositionSwapType,data:data};return acc},{})}}})];case 1:data=_c.sent().data;return[2,{ordersData:data===null||data===void 0?void 0:data.ordersData}]}})})};return _this}return GMXHelper}(Config);var __awaiter$m=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$m=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var gmxHelper$1=new GMXHelper({chainId:"42161"});var ClosePositionMulticall=createPlugin$1({protocol:"GMX",type:"ACTION",method:"multicall",name:"closePositionMulticall",supportedContracts:exchangeRouterContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),value:new FctValue({readonly:true}),receiveToken:new FctAddress({destination:"erc20",mode:"INPUT",options:TOKENS[Number(chainId)].filter(function(token){return!token.isSynthetic})}),position:new FctString({mode:"INPUT"}),methodParams:{data:new FctBytesList({readonly:true})}},output:{results:new FctBytesList({})}}},setValuesAsync:function(_a){return __awaiter$m(void 0,[_a],void 0,function(_b){var tokensData,marketsInfo,positonsInfo;var chainId=_b.chainId,account=_b.account,input=_b.input,provider=_b.provider;return __generator$m(this,function(_c){switch(_c.label){case 0:gmxHelper$1.setLibrary({chainId:chainId,provider:provider,account:account});return[4,gmxHelper$1.getTokensData()];case 1:tokensData=_c.sent();return[4,gmxHelper$1.getMarketsInfo()];case 2:marketsInfo=_c.sent();if(tokensData.tokensData&&tokensData.pricesUpdatedAt){gmxHelper$1.tokensData=tokensData}gmxHelper$1.marketsInfo=marketsInfo===null||marketsInfo===void 0?void 0:marketsInfo.marketsInfoData;return[4,gmxHelper$1.getPositionsInfo({marketsInfoData:marketsInfo===null||marketsInfo===void 0?void 0:marketsInfo.marketsInfoData,tokensData:tokensData.tokensData,pricesUpdatedAt:tokensData.pricesUpdatedAt})];case 3:positonsInfo=_c.sent();if(!(positonsInfo===null||positonsInfo===void 0?void 0:positonsInfo.positionsInfoData))return[2];if(input)input.position.options=Object.keys(positonsInfo.positionsInfoData).map(function(key){var _a=positonsInfo.positionsInfoData[key],marketInfo=_a.marketInfo,indexToken=_a.indexToken,entryPrice=_a.entryPrice,collateralToken=_a.collateralToken,liquidationPrice=_a.liquidationPrice,leverage=_a.leverage,closingFeeUsd=_a.closingFeeUsd;var shortToken=marketInfo.shortToken,longToken=marketInfo.longToken;return{value:key,marketAddress:marketInfo.marketTokenAddress,logoURI:indexToken.logoURI,name:"".concat(indexToken.symbol," / USD"),indexToken:indexToken.symbol,longToken:longToken.symbol,shortToken:shortToken.symbol,collateralToken:collateralToken.symbol,entryPrice:entryPrice===null||entryPrice===void 0?void 0:entryPrice.toString(),liquidationPrice:liquidationPrice===null||liquidationPrice===void 0?void 0:liquidationPrice.toString(),leverage:leverage===null||leverage===void 0?void 0:leverage.toString(),closingFeeUsd:closingFeeUsd===null||closingFeeUsd===void 0?void 0:closingFeeUsd.toString()}});return[2]}})})},calculateValuesOnUserInput:function(_a){var chainId=_a.chainId,input=_a.input,account=_a.account,provider=_a.provider;if(gmxHelper$1.chainId!==Number(chainId)||gmxHelper$1.account!==account){gmxHelper$1.setLibrary({chainId:chainId,provider:provider,account:account})}var helper=gmxHelper$1;var getClosePositionParams=function(){return __awaiter$m(void 0,void 0,void 0,function(){var closingPositionKey,receiveTokenAddress,closeAmountsParams;return __generator$m(this,function(_a){switch(_a.label){case 0:closingPositionKey=input.position.value;receiveTokenAddress=input.receiveToken.value;if(!closingPositionKey)return[2];if(!receiveTokenAddress)return[2];if(typeof closingPositionKey!=="string"){console.error("position should be string value");return[2]}if(typeof receiveTokenAddress!=="string"){console.error("receiveToken should be string value");return[2]}return[4,helper.getClosePositionParams({closingPositionKey:closingPositionKey,receiveTokenAddress:receiveTokenAddress})];case 1:closeAmountsParams=_a.sent();if(!closeAmountsParams){return[2,{params:{value:undefined,methodParams:{data:undefined}},error:"get close amount params error"}]}return[2,{params:{value:closeAmountsParams.totalWntAmount,methodParams:{data:closeAmountsParams.encodedPayload}},error:undefined}]}})})};return{get:getClosePositionParams,depParamKeys:["receiveToken","position"]}}});var __awaiter$l=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$l=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var gmxHelper=new GMXHelper({chainId:"42161"});var IncreasePositionMulticall=createPlugin$1({protocol:"GMX",type:"ACTION",method:"multicall",name:"increasePositionMulticall",supportedContracts:exchangeRouterContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),value:new FctValue({readonly:true}),market:new FctAddress({mode:"INPUT"}),payToken:new FctAddress({destination:"erc20",mode:"INPUT",options:TOKENS[Number(chainId)].filter(function(token){return!token.isSynthetic})}),payAmount:new FctValue({mode:"INPUT"}),getToken:new FctAddress({destination:"erc20",mode:"INPUT",options:TOKENS[Number(chainId)],readonly:true}),getAmount:new FctValue({mode:"INPUT"}),collateralIn:new FctAddress({mode:"INPUT"}),tradeType:new FctString({mode:"INPUT",options:[{value:TradeType.Long,name:"Long"},{value:TradeType.Short,name:"Short"}]}),methodParams:{data:new FctBytesList({readonly:true})}},output:{results:new FctBytesList({})}}},setValuesAsync:function(_a){return __awaiter$l(void 0,[_a],void 0,function(_b){var tokensData,marketsInfo,allMarkets,bestMarkets_1;var chainId=_b.chainId,account=_b.account,input=_b.input,provider=_b.provider;return __generator$l(this,function(_c){switch(_c.label){case 0:gmxHelper.setLibrary({chainId:chainId,provider:provider,account:account});return[4,gmxHelper.getTokensData()];case 1:tokensData=_c.sent();return[4,gmxHelper.getMarketsInfo()];case 2:marketsInfo=_c.sent();if(tokensData.tokensData&&tokensData.pricesUpdatedAt){gmxHelper.tokensData=tokensData}gmxHelper.marketsInfo=marketsInfo===null||marketsInfo===void 0?void 0:marketsInfo.marketsInfoData;if(!(marketsInfo===null||marketsInfo===void 0?void 0:marketsInfo.marketsInfoData))return[2];if(input){allMarkets=Object.keys(marketsInfo.marketsInfoData).filter(function(key){var _a,_b;return!((_a=marketsInfo.marketsInfoData[key])===null||_a===void 0?void 0:_a.isDisabled)&&!((_b=marketsInfo.marketsInfoData[key])===null||_b===void 0?void 0:_b.isSpotOnly)});bestMarkets_1=[];allMarkets.forEach(function(key){var _a=marketsInfo.marketsInfoData[key],indexToken=_a.indexToken,shortToken=_a.shortToken,longToken=_a.longToken,marketTokenAddress=_a.marketTokenAddress;bestMarkets_1.push({value:key,logoURI:indexToken.logoURI,name:"".concat(indexToken.symbol," / USD, Pool: ").concat(longToken.symbol,"-").concat(shortToken.symbol),marketAddress:marketTokenAddress,indexToken:indexToken.symbol,longToken:longToken.symbol,shortToken:shortToken.symbol})});input.market.options=bestMarkets_1}return[2]}})})},calculateValuesOnUserInput:function(_a){var chainId=_a.chainId,input=_a.input,account=_a.account,provider=_a.provider;if(gmxHelper.chainId!==Number(chainId)||gmxHelper.account!==account){gmxHelper.setLibrary({chainId:chainId,provider:provider,account:account})}var getIncreasePositionParams=function(){return __awaiter$l(void 0,void 0,void 0,function(){var payToken,market,payAmount,tradeType,collateralIn,marketsInfo,marketData,getToken,params,tradeTypeValue,increasePositionParams;return __generator$l(this,function(_a){switch(_a.label){case 0:payToken=input.payToken,market=input.market,payAmount=input.payAmount,tradeType=input.tradeType,collateralIn=input.collateralIn;if(!market.value)return[2];if(typeof market.value!=="string")return[2];if(!!gmxHelper.marketsInfo)return[3,2];return[4,gmxHelper.getMarketsInfo()];case 1:marketsInfo=_a.sent();gmxHelper.marketsInfo=marketsInfo===null||marketsInfo===void 0?void 0:marketsInfo.marketsInfoData;_a.label=2;case 2:marketData=gmxHelper.marketsInfo[market.value];getToken=marketData.indexTokenAddress;params={params:{getToken:getToken},error:undefined};collateralIn.options=[marketData.longToken,marketData.shortToken];if(!input.collateralIn.value||![marketData.longToken.value,marketData.shortToken.value].includes(input.collateralIn.value)){collateralIn.value=marketData.longToken.value}if(!payToken.value)return[2,params];if(!getToken)return[2,params];if(!payAmount.value)return[2,params];if(!tradeType.value)return[2,params];if(typeof collateralIn.value!=="string"||typeof payToken.value!=="string"||typeof payAmount.value!=="string"||typeof tradeType.value!=="string"){console.error("wrong param type");return[2,params]}tradeTypeValue=tradeType.value;return[4,gmxHelper.getIncreasePositionParams({fromTokenAddress:payToken.value,toTokenAddress:getToken,fromTokenAmount:payAmount.value,toTokenAmount:"0",tradeType:tradeTypeValue,tradeMode:TradeMode.Market,marketAddress:market.value,collateralInToken:collateralIn.value||marketData.longToken.value})];case 3:increasePositionParams=_a.sent();if(!increasePositionParams){return[2,{params:{value:undefined,getToken:undefined,methodParams:{data:undefined}},error:"get increase amount params error"}]}return[2,{params:{value:increasePositionParams.totalWntAmount.toString(),getToken:params.params.getToken,methodParams:{data:increasePositionParams.encodedPayload}},error:undefined}]}})})};return{get:getIncreasePositionParams,depParamKeys:["payToken","payAmount","getToken","market","tradeType","collateralIn"]}}});var actions$b={ClosePositionMulticall:ClosePositionMulticall,IncreasePositionMulticall:IncreasePositionMulticall};var getters$a={};var GMX={actions:actions$b,getters:getters$a};var __awaiter$k=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$k=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Erc20AirdropCSV=createPlugin$1({protocol:"KIROBO_MULTICALL_CSV",type:"LIBRARY",toEns:"@lib:multicall",method:"erc20Airdrop",name:"erc20AirdropCSV",supportedContracts:kiroboMulticallContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{token:new FctAddress({options:getSupportedTokens({chainId:chainId})}),from:new FctAddress({}),amount:new FctValue({}),recipients:new FctAddressList({})}},output:{}}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var methodParams=params.methodParams;if(!vaultAddress)return[];var address=methodParams.from.value;if(vaultAddress&&vaultAddress.toLowerCase()===address.toLowerCase())return[];var tokenRecipients=methodParams.recipients.value;var tokenAmount=methodParams.amount.value;if(!tokenAmount)return[];if(!tokenRecipients)return[];if(!("length"in tokenRecipients))return[];var amountToSend=BigNumber$1.from(tokenAmount).mul(tokenRecipients.length);if(!amountToSend||!amountToSend.toString()||amountToSend.lte("0"))return[];return[{to:methodParams.token.value,from:methodParams.from.value,params:{spender:vaultAddress,amount:amountToSend.toString()},method:"approve",protocol:"ERC20"}]},beforeSimulate:function(_a){return __awaiter$k(void 0,[_a],void 0,function(_b){var methodParams,tokenRecipients,tokenAmount,amountToSend,contractAddress,tokenAddress,contract;var _c;var input=_b.input,provider=_b.provider,chainId=_b.chainId;return __generator$k(this,function(_d){switch(_d.label){case 0:methodParams=input.methodParams;tokenRecipients=methodParams.recipients.value;tokenAmount=methodParams.amount.value;if(!tokenAmount)return[2];if(!tokenRecipients)return[2];if(!("length"in tokenRecipients))return[2];amountToSend=BigNumber$1.from(tokenAmount).mul(tokenRecipients.length);contractAddress=kiroboMulticallSimulateContracts[chainId];tokenAddress=methodParams.token.value;if(!tokenAddress)return[2];contract=new Contract(tokenAddress,erc20Abi,provider===null||provider===void 0?void 0:provider.signer);return[4,(_c=provider===null||provider===void 0?void 0:provider.signer)===null||_c===void 0?void 0:_c.sendTransaction({to:contractAddress,value:"1"+"0".repeat(3)})];case 1:_d.sent();return[4,contract["approve"](contractAddress,amountToSend.toString(),{})];case 2:_d.sent();return[2]}})})},estimateGasOnParams:function(input,method,chainId){var recipients=input.methodParams.recipients;if(!recipients.value||!recipients.value.length){return"10000"}var gas=BigNumber$1.from(32e3);var everyNextCall=BigNumber$1.from(27e3);if(recipients.value.length>1){gas=gas.add(everyNextCall.mul(recipients.value.length-1))}if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var Erc20ApprovalsCSV=createPlugin$1({protocol:"KIROBO_MULTICALL_CSV",type:"LIBRARY",toEns:"@lib:multicall",method:"erc20Approvals",name:"erc20ApprovalsCSV",supportedContracts:kiroboMulticallContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{"approvals_tuple[]":new FctTupleArray({params:{token:new FctAddressList({options:getSupportedTokens({chainId:chainId})}),spender:new FctAddressList({}),amount:new FctValueList({})}})}},output:{}}},estimateGasOnParams:function(params,method,chainId){var approvals_tuple=params.methodParams["approvals_tuple[]"];if(!approvals_tuple.value||!Array.isArray(approvals_tuple.value)){return"10000"}var gas=BigNumber$1.from(approvals_tuple.value.length).mul(34e3);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var __awaiter$j=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$j=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Erc20MonoTransfersCSV=createPlugin$1({protocol:"KIROBO_MULTICALL_CSV",type:"LIBRARY",toEns:"@lib:multicall",method:"erc20MonoTransfers",name:"erc20MonoTransfersCSV",supportedContracts:kiroboMulticallContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{token:new FctAddress({options:getSupportedTokens({chainId:chainId})}),from:new FctAddress({}),"transfers_tuple[]":new FctTupleArray({params:{to:new FctAddressList({}),amount:new FctValueList({})}})}},output:{}}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){var _a;var _b=params.methodParams,from=_b.from,token=_b.token;if(!vaultAddress)return[];var address=from.value;if(vaultAddress&&vaultAddress.toLowerCase()===address.toLowerCase())return[];var tokenValues=(_a=params.methodParams["transfers_tuple[]"].params.amount)===null||_a===void 0?void 0:_a.value;if(!tokenValues)return[];if(!("length"in tokenValues))return[];var amountToSend=BigNumber$1.from("0");tokenValues.forEach(function(amount){amountToSend=amountToSend.add(amount)});if(!amountToSend||!amountToSend.toString()||amountToSend.lte("0"))return[];return[{to:token.value,from:from.value,params:{spender:vaultAddress,amount:amountToSend.toString()},method:"approve",protocol:"ERC20"}]},beforeSimulate:function(_a){return __awaiter$j(void 0,[_a],void 0,function(_b){var methodParams,tokenValues,amountToSend,contractAddress,tokenAddress,contract;var _c,_d;var input=_b.input,provider=_b.provider,chainId=_b.chainId;return __generator$j(this,function(_e){switch(_e.label){case 0:methodParams=input.methodParams;tokenValues=(_c=methodParams["transfers_tuple[]"].params.amount)===null||_c===void 0?void 0:_c.value;if(!tokenValues)return[2];if(!("length"in tokenValues))return[2];amountToSend=BigNumber$1.from("0");tokenValues.forEach(function(amount){amountToSend=amountToSend.add(amount)});contractAddress=kiroboMulticallSimulateContracts[chainId];return[4,(_d=provider===null||provider===void 0?void 0:provider.signer)===null||_d===void 0?void 0:_d.sendTransaction({to:contractAddress,value:"1"+"0".repeat(3)})];case 1:_e.sent();tokenAddress=methodParams.token.value;if(!tokenAddress)return[2];contract=new Contract(tokenAddress,erc20Abi,provider===null||provider===void 0?void 0:provider.signer);return[4,contract["approve"](contractAddress,amountToSend.toString(),{})];case 2:_e.sent();return[2]}})})},estimateGasOnParams:function(params,method,chainId){var transfers=params.methodParams["transfers_tuple[]"];if(!transfers.value||!Array.isArray(transfers.value)){return"10000"}var gas=BigNumber$1.from(35e3);if(transfers.value.length>1){gas=gas.add(BigNumber$1.from(transfers.value.length-1).mul(BigNumber$1.from(28e3)))}if(chainId==="42161"||chainId==="421613"){gas=gas.mul(BigNumber$1.from(13))}return gas.toString()}});var __awaiter$i=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$i=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Erc20TransfersCSV=createPlugin$1({protocol:"KIROBO_MULTICALL_CSV",type:"LIBRARY",toEns:"@lib:multicall",method:"erc20Transfers",name:"erc20TransfersCSV",supportedContracts:kiroboMulticallContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{"transfers_tuple[]":new FctTupleArray({params:{name:new FctCustomArray({virtual:true,required:false}),token:new FctAddressList({options:getSupportedTokens({chainId:chainId})}),from:new FctAddressList({}),to:new FctAddressList({}),amount:new FctValueList({}),reason:new FctCustomArray({virtual:true,required:false})}})}},output:{}}},requiredApprovals:function(params,_chainId,_walletAddress,vaultAddress){params.to;var methodParams=params.methodParams;if(!vaultAddress)return[];var value=methodParams["transfers_tuple[]"].value;var tokensToApprove={};value===null||value===void 0?void 0:value.forEach(function(nestedParam){var fromParam=nestedParam.find(function(param){return param.name==="from"});var tokenParam=nestedParam.find(function(param){return param.name==="token"});var amountParam=nestedParam.find(function(param){return param.name==="amount"});if(!(fromParam===null||fromParam===void 0?void 0:fromParam.value))return;if(!tokenParam)return;if(vaultAddress&&vaultAddress.toLowerCase()===fromParam.value.toLowerCase())return;if(!tokensToApprove[tokenParam.value]){tokensToApprove[tokenParam.value]={amount:BigNumber$1.from((amountParam===null||amountParam===void 0?void 0:amountParam.value)||"0"),from:fromParam===null||fromParam===void 0?void 0:fromParam.value};return}tokensToApprove[tokenParam.value].amount=tokensToApprove[tokenParam.value].amount.add((amountParam===null||amountParam===void 0?void 0:amountParam.value)||"0");return});return Object.keys(tokensToApprove).map(function(tokenToApproveAddress){var token=tokensToApprove[tokenToApproveAddress];return{to:tokenToApproveAddress,from:token.from,params:{spender:vaultAddress,amount:token.amount.toString()},method:"approve",protocol:"ERC20"}})},beforeSimulate:function(_a){return __awaiter$i(void 0,[_a],void 0,function(_b){var methodParams,contractAddress,value,tokensToSend,multiApproveParams;var _c;var input=_b.input,provider=_b.provider,chainId=_b.chainId;return __generator$i(this,function(_d){switch(_d.label){case 0:methodParams=input.methodParams;contractAddress=kiroboMulticallSimulateContracts[chainId];return[4,(_c=provider===null||provider===void 0?void 0:provider.signer)===null||_c===void 0?void 0:_c.sendTransaction({to:contractAddress,value:"1"+"0".repeat(3)})];case 1:_d.sent();value=methodParams["transfers_tuple[]"].value;tokensToSend={};value===null||value===void 0?void 0:value.forEach(function(nestedParam){var tokenParam=nestedParam.find(function(param){return param.name==="token"});var amountParam=nestedParam.find(function(param){return param.name==="amount"});if(!tokenParam)return;if(!tokensToSend[tokenParam.value]){return tokensToSend[tokenParam.value]=BigNumber$1.from((amountParam===null||amountParam===void 0?void 0:amountParam.value)||"0")}return tokensToSend[tokenParam.value]=tokensToSend[tokenParam.value].add((amountParam===null||amountParam===void 0?void 0:amountParam.value)||"0")});return[4,Promise.all(Object.keys(tokensToSend).map(function(key){return __awaiter$i(void 0,void 0,void 0,function(){var tokenContract;return __generator$i(this,function(_a){switch(_a.label){case 0:tokenContract=new Contract(key,erc20Abi,provider===null||provider===void 0?void 0:provider.signer);console.log({token:key,anount:tokensToSend[key].toString()});return[4,tokenContract["approve"](contractAddress,tokensToSend[key].toString(),{})];case 1:_a.sent();return[2]}})})}))];case 2:_d.sent();multiApproveParams=[];multiApproveParams.push(value===null||value===void 0?void 0:value.map(function(nestedParam){return nestedParam.map(function(p){if(p.name==="token")return p.value;if(p.name==="to")return contractAddress;if(p.name==="amount")return p.value;return}).filter(Boolean)}));return[2]}})})},estimateGasOnParams:function(params,method,chainId){var transfers=params.methodParams["transfers_tuple[]"];if(!transfers.value||!Array.isArray(transfers.value)){return"10000"}var gas=BigNumber$1.from(transfers.value.length).mul(12e4);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var TrasnfersCSV=createPlugin$1({protocol:"KIROBO_MULTICALL_CSV",type:"LIBRARY",toEns:"@lib:multicall",method:"trasnfers",name:"trasnfersCSV",supportedContracts:kiroboMulticallContracts,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{"transfers_tuple[]":new FctTupleArray({params:{to:new FctAddressList({}),value:new FctValueList({})}})}},output:{}}},estimateGasOnParams:function(params,method,chainId){var transfers=params.methodParams["transfers_tuple[]"];if(!transfers.value||!Array.isArray(transfers.value)){return"10000"}var gas=BigNumber$1.from(transfers.value.length).mul(36e3);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var MultiAllowanceCSV=createPlugin$1({protocol:"KIROBO_MULTICALL_CSV",type:"LIBRARY:VIEWONLY",toEns:"@lib:multicall",method:"multiAllowance",name:"multiAllowanceCSV",supportedContracts:kiroboMulticallContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{"allowances_tuple[]":new FctTupleArray({params:{token:new FctAddressList({options:getSupportedTokens({chainId:chainId})}),owner:new FctAddressList({}),spender:new FctAddressList({})}})}},output:{allowances:new FctValueList({})}}}});var MultiBalanceCSV=createPlugin$1({protocol:"KIROBO_MULTICALL_CSV",type:"LIBRARY:VIEWONLY",toEns:"@lib:multicall",method:"multiBalance",name:"multiBalanceCSV",supportedContracts:kiroboMulticallContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{"balances_tuple[]":new FctTupleArray({params:{token:new FctAddressList({options:getSupportedTokens({chainId:chainId})}),account:new FctAddressList({})}})}},output:{balances:new FctValueList({})}}},estimateGasOnParams:function(params,method,chainId){var balances=params.methodParams["balances_tuple[]"];if(!balances.value||!Array.isArray(balances.value)){return"10000"}var gas=BigNumber$1.from(balances.value.length).mul(BigNumber$1.from(7e3));if(chainId==="42161"||chainId==="421613"){gas=gas.mul(BigNumber$1.from(13))}return gas.toString()}});var actions$a={Erc20AirdropCSV:Erc20AirdropCSV,Erc20ApprovalsCSV:Erc20ApprovalsCSV,Erc20MonoTransfersCSV:Erc20MonoTransfersCSV,Erc20TransfersCSV:Erc20TransfersCSV,TrasnfersCSV:TrasnfersCSV};var getters$9={MultiAllowanceCSV:MultiAllowanceCSV,MultiBalanceCSV:MultiBalanceCSV};var KIROBO_MULTICALL_CSV={actions:actions$a,getters:getters$9};var LIDO_STETH_TOKEN=[{address:"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",chainId:1}];var Deposit$3=createPlugin$1({protocol:"LIDO",type:"ACTION",method:"submit",supportedContracts:LIDO_STETH_TOKEN,getParams:function(){return{input:{to:new FctAddress({}),value:new FctValue({}),methodParams:{referral:new FctAddress({required:false})}},output:{}}},initParams:{methodParams:{referral:AddressZero$2}}});var GetPooledEthByShares=createPlugin$1({protocol:"LIDO",type:"GETTER",method:"getPooledEthByShares",supportedContracts:LIDO_STETH_TOKEN,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{shares:new FctValue18({})}},output:{ethAmount:new FctValue18({})}}}});var GetSharesByPooledETH=createPlugin$1({protocol:"LIDO",type:"GETTER",method:"getSharesByPooledEth",supportedContracts:LIDO_STETH_TOKEN,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{ethAmount:new FctValue18({})}},output:{shares:new FctValue18({})}}}});var SharesOf=createPlugin$1({protocol:"LIDO",type:"GETTER",method:"sharesOf",supportedContracts:LIDO_STETH_TOKEN,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{account:new FctAddress({})}},output:{shares:new FctValue18({})}}}});var actions$9={Deposit:Deposit$3};var getters$8={GetSharesByPooledETH:GetSharesByPooledETH,GetPooledEthByShares:GetPooledEthByShares,SharesOf:SharesOf};var Lido={actions:actions$9,getters:getters$8};var BuyOnUniswapV2Fork=createPlugin$1({protocol:"PARASWAP",type:"ACTION",method:"buyOnUniswapV2Fork",supportedContracts:[{address:"0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57",chainId:1}],getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{tokenIn:new FctAddress({}),amountInMax:new FctValue({}),amountOut:new FctValue({}),weth:new FctAddress({}),pools:new FctValueList({})}},output:{}}},requiredApprovals:function(params){var _a=params.methodParams,tokenIn=_a.tokenIn,amountInMax=_a.amountInMax;return[{to:tokenIn.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amountInMax.value},method:"approve",protocol:"ERC20"}]}});var MegaSwap=createPlugin$1({protocol:"PARASWAP",type:"ACTION",method:"megaSwap",supportedContracts:[{address:"0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57",chainId:1}],getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{megaSwapSellData_tuple:{fromToken:new FctAddress({}),fromAmount:new FctValue({}),toAmount:new FctValue({}),expectedAmount:new FctValue({}),beneficiary:new FctAddress({}),"megaSwapPath_tuple{}":{fromAmountPercent:new FctValue({}),"path_tuple{}":{to:new FctAddress({}),totalNetworkFee:new FctValue({}),"adapters_tuple{}":{adapter:new FctAddress({}),percent:new FctValue({}),networkFee:new FctValue({}),"route_tuple{}":{index:new FctValue({}),targetExchange:new FctAddress({}),percent:new FctValue({}),payload:new FctBytes({}),networkFee:new FctValue({})}}}},partner:new FctAddress({}),feePercent:new FctValue({}),permit:new FctBytes({}),deadline:new FctValue({})}}},output:{undefined:new FctValue({})}}},requiredApprovals:function(params){var _a=params.methodParams["megaSwapSellData_tuple"],fromToken=_a.fromToken,fromAmount=_a.fromAmount;return[{to:fromToken.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:fromAmount.value},method:"approve",protocol:"ERC20"}]}});var MultiSwap=createPlugin$1({protocol:"PARASWAP",type:"ACTION",method:"multiSwap",supportedContracts:[{address:"0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57",chainId:1}],getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{sellData_tuple:{fromToken:new FctAddress({}),fromAmount:new FctValue({}),toAmount:new FctValue({}),expectedAmount:new FctValue({}),beneficiary:new FctAddress({}),"path_tuple{}":{to:new FctAddress({}),totalNetworkFee:new FctValue({}),"adapters_tuple{}":{adapter:new FctAddress({}),percent:new FctValue({}),networkFee:new FctValue({}),"route_tuple{}":{index:new FctValue({}),targetExchange:new FctAddress({}),percent:new FctValue({}),payload:new FctBytes({}),networkFee:new FctValue({})}}},partner:new FctAddress({}),feePercent:new FctValue({}),permit:new FctBytes({}),deadline:new FctValue({})}}},output:{undefined:new FctValue({})}}},requiredApprovals:function(params){var _a=params.methodParams["sellData_tuple"],fromToken=_a.fromToken,fromAmount=_a.fromAmount;return[{to:fromToken.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:fromAmount.value},method:"approve",protocol:"ERC20"}]}});var SimpleBuy=createPlugin$1({protocol:"PARASWAP",type:"ACTION",method:"simpleBuy",supportedContracts:[{address:"0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57",chainId:1}],getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{simpleData_tuple:{fromToken:new FctAddress({}),toToken:new FctAddress({}),fromAmount:new FctValue({}),toAmount:new FctValue({}),expectedAmount:new FctValue({}),callees:new FctAddressList({}),exchangeData:new FctBytes({}),startIndexes:new FctValueList({}),values:new FctValueList({}),beneficiary:new FctAddress({}),partner:new FctAddress({}),feePercent:new FctValue({}),permit:new FctBytes({}),deadline:new FctValue({})}}},output:{}}},requiredApprovals:function(params){var _a=params.methodParams["simpleData_tuple"],fromToken=_a.fromToken,fromAmount=_a.fromAmount;return[{to:fromToken.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:fromAmount.value},method:"approve",protocol:"ERC20"}]}});var SimpleSwap=createPlugin$1({protocol:"PARASWAP",type:"ACTION",method:"simpleSwap",supportedContracts:[{address:"0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57",chainId:1}],getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{simpleData_tuple:{fromToken:new FctAddress({}),toToken:new FctAddress({}),fromAmount:new FctValue({}),toAmount:new FctValue({}),expectedAmount:new FctValue({}),callees:new FctAddressList({}),exchangeData:new FctBytes({}),startIndexes:new FctValueList({}),values:new FctValueList({}),beneficiary:new FctAddress({}),partner:new FctAddress({}),feePercent:new FctValue({}),permit:new FctBytes({}),deadline:new FctValue({})}}},output:{receivedAmount:new FctValue({})}}},requiredApprovals:function(params){var _a=params.methodParams["simpleData_tuple"],fromToken=_a.fromToken,fromAmount=_a.fromAmount;return[{to:fromToken.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:fromAmount.value},method:"approve",protocol:"ERC20"}]}});var SwapOnUniswapV2Fork=createPlugin$1({protocol:"PARASWAP",type:"ACTION",method:"swapOnUniswapV2Fork",supportedContracts:[{address:"0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57",chainId:1}],getParams:function(){return{input:{to:new FctAddress({destination:"paraswap_swapper_v5"}),value:new FctValue({destination:"wei_amount"}),methodParams:{tokenIn:new FctAddress({destination:"erc20"}),amountIn:new FctValue({destination:"wei_amount"}),amountOutMin:new FctValue({destination:"wei_amount"}),weth:new FctAddress({}),pools:new FctValueList({})}},output:{}}},initParams:{},requiredApprovals:function(params){var _a=params.methodParams,tokenIn=_a.tokenIn,amountIn=_a.amountIn;return[{to:tokenIn.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amountIn.value},method:"approve",protocol:"ERC20"}]}});var SwapOnZeroXv4=createPlugin$1({protocol:"PARASWAP",type:"ACTION",method:"swapOnZeroXv4",supportedContracts:[{address:"0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57",chainId:1}],getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{fromToken:new FctAddress({}),toToken:new FctAddress({}),fromAmount:new FctValue({}),amountOutMin:new FctValue({}),exchange:new FctAddress({}),payload:new FctBytes({})}},output:{}}},requiredApprovals:function(params){var _a=params.methodParams,fromToken=_a.fromToken,fromAmount=_a.fromAmount;return[{to:fromToken.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:fromAmount.value},method:"approve",protocol:"ERC20"}]}});var actions$8={BuyOnUniswapV2Fork:BuyOnUniswapV2Fork,MegaSwap:MegaSwap,MultiSwap:MultiSwap,SimpleBuy:SimpleBuy,SimpleSwap:SimpleSwap,SwapOnUniswapV2Fork:SwapOnUniswapV2Fork,SwapOnZeroXv4:SwapOnZeroXv4};var Paraswap={actions:actions$8};var LENDING_POOL_ADDRESSES=[{address:"0xF4B1486DD74D07706052A33d31d7c0AAFD0659E1",chainId:42161}];var PROTOCOL_DATA_PROVIDER_ADDRESSES=[{address:"0x596B0cc4c5094507C50b579a662FE7e7b094A2cC",chainId:42161}];var PRICE_ORACLE_ADDRESSES=[{address:"0xC0cE5De939aaD880b0bdDcf9aB5750a53EDa454b",chainId:42161}];var R_TOKENS={1:[],5:[],42161:RadiantV2RTokens,421613:[],11155111:[]};var Borrow=createPlugin$1({protocol:"RADIANTV2",type:"ACTION",method:"borrow",supportedContracts:LENDING_POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),interestRateMode:new FctValue({options:[{value:"1"},{value:"2"}]}),referralCode:new FctValue16({}),onBehalfOf:new FctAddress({})}},output:{}}},initParams:{methodParams:{referralCode:"0"}},requiredApprovals:function(params,chainId,_walletAddress,vaultAddress){var _a=params.methodParams,amount=_a.amount,onBehalfOf=_a.onBehalfOf,asset=_a.asset;var assetValue=asset.value;if(assetValue&&typeof assetValue!="string"){return[]}var fromTokenData=R_TOKENS[chainId].find(function(token){return token.underlying.toLowerCase()===assetValue.toLowerCase()});if(!fromTokenData){return[]}if(!vaultAddress)return[];var value;if(typeof amount.value==="string"){value=amount.value}if(!value&&typeof amount.estimatedValue==="string"){value=amount.estimatedValue}if(!value)return[];return[{to:fromTokenData.address,from:onBehalfOf.value,params:{delegatee:vaultAddress,amount:value},method:"approveDelegation",protocol:"RADIANTV2"}]}});var Deposit$2=createPlugin$1({protocol:"RADIANTV2",type:"ACTION",method:"deposit",supportedContracts:LENDING_POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),onBehalfOf:new FctAddress({}),referralCode:new FctValue16({})}},output:{}}},initParams:{methodParams:{referralCode:"0"}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount,onBehalfOf=_a.onBehalfOf;return[{to:asset.value,from:onBehalfOf.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amount.value},method:"approve",protocol:"ERC20"}]}});var Repay=createPlugin$1({protocol:"RADIANTV2",type:"ACTION",method:"repay",supportedContracts:LENDING_POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),rateMode:new FctValue({options:[{value:"1"},{value:"2"}]}),onBehalfOf:new FctAddress({})}},output:{value:new FctValue({innerIndex:0})}}},requiredApprovals:function(params){var _a=params.methodParams,asset=_a.asset,amount=_a.amount,onBehalfOf=_a.onBehalfOf;return[{to:asset.value,from:onBehalfOf.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amount.value},method:"approve",protocol:"ERC20"}]}});var SwapBorrowRateMode=createPlugin$1({protocol:"RADIANTV2",type:"ACTION",method:"swapBorrowRateMode",supportedContracts:LENDING_POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})}),rateMode:new FctValue({options:[{value:"1",name:"Stable"},{value:"2",name:"Variable"}]})}},output:{}}}});var Withdraw$2=createPlugin$1({protocol:"RADIANTV2",type:"ACTION",method:"withdraw",supportedContracts:LENDING_POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})}),amount:new FctValue({destination:"wei_amount"}),to:new FctAddress({})}},output:{value:new FctValue({innerIndex:0})}}}});var GetAssetPrice=createPlugin$1({protocol:"RADIANTV2",type:"ORACLE",method:"getAssetPrice",supportedContracts:PRICE_ORACLE_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{asset:new FctAddress({options:getRadiantV2Tokens({chainId:chainId})})}},output:{price:new FctValue18({innerIndex:0})}}}});var GetAssetReserveData=createPlugin$1({protocol:"RADIANTV2",type:"GETTER",method:"getReserveData",name:"getAssetReserveData",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"aave_protocol_data_provider_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})})}},output:{availableLiquidity:new FctValue({innerIndex:0}),totalStableDebt:new FctValue({innerIndex:1}),totalVariableDebt:new FctValue({innerIndex:2}),supplyRate:new FctValue27({innerIndex:3}),variableBorrowRate:new FctValue27({innerIndex:4}),stableBorrowRate:new FctValue27({innerIndex:5}),averageStableBorrowRate:new FctValue({innerIndex:6}),liquidityIndex:new FctValue({innerIndex:7}),variableBorrowIndex:new FctValue({innerIndex:8}),lastUpdateTimestamp:new FctValue40({innerIndex:9})}}}});var GetReserveConfigurationData=createPlugin$1({protocol:"RADIANTV2",type:"GETTER",method:"getReserveConfigurationData",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_protocol_data_provider_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})})}},output:{decimals:new FctDecimals({innerIndex:0}),ltv:new FctBps({innerIndex:1}),liquidationThreshold:new FctBps({innerIndex:2}),liquidationBonus:new FctValue({innerIndex:3}),reserveFactor:new FctValue({innerIndex:4}),usageAsCollateralEnabled:new FctBoolean({innerIndex:5}),borrowingEnabled:new FctBoolean({innerIndex:6}),stableBorrowRateEnabled:new FctBoolean({innerIndex:7}),isActive:new FctBoolean({innerIndex:8}),isFrozen:new FctBoolean({innerIndex:9})}}}});var GetReserveData=createPlugin$1({protocol:"RADIANTV2",type:"GETTER",method:"getReserveData",supportedContracts:LENDING_POOL_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})})}},output:{configuration:new FctValue({innerIndex:0}),liquidityIndex:new FctValue128({innerIndex:1}),variableBorrowIndex:new FctValue128({innerIndex:2}),currentLiquidityRate:new FctValue128({innerIndex:3}),currentVariableBorrowRate:new FctValue128({innerIndex:4}),currentStableBorrowRate:new FctValue128({innerIndex:5}),lastUpdateTimestamp:new FctValue40({innerIndex:6}),aTokenAddress:new FctAddress({innerIndex:7}),stableDebtTokenAddress:new FctAddress({innerIndex:8}),variableDebtTokenAddress:new FctAddress({innerIndex:9}),interestRateStrategyAddress:new FctAddress({innerIndex:10}),id:new FctValue8({innerIndex:11})}}}});var GetReserveTokensAddresses=createPlugin$1({protocol:"RADIANTV2",type:"GETTER",method:"getReserveTokensAddresses",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})})}},output:{aTokenAddress:new FctAddress({innerIndex:0}),stableDebtTokenAddress:new FctAddress({innerIndex:1}),variableDebtTokenAddress:new FctAddress({innerIndex:2})}}}});var GetUserAccountData=createPlugin$1({protocol:"RADIANTV2",type:"GETTER",method:"getUserAccountData",supportedContracts:LENDING_POOL_ADDRESSES,getParams:function(){return{input:{to:new FctAddress({destination:"radiant_lending_pool_v2"}),methodParams:{user:new FctAddress({})}},output:{totalCollateralETH:new FctValue18({innerIndex:0}),totalDebtETH:new FctValue18({innerIndex:1}),availableBorrowsETH:new FctValue18({innerIndex:2}),currentLiquidationThreshold:new FctBps({innerIndex:3}),ltv:new FctBps({innerIndex:4}),healthFactor:new FctValue18({innerIndex:5})}}}});var GetUserReserveData=createPlugin$1({protocol:"RADIANTV2",type:"GETTER",method:"getUserReserveData",supportedContracts:PROTOCOL_DATA_PROVIDER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"radiant_protocol_data_provider_v2"}),methodParams:{asset:new FctAddress({destination:"erc20",options:getRadiantV2Tokens({chainId:chainId})}),user:new FctAddress({})}},output:{currentATokenBalance:new FctValue18({innerIndex:0}),currentStableDebt:new FctValue18({innerIndex:1}),currentVariableDebt:new FctValue18({innerIndex:2}),principalStableDebt:new FctValue18({innerIndex:3}),scaledVariableDebt:new FctValue18({innerIndex:4}),stableBorrowRate:new FctValue27({innerIndex:5}),liquidityRate:new FctValue27({innerIndex:6}),stableRateLastUpdated:new FctValue40({innerIndex:7}),usageAsCollateralEnabled:new FctBoolean({innerIndex:8})}}},initParams:{to:"0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d"}});var ApyBetween=createPlugin$1({protocol:"RADIANTV2",type:"VALIDATOR",method:"between",name:"apyBetween",description:"Check if a value is between two numbers",supportedContracts:supportedContracts$3,onCreate:function(_a){_a.chainId;var input=_a.input;input.rateValue.subscribe({callback:function(_a){var value=_a.value;input.methodParams.value.set({value:value})},id:"change_value1_on_rateValue_change"});input.methodParams.value.set({value:input.rateValue.value});var setValue=function(_a){var value=_a.value,param=_a.param;if(!value){param.set({value:undefined});return}if(input.minApyValue.isVariable){console.error("should be real value");return}var rate=getAssetRateByApy({apy:value});param.set({value:rate.rate})};input.minApyValue.subscribe({callback:function(_a){var value=_a.value;setValue({value:value,param:input.methodParams.minValue})},id:"change_minValue_on_minApyValue_change"});setValue({value:input.minApyValue.value,param:input.methodParams.minValue});input.maxApyValue.subscribe({callback:function(_a){var value=_a.value;setValue({value:value,param:input.methodParams.maxValue})},id:"change_maxValue_on_maxApyValue_change"});setValue({value:input.maxApyValue.value,param:input.methodParams.maxValue})},getParams:function(){return{input:{to:new FctAddress({}),rateValue:new FctValue27({mode:"VARIABLE"}),minApyValue:new FctPercent({destination:"percent",mode:"INPUT"}),maxApyValue:new FctPercent({destination:"percent",mode:"INPUT"}),methodParams:{minValue:new FctValue({readonly:true}),maxValue:new FctValue({readonly:true}),value:new FctValue({readonly:true})}},output:{value:new FctValue({innerIndex:0,description:"Result of minValue subtraction from value"})}}},validate:function(params,errors){var minValue=params.methodParams.minValue.value;var maxValue=params.methodParams.maxValue.value;if(typeof minValue==="object")return true;if(typeof maxValue==="object")return true;var minValueBN=BigNumber$1.from(minValue);var maxValueBN=BigNumber$1.from(maxValue);if(minValueBN.gt(maxValueBN)){errors.set("minValue",ERRORS.RANGE_ERROR);return false}errors.delete("minValue");return true}});var ApyGreaterThan=createPlugin$1({protocol:"RADIANTV2",type:"VALIDATOR",method:"greaterThan",name:"apyGreaterThan",description:"Check if a value is greater than a number",supportedContracts:supportedContracts$3,onCreate:function(_a){_a.chainId;var input=_a.input;input.rateValue.subscribe({callback:function(_a){var value=_a.value;input.methodParams.value1.set({value:value})},id:"change_value1_on_rateValue_change"});input.methodParams.value1.set({value:input.rateValue.value});var setValue2=function(_a){var value=_a.value;if(!value){input.methodParams.value2.set({value:undefined});return}if(input.apyValue.isVariable){console.error("should be real value");return}var rate=getAssetRateByApy({apy:value});input.methodParams.value2.set({value:rate.rate})};input.apyValue.subscribe({callback:setValue2,id:"change_value2_on_apyValue_change"});setValue2({value:input.apyValue.value})},getParams:function(){return{input:{to:new FctAddress({}),rateValue:new FctValue27({mode:"VARIABLE"}),apyValue:new FctPercent({destination:"percent",mode:"INPUT"}),methodParams:{value1:new FctValue({readonly:true}),value2:new FctValue({readonly:true})}},output:{value:new FctValue({innerIndex:0,description:"Returns value2 subtraction from value1"})}}}});var ApyLessThan=createPlugin$1({protocol:"RADIANTV2",type:"VALIDATOR",method:"lessThan",description:"Check if a value is less than a number",name:"apyLessThan",supportedContracts:supportedContracts$3,onCreate:function(_a){_a.chainId;var input=_a.input;input.rateValue.subscribe({callback:function(_a){var value=_a.value;input.methodParams.value1.set({value:value})},id:"change_value1_on_rateValue_change"});input.methodParams.value1.set({value:input.rateValue.value});var setValue2=function(_a){var value=_a.value;if(!value){input.methodParams.value2.set({value:undefined});return}if(input.apyValue.isVariable){console.error("should be real value");return}var rate=getAssetRateByApy({apy:value});input.methodParams.value2.set({value:rate.rate})};input.apyValue.subscribe({callback:setValue2,id:"change_value_on_apyValue_change"});setValue2({value:input.apyValue.value})},getParams:function(){return{input:{to:new FctAddress({}),rateValue:new FctValue27({mode:"VARIABLE"}),apyValue:new FctPercent({destination:"percent",mode:"INPUT"}),methodParams:{value1:new FctValue({readonly:true}),value2:new FctValue({readonly:true})}},output:{value:new FctValue({innerIndex:0,description:"Returns value1 subtraction from value2"})}}}});var actions$7={Borrow:Borrow,Deposit:Deposit$2,Repay:Repay,Withdraw:Withdraw$2,SwapBorrowRateMode:SwapBorrowRateMode};var getters$7={GetUserAccountData:GetUserAccountData,GetReserveData:GetReserveData,GetUserReserveData:GetUserReserveData,GetReserveConfigurationData:GetReserveConfigurationData,GetAssetReserveData:GetAssetReserveData,GetReserveTokensAddresses:GetReserveTokensAddresses,GetAssetPrice:GetAssetPrice,ApyLessThan:ApyLessThan,ApyBetween:ApyBetween,ApyGreaterThan:ApyGreaterThan};var RadiantV2={actions:actions$7,getters:getters$7};var ROCKET_POOL_DEPOSIT_POOL=[{address:"0xDD3f50F8A6CafbE9b31a427582963f465E745AF8",chainId:1}];var ROCKET_POOL_ERC20=[{address:"0xae78736Cd615f374D3085123A210448E74Fc6393",chainId:1}];var Deposit$1=createPlugin$1({protocol:"ROCKETPOOL",type:"ACTION",method:"deposit",name:"stake",supportedContracts:ROCKET_POOL_DEPOSIT_POOL,getParams:function(){return{input:{to:new FctAddress({}),value:new FctValue({}),methodParams:{}},output:{}}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var _a;var to=params.to,value=params.value;if(!to.value||!value.value||!vaultAddress)return[];if(typeof to.value!=="string"||typeof value.value!=="string")return[];var rETH=(_a=ROCKET_POOL_ERC20.find(function(token){return token.chainId===Number(chainId)}))===null||_a===void 0?void 0:_a.address;if(!rETH)return[];return[{address:vaultAddress,toSpend:[{token:AddressZero$2,amount:value.value}],toReceive:[{token:rETH,amount:value.value}]}]}});var __assign$5=undefined&&undefined.__assign||function(){__assign$5=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$5.apply(this,arguments)};var __awaiter$h=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$h=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __rest$3=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};var SwapToRocketEth=createPlugin$1({protocol:"ROCKETPOOL",type:"ACTION",method:"exactInput",name:"swapToRocketEth",supportedContracts:SWAP_ROUTER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),tokenIn:new FctAddress({mode:"INPUT",destination:"erc20",options:getSupportedTokens({chainId:chainId})}),amountIn:new FctValue({mode:"INPUT",destination:"wei_amount"}),tokenOut:new FctAddress({mode:"INPUT",destination:"erc20",readonly:true,options:[{chainId:1,value:"0xae78736Cd615f374D3085123A210448E74Fc6393",name:"Rocket Pool ETH",symbol:"rETH",decimals:18,logoURI:"https://assets.coingecko.com/coins/images/20764/standard/reth.png?1696520159"}]}),amountOut:new FctValue({readonly:true,destination:"wei_amount",required:false}),methodParams:{params_tuple:{tokenIn:new FctAddress({required:false,readonly:true,destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenOut:new FctAddress({required:false,readonly:true,destination:"erc20",options:getSupportedTokens({chainId:chainId})}),fee:new FctValue24({required:false,readonly:true}),path:new FctBytes({required:false,readonly:true}),recipient:new FctAddress({mode:"INPUT"}),deadline:new FctValue({mode:"INPUT"}),amountIn:new FctValue({readonly:true,destination:"wei_amount"}),amountOutMinimum:new FctValue({destination:"wei_amount"}),sqrtPriceLimitX96:new FctValue160({required:false})}}},output:{amountOut:new FctValue({})}}},initParams:{tokenOut:"0xae78736Cd615f374D3085123A210448E74Fc6393",methodParams:{params_tuple:{deadline:{type:"global",id:"blockTimestamp"},amountOutMinimum:"0",sqrtPriceLimitX96:"0"}}},calculateValuesOnUserInput:function(_a){_a.chainId;var input=_a.input;_a.provider;var setMethod=_a.setMethod;_a.account;var getPathParams=function(_a){return __awaiter$h(void 0,[_a],void 0,function(_b){var tokenInAddress,tokenOutAddress,defaultReturn,amountIn,amount,res,_c,tokenIn,tokenOut,fee,sqrtPriceLimitX96,path,_d,rest_1,_e,amountOutMinimum,rest,e_1;var service=_b.service;return __generator$h(this,function(_f){switch(_f.label){case 0:if(!service)return[2];tokenInAddress=input===null||input===void 0?void 0:input.tokenIn.value;tokenOutAddress=input===null||input===void 0?void 0:input.tokenOut.value;defaultReturn={params:{amountIn:undefined,methodParams:{params_tuple:{tokenIn:undefined,tokenOut:undefined,path:undefined,amountInMaximum:undefined,amountOut:undefined}}},error:undefined};if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2,defaultReturn];amountIn=input===null||input===void 0?void 0:input.amountIn;if(!amountIn)return[2];amount=amountIn.value;if(amount===undefined)return[2,defaultReturn];if(!amount)return[2];_f.label=1;case 1:_f.trys.push([1,3,,4]);return[4,service.create({cmd:"simulateSwap",protocol:"uniswap",token_in:tokenInAddress,token_in_decimals:0,token_out:tokenOutAddress,token_out_decimals:0,token_amount:amount,type:"in",version:"v3"})];case 2:res=_f.sent();if(!res){return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:"invalid trade"}]}_c=input.methodParams.params_tuple,tokenIn=_c.tokenIn,tokenOut=_c.tokenOut,fee=_c.fee,sqrtPriceLimitX96=_c.sqrtPriceLimitX96,path=_c.path;if(!res.params){return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:"invalid trade"}]}if(res.name==="exactInputSingle"){if(setMethod)setMethod("exactInputSingle");tokenIn.virtual=false;tokenOut.virtual=false;fee.virtual=false;sqrtPriceLimitX96.virtual=false;path.virtual=true;_d=res===null||res===void 0?void 0:res.params,_d.amountOutMinimum,rest_1=__rest$3(_d,["amountOutMinimum"]);return[2,{params:{amountOut:res===null||res===void 0?void 0:res.params.amountOutMinimum,methodParams:{params_tuple:__assign$5(__assign$5({},rest_1),{amountOutMinimum:"0"})}},error:undefined}]}if(res.name!=="exactInput"){return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:"invalid trade"}]}if(setMethod)setMethod("exactInput");tokenIn.virtual=true;tokenOut.virtual=true;fee.virtual=true;sqrtPriceLimitX96.virtual=true;path.virtual=false;_e=res===null||res===void 0?void 0:res.params,amountOutMinimum=_e.amountOutMinimum,rest=__rest$3(_e,["amountOutMinimum"]);return[2,{params:{amountOut:amountOutMinimum,methodParams:{params_tuple:__assign$5(__assign$5({},rest),{amountOutMinimum:"0"})}},error:undefined}];case 3:e_1=_f.sent();return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:e_1.message}];case 4:return[2]}})})};return{get:getPathParams,depParamKeys:["tokenIn","tokenOut","amountIn"]}},requiredApprovals:function(params){var tokenIn=params.tokenIn;if(!tokenIn.value||typeof tokenIn.value!=="string")return[];var tokenToApprove=tokenIn.value;return[{to:tokenToApprove,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams["params_tuple"].amountIn.value},method:"approve",protocol:"ERC20"}]},getSubscribtions:function(_a){return[{callback:function(params){if(!params)return;if(!params.amountIn.value)return;params.methodParams.params_tuple.amountIn.setQuiet({value:params.amountIn.value});return},id:"set_amount_by_amountIn_id"}]}});var Withdraw$1=createPlugin$1({protocol:"ROCKETPOOL",type:"ACTION",method:"burn",name:"unstake",supportedContracts:ROCKET_POOL_ERC20,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount:new FctValue18({})}},output:{}}},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,amount=params.methodParams.amount;if(!to.value||!amount.value||!vaultAddress)return[];if(typeof to.value!=="string"||typeof amount.value!=="string")return[];return[{address:vaultAddress,toSpend:[{token:to.value,amount:amount.value}],toReceive:[{token:AddressZero$2,amount:amount.value}]}]}});var GetCollateralRate=createPlugin$1({protocol:"ROCKETPOOL",type:"GETTER",method:"getCollateralRate",supportedContracts:ROCKET_POOL_ERC20,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{}},output:{collateralRate:new FctValue18({})}}}});var GetEthValue=createPlugin$1({protocol:"ROCKETPOOL",type:"GETTER",method:"getEthValue",supportedContracts:ROCKET_POOL_ERC20,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{rethAmount:new FctValue18({})}},output:{ethAmount:new FctValue18({})}}}});var GetExchangeRate=createPlugin$1({protocol:"ROCKETPOOL",type:"GETTER",method:"getExchangeRate",supportedContracts:ROCKET_POOL_ERC20,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{}},output:{exchangeRate:new FctValue18({})}}}});var GetRethValue=createPlugin$1({protocol:"ROCKETPOOL",type:"GETTER",method:"getRethValue",supportedContracts:ROCKET_POOL_ERC20,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{ethAmount:new FctValue18({})}},output:{rethAmount:new FctValue18({})}}}});var actions$6={Deposit:Deposit$1,Withdraw:Withdraw$1,SwapToRocketEth:SwapToRocketEth};var getters$6={GetExchangeRate:GetExchangeRate,GetRethValue:GetRethValue,GetEthValue:GetEthValue,GetCollateralRate:GetCollateralRate};var RocketPool={actions:actions$6,getters:getters$6};var secureStorageAddresses$1=[{address:"0x039987486206d32aB55BE53c2748121a6559aAdE",chainId:1},{address:"0x4FEe9fc300DFF6221e5911f296c4CaA3d23A7830",chainId:5},{address:"0xF71396c6F168Dc1c213AA9433cB0E7C1e4B07964",chainId:11155111}];var secureStorageAddressFrom={1:"0x039987486206d32aB55BE53c2748121a6559aAdE",5:"0x4FEe9fc300DFF6221e5911f296c4CaA3d23A7830",11155111:"0xF71396c6F168Dc1c213AA9433cB0E7C1e4B07964",42161:"",421613:""};var Write_bytes=createPlugin$1({protocol:"SECURE_STORAGE",type:"ACTION",method:"write_bytes",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{key:new FctBytes32({messageType:"stringOrBytes32"}),value:new FctBytes({messageType:"stringOrBytes"})}},output:{}}}});var Write_bytes32=createPlugin$1({protocol:"SECURE_STORAGE",type:"ACTION",method:"write_bytes32",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{key:new FctBytes32({messageType:"stringOrBytes32"}),value:new FctBytes32({messageType:"stringOrBytes32"})}},output:{}}}});var Write_fct_bytes=createPlugin$1({protocol:"SECURE_STORAGE",type:"ACTION",method:"write_fct_bytes",supportedContracts:secureStorageAddresses$1,payerIndex:0,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),from:new FctAddress({value:secureStorageAddressFrom[chainId],readonly:true}),methodParams:{key:new FctBytes32({messageType:"stringOrBytes32"}),value:new FctBytes({messageType:"stringOrBytes"})}},output:{}}}});var Write_fct_bytes32=createPlugin$1({protocol:"SECURE_STORAGE",type:"ACTION",method:"write_fct_bytes32",supportedContracts:secureStorageAddresses$1,payerIndex:0,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),from:new FctAddress({value:secureStorageAddressFrom[chainId],readonly:true}),methodParams:{key:new FctBytes32({messageType:"stringOrBytes32"}),value:new FctBytes32({messageType:"stringOrBytes32"})}},output:{}}}});var Write_fct_uint256=createPlugin$1({protocol:"SECURE_STORAGE",type:"ACTION",method:"write_fct_uint256",supportedContracts:secureStorageAddresses$1,payerIndex:0,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),from:new FctAddress({value:secureStorageAddressFrom[chainId],readonly:true}),methodParams:{key:new FctBytes32({messageType:"stringOrBytes32"}),value:new FctValue({})}},output:{}}}});var Write_uint256=createPlugin$1({protocol:"SECURE_STORAGE",type:"ACTION",method:"write_uint256",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{key:new FctBytes32({}),value:new FctValue({})}},output:{}}}});var Read_bytes=createPlugin$1({protocol:"SECURE_STORAGE",type:"GETTER",method:"read_bytes",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{owner:new FctAddress({}),key:new FctBytes32({messageType:"stringOrBytes32"})}},output:{value:new FctBytes({})}}}});var Read_bytes32=createPlugin$1({protocol:"SECURE_STORAGE",type:"GETTER",method:"read_bytes32",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{owner:new FctAddress({}),key:new FctBytes32({messageType:"stringOrBytes32"})}},output:{value:new FctBytes32({})}}}});var Read_fct_bytes=createPlugin$1({protocol:"SECURE_STORAGE",type:"GETTER",method:"read_fct_bytes",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{fctMsgHash:new FctBytes32({}),key:new FctBytes32({messageType:"stringOrBytes32"})}},output:{value:new FctBytes({})}}},initParams:{methodParams:{fctMsgHash:{type:"global",id:"flowHash"}}}});var Read_fct_bytes32=createPlugin$1({protocol:"SECURE_STORAGE",type:"GETTER",method:"read_fct_bytes32",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{fctMsgHash:new FctBytes32({}),key:new FctBytes32({messageType:"stringOrBytes32"})}},output:{value:new FctBytes32({})}}},initParams:{methodParams:{fctMsgHash:{type:"global",id:"flowHash"}}}});var Read_fct_uint256=createPlugin$1({protocol:"SECURE_STORAGE",type:"GETTER",method:"read_fct_uint256",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{fctMsgHash:new FctBytes32({}),key:new FctBytes32({messageType:"stringOrBytes32"})}},output:{value:new FctValue({})}}},initParams:{methodParams:{fctMsgHash:{type:"global",id:"flowHash"}}}});var Read_uint256=createPlugin$1({protocol:"SECURE_STORAGE",type:"GETTER",method:"read_uint256",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{owner:new FctAddress({}),key:new FctBytes32({messageType:"stringOrBytes32"})}},output:{value:new FctValue({})}}}});var SupportsInterface=createPlugin$1({protocol:"SECURE_STORAGE",type:"GETTER",method:"supportsInterface",supportedContracts:secureStorageAddresses$1,getParams:function(_a){_a.chainId;return{input:{to:new FctAddress({}),methodParams:{interfaceId:new FctBytes4({})}},output:{isSupports:new FctBoolean({})}}}});var actions$5={Write_bytes:Write_bytes,Write_bytes32:Write_bytes32,Write_fct_bytes:Write_fct_bytes,Write_fct_bytes32:Write_fct_bytes32,Write_fct_uint256:Write_fct_uint256,Write_uint256:Write_uint256};var getters$5={Read_bytes:Read_bytes,Read_bytes32:Read_bytes32,Read_fct_bytes:Read_fct_bytes,Read_fct_bytes32:Read_fct_bytes32,Read_fct_uint256:Read_fct_uint256,Read_uint256:Read_uint256,SupportsInterface:SupportsInterface};var SecureStorage={actions:actions$5,getters:getters$5};var supportedContracts$2=[{address:"0x9b2343DF3d4b30b0Fed3C2105C094a76288defCB",chainId:1},{address:"0x254fb98E8943faF0F732477c4dE6Af7a1Dd7fD2D",chainId:5},{address:"0x78ca552EeA9338bf8f615339173920e3d3DfDca2",chainId:42161},{address:"0xE947aBC17F8dF342b3535C3A18ac4101A5eAA24e",chainId:421613},{address:"0x574F4cDAB7ec20E3A37BDE025260F0A2359503d6",chainId:11155111}];var Add=createPlugin$1({protocol:"TOKEN_MATH",type:"CALCULATOR",method:"add",description:"Add amount1 and amount2",supportedContracts:supportedContracts$2,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({}),decimals1:new FctDecimals({}),amount2:new FctValue({}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({innerIndex:0})}}}});var Divide=createPlugin$1({protocol:"TOKEN_MATH",type:"CALCULATOR",method:"div",description:"Divide amount1 by amount2",supportedContracts:supportedContracts$2,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({}),decimals1:new FctDecimals({}),amount2:new FctValue({}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({innerIndex:0})}}}});var Mod=createPlugin$1({protocol:"TOKEN_MATH",type:"CALCULATOR",method:"mod",description:"Modulo amount1 and amount2",supportedContracts:supportedContracts$2,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({innerIndex:0})}}}});var Multiply=createPlugin$1({protocol:"TOKEN_MATH",type:"CALCULATOR",method:"mul",description:"Multiply amount1 and amount2",supportedContracts:supportedContracts$2,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({innerIndex:0})}}}});var MultiplyAndDivide=createPlugin$1({protocol:"TOKEN_MATH",type:"CALCULATOR",method:"mulAndDiv",description:"Multiply amount1 by amount2 and divide by amount3",supportedContracts:supportedContracts$2,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),amount3:new FctValue({destination:"wei_amount"}),decimals3:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({innerIndex:0})}}}});var Subtract=createPlugin$1({protocol:"TOKEN_MATH",type:"CALCULATOR",method:"sub",description:"Subtract amount2 from amount1",supportedContracts:supportedContracts$2,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({innerIndex:0})}}}});var getters$4={Add:Add,Subtract:Subtract,Multiply:Multiply,Divide:Divide,MultiplyAndDivide:MultiplyAndDivide,Mod:Mod};var TokensMath={getters:getters$4};var supportedContracts$1=[{address:"0x421AC2A90550942ABB532e06d1d4d5220c095777",chainId:1},{address:"0x93a9E720C3B161F70e60A7bd844F8ee6b19f07DE",chainId:5},{address:"0x9706a492aFdaBE83D3B237d710eD811CE43acd59",chainId:42161},{address:"0x27C133a452303195b237fe920442891FeF609c54",chainId:421613},{address:"0x40b3dA447BE499e0D8165b314EB77e2356d0a92f",chainId:11155111}];var Between=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"between",description:"Check if amountIn is between minAmount and maxAmount",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{minAmount:new FctValue({destination:"wei_amount"}),minDecimals:new FctDecimals({}),maxAmount:new FctValue({destination:"wei_amount"}),maxDecimals:new FctDecimals({}),amountIn:new FctValue({destination:"wei_amount"}),decimalsIn:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({description:"amountIn - minAmount",innerIndex:0})}}}});var BetweenEqual=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"betweenEqual",description:"Check if amountIn is between or equal minAmount and maxAmount",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{minAmount:new FctValue({destination:"wei_amount"}),minDecimals:new FctDecimals({}),maxAmount:new FctValue({destination:"wei_amount"}),maxDecimals:new FctDecimals({}),amountIn:new FctValue({destination:"wei_amount"}),decimalsIn:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({description:"amountIn - minAmount",innerIndex:0})}}}});var Equal=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"equal",description:"Check if amount1 is equal amount2",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{amount1:new FctValue({innerIndex:0})}}}});var EqualAddress=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"equalAddress",description:"Check if amount1 is equal amount2",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{address1:new FctAddress({}),address2:new FctAddress({})}},output:{address1:new FctAddress({innerIndex:0})}}}});var EqualBytes32=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"equalBytes32",description:"Check if amount1 is equal amount2",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{value1:new FctBytes32({}),value2:new FctBytes32({})}},output:{value1:new FctBytes32({innerIndex:0})}}}});var GreaterEqual=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"greaterEqual",description:"Check if a amount1 is greater or equal to amount2",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({description:"amount1 - amount2",innerIndex:0})}}}});var GreaterThan=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"greaterThan",description:"Check if a amount1 is greater than amount2",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({description:"amount1 - amount2",innerIndex:0})}}}});var LessEqual=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"lessEqual",description:"Check if a amount2 is less or equal to amount1",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({description:"amount2 - amount1",innerIndex:0})}}}});var LessThan=createPlugin$1({protocol:"TOKEN_VALIDATOR",type:"VALIDATOR",method:"lessThan",description:"Check if a amount2 is less than amount1",supportedContracts:supportedContracts$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{amount1:new FctValue({destination:"wei_amount"}),decimals1:new FctDecimals({}),amount2:new FctValue({destination:"wei_amount"}),decimals2:new FctDecimals({}),decimalsOut:new FctDecimals({})}},output:{result:new FctValue({description:"amount2 - amount1",innerIndex:0})}}}});var getters$3={Between:Between,BetweenEqual:BetweenEqual,Equal:Equal,EqualAddress:EqualAddress,EqualBytes32:EqualBytes32,GreaterEqual:GreaterEqual,GreaterThan:GreaterThan,LessEqual:LessEqual,LessThan:LessThan};var TokenValidator={getters:getters$3};var __assign$4=undefined&&undefined.__assign||function(){__assign$4=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$4.apply(this,arguments)};var __awaiter$g=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$g=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __rest$2=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};var SimpleSwapExactInput=createPlugin$1({protocol:"UNISWAP_V3",type:"ACTION",method:"exactInput",name:"simpleSwapExactInputV3",supportedContracts:SWAP_ROUTER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),tokenIn:new FctAddress({mode:"INPUT",destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenOut:new FctAddress({mode:"INPUT",destination:"erc20",options:getSupportedTokens({chainId:chainId})}),amountIn:new FctValue({mode:"INPUT",destination:"wei_amount"}),amountOut:new FctValue({readonly:true,destination:"wei_amount",required:false}),methodParams:{params_tuple:{tokenIn:new FctAddress({required:false,readonly:true,destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenOut:new FctAddress({required:false,readonly:true,destination:"erc20",options:getSupportedTokens({chainId:chainId})}),fee:new FctValue24({required:false,readonly:true}),path:new FctBytes({required:false,readonly:true}),recipient:new FctAddress({mode:"INPUT"}),deadline:new FctValue({mode:"INPUT"}),amountIn:new FctValue({readonly:true,destination:"wei_amount"}),amountOutMinimum:new FctValue({destination:"wei_amount"}),sqrtPriceLimitX96:new FctValue160({required:false})}}},output:{amountOut:new FctValue({})}}},initParams:{methodParams:{params_tuple:{deadline:{type:"global",id:"blockTimestamp"},amountOutMinimum:"0",sqrtPriceLimitX96:"0"}}},overrideSetMethodParams:function(_a){var input=_a.input;return function(params,method){var params_tuple=input.methodParams.params_tuple;if(method==="exactInput"){params_tuple.path.value=params[0];params_tuple.recipient.value=params[1];params_tuple.deadline.value=params[2];params_tuple.amountIn.value=params[3];input.amountIn.value=params[3];params_tuple.amountOutMinimum.value=params[4]}if(method==="exactInputSingle"){params_tuple.tokenIn.value=params[0];params_tuple.tokenOut.value=params[1];params_tuple.fee.value=params[2];params_tuple.recipient.value=params[3];params_tuple.deadline.value=params[4];params_tuple.amountIn.value=params[5];input.amountIn.value=params[5];params_tuple.amountOutMinimum.value=params[6];params_tuple.sqrtPriceLimitX96.value=params[7]}}},calculateValuesOnUserInput:function(_a){var input=_a.input,setMethod=_a.setMethod,provider=_a.provider;var getPathParams=function(_a){return __awaiter$g(void 0,[_a],void 0,function(_b){var tokenInAddress,tokenOutAddress,defaultReturn,amountIn,amount,isSimulationNeeded,decimalsIn,_c,res,_d,tokenIn,tokenOut,fee,sqrtPriceLimitX96,path,_e,rest_1,_f,amountOutMinimum,rest,e_1;var service=_b.service;return __generator$g(this,function(_g){switch(_g.label){case 0:if(!service)return[2];tokenInAddress=input===null||input===void 0?void 0:input.tokenIn.value;tokenOutAddress=input===null||input===void 0?void 0:input.tokenOut.value;defaultReturn={params:{amountOut:undefined,methodParams:{params_tuple:{tokenIn:undefined,tokenOut:undefined,path:undefined,amountOutMinimum:undefined,amountIn:undefined}}},error:undefined};if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2,defaultReturn];amountIn=input===null||input===void 0?void 0:input.amountIn;amount=amountIn.value;if(amount===undefined)return[2,defaultReturn];isSimulationNeeded=false;if(!(!amount||isVariable(amount)))return[3,4];isSimulationNeeded=true;if(!provider)return[3,2];return[4,getTokenDecimals({address:tokenInAddress,provider:provider})];case 1:_c=_g.sent();return[3,3];case 2:_c=18;_g.label=3;case 3:decimalsIn=_c;amount="1"+"0".repeat(decimalsIn);_g.label=4;case 4:_g.trys.push([4,6,,7]);return[4,service.create({cmd:"simulateSwap",protocol:"uniswap",token_in:tokenInAddress,token_in_decimals:0,token_out:tokenOutAddress,token_out_decimals:0,token_amount:amount,type:"in",version:"v3"})];case 5:res=_g.sent();if(!res){return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:"invalid trade"}]}_d=input.methodParams.params_tuple,tokenIn=_d.tokenIn,tokenOut=_d.tokenOut,fee=_d.fee,sqrtPriceLimitX96=_d.sqrtPriceLimitX96,path=_d.path;if(!res.params){return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:"invalid trade"}]}if(res.name==="exactInputSingle"){if(setMethod)setMethod("exactInputSingle");tokenIn.virtual=false;tokenOut.virtual=false;fee.virtual=false;sqrtPriceLimitX96.virtual=false;path.virtual=true;_e=res===null||res===void 0?void 0:res.params,_e.amountOutMinimum,_e.recipient,rest_1=__rest$2(_e,["amountOutMinimum","recipient"]);return[2,{params:{amountOut:res===null||res===void 0?void 0:res.params.amountOutMinimum,methodParams:{params_tuple:__assign$4(__assign$4({},rest_1),{amountOutMinimum:"0"})}},isSimulationNeeded:isSimulationNeeded,error:undefined}]}if(res.name!=="exactInput"){return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:"invalid trade"}]}if(setMethod)setMethod("exactInput");tokenIn.virtual=true;tokenOut.virtual=true;fee.virtual=true;sqrtPriceLimitX96.virtual=true;path.virtual=false;_f=res===null||res===void 0?void 0:res.params,amountOutMinimum=_f.amountOutMinimum,_f.recipient,rest=__rest$2(_f,["amountOutMinimum","recipient"]);return[2,{params:{amountOut:amountOutMinimum,methodParams:{params_tuple:__assign$4(__assign$4({},rest),{amountOutMinimum:"0"})}},isSimulationNeeded:isSimulationNeeded,error:undefined}];case 6:e_1=_g.sent();return[2,{params:{amountOut:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:e_1.message}];case 7:return[2]}})})};return{get:getPathParams,depParamKeys:["tokenIn","tokenOut","amountIn"]}},requiredApprovals:function(params){var tokenIn=params.tokenIn;if(!tokenIn.value||typeof tokenIn.value!=="string")return[];var tokenToApprove=tokenIn.value;return[{to:tokenToApprove,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams["params_tuple"].amountIn.value},method:"approve",protocol:"ERC20"}]},getSubscribtions:function(_a){return[{callback:function(params){if(!params)return;if(!params.amountIn.value)return;params.methodParams.params_tuple.amountIn.setQuiet({value:params.amountIn.value});return},id:"set_amount_by_amountIn_id"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,amountIn=params.amountIn,amountOut=params.amountOut,tokenIn=params.tokenIn,tokenOut=params.tokenOut;if(!to.value||!amountIn.value||!amountOut.value||!tokenIn.value||!tokenOut.value||!vaultAddress)return[];if(typeof to.value!=="string"||typeof amountIn.value!=="string"||typeof amountOut.value!=="string"||typeof tokenIn.value!=="string"||typeof tokenOut.value!=="string")return[];return[{address:vaultAddress,toSpend:[{token:tokenIn.value,amount:amountIn.value}],toReceive:[{token:tokenOut.value,amount:amountOut.value}]}]},estimateGasOnParams:function(params,method,chainId){var defaultGas=BigNumber$1.from("140000");if(method==="exactInputSingle"){return chainId==="42161"||chainId==="421613"?defaultGas.mul(13).toString():defaultGas.toString()}var path=params.methodParams.params_tuple.path;if(!path.value||typeof path.value!=="string"){return chainId==="42161"||chainId==="421613"?defaultGas.mul(13).toString():defaultGas.toString()}var data=path.value;var offset=2;var pathLength=0;while(offset<data.length){pathLength++;var isLastAddress=data.length-offset===40;if(isLastAddress){break}offset+=40+6}var additionalGas=BigNumber$1.from(pathLength-2).mul(85e3);var gas=defaultGas.add(additionalGas);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var __assign$3=undefined&&undefined.__assign||function(){__assign$3=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$3.apply(this,arguments)};var __awaiter$f=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$f=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __rest$1=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};var SimpleSwapExactOutput=createPlugin$1({protocol:"UNISWAP_V3",type:"ACTION",method:"exactOutput",name:"simpleSwapExactOutputV3",supportedContracts:SWAP_ROUTER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),tokenIn:new FctAddress({mode:"INPUT",destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenOut:new FctAddress({mode:"INPUT",destination:"erc20",options:getSupportedTokens({chainId:chainId})}),amountIn:new FctValue({readonly:true,destination:"wei_amount",required:false}),amountOut:new FctValue({mode:"INPUT",destination:"wei_amount"}),methodParams:{params_tuple:{tokenIn:new FctAddress({required:false,readonly:true,destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenOut:new FctAddress({required:false,readonly:true,destination:"erc20",options:getSupportedTokens({chainId:chainId})}),fee:new FctValue24({required:false,readonly:true}),path:new FctBytes({required:false,readonly:true}),recipient:new FctAddress({mode:"INPUT"}),deadline:new FctValue({mode:"INPUT"}),amountOut:new FctValue({readonly:true,destination:"wei_amount"}),amountInMaximum:new FctValue({destination:"wei_amount"}),sqrtPriceLimitX96:new FctValue160({required:false})}}},output:{amountIn:new FctValue({})}}},initParams:{methodParams:{params_tuple:{deadline:{type:"global",id:"blockTimestamp"},sqrtPriceLimitX96:"0"}}},overrideSetMethodParams:function(_a){var input=_a.input;return function(params,method){var params_tuple=input.methodParams.params_tuple;if(method==="exactOutput"){params_tuple.path.value=params[0];params_tuple.recipient.value=params[1];params_tuple.deadline.value=params[2];params_tuple.amountOut.value=params[3];input.amountOut.value=params[3];params_tuple.amountInMaximum.value=params[4]}if(method==="exactOutputSingle"){params_tuple.tokenIn.value=params[0];params_tuple.tokenOut.value=params[1];params_tuple.fee.value=params[2];params_tuple.recipient.value=params[3];params_tuple.deadline.value=params[4];params_tuple.amountOut.value=params[5];input.amountOut.value=params[5];params_tuple.amountInMaximum.value=params[6];params_tuple.sqrtPriceLimitX96.value=params[7]}}},calculateValuesOnUserInput:function(_a){var input=_a.input,setMethod=_a.setMethod,provider=_a.provider;var getPathParams=function(_a){return __awaiter$f(void 0,[_a],void 0,function(_b){var tokenInAddress,tokenOutAddress,defaultReturn,amountOut,amount,isSimulationNeeded,decimalsOut,_c,res,_d,tokenIn,tokenOut,fee,sqrtPriceLimitX96,path,_e,amountInMaximum_1,rest_1,_f,amountInMaximum,rest,e_1;var service=_b.service;return __generator$f(this,function(_g){switch(_g.label){case 0:tokenInAddress=input===null||input===void 0?void 0:input.tokenIn.value;tokenOutAddress=input===null||input===void 0?void 0:input.tokenOut.value;defaultReturn={params:{amountIn:undefined,methodParams:{params_tuple:{tokenIn:undefined,tokenOut:undefined,path:undefined,amountInMaximum:undefined,amountOut:undefined}}},error:undefined};if(!tokenInAddress||!tokenOutAddress||typeof tokenInAddress!=="string"||typeof tokenOutAddress!=="string")return[2,defaultReturn];amountOut=input===null||input===void 0?void 0:input.amountOut;amount=amountOut.value;if(amount===undefined)return[2,defaultReturn];isSimulationNeeded=false;if(!(!amount||isVariable(amount)))return[3,4];isSimulationNeeded=true;if(!provider)return[3,2];return[4,getTokenDecimals({address:tokenOutAddress,provider:provider})];case 1:_c=_g.sent();return[3,3];case 2:_c=18;_g.label=3;case 3:decimalsOut=_c;amount="1"+"0".repeat(decimalsOut);_g.label=4;case 4:_g.trys.push([4,6,,7]);return[4,service.create({cmd:"simulateSwap",protocol:"uniswap",token_in:tokenInAddress,token_in_decimals:0,token_out:tokenOutAddress,token_out_decimals:0,token_amount:amount,type:"out",version:"v3"})];case 5:res=_g.sent();if(!res){return[2,{params:{amountIn:undefined,methodParams:{params_tuple:{path:undefined,amountInMaximum:undefined}}},error:"invalid trade"}]}_d=input.methodParams.params_tuple,tokenIn=_d.tokenIn,tokenOut=_d.tokenOut,fee=_d.fee,sqrtPriceLimitX96=_d.sqrtPriceLimitX96,path=_d.path;if(!res.params){return[2,{params:{amountIn:undefined,methodParams:{params_tuple:{path:undefined,amountInMaximum:undefined}}},error:"invalid trade"}]}if(res.name==="exactOutputSingle"){if(setMethod)setMethod("exactOutputSingle");tokenIn.virtual=false;tokenOut.virtual=false;fee.virtual=false;sqrtPriceLimitX96.virtual=false;path.virtual=true;_e=res===null||res===void 0?void 0:res.params,amountInMaximum_1=_e.amountInMaximum,_e.recipient,rest_1=__rest$1(_e,["amountInMaximum","recipient"]);return[2,{params:{amountIn:amountInMaximum_1,methodParams:{params_tuple:__assign$3(__assign$3({},rest_1),{amountInMaximum:amountInMaximum_1})}},isSimulationNeeded:isSimulationNeeded,error:undefined}]}if(res.name!=="exactOutput"){return[2,{params:{amountIn:undefined,methodParams:{params_tuple:{path:undefined,amountOutMinimum:undefined}}},error:"invalid trade"}]}if(setMethod)setMethod("exactOutput");tokenIn.virtual=true;tokenOut.virtual=true;fee.virtual=true;sqrtPriceLimitX96.virtual=true;path.virtual=false;_f=res===null||res===void 0?void 0:res.params,amountInMaximum=_f.amountInMaximum,_f.recipient,rest=__rest$1(_f,["amountInMaximum","recipient"]);return[2,{params:{amountIn:amountInMaximum,methodParams:{params_tuple:__assign$3(__assign$3({},rest),{amountInMaximum:amountInMaximum})}},isSimulationNeeded:isSimulationNeeded,error:undefined}];case 6:e_1=_g.sent();return[2,{params:{amountIn:undefined,methodParams:{params_tuple:{path:undefined,amountInMaximum:undefined}}},error:e_1.message}];case 7:return[2]}})})};return{get:getPathParams,depParamKeys:["tokenIn","tokenOut","amountOut"]}},requiredApprovals:function(params){var tokenIn=params.tokenIn;if(!tokenIn.value||typeof tokenIn.value!=="string")return[];var tokenToApprove=tokenIn.value;return[{to:tokenToApprove,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams["params_tuple"].amountInMaximum.value},method:"approve",protocol:"ERC20"}]},getSubscribtions:function(_a){return[{callback:function(params){if(!params)return;if(!params.amountOut.value)return;params.methodParams.params_tuple.amountOut.setQuiet({value:params.amountOut.value});return},id:"set_amount_by_amountOut_id"}]},assetFlow:function(params,chainId,_walletAddress,vaultAddress){var to=params.to,amountIn=params.amountIn,amountOut=params.amountOut,tokenIn=params.tokenIn,tokenOut=params.tokenOut;if(!to.value||!amountIn.value||!amountOut.value||!tokenIn.value||!tokenOut.value||!vaultAddress)return[];if(typeof to.value!=="string"||typeof amountIn.value!=="string"||typeof amountOut.value!=="string"||typeof tokenIn.value!=="string"||typeof tokenOut.value!=="string")return[];return[{address:vaultAddress,toSpend:[{token:tokenIn.value,amount:amountIn.value}],toReceive:[{token:tokenOut.value,amount:amountOut.value}]}]}});var ExactInputSingle=createPlugin$1({protocol:"UNISWAP_V3",type:"ACTION",method:"exactInputSingle",name:"snipper",supportedContracts:SWAP_ROUTER_ADDRESSES,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{params_tuple:{tokenIn:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),tokenOut:new FctAddress({destination:"erc20",options:getSupportedTokens({chainId:chainId})}),fee:new FctValue24({options:[{value:"500",name:"0.05%"},{value:"3000",name:"0.3%"},{value:"10000",name:"1%"}]}),recipient:new FctAddress({}),deadline:new FctTimestamp({}),amountIn:new FctValue({destination:"wei_amount"}),amountOutMinimum:new FctValue({destination:"wei_amount"}),sqrtPriceLimitX96:new FctValue160({})}}},output:{amountOut:new FctValue({})}}},initParams:{methodParams:{params_tuple:{fee:"3000",deadline:{type:"global",id:"blockTimestamp"},amountOutMinimum:"0",sqrtPriceLimitX96:"0"}}},requiredApprovals:function(params){var tokenIn=params.methodParams["params_tuple"].tokenIn;if(!tokenIn.value||typeof tokenIn.value!=="string")return[];return[{to:tokenIn.value,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams["params_tuple"].amountIn.value},method:"approve",protocol:"ERC20"}]}});var actions$4={SimpleSwapExactInput:SimpleSwapExactInput,SimpleSwapExactOutput:SimpleSwapExactOutput,ExactInputSingle:ExactInputSingle};var getters$2={};var UniswapV3={actions:actions$4,getters:getters$2};var __assign$2=undefined&&undefined.__assign||function(){__assign$2=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$2.apply(this,arguments)};var pluginType={view:"GETTER",payable:"ACTION",nonpayable:"ACTION",pure:"GETTER"};var generateFunctionSignature=function(name,inputs){var params=inputs.map(function(input){return input.type}).join(",");return"".concat(name,"(").concat(params,")")};var isArrayType=function(value){var parsedValue=value.match(/\[[^\]]*\]/);return parsedValue&&parsedValue.length?Boolean(parsedValue[0]):false};var is256Array=function(value){if(!value.includes("256"))return;if(!value.includes("["))return;if(!value.includes("]"))return;return true};var generateParams=function(inputs,isOutput,errors,pluginName){return inputs.reduce(function(acc,input,index){var _a,_b;var type=input.type;var name=input.name;var ioType=isOutput?"output":"input";if(!name){errors.set(pluginName,"One of the ".concat(ioType,"s has no name using key ").concat(type," instead"));name=type}if(!type){throw new Error("".concat(ioType," ").concat(name," has no type. This plugin will not be added to the list"))}if(!isOutput&&(type==="tuple"||type==="tuple{}")){if(!input.components){throw new Error("".concat(ioType," ").concat(name," is a tuple, but has no components. This plugin will not be added to the list"))}return __assign$2(__assign$2({},acc),(_a={},_a["".concat(name,"_").concat(type)]=generateParams(input.components,isOutput,errors,name),_a))}var Parameter=is256Array(type)?FctValueListN:paramsSchemas.find(function(Item){var newItem=new Item({});return newItem.fctType===type});var classInput=isOutput?{innerIndex:index}:{};var paramInstance;if(Parameter){paramInstance=new Parameter(classInput);paramInstance._fctType=type}else{paramInstance=isArrayType(type)?new FctCustomArray(classInput):new FctCustom(classInput);paramInstance._fctType=type}if(isOutput&&type.includes("[]")){var oName=name.replace("[]","");var oType_1=type.replace("[]","");var Parameter_1=paramsSchemas.find(function(Item){var newItem=new Item({});return newItem.fctType===oType_1});var ParamConstructor=void 0;if(Parameter_1){ParamConstructor=Parameter_1}else{ParamConstructor=FctCustom}var params={};for(var n=0;n<5;n++){var innerIndex=n+2;var paramInstance_1=new ParamConstructor({innerIndex:innerIndex,innerType:type});paramInstance_1._fctType=oType_1;var key=n>0?"".concat(oName,"_").concat(n):oName;params[key]=paramInstance_1}return __assign$2(__assign$2({},acc),params)}return __assign$2(__assign$2({},acc),(_b={},_b[name]=paramInstance,_b))},{})};var getPluginsFromABI=function(_a){var abi=_a.abi,protocol=_a.protocol,chainId=_a.chainId,contractAddress=_a.contractAddress,pluginName=_a.pluginName;var supportedContracts=[{chainId:Number(chainId),address:contractAddress}];var errors=new Map;var plugins=abi.filter(function(item){return item.type==="function"}).map(function(item){var name=item.name,inputs=item.inputs,outputs=item.outputs,stateMutability=item.stateMutability;if(!name){errors.set("unknown","One of the functions has no name. This plugin will not be added to the list");return undefined}if(!stateMutability){errors.set(name,"Function ".concat(name," has no stateMutability. This plugin will not be added to the list"));return undefined}try{var transferInputs_1=stateMutability==="payable"?{to:new FctAddress({}),value:new FctValue({})}:{to:new FctAddress({})};var pluginInputs_1=inputs&&inputs.length?generateParams(inputs,false,errors,name):{};var pluginOutputs_1=outputs&&outputs.length?generateParams(outputs,true,errors,name):{};var params={name:pluginName?pluginName:name,description:generateFunctionSignature(name,inputs||[]),plugin:createPlugin$1({protocol:protocol,type:pluginType[stateMutability],method:name,name:pluginName,supportedContracts:supportedContracts,getParams:function(){return{input:__assign$2(__assign$2({},transferInputs_1),{methodParams:pluginInputs_1}),output:pluginOutputs_1}},initParams:{to:supportedContracts.length===1?supportedContracts[0].address:undefined,value:"0"}})};return params}catch(e){console.error({catchederror:e});errors.set(name,e.message);return undefined}}).filter(function(plugin){return Boolean(plugin)});return{errors:errors,plugins:plugins}};var SendETH=createPlugin$1({protocol:"UTILITY",type:"ACTION",description:"Send ETH",method:"",name:"sendETH",getParams:function(){return{input:{to:new FctAddress({}),value:new FctValue({destination:"wei_amount"}),methodParams:{}},output:{}}},initParams:{}});var UnwrapETH=createPlugin$1({protocol:"UTILITY",type:"ACTION",description:"Unwrap WETH into ETH",method:"withdraw",name:"unwrapETH",supportedContracts:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",chainId:1},{address:"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",chainId:5},{address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",chainId:42161},{address:"0x1757f2E7BEE5abE1A79532000d05e32D90dD79fF",chainId:421613},{address:"0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9",chainId:11155111}],getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"wrapped_ether",options:getSupportedContracts({chainId:chainId,contracts:WETH_ADDRESSES})}),methodParams:{amount:new FctValue({destination:"wei_amount"})}},output:{}}}});var WrapETH=createPlugin$1({protocol:"UTILITY",type:"ACTION",description:"Wrap ETH into WETH",method:"deposit",name:"wrapETH",supportedContracts:[{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",chainId:1},{address:"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",chainId:5},{address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",chainId:42161},{address:"0x1757f2E7BEE5abE1A79532000d05e32D90dD79fF",chainId:421613},{address:"0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9",chainId:11155111}],getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({destination:"wrapped_ether",options:getSupportedContracts({chainId:chainId,contracts:WETH_ADDRESSES})}),value:new FctValue({destination:"wei_amount"}),methodParams:{}},output:{}}}});var GetETHBalance=createPlugin$1({protocol:"UTILITY",type:"GETTER",description:"Get native token balance",method:"getEthBalance",name:"getETHBalance",supportedContracts:MULTICALL_ADDRESSES$1,getParams:function(){return{input:{to:new FctAddress({}),methodParams:{address:new FctAddress({})}},output:{balance:new FctValue({destination:"wei_amount",innerIndex:0})}}},initParams:{}});var actions$3={WrapETH:WrapETH,UnwrapETH:UnwrapETH,SendETH:SendETH};var getters$1={GetETHBalance:GetETHBalance};var Utility={actions:actions$3,getters:getters$1};var operatorOptions=[{name:"equal",value:"equal"},{name:"greater than",value:"greater than"},{name:"greater equal than",value:"greater equal than"},{name:"or",value:"or"},{name:"or not",value:"or not"},{name:"and",value:"and"},{name:"and not",value:"and not"},{name:"not equal",value:"not equal"}];var Validate=createPlugin$1({protocol:"VALIDATION_VARIABLE",type:"VALIDATION_VARIABLE",method:"validate",name:"validate",getParams:function(){return{input:{nodeId:new FctString({readonly:true}),methodParams:{id:new FctString({readonly:true}),value1:new FctValue({required:false}),operator:new FctString({options:operatorOptions,mode:"INPUT"}),value2:new FctValue({required:false})}},output:{result:new FctValue({innerIndex:0})}}},onChange:function(_a){var input=_a.input,output=_a.output;var _b=input.methodParams,id=_b.id,value1=_b.value1,operator=_b.operator,value2=_b.value2;output.result.set({value:{id:id.value,type:"validation",value1:value1.value||"",operator:operator.value||"",value2:value2.value||""}})}});var ValidationVariable={getters:{Validate:Validate}};var getyVaults=function(_a){var chainId=_a.chainId;if(chainId==="5")return[];if(chainId==="421613")return[];if(chainId==="42161")return yVaultsArbitrum;return yVaultsMainnet};var __awaiter$e=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$e=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Deposit=createPlugin$1({protocol:"YEARN",type:"ACTION",method:"deposit",description:"Deposit into a Yearn vault",getParams:function(_a){var chainId=_a.chainId,vaultAddress=_a.vaultAddress;return{input:{to:new FctAddress({destination:"yearn_vault",options:getyVaults({chainId:chainId})}),depositToken:new FctAddress({destination:"erc20",readonly:true}),methodParams:{amount:new FctValue({destination:"wei_amount"}),recipient:new FctAddress({value:vaultAddress})}},output:{}}},calculateValuesOnUserInput:function(_a){var _this=this;var input=_a.input,chainId=_a.chainId,provider=_a.provider;var to=input.to,depositToken=input.depositToken,methodParams=input.methodParams;var vaults=getyVaults({chainId:chainId});var getParamsAsync=function(){return __awaiter$e(_this,void 0,void 0,function(){var toValue,asset,tokenContract,symbol,decimals;return __generator$e(this,function(_a){switch(_a.label){case 0:toValue=to.value;if(!toValue)return[2,{params:{depositToken:undefined},error:undefined}];if(typeof toValue!=="string")return[2,{params:{depositToken:undefined},error:undefined}];asset=vaults.find(function(v){return v.value.toLowerCase()===toValue.toLowerCase()});if(!asset)return[2,{params:{depositToken:undefined},error:undefined}];if(!asset.underlyingToken)return[2,{params:{depositToken:undefined},error:undefined}];tokenContract=new Contract(asset.underlyingToken,["function decimals() view returns (uint8 decimals)","function symbol() view returns (string symbol)"],provider);return[4,tokenContract.symbol()];case 1:symbol=_a.sent();return[4,tokenContract.decimals()];case 2:decimals=_a.sent();methodParams.amount.label="".concat(symbol," Amount");methodParams.amount.decimals=decimals;depositToken.value=asset.underlyingToken;depositToken.label=symbol;depositToken.decimals=decimals;return[2,{params:{depositToken:asset.underlyingToken},error:undefined}]}})})};return{get:getParamsAsync,depParamKeys:["to"]}},requiredApprovals:function(params,chainId){var vaults=getyVaults({chainId:chainId});var token=vaults.find(function(vault){if(typeof(params===null||params===void 0?void 0:params.to.value)==="string")return vault.value.toLowerCase()===(params===null||params===void 0?void 0:params.to.value.toLowerCase());return false});if(!token)return[];return[{to:token.underlyingToken,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:params===null||params===void 0?void 0:params.methodParams.amount.value},method:"approve",protocol:"ERC20"}]}});var __awaiter$d=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$d=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Withdraw=createPlugin$1({protocol:"YEARN",type:"ACTION",method:"withdraw",description:"Withdraw from a Yearn vault",getParams:function(_a){var chainId=_a.chainId,vaultAddress=_a.vaultAddress;return{input:{to:new FctAddress({destination:"yearn_vault",options:getyVaults({chainId:chainId})}),receiveToken:new FctAddress({destination:"erc20",readonly:true}),methodParams:{amount:new FctValue({destination:"wei_amount"}),recipient:new FctAddress({value:vaultAddress})}},output:{}}},calculateValuesOnUserInput:function(_a){var _this=this;var input=_a.input,chainId=_a.chainId,provider=_a.provider;var to=input.to,receiveToken=input.receiveToken;var vaults=getyVaults({chainId:chainId});var getParamsAsync=function(){return __awaiter$d(_this,void 0,void 0,function(){var toValue,asset,tokenContract,symbol,decimals;return __generator$d(this,function(_a){switch(_a.label){case 0:toValue=to.value;if(!toValue)return[2,{params:{receiveToken:undefined},error:undefined}];if(typeof toValue!=="string")return[2,{params:{receiveToken:undefined},error:undefined}];asset=vaults.find(function(v){return v.value.toLowerCase()===toValue.toLowerCase()});if(!asset)return[2,{params:{receiveToken:undefined},error:undefined}];if(!asset.underlyingToken)return[2,{params:{receiveToken:undefined},error:undefined}];tokenContract=new Contract(asset.underlyingToken,["function decimals() view returns (uint8 decimals)","function symbol() view returns (string symbol)"],provider);return[4,tokenContract.symbol()];case 1:symbol=_a.sent();return[4,tokenContract.decimals()];case 2:decimals=_a.sent();receiveToken.value=asset.underlyingToken;receiveToken.label=symbol;receiveToken.decimals=decimals;return[2,{params:{receiveToken:asset.underlyingToken},error:undefined}]}})})};return{get:getParamsAsync,depParamKeys:["to"]}}});var actions$2={Deposit:Deposit,Withdraw:Withdraw};var Yearn={actions:actions$2};var cBridgeContracts=[{address:"0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",chainId:1,name:"Celer Bridge Mainnet"},{address:"0x1619DE6B6B20eD217a58d00f37B9d47C7663feca",chainId:42161,name:"Celer Bridge Arbitrum"}];var ethereumMainnetNetworks={mainnet:{name:"Ethereum Mainnet",color:"#29b6af",chainId:1,rpcUrl:"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",blockTime:15e3,iconUrl:"./ETH.png",blockDelay:8,symbol:"ETH",blockExplorerUrl:"https://etherscan.io",tokenSymbolList:["USDC","USDT","WETH","BUSD","DODO","LYRA","DOMI","MCB","IMX","oneDODO","OLO","BOBA","FRAX","ONG"]},bsc:{name:"BSC",color:"#7057ff",chainId:56,rpcUrl:"https://bsc-dataseed.binance.org",blockTime:4e3,iconUrl:"./bsc.png",blockDelay:8,symbol:"BNB",blockExplorerUrl:"https://bscscan.com",tokenSymbolList:["USDC","USDT","WETH","BUSD","DODO","DOMI","MCB","cUSD","oneDODO","OLO","FRAX","SWAY","ONG"]},polygon:{name:"Polygon (Matic)",color:"#3099f2",chainId:137,rpcUrl:"https://polygon-rpc.com",blockTime:4e3,iconUrl:"./polygon.png",blockDelay:80,symbol:"MATIC",blockExplorerUrl:"https://polygonscan.com",tokenSymbolList:["USDC","USDT","WETH","IMX","SWAY"]},arbitrum:{name:"Arbitrum",color:"#ff4a8d",chainId:42161,rpcUrl:"https://arb1.arbitrum.io/rpc",blockTime:4e3,iconUrl:"./arbitrum.png",blockDelay:8,symbol:"ETH",blockExplorerUrl:"https://arbiscan.io",tokenSymbolList:["USDC","USDT","WETH","DODO","MCB","IMX"]},Avalanche:{name:"Avalanche",color:"#3099f2",chainId:43114,rpcUrl:"https://api.avax.network/ext/bc/C/rpc",blockTime:5e3,iconUrl:"./avalanche.png",blockDelay:15,symbol:"AVAX",blockExplorerUrl:"https://snowtrace.io",tokenSymbolList:["USDC","USDT","WETH","IMX"]},Optimism:{name:"Optimism",color:"#3099f2",chainId:10,rpcUrl:"https://mainnet.optimism.io",blockTime:5e3,iconUrl:"./optimism.png",blockDelay:8,symbol:"ETH",blockExplorerUrl:"https://optimistic.etherscan.io",tokenSymbolList:["USDC","USDT","WETH","LYRA"]},Fantom:{name:"Fantom",color:"#3099f2",chainId:250,rpcUrl:"https://rpc.ftm.tools",blockTime:5e3,iconUrl:"./fantom.png",blockDelay:6,symbol:"FTM",blockExplorerUrl:"https://ftmscan.com",tokenSymbolList:["USDC","USDT","WETH"]},BoBa:{name:"Boba Network",color:"#3099f2",chainId:288,rpcUrl:"https://mainnet.boba.network",blockTime:1e4,iconUrl:"./boba.png",blockDelay:8,symbol:"ETH",blockExplorerUrl:"https://blockexplorer.boba.network",tokenSymbolList:["USDC","OLO","BOBA"]}};var getCelerBridgeChainOptions=function(_a){var chainId=_a.chainId;return Object.keys(ethereumMainnetNetworks).map(function(key){var itemKey=key;var celerBridgeChainId=String(ethereumMainnetNetworks[itemKey].chainId);if(celerBridgeChainId===chainId)return;return{value:celerBridgeChainId,chainId:celerBridgeChainId,name:ethereumMainnetNetworks[itemKey].name,symbol:ethereumMainnetNetworks[itemKey].symbol}}).filter(Boolean)};var slippageDefaultOptions=[{value:"3000",name:"0.3%",decimals:4},{value:"5000",name:"0.5%",decimals:4},{value:"10000",name:"1%",decimals:4}];var __awaiter$c=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$c=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Send=createPlugin$1({protocol:"cBridge",type:"ACTION",method:"send",name:"sendToken",supportedContracts:cBridgeContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{receiver:new FctAddress({}),token:new FctAddress({options:chainId==="1"?celerBridgeMainnetTokens:[]}),amount:new FctValue({}),dstChainId:new FctUinteger64({options:getCelerBridgeChainOptions({chainId:chainId})}),nonce:new FctUinteger64({hidden:true,value:generateRandomUint64Number()}),maxSlippage:new FctUinteger32Bps({options:slippageDefaultOptions})}},output:{}}},calculateValuesOnUserInput:function(){var getParamsAsync=function(){return __awaiter$c(void 0,void 0,void 0,function(){return __generator$c(this,function(_a){return[2,{params:{},error:undefined}]})})};return{get:getParamsAsync,depParamKeys:["methodParams.receiver","methodParams.token","methodParams.amount","methodParams.dstChainId","methodParams.maxSlippage"]}},initParams:{methodParams:{dstChainId:"56",maxSlippage:"5000"}},requiredApprovals:function(params){var _a=params.methodParams,token=_a.token,amount=_a.amount;if(!token.value||typeof token.value!=="string")return[];var tokenToApprove=token.value;return[{to:tokenToApprove,params:{spender:params===null||params===void 0?void 0:params.to.value,amount:amount.value},method:"approve",protocol:"ERC20"}]}});var __awaiter$b=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$b=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var SendNative=createPlugin$1({protocol:"cBridge",type:"ACTION",method:"sendNative",name:"sendETH",supportedContracts:cBridgeContracts,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),value:new FctValue({hidden:true}),methodParams:{receiver:new FctAddress({}),amount:new FctValue({decimals:18}),dstChainId:new FctUinteger64({options:getCelerBridgeChainOptions({chainId:chainId})}),nonce:new FctUinteger64({hidden:true,value:generateRandomUint64Number()}),maxSlippage:new FctUinteger32Bps({options:slippageDefaultOptions})}},output:{}}},calculateValuesOnUserInput:function(_a){var input=_a.input;var getParamsAsync=function(){return __awaiter$b(void 0,void 0,void 0,function(){var value,amount;return __generator$b(this,function(_a){try{value=input.value,amount=input.methodParams.amount;value.set({value:amount.value});return[2,{params:{value:amount.value},error:undefined}]}catch(e){console.log({error:e});return[2,{params:{value:undefined},error:(e===null||e===void 0?void 0:e.message)||(e===null||e===void 0?void 0:e.response)}]}return[2]})})};return{get:getParamsAsync,depParamKeys:["methodParams.receiver","methodParams.amount","methodParams.dstChainId","methodParams.maxSlippage"]}},initParams:{methodParams:{dstChainId:"56",maxSlippage:"5000"}}});var actions$1={Send:Send,SendNative:SendNative};var cBridge={actions:actions$1};var Magic$1=createPlugin$1({protocol:"MAGIC",type:"LIBRARY",method:"magic",usePureMethod:true,name:"magic",supportedContracts:[{chainId:1,address:"0x50Bb8165Dd11d41ef2fE90f96b5041F90966E8A7"},{chainId:5,address:"0x23D560eF20B57A87489D3Ec72D3789E73DF90424"},{chainId:11155111,address:"0xc074EEC205576C657a8EBDFeA8FCCd1a2924f193"}],getParams:function(){return{input:{to:new FctAddress({}),methodParams:{}},output:{}}}});var actions={Magic:Magic$1};var Magic={actions:actions};var supportedContracts=[{chainId:11155111,address:"0xa8495034DB817013D8C8eF0DBb3d0D595d3a8D4e"}];var ValidateSignature=createPlugin$1({protocol:"SingersValidator",type:"GETTER",method:"validateSignature",supportedContracts:supportedContracts,falseMeansFail:true,getParams:function(_a){return{input:{to:new FctAddress({}),methodParams:{messageHash:new FctBytes32({}),valuesHash:new FctBytes32({}),signer:new FctAddress({}),r:new FctBytes32({}),sv:new FctBytes32({})}},output:{result:new FctBoolean({})}}}});var getters={ValidateSignature:ValidateSignature};var SingersValidator={getters:getters};var plugins=Object.freeze({__proto__:null,AaveV2:AaveV2,AaveV3:AaveV3,ChainLink:ChainLink,CompoundV2:CompoundV2,CompoundV3:CompoundV3,ComputedVariable:ComputedVariable,Curve:Curve,ERC1155:ERC1155,ERC20:ERC20,ERC721:ERC721,FCT_UNISWAP:FCT_UNISWAP,GMX:GMX,Inch:Inch,KIROBO_MULTICALL_CSV:KIROBO_MULTICALL_CSV,Lido:Lido,Magic:Magic,Paraswap:Paraswap,RadiantV2:RadiantV2,RocketPool:RocketPool,SecureStorage:SecureStorage,SingersValidator:SingersValidator,Sushiswap:Sushiswap$1,TokenValidator:TokenValidator,TokensMath:TokensMath,Uniswap:Uniswap$1,UniswapV3:UniswapV3,Utility:Utility,ValidationVariable:ValidationVariable,Yearn:Yearn,cBridge:cBridge});var GetAssetsPrices=createPlugin$1({protocol:"AAVE",type:"ORACLE",method:"getAssetsPrices",supportedContracts:PRICE_ORACLE_ADDRESSES$1,getParams:function(_a){var chainId=_a.chainId;return{input:{to:new FctAddress({}),methodParams:{assets:new FctAddressList({options:getAaveTokens({chainId:chainId})})}},output:{prices:new FctValueList({destination:"amount_list"})}}}});var BigNumberZD=BigNumber.clone({DECIMAL_PLACES:0,ROUNDING_MODE:BigNumber.ROUND_DOWN});function valueToBigNumber(amount){return new BigNumber(amount)}function valueToZDBigNumber(amount){return new BigNumberZD(amount)}var bn10=new BigNumber(10);var bn10PowLookup={};function pow10(decimals){if(!bn10PowLookup[decimals])bn10PowLookup[decimals]=bn10.pow(decimals);return bn10PowLookup[decimals]}function normalize(n,decimals){return normalizeBN(n,decimals).toString(10)}function normalizeBN(n,decimals){return valueToBigNumber(n).dividedBy(pow10(decimals))}var RAY_DECIMALS=27;var WAD=valueToZDBigNumber(10).pow(18);WAD.dividedBy(2);var RAY$1=valueToZDBigNumber(10).pow(27);var HALF_RAY=RAY$1.dividedBy(2);valueToZDBigNumber(10).pow(9);function rayMul(a,b){return HALF_RAY.plus(valueToZDBigNumber(a).multipliedBy(b)).div(RAY$1)}function rayPow(a,p){var x=valueToZDBigNumber(a);var n=valueToZDBigNumber(p);var z=!n.modulo(2).eq(0)?x:valueToZDBigNumber(RAY$1);for(n=n.div(2);!n.eq(0);n=n.div(2)){x=rayMul(x,x);if(!n.modulo(2).eq(0)){z=rayMul(z,x)}}return z}var __extends$3=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign$1=undefined&&undefined.__assign||function(){__assign$1=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign$1.apply(this,arguments)};var __awaiter$a=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$a=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$4=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$3=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var RAY=new BigNumber(Math.pow(10,27));var SECONDS_PER_YEAR=31536e3;var AaveHelper=function(_super){__extends$3(AaveHelper,_super);function AaveHelper(){var _this=_super.apply(this,__spreadArray$3([],__read$4(arguments),false))||this;_this.RAY=RAY;_this.SECONDS_PER_YEAR=SECONDS_PER_YEAR;_this.createContract=function(_a){var address=_a.address,contractInterface=_a.contractInterface,returns=_a.returns;var contract=new Contract(address,new Interface$1(["function ".concat(contractInterface," view ").concat(returns)]),_this.library);return contract};_this.getAssetPrice=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var getAssetPrice,contract,call,values,data,priceInEth,e_1;var asset=_b.asset,usdPriceEth=_b.usdPriceEth;return __generator$a(this,function(_c){switch(_c.label){case 0:getAssetPrice=new AaveV2.getters.GetAssetPrice({chainId:String(this.chainId),initParams:{methodParams:{asset:asset}}});contract=this.createContract({address:getAssetPrice.input.params.to.value,contractInterface:getAssetPrice.contractInterface,returns:getAssetPrice.contractInterfaceReturns});return[4,getAssetPrice.create()];case 1:call=_c.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_c.label=2;case 2:_c.trys.push([2,4,,5]);return[4,contract.getAssetPrice.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data=_c.sent();if(!data)return[2,undefined];priceInEth=normalize(data.toString(),18);return[2,{wei:data.toString(),eth:priceInEth,usd:usdPriceEth?new BigNumber(priceInEth).multipliedBy(usdPriceEth).toFixed(2):undefined}];case 4:e_1=_c.sent();console.error(e_1);return[2,undefined];case 5:return[2]}})})};_this.getAssetsPrices=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var getAssetsPrices,assetsParams,filtredAssets,assetsAddresses,contract,call,values,data_1,e_2;var _c;var usdPriceEth=_b.usdPriceEth,assets=_b.assets;return __generator$a(this,function(_d){switch(_d.label){case 0:getAssetsPrices=new GetAssetsPrices({chainId:String(this.chainId)});assetsParams=getAssetsPrices.input.methodParams.assets;filtredAssets=assets?(_c=assetsParams.options)===null||_c===void 0?void 0:_c.filter(function(a){var value=a.value.toLocaleLowerCase();return assets.map(function(asset){return asset.toLocaleLowerCase()}).includes(value)}):assetsParams.options;if(!(filtredAssets===null||filtredAssets===void 0?void 0:filtredAssets.length)){console.error("assets ".concat(assets," not found"));return[2,[]]}assetsAddresses=filtredAssets.map(function(asset){return asset.value});assetsParams.set({value:assetsAddresses});contract=this.createContract({address:getAssetsPrices.input.params.to.value,contractInterface:getAssetsPrices.contractInterface,returns:getAssetsPrices.contractInterfaceReturns});return[4,getAssetsPrices.create()];case 1:call=_d.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_d.label=2;case 2:_d.trys.push([2,4,,5]);return[4,contract.getAssetsPrices.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data_1=_d.sent();if(!data_1)return[2,undefined];return[2,filtredAssets===null||filtredAssets===void 0?void 0:filtredAssets.map(function(asset,i){var priceInEth=normalize(data_1[i].toString(),18);return __assign$1({wei:data_1[i].toString(),eth:priceInEth,usd:usdPriceEth?new BigNumber(priceInEth).multipliedBy(usdPriceEth).toFixed(2):undefined},asset)})];case 4:e_2=_d.sent();console.error(e_2);return[2,undefined];case 5:return[2]}})})};_this.getAssetAvailableBorrowPower=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var userAccountData,availableBorrowsETH,availableBorrowEth,assetEthPrice,availableBorrowEthETH,assetBorrowPower,assetBorrowPowerUsd;var asset=_b.asset,account=_b.account,usdPriceEth=_b.usdPriceEth;return __generator$a(this,function(_c){switch(_c.label){case 0:return[4,this.getUserAccountData({account:account})];case 1:userAccountData=_c.sent();if(!userAccountData){return[2]}availableBorrowsETH=userAccountData.availableBorrowsETH;availableBorrowEth=new BigNumber(availableBorrowsETH);return[4,this.getAssetPrice({asset:asset,usdPriceEth:usdPriceEth})];case 2:assetEthPrice=_c.sent();if(!assetEthPrice){return[2]}availableBorrowEthETH=normalize(availableBorrowEth,18);assetBorrowPower=new BigNumber(availableBorrowEthETH).dividedBy(assetEthPrice.eth).multipliedBy(.99);assetBorrowPowerUsd=assetEthPrice.usd?assetBorrowPower.multipliedBy(assetEthPrice.usd).toFixed(2):undefined;return[2,{eth:assetBorrowPower.toString(),usd:assetBorrowPowerUsd}]}})})};_this.getReserveTokensAddresses=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var reserveTokensAddresses,contract,data,e_3;var asset=_b.asset;return __generator$a(this,function(_c){switch(_c.label){case 0:reserveTokensAddresses=new AaveV2.getters.GetReserveTokensAddresses({chainId:String(this.chainId),initParams:{methodParams:{asset:asset}}});contract=this.createContract({address:reserveTokensAddresses.input.params.to.value,contractInterface:reserveTokensAddresses.contractInterface,returns:reserveTokensAddresses.contractInterfaceReturns});_c.label=1;case 1:_c.trys.push([1,3,,4]);return[4,contract.getReserveTokensAddresses(asset,{from:this.account})];case 2:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{aTokenAddress:data[0],stableDebtTokenAddress:data[1],variableDebtTokenAddress:data[2]}];case 3:e_3=_c.sent();console.error(e_3);return[2,undefined];case 4:return[2]}})})};_this.getReserveTokensAddressesV3=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var reserveTokensAddresses,contract,data,e_4;var asset=_b.asset;return __generator$a(this,function(_c){switch(_c.label){case 0:reserveTokensAddresses=new AaveV3.getters.GetReserveData({chainId:String(this.chainId),initParams:{methodParams:{asset:asset}}});contract=this.createContract({address:reserveTokensAddresses.input.params.to.value,contractInterface:reserveTokensAddresses.contractInterface,returns:reserveTokensAddresses.contractInterfaceReturns});_c.label=1;case 1:_c.trys.push([1,3,,4]);return[4,contract.getReserveData(asset,{from:this.account})];case 2:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{aTokenAddress:data[8],stableDebtTokenAddress:data[9],variableDebtTokenAddress:data[10],underlyingAssetAddress:asset}];case 3:e_4=_c.sent();console.error(e_4);return[2,undefined];case 4:return[2]}})})};_this.getUserAssetBalance=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var balances;var asset=_b.asset,account=_b.account,usdPriceEth=_b.usdPriceEth;return __generator$a(this,function(_c){switch(_c.label){case 0:return[4,this.getUserAssetsBalances({account:account,usdPriceEth:usdPriceEth,options:{assets:[asset]}})];case 1:balances=_c.sent();if(!balances)return[2];return[2,balances[0]]}})})};_this.getUserAssetsBalances=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var assets,sortBy,prices,balances;var _this=this;var account=_b.account,usdPriceEth=_b.usdPriceEth,_c=_b.options,options=_c===void 0?{}:_c;return __generator$a(this,function(_d){switch(_d.label){case 0:assets=options.assets;sortBy=options.sortBy?options.sortBy:"wallet";return[4,this.getAssetsPrices({usdPriceEth:usdPriceEth,assets:assets})];case 1:prices=_d.sent();if(!prices){return[2]}return[4,Promise.all(prices.map(function(price){return __awaiter$a(_this,void 0,void 0,function(){var value,usd,symbol,decimals,logoURI,name,asset,address,userReserveData,currentATokenBalance,currentStableDebt,currentVariableDebt,currentSupplyEth,currentStableDebtEth,currentVariableDebtEth,erc20Contract,walletBallanceWei,walletBallanceEth,walletBalanceEthUsd,currentSupplyEthUsd,currentStableDebtUsd,currentVariableDebtUsd,apy;return __generator$a(this,function(_a){switch(_a.label){case 0:value=price.value,usd=price.usd,symbol=price.symbol,decimals=price.decimals,logoURI=price.logoURI,name=price.name;asset=value;address=value;return[4,this.getUserReserveData({account:account,asset:asset})];case 1:userReserveData=_a.sent();if(!userReserveData){return[2]}currentATokenBalance=userReserveData.currentATokenBalance,currentStableDebt=userReserveData.currentStableDebt,currentVariableDebt=userReserveData.currentVariableDebt;currentSupplyEth=normalize(currentATokenBalance,18);currentStableDebtEth=normalize(currentStableDebt,18);currentVariableDebtEth=normalize(currentVariableDebt,18);erc20Contract=new Contract(asset,["function balanceOf(address _owner) view returns (uint256 balance)"],this.library);return[4,erc20Contract.balanceOf(account)];case 2:walletBallanceWei=_a.sent().toString();walletBallanceEth=normalize(walletBallanceWei,decimals||18);walletBalanceEthUsd=usd?new BigNumber(walletBallanceEth).multipliedBy(usd).toFixed(2):undefined;currentSupplyEthUsd=usd?new BigNumber(currentSupplyEth).multipliedBy(usd).toFixed(2):undefined;currentStableDebtUsd=usd?new BigNumber(currentStableDebtEth).multipliedBy(usd).toFixed(2):undefined;currentVariableDebtUsd=usd?new BigNumber(currentVariableDebtEth).multipliedBy(usd).toFixed(2):undefined;return[4,this.getAssetAPY({asset:asset})];case 3:apy=_a.sent();return[2,{wallet:{eth:walletBallanceEth,usd:walletBalanceEthUsd,apy:apy===null||apy===void 0?void 0:apy.supplyAPY},supplied:{eth:currentSupplyEth,usd:currentSupplyEthUsd,apy:apy===null||apy===void 0?void 0:apy.supplyAPY},stableDebt:{eth:currentStableDebtEth,usd:currentStableDebtUsd,apy:apy===null||apy===void 0?void 0:apy.stableBorrowAPY},variableDebt:{eth:currentVariableDebtEth,usd:currentVariableDebtUsd,apy:apy===null||apy===void 0?void 0:apy.variableBorrowAPY},address:address,symbol:symbol,name:name,decimals:decimals,logoURI:logoURI}]}})})}))];case 2:balances=_d.sent();return[2,balances.sort(function(price1,price2){if(!price1)return 1;if(!price2)return-1;return new BigNumber(price1[sortBy].usd||price1[sortBy].eth||"0").gte(price2[sortBy].usd||price2[sortBy].eth||"0")?-1:1})]}})})};_this.getUserReserveData=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var userReserveData,contract,call,values,data,e_5;var asset=_b.asset,account=_b.account;return __generator$a(this,function(_c){switch(_c.label){case 0:userReserveData=new AaveV2.getters.GetUserReserveData({chainId:String(this.chainId),initParams:{methodParams:{asset:asset,user:account}}});contract=this.createContract({address:userReserveData.input.params.to.value,contractInterface:userReserveData.contractInterface,returns:userReserveData.contractInterfaceReturns});return[4,userReserveData.create()];case 1:call=_c.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_c.label=2;case 2:_c.trys.push([2,4,,5]);return[4,contract.getUserReserveData.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{currentATokenBalance:data[0].toString(),currentStableDebt:data[1].toString(),currentVariableDebt:data[2].toString(),principalStableDebt:data[3].toString(),scaledVariableDebt:data[4].toString(),stableBorrowRate:data[5].toString(),liquidityRate:data[6].toString(),stableRateLastUpdated:data[7],usageAsCollateralEnabled:data[8]}];case 4:e_5=_c.sent();console.error(e_5);return[2,undefined];case 5:return[2]}})})};_this.getUserAccountData=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var userAccountData,contract,call,values,data,e_6;var account=_b.account;return __generator$a(this,function(_c){switch(_c.label){case 0:userAccountData=new AaveV2.getters.GetUserAccountData({chainId:String(this.chainId),initParams:{methodParams:{user:account}}});contract=this.createContract({address:userAccountData.input.params.to.value,contractInterface:userAccountData.contractInterface,returns:userAccountData.contractInterfaceReturns});return[4,userAccountData.create()];case 1:call=_c.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_c.label=2;case 2:_c.trys.push([2,4,,5]);return[4,contract.getUserAccountData.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{totalCollateralETH:data[0].toString(),totalDebtETH:data[1].toString(),availableBorrowsETH:data[2].toString(),currentLiquidationThreshold:data[3].toString(),ltv:data[4].toString(),healthFactor:data[5].toString()}];case 4:e_6=_c.sent();console.error(e_6);return[2,undefined];case 5:return[2]}})})};_this.getReserveData=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var userReserveData,contract,call,values,data,e_7;var asset=_b.asset;return __generator$a(this,function(_c){switch(_c.label){case 0:userReserveData=new AaveV2.getters.GetReserveData({chainId:String(this.chainId),initParams:{methodParams:{asset:asset}}});contract=this.createContract({address:userReserveData.input.params.to.value,contractInterface:userReserveData.contractInterface,returns:userReserveData.contractInterfaceReturns});return[4,userReserveData.create()];case 1:call=_c.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_c.label=2;case 2:_c.trys.push([2,4,,5]);return[4,contract.getReserveData.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{configuratio:data[0].toString(),liquidityIndex:data[1].toString(),variableBorrowIndex:data[2].toString(),currentLiquidityRate:data[3].toString(),currentVariableBorrowRate:data[4].toString(),currentStableBorrowRate:data[5].toString(),lastUpdateTimestamp:data[6].toString(),aTokenAddress:data[7],stableDebtTokenAddress:data[9],variableDebtTokenAddress:data[10],interestRateStrategyAddress:data[11],id:data[12]}];case 4:e_7=_c.sent();console.error(e_7);return[2,undefined];case 5:return[2]}})})};_this.getAssetReserveData=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var reserveDataProvider,contract,call,values,data,e_8;var asset=_b.asset;return __generator$a(this,function(_c){switch(_c.label){case 0:reserveDataProvider=new AaveV2.getters.GetAssetReserveData({chainId:String(this.chainId),initParams:{methodParams:{asset:asset}}});contract=this.createContract({address:reserveDataProvider.input.params.to.value,contractInterface:reserveDataProvider.contractInterface,returns:reserveDataProvider.contractInterfaceReturns});return[4,reserveDataProvider.create()];case 1:call=_c.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_c.label=2;case 2:_c.trys.push([2,4,,5]);return[4,contract.getReserveData.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{availableLiquidity:data[0].toString(),totalStableDebt:data[1].toString(),totalVariableDebt:data[2].toString(),supplyRate:data[3].toString(),variableBorrowRate:data[4].toString(),stableBorrowRate:data[5].toString(),averageStableBorrowRate:data[6].toString(),liquidityIndex:data[6].toString(),variableBorrowIndex:data[8].toString(),lastUpdateTimestamp:data[9].toString()}];case 4:e_8=_c.sent();console.error(e_8);return[2,undefined];case 5:return[2]}})})};_this.getAssetReserveDataV3=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var reserveDataProvider,contract,call,values,data,e_9;var asset=_b.asset;return __generator$a(this,function(_c){switch(_c.label){case 0:reserveDataProvider=new AaveV3.getters.GetReserveData({chainId:String(this.chainId),initParams:{methodParams:{asset:asset}}});contract=this.createContract({address:reserveDataProvider.input.params.to.value,contractInterface:reserveDataProvider.contractInterface,returns:reserveDataProvider.contractInterfaceReturns});return[4,reserveDataProvider.create()];case 1:call=_c.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_c.label=2;case 2:_c.trys.push([2,4,,5]);return[4,contract.getReserveData.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{availableLiquidity:data[0].toString(),totalStableDebt:data[1].toString(),totalVariableDebt:data[2].toString(),supplyRate:data[3].toString(),variableBorrowRate:data[4].toString(),stableBorrowRate:data[5].toString(),averageStableBorrowRate:data[6].toString(),liquidityIndex:data[6].toString(),variableBorrowIndex:data[8].toString(),lastUpdateTimestamp:data[9].toString()}];case 4:e_9=_c.sent();console.error(e_9);return[2,undefined];case 5:return[2]}})})};_this.getReserveConfigurationData=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var reserveConfigurationData,contract,call,values,data,e_10;var asset=_b.asset;return __generator$a(this,function(_c){switch(_c.label){case 0:reserveConfigurationData=new AaveV2.getters.GetReserveConfigurationData({chainId:String(this.chainId),initParams:{methodParams:{asset:asset}}});contract=this.createContract({address:reserveConfigurationData.input.params.to.value,contractInterface:reserveConfigurationData.contractInterface,returns:reserveConfigurationData.contractInterfaceReturns});return[4,reserveConfigurationData.create()];case 1:call=_c.sent();values=call===null||call===void 0?void 0:call.params.map(function(param){return param.value});_c.label=2;case 2:_c.trys.push([2,4,,5]);return[4,contract.getReserveConfigurationData.apply(contract,__spreadArray$3(__spreadArray$3([],__read$4(values),false),[{from:this.account}],false))];case 3:data=_c.sent();if(!data||typeof data!=="object"||!data.length)return[2,undefined];return[2,{decimals:data[0].toString(),ltv:data[1].toString(),liquidationThreshold:data[2].toString(),liquidationBonus:data[3].toString(),reserveFactor:data[4].toString(),usageAsCollateralEnabled:data[5],borrowingEnabled:data[6],stableBorrowRateEnabled:data[7],isActive:data[8],isFrozen:data[9]}];case 4:e_10=_c.sent();console.error(e_10);return[2,undefined];case 5:return[2]}})})};_this.getAssetAPY=function(_a){return __awaiter$a(_this,[_a],void 0,function(_b){var RAY,SECONDS_PER_YEAR,reserveData,_c,supplyRate,variableBorrowRate,stableBorrowRate,supplyAPY,variableBorrowAPY,stableBorrowAPY;var asset=_b.asset,version=_b.version;return __generator$a(this,function(_d){switch(_d.label){case 0:RAY=this.RAY;SECONDS_PER_YEAR=this.SECONDS_PER_YEAR;if(!(version==="V3"))return[3,2];return[4,this.getAssetReserveDataV3({asset:asset})];case 1:_c=_d.sent();return[3,4];case 2:return[4,this.getAssetReserveData({asset:asset})];case 3:_c=_d.sent();_d.label=4;case 4:reserveData=_c;if(!reserveData)return[2,undefined];supplyRate=reserveData.supplyRate,variableBorrowRate=reserveData.variableBorrowRate,stableBorrowRate=reserveData.stableBorrowRate;supplyAPY=rayPow(valueToZDBigNumber(new BigNumber(supplyRate)).dividedBy(SECONDS_PER_YEAR).plus(RAY),SECONDS_PER_YEAR).minus(RAY);variableBorrowAPY=rayPow(valueToZDBigNumber(new BigNumber(variableBorrowRate)).dividedBy(SECONDS_PER_YEAR).plus(RAY),SECONDS_PER_YEAR).minus(RAY);stableBorrowAPY=rayPow(valueToZDBigNumber(new BigNumber(stableBorrowRate)).dividedBy(SECONDS_PER_YEAR).plus(RAY),SECONDS_PER_YEAR).minus(RAY);return[2,{supplyAPY:normalize(supplyAPY.multipliedBy(100),RAY_DECIMALS),stableBorrowAPY:normalize(stableBorrowAPY.multipliedBy(100),RAY_DECIMALS),variableBorrowAPY:normalize(variableBorrowAPY.multipliedBy(100),RAY_DECIMALS),asset:asset}]}})})};_this.getAssetRateByApy=getAssetRateByApy;_this.getAssetAPYByRate=function(_a){var rate=_a.rate;var RAY=_this.RAY;var SECONDS_PER_YEAR=_this.SECONDS_PER_YEAR;var apy=rayPow(valueToZDBigNumber(new BigNumber(rate)).dividedBy(SECONDS_PER_YEAR).plus(RAY),SECONDS_PER_YEAR).minus(RAY);return{apy:normalize(apy.multipliedBy(100),RAY_DECIMALS)}};return _this}return AaveHelper}(Config);var __extends$2=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __awaiter$9=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$9=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$3=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$2=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var ChainLinkHelper=function(_super){__extends$2(ChainLinkHelper,_super);function ChainLinkHelper(){var _this=_super.apply(this,__spreadArray$2([],__read$3(arguments),false))||this;_this.getLatestRoundData=function(pairAddress){return __awaiter$9(_this,void 0,void 0,function(){var latestRoundData,contract,res_1,outputs_1,params_1,e_1;return __generator$9(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);latestRoundData=new LatestRoundData({chainId:String(this.chainId)});contract=new Contract(pairAddress,new Interface(["function ".concat(latestRoundData.contractInterface," view ").concat(latestRoundData.contractInterfaceReturns)]),this.library);return[4,contract.latestRoundData()];case 1:res_1=_a.sent();if(!res_1){console.error("latestRoundData request error for pair ".concat(pairAddress));return[2,undefined]}outputs_1=latestRoundData.output.params;params_1={};Object.keys(outputs_1).forEach(function(key,i){var outputKey=key;params_1[outputKey]=res_1[i].toString()});return[2,params_1];case 2:e_1=_a.sent();console.error(e_1);return[2];case 3:return[2]}})})};_this.getPriceDecimals=function(pairAddress){return __awaiter$9(_this,void 0,void 0,function(){var dataFeedDecimals,contract,res,e_2;return __generator$9(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);dataFeedDecimals=new DataFeedDecimals({chainId:String(this.chainId)});contract=new Contract(pairAddress,new Interface(["function ".concat(dataFeedDecimals.contractInterface," view ").concat(dataFeedDecimals.contractInterfaceReturns)]),this.library);return[4,contract.decimals()];case 1:res=_a.sent();if(!res){console.error("decimals request error for pair ".concat(pairAddress));return[2,undefined]}return[2,res.toString()];case 2:e_2=_a.sent();console.error(e_2);return[2];case 3:return[2]}})})};return _this}return ChainLinkHelper}(Config);var ParaswapAugustusSwapperABI=[{inputs:[{internalType:"address payable",name:"_feeWallet",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"adapter",type:"address"}],name:"AdapterInitialized",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"address",name:"account",type:"address"},{indexed:true,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"address",name:"account",type:"address"},{indexed:true,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"router",type:"address"}],name:"RouterInitialized",type:"event"},{stateMutability:"payable",type:"fallback"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"ROUTER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"WHITELISTED_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getAdapterData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFeeWallet",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"partner",type:"address"}],name:"getPartnerFeeStructure",outputs:[{components:[{internalType:"uint256",name:"partnerShare",type:"uint256"},{internalType:"bool",name:"noPositiveSlippage",type:"bool"},{internalType:"bool",name:"positiveSlippageToUser",type:"bool"},{internalType:"uint16",name:"feePercent",type:"uint16"},{internalType:"string",name:"partnerId",type:"string"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct AugustusStorage.FeeStructure",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getRouterData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenTransferProxy",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"adapter",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"initializeAdapter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"router",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"initializeRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"isAdapterInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"isRouterInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"partner",type:"address"},{internalType:"uint256",name:"_partnerShare",type:"uint256"},{internalType:"bool",name:"_noPositiveSlippage",type:"bool"},{internalType:"bool",name:"_positiveSlippageToUser",type:"bool"},{internalType:"uint16",name:"_feePercent",type:"uint16"},{internalType:"string",name:"partnerId",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"registerPartner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"_feeWallet",type:"address"}],name:"setFeeWallet",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"address",name:"implementation",type:"address"}],name:"setImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address payable",name:"destination",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"},{anonymous:false,inputs:[{indexed:false,internalType:"bytes16",name:"uuid",type:"bytes16"},{indexed:false,internalType:"address",name:"initiator",type:"address"},{indexed:true,internalType:"address",name:"beneficiary",type:"address"},{indexed:true,internalType:"address",name:"srcToken",type:"address"},{indexed:true,internalType:"address",name:"destToken",type:"address"},{indexed:false,internalType:"uint256",name:"srcAmount",type:"uint256"},{indexed:false,internalType:"uint256",name:"receivedAmount",type:"uint256"}],name:"Bought",type:"event"},{anonymous:false,inputs:[{indexed:false,internalType:"uint256",name:"fee",type:"uint256"},{indexed:false,internalType:"uint256",name:"partnerShare",type:"uint256"},{indexed:false,internalType:"uint256",name:"paraswapShare",type:"uint256"}],name:"FeeTaken",type:"event"},{anonymous:false,inputs:[{indexed:false,internalType:"bytes16",name:"uuid",type:"bytes16"},{indexed:false,internalType:"address",name:"initiator",type:"address"},{indexed:true,internalType:"address",name:"beneficiary",type:"address"},{indexed:true,internalType:"address",name:"srcToken",type:"address"},{indexed:true,internalType:"address",name:"destToken",type:"address"},{indexed:false,internalType:"uint256",name:"srcAmount",type:"uint256"},{indexed:false,internalType:"uint256",name:"receivedAmount",type:"uint256"},{indexed:false,internalType:"uint256",name:"expectedAmount",type:"uint256"}],name:"Swapped",type:"event"},{inputs:[{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"buyOnUniswap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"},{internalType:"bytes32",name:"initCode",type:"bytes32"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"buyOnUniswapFork",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address",name:"weth",type:"address"},{internalType:"uint256[]",name:"pools",type:"uint256[]"}],name:"buyOnUniswapV2Fork",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address payable",name:"beneficiary",type:"address"},{components:[{internalType:"uint256",name:"fromAmountPercent",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"totalNetworkFee",type:"uint256"},{components:[{internalType:"address payable",name:"adapter",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"uint256",name:"networkFee",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"address",name:"targetExchange",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"bytes",name:"payload",type:"bytes"},{internalType:"uint256",name:"networkFee",type:"uint256"}],internalType:"struct Utils.Route[]",name:"route",type:"tuple{}"}],internalType:"struct Utils.Adapter[]",name:"adapters",type:"tuple{}"}],internalType:"struct Utils.Path[]",name:"path",type:"tuple{}"}],internalType:"struct Utils.MegaSwapPath[]",name:"path",type:"tuple{}"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.MegaSwapSellData",name:"data",type:"tuple"}],name:"megaSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address payable",name:"beneficiary",type:"address"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"totalNetworkFee",type:"uint256"},{components:[{internalType:"address payable",name:"adapter",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"uint256",name:"networkFee",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"address",name:"targetExchange",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"bytes",name:"payload",type:"bytes"},{internalType:"uint256",name:"networkFee",type:"uint256"}],internalType:"struct Utils.Route[]",name:"route",type:"tuple{}"}],internalType:"struct Utils.Adapter[]",name:"adapters",type:"tuple{}"}],internalType:"struct Utils.Path[]",name:"path",type:"tuple{}"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.SellData",name:"data",type:"tuple"}],name:"multiSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address payable",name:"beneficiary",type:"address"},{components:[{internalType:"uint256",name:"fromAmountPercent",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"totalNetworkFee",type:"uint256"},{components:[{internalType:"address payable",name:"adapter",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"uint256",name:"networkFee",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"address",name:"targetExchange",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"bytes",name:"payload",type:"bytes"},{internalType:"uint256",name:"networkFee",type:"uint256"}],internalType:"struct Utils.Route[]",name:"route",type:"tuple{}"}],internalType:"struct Utils.Adapter[]",name:"adapters",type:"tuple{}"}],internalType:"struct Utils.Path[]",name:"path",type:"tuple{}"}],internalType:"struct Utils.MegaSwapPath[]",name:"path",type:"tuple{}"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.MegaSwapSellData",name:"data",type:"tuple"}],name:"protectedMegaSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address payable",name:"beneficiary",type:"address"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"totalNetworkFee",type:"uint256"},{components:[{internalType:"address payable",name:"adapter",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"uint256",name:"networkFee",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"address",name:"targetExchange",type:"address"},{internalType:"uint256",name:"percent",type:"uint256"},{internalType:"bytes",name:"payload",type:"bytes"},{internalType:"uint256",name:"networkFee",type:"uint256"}],internalType:"struct Utils.Route[]",name:"route",type:"tuple{}"}],internalType:"struct Utils.Adapter[]",name:"adapters",type:"tuple{}"}],internalType:"struct Utils.Path[]",name:"path",type:"tuple{}"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.SellData",name:"data",type:"tuple"}],name:"protectedMultiSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"address",name:"toToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address[]",name:"callees",type:"address[]"},{internalType:"bytes",name:"exchangeData",type:"bytes"},{internalType:"uint256[]",name:"startIndexes",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"address payable",name:"beneficiary",type:"address"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.SimpleData",name:"data",type:"tuple"}],name:"protectedSimpleBuy",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"address",name:"toToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address[]",name:"callees",type:"address[]"},{internalType:"bytes",name:"exchangeData",type:"bytes"},{internalType:"uint256[]",name:"startIndexes",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"address payable",name:"beneficiary",type:"address"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.SimpleData",name:"data",type:"tuple"}],name:"protectedSimpleSwap",outputs:[{internalType:"uint256",name:"receivedAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"address",name:"toToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address[]",name:"callees",type:"address[]"},{internalType:"bytes",name:"exchangeData",type:"bytes"},{internalType:"uint256[]",name:"startIndexes",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"address payable",name:"beneficiary",type:"address"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.SimpleData",name:"data",type:"tuple"}],name:"simpleBuy",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"address",name:"toToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"toAmount",type:"uint256"},{internalType:"uint256",name:"expectedAmount",type:"uint256"},{internalType:"address[]",name:"callees",type:"address[]"},{internalType:"bytes",name:"exchangeData",type:"bytes"},{internalType:"uint256[]",name:"startIndexes",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"address payable",name:"beneficiary",type:"address"},{internalType:"address payable",name:"partner",type:"address"},{internalType:"uint256",name:"feePercent",type:"uint256"},{internalType:"bytes",name:"permit",type:"bytes"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes16",name:"uuid",type:"bytes16"}],internalType:"struct Utils.SimpleData",name:"data",type:"tuple"}],name:"simpleSwap",outputs:[{internalType:"uint256",name:"receivedAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"swapOnUniswap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"factory",type:"address"},{internalType:"bytes32",name:"initCode",type:"bytes32"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"swapOnUniswapFork",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address",name:"weth",type:"address"},{internalType:"uint256[]",name:"pools",type:"uint256[]"}],name:"swapOnUniswapV2Fork",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"fromToken",type:"address"},{internalType:"contract IERC20",name:"toToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address",name:"exchange",type:"address"},{internalType:"bytes",name:"payload",type:"bytes"}],name:"swapOnZeroXv2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"fromToken",type:"address"},{internalType:"contract IERC20",name:"toToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address",name:"exchange",type:"address"},{internalType:"bytes",name:"payload",type:"bytes"}],name:"swapOnZeroXv4",outputs:[],stateMutability:"payable",type:"function"}];var __extends$1=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __awaiter$8=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$8=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$2=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray$1=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var API_URL="https://apiv5.paraswap.io";var REJECT_PREV_REQUEST_ERROR="reject previous values";var ParaswapHelper=function(_super){__extends$1(ParaswapHelper,_super);function ParaswapHelper(){var _this=_super.apply(this,__spreadArray$1([],__read$2(arguments),false))||this;_this.promiseReject=undefined;_this.getSwapParams=function(params){return __awaiter$8(_this,void 0,void 0,function(){var values,e_1;return __generator$8(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);return[4,this.getSwap(params)];case 1:values=_a.sent();return[2,values];case 2:e_1=_a.sent();if(e_1===REJECT_PREV_REQUEST_ERROR){return[2,undefined]}throw new Error(e_1);case 3:return[2]}})})};_this.getSwap=function(_a){return __awaiter$8(_this,[_a],void 0,function(_b){var _this=this;var _c;var input=_b.input,output=_b.output;return __generator$8(this,function(_d){(_c=this.promiseReject)===null||_c===void 0?void 0:_c.call(this,REJECT_PREV_REQUEST_ERROR);return[2,new Promise(function(resolve,reject){return __awaiter$8(_this,void 0,void 0,function(){var networkId,isExactIn,amount,queryParams,searchString,pricesURL,data,priceRoute,txURL,txConfig,txData,txDataJson,IParaswapSwapper,decodedTx,err_1;return __generator$8(this,function(_a){switch(_a.label){case 0:this.promiseReject=reject;_a.label=1;case 1:_a.trys.push([1,6,,7]);networkId=this.chainId.toString();isExactIn=Boolean(input.amount);if(!isExactIn&&!output.amount){throw new Error("Amount is missing")}amount=isExactIn?input.amount:output.amount;queryParams={srcToken:input.currency.address,destToken:output.currency.address,srcDecimals:input.currency.decimals.toString(),destDecimals:output.currency.decimals.toString(),amount:amount,side:isExactIn?"SELL":"BUY",network:this.chainId.toString()};searchString=new URLSearchParams(queryParams);pricesURL="".concat(API_URL,"/prices/?").concat(searchString);return[4,fetch(pricesURL)];case 2:data=_a.sent();return[4,data.json()];case 3:priceRoute=_a.sent().priceRoute;txURL="".concat(API_URL,"/transactions/").concat(networkId,"?ignoreChecks=true");txConfig={priceRoute:priceRoute,srcToken:queryParams.srcToken,srcDecimals:queryParams.srcDecimals,destToken:queryParams.destToken,destDecimals:queryParams.destDecimals,srcAmount:priceRoute.srcAmount,destAmount:priceRoute.destAmount,userAddress:this.account};return[4,fetch(txURL,{method:"POST",body:JSON.stringify(txConfig),headers:{"Content-Type":"application/json"}})];case 4:txData=_a.sent();return[4,txData.json()];case 5:txDataJson=_a.sent();IParaswapSwapper=new Interface$1(ParaswapAugustusSwapperABI);decodedTx=IParaswapSwapper.parseTransaction({data:txDataJson.data,value:txDataJson.value});resolve({params:{value:txDataJson.value,methodParams:Object.entries(decodedTx.args).reduce(function(acc,_a){var _b=__read$2(_a,2),key=_b[0],value=_b[1];if(key==="pools"){if(Array.isArray(value)){acc[key]=value.map(function(val){return val.toString()})}else{acc[key]=[value.toString()]}}else{acc[key]=value.toString()}return acc},{})},state:"VALID",methodName:decodedTx.name,plugin:this.getParaswapPlugin(decodedTx.name),inputAmount:priceRoute.srcAmount,outputAmount:priceRoute.destAmount,protocol:"PARASWAP"});return[3,7];case 6:err_1=_a.sent();reject(err_1);return[3,7];case 7:return[2]}})})})]})})};_this.getParaswapPlugin=function(methodName){var plugin=Object.values(Paraswap.actions).find(function(plugin){var pluginInit=new plugin({chainId:"1"});return pluginInit.method===methodName});return plugin};return _this}return ParaswapHelper}(Config);var __awaiter$7=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$7=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var tokenLists={1:getSupportedTokens({chainId:"1"}),5:getSupportedTokens({chainId:"5"}),42161:getSupportedTokens({chainId:"42161"}),421613:getSupportedTokens({chainId:"421613"}),11155111:getSupportedTokens({chainId:"11155111"})};var Utils=function(){function Utils(){}var _a;_a=Utils;Utils.getSupportedTokens=function(_b){var chainId=_b.chainId;return tokenLists[chainId]};Utils.getERC20Data=function(_b){var chainId=_b.chainId,address=_b.address;var tokens=tokenLists[chainId];if(!tokens)throw new Error("ChainId ".concat(chainId," not supported"));var token=tokens.find(function(token){return getAddress$2(token.value)===getAddress$2(address)});if(!token)throw new Error("Data for token ".concat(address," not found"));return token};Utils.getErc20BalanceOf=function(_b){return __awaiter$7(void 0,[_b],void 0,function(_c){var erc20Contract,balance;var chainId=_c.chainId,address=_c.address,account=_c.account;return __generator$7(_a,function(_d){switch(_d.label){case 0:erc20Contract=new Contract(address,["function balanceOf(address _owner) view returns (uint256 balance)"],provider[chainId]);return[4,erc20Contract.balanceOf(account)];case 1:balance=_d.sent().toString();return[2,balance]}})})};Utils.getErc721BalanceOf=_a.getErc20BalanceOf;Utils.getErc1155BalanceOf=function(_b){return __awaiter$7(void 0,[_b],void 0,function(_c){var erc1155Contract,balance;var chainId=_c.chainId,address=_c.address,id=_c.id,account=_c.account;return __generator$7(_a,function(_d){switch(_d.label){case 0:erc1155Contract=new Contract(address,["function balanceOf(address _owner, uint256 id) view returns (uint256 balance)"],provider[chainId]);return[4,erc1155Contract.balanceOf(account,id)];case 1:balance=_d.sent().toString();return[2,balance]}})})};return Utils}();var Utils$1=Object.freeze({__proto__:null,Utils:Utils});var multicallAbi=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address[]",name:"recipients",type:"address[]"}],name:"erc20Airdrop",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ERC20_Approval[]",name:"approvals",type:"tuple[]"}],name:"erc20Approvals",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"from",type:"address"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ERC20_Mono_Transfer[]",name:"transfers",type:"tuple[]"}],name:"erc20MonoTransfers",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ERC20_Transfer[]",name:"transfers",type:"tuple[]"}],name:"erc20Transfers",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes32",name:"method",type:"bytes32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct Action[]",name:"actions",type:"tuple[]"}],name:"multiAction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes32",name:"method",type:"bytes32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct Action[]",name:"actions",type:"tuple[]"}],name:"multiActionIgnoringReverts",outputs:[{internalType:"bool",name:"succeed",type:"bool"},{internalType:"bool[]",name:"returnSuccess",type:"bool[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],internalType:"struct Allowance[]",name:"allowances",type:"tuple[]"}],name:"multiAllowance",outputs:[{internalType:"uint256[]",name:"returnData",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"account",type:"address"}],internalType:"struct Balance[]",name:"balances",type:"tuple[]"}],name:"multiBalance",outputs:[{internalType:"uint256[]",name:"returnData",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes32",name:"callType",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes32",name:"method",type:"bytes32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct Call[]",name:"calls",type:"tuple[]"}],name:"multiCall",outputs:[{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes32",name:"callType",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes32",name:"method",type:"bytes32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct Call[]",name:"calls",type:"tuple[]"}],name:"multiCallIgnoringReverts",outputs:[{internalType:"bool",name:"succeed",type:"bool"},{internalType:"bool[]",name:"returnSuccess",type:"bool[]"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],internalType:"struct Transfer[]",name:"transfers",type:"tuple[]"}],name:"trasnfers",outputs:[],stateMutability:"nonpayable",type:"function"}];var __awaiter$6=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$6=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read$1=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var __spreadArray=undefined&&undefined.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};var __values$2=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var MULTICALL_CONTRACT_ADDRESS={1:"0x50Bb8165Dd11d41ef2fE90f96b5041F90966E8A7",5:"0x23D560eF20B57A87489D3Ec72D3789E73DF90424",42161:"",421613:"",11155111:"0xc074EEC205576C657a8EBDFeA8FCCd1a2924f193"};var Multicall=function(){function Multicall(_plugin,_protocol,_type,_method,_name,_config,_chainId,_vaultAddress,_walletAddress,_addPluginOnInit,_withPluginOutputs,_estimateGasFromPlugins,_beforeSimulate){var _this=this;this._plugin=_plugin;this._protocol=_protocol;this._type=_type;this._method=_method;this._name=_name;this._config=_config;this._chainId=_chainId;this._vaultAddress=_vaultAddress;this._walletAddress=_walletAddress;this._addPluginOnInit=_addPluginOnInit;this._withPluginOutputs=_withPluginOutputs;this._estimateGasFromPlugins=_estimateGasFromPlugins;this._beforeSimulate=_beforeSimulate;this._plugins=[];this.getOutputValues=function(_a){return __awaiter$6(_this,[_a],void 0,function(_b){var currentGasLimit,multicallInterface,outputs,mOutputs,call,res;var provider=_b.provider,walletSigner=_b.walletSigner,execute=_b.execute,withAutoApprovals=_b.withAutoApprovals;return __generator$6(this,function(_c){switch(_c.label){case 0:this.currentGasLimit=undefined;currentGasLimit=BigNumber$1.from("0");multicallInterface=this.getInterface();multicallInterface.instance.output;outputs={};mOutputs=this.output.paramsList;if(!this._beforeSimulate)return[3,3];if(walletSigner&&withAutoApprovals&&this.getRequiredApprovals().length){provider.signer=walletSigner}return[4,this.create()];case 1:call=_c.sent();return[4,this._beforeSimulate({chainId:this.chainId,provider:provider,params:call===null||call===void 0?void 0:call.params})];case 2:_c.sent();_c.label=3;case 3:return[4,this._getOutputValues({provider:provider,execute:execute})];case 4:res=_c.sent();res.trx.forEach(function(value,i){outputs[mOutputs[i].key]=value.toString()});if(res.gasLimit)currentGasLimit=currentGasLimit.add(res.gasLimit).mul(115).div(100).add(GAS_LIMIT_OVERHEAD);console.log({outputs:outputs});this.currentGasLimit=currentGasLimit.add(MIN_GAS_LIMIT).add(GAS_LIMIT_OVERHEAD).toString();return[2,outputs]}})})};this.add=function(pluginNodeJSON){if(!_this.chainId){console.error("chainId error: set chainId");return}var pluginJSON=pluginNodeJSON||new _this._plugin({chainId:_this.chainId,walletAddress:_this._walletAddress,vaultAddress:_this._vaultAddress}).toJSON();var plugin=_this.jsonToPlugin(pluginJSON,_this.chainId);if(!plugin){console.error("plugin error");return}_this._plugins.push(plugin);_this.updateSubscriptions();return _this};this.remove=function(){if(_this._plugins.length>1){_this._plugins.pop();_this.updateSubscriptions()}return _this};this.removeAll=function(){_this._plugins=[];return _this};this.toJSON=function(){var pluginsInterface=_this.getInterface();var json=JSON.parse(pluginsInterface.instance.toJSON());json.pluginsAmount=Number(pluginsInterface.instance.input.params.amountOfCalls.value)||_this.plugins.length;return JSON.stringify(json)};this.fromJSON=function(multicallJSON){try{var multicallPlugins=JSON.parse(multicallJSON);if(multicallPlugins.pluginsAmount){_this.removeAll()}for(var i=0;i<multicallPlugins.pluginsAmount;i++){_this.add()}var pluginsInterface=_this.getInterface();pluginsInterface.instance.fromJSON(multicallJSON);pluginsInterface.instance.input.params.amountOfCalls.value=String(multicallPlugins.pluginsAmount)}catch(e){console.error(e)}return true};this.jsonToPlugin=function(plugin,chainId){var _a;return(_a=getPluginInstanceFrom({json:plugin,chainId:chainId,vaultAddress:_this._vaultAddress,walletAddress:_this._walletAddress}))===null||_a===void 0?void 0:_a.instance};this.subscribe=function(_a){var callback=_a.callback,id=_a.id;_this.observers.set(id,callback)};this.unsubscribe=function(_a){var id=_a.id;_this.observers.delete(id)};this.pluginParamsToMulticallParamsTuples=function(){var _a;var uniqueParams=(_a=_this.plugins[0])===null||_a===void 0?void 0:_a.input.paramsList.map(function(param){var paramConfig=_this.config.params.find(function(p){return p.key===param.key});if(!(paramConfig===null||paramConfig===void 0?void 0:paramConfig.isUnique))return;var paramKey=paramConfig?paramConfig.multicallKey:param.key;var newKey=paramKey;param.key=newKey;param.param.label=paramKey;return param}).filter(Boolean);var inputs=_this.plugins.map(function(plugin,index){return plugin.input.paramsList.map(function(param){var _a;var paramConfig=_this.config.params.find(function(p){return p.key===param.key});var paramKey=paramConfig?paramConfig.multicallKey:param.key;var newKey="".concat(paramKey,"_").concat(index);if(paramConfig===null||paramConfig===void 0?void 0:paramConfig.isUnique){var uniqueParam=(_a=uniqueParams===null||uniqueParams===void 0?void 0:uniqueParams.find(function(param){return(param===null||param===void 0?void 0:param.key)===paramKey}))===null||_a===void 0?void 0:_a.param;if(uniqueParam&&index>0){uniqueParam.subscribe({callback:function(event){param.param.set({value:event.value})},id:"multicall.".concat(_this.method,".").concat(newKey)})}return}param.key=newKey;param.param.label=paramKey;param.param.isMultiParam=!(paramConfig===null||paramConfig===void 0?void 0:paramConfig.isUnique);return param}).filter(Boolean)});var outputs=_this._withPluginOutputs?_this.plugins.map(function(plugin,index){return plugin.output.paramsList.map(function(param){var paramKey=param.key;var newKey="".concat(paramKey,"_").concat(index);param.key=newKey;if(_this.method==="multiCall"){param.param.innerIndex=2+_this.plugins.length+(index*2+1)}else{param.param.innerIndex=index+2}param.param.label=paramKey;param.param.isMultiParam=true;return param})}):[];return{inputs:inputs,outputs:outputs,uniqueParams:uniqueParams}};this.create=function(){var errors=_this.plugins.map(function(plugin){return plugin.input.errors}).filter(Boolean);if(errors.length){console.error(errors);return undefined}var _a=_this.pluginParamsToMulticallParamsTuples(),inputs=_a.inputs,uniqueParams=_a.uniqueParams;var tupleParams={name:_this.config.tupleName||_this.name,type:"tuple[]",value:[]};console.log({method:_this.method});if(_this.method==="multiCall"){tupleParams.customType=true;_this.plugins.forEach(function(plugin){var _a;var trxParam=[];console.log({plugin:plugin});var callData=plugin.getCalldata();console.log({callData:callData});if(!callData)return;Object.keys(callData).map(function(key){var callKey=key;var callDataParam=callData[callKey];trxParam.push({name:key,type:callDataParam.type,value:callDataParam.value})});(_a=tupleParams.value)===null||_a===void 0?void 0:_a.push(trxParam)});console.log({multicallParams:JSON.stringify(tupleParams)})}else{tupleParams.value=inputs.map(function(inputParams){if(inputParams.length===1){var param=inputParams[0].param;tupleParams.type="".concat(param.fctType,"[]");return param.value}var trxParam=[];tupleParams.customType=true;inputParams.forEach(function(_a){var param=_a.param,key=_a.key;trxParam.push({name:param.label||paramKeyToName({key:key}),type:param.fctType,value:param.value})});return trxParam})}var callParams=[];if(uniqueParams&&uniqueParams.length){uniqueParams.forEach(function(_a){var param=_a.param,key=_a.key;callParams.push({name:param.label||paramKeyToName({key:key}),type:param.fctType,value:param.value})})}if(tupleParams&&tupleParams.value){callParams.push(tupleParams)}var callType=_this.type==="LIBRARY:VIEWONLY"?"LIBRARY_VIEW_ONLY":"LIBRARY";var call={value:"0",to:MULTICALL_CONTRACT_ADDRESS[_this.chainId],method:_this.method,params:callParams,toENS:_this.toENS,options:{gasLimit:_this.gasLimit,falseMeansFail:false,callType:callType}};return call};this.getOutputParamsTypes=function(){if(_this.method==="multiCall"){return[_this.plugins.map(function(pl){return pl.output.paramsList.map(function(_a){var param=_a.param;return param.fctType})})]}return["".concat(_this.output.paramsList[0].param.fctType,"[]")]};this._getOutputValues=function(_a){return __awaiter$6(_this,[_a],void 0,function(_b){var call,simulateContractAddress,contract,singerAddress,trx,res,methodParams,e_1,error,outputTypes,abiCoder,outputParams;var _c;var provider=_b.provider,execute=_b.execute;return __generator$6(this,function(_d){switch(_d.label){case 0:call=this.create();if(!call){throw new Error("wrong multicall data")}simulateContractAddress=this.method==="erc20Approvals"?kiroboMulticallContractsMap[this.chainId]:kiroboMulticallSimulateContracts[this.chainId];contract=new Contract(simulateContractAddress,multicallAbi,provider.signer);return[4,provider.signer.getAddress()];case 1:singerAddress=_d.sent();_d.label=2;case 2:_d.trys.push([2,6,,7]);methodParams=call===null||call===void 0?void 0:call.params.map(function(param){if(!param.value)return param.value;if(typeof param.value==="string")return param.value;if(typeof param.value==="object"&&"length"in param.value){if(param.type!=="tuple[]")return param.value;return param.value.map(function(paramValue){var p=[];if(paramValue&&typeof paramValue==="object"&&"length"in paramValue)paramValue.forEach(function(_p,i){p[i]=_p.value});return p})}return undefined});console.log({methodParams:JSON.stringify(methodParams)});return[4,(_c=contract.callStatic)[this.method].apply(_c,__spreadArray(__spreadArray([],__read$1(methodParams),false),[{from:singerAddress,value:"0"}],false))];case 3:trx=_d.sent();console.log({trx:trx});if(!execute)return[3,5];return[4,contract[this.method].apply(contract,__spreadArray(__spreadArray([],__read$1(methodParams),false),[{from:singerAddress,value:"0"}],false))];case 4:res=_d.sent();console.log({trx:trx,res:res});_d.label=5;case 5:console.log({res:res});if(this.method!=="multiCall")return[2,{trx:trx,gasLimit:res===null||res===void 0?void 0:res.gasLimit}];return[3,7];case 6:e_1=_d.sent();error=new Error(e_1);throw error;case 7:outputTypes=this.plugins.map(function(pl){return pl.output.paramsList.map(function(_a){var param=_a.param;return param.fctType})});abiCoder=new AbiCoder;outputParams=trx.map(function(bytes,i){return abiCoder.decode(outputTypes[i],bytes)});return[2,{trx:outputParams,gasLimit:res===null||res===void 0?void 0:res.gasLimit}]}})})};this.getRequiredApprovals=function(){var requiredApprovals=[];_this.plugins.forEach(function(plugin){var pluginApprovals=plugin.getRequiredApprovals();requiredApprovals=requiredApprovals.concat(pluginApprovals)});return requiredApprovals};this.observers=new Map;this.updateSubscriptions=function(){var e_2,_a;var multicallInterface=_this.getInterface();try{for(var _b=__values$2(_this.observers),_c=_b.next();!_c.done;_c=_b.next()){var observer=_c.value;observer[1](multicallInterface,undefined,_this.chainId,_this.currentGasLimit)}}catch(e_2_1){e_2={error:e_2_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_2)throw e_2.error}}};if(this.plugins.length)return;if(this._addPluginOnInit===false)return;this.add()}Object.defineProperty(Multicall.prototype,"chainId",{get:function(){return this._chainId},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"type",{get:function(){return this._type},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"protocol",{get:function(){return this._protocol},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"method",{get:function(){return this._method},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"name",{get:function(){return this._name},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"toENS",{get:function(){return"@lib:multicall"},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"config",{get:function(){return this._config},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"contractInterface",{get:function(){return this.methodInterface},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"methodInterface",{get:function(){var _a=this.pluginParamsToMulticallParamsTuples(),inputs=_a.inputs,uniqueParams=_a.uniqueParams;var pluginInputs=inputs[0];var paramsToTypes=function(inputs){var types="";inputs.forEach(function(_a){var param=_a.param;types+="".concat(param._fctType,",")});types=types.replace(/,$/,"");return types};var listInterface=pluginInputs.length>1?"(".concat(paramsToTypes(pluginInputs),")[]"):"".concat(paramsToTypes(pluginInputs),"[]");if(uniqueParams&&uniqueParams.length)return"".concat(this.method,"(").concat(paramsToTypes(uniqueParams),",").concat(listInterface,")");return"".concat(this.method,"(").concat(listInterface,")")},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"methodInterfaceHash",{get:function(){return id$2(this.methodInterface)},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"contractInterfaceReturns",{get:function(){var outputs=this.pluginParamsToMulticallParamsTuples().outputs;var pluginOutputs=outputs.length?outputs[0]:[];var types="";pluginOutputs.forEach(function(_a){var param=_a.param;types+="".concat(param._fctType,",")});types=types.replace(/,$/,"");return"returns (".concat(types,"[])")},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"plugins",{get:function(){return this._plugins},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"gasLimit",{get:function(){var e_3,_a;if(this.currentGasLimit)return this.currentGasLimit;if(this._estimateGasFromPlugins)return this._estimateGasFromPlugins(this.plugins,this.chainId);var MIN_GAS_LIMIT="42000";var gasLimit=MIN_GAS_LIMIT;try{for(var _b=__values$2(this.plugins),_c=_b.next();!_c.done;_c=_b.next()){var plugin=_c.value;var pluginGasLimit=plugin.gasLimit&&BigNumber$1.from(plugin.gasLimit).gte(MIN_GAS_LIMIT)?plugin.gasLimit:BigNumber$1.from(MIN_GAS_LIMIT).mul(2).toString();gasLimit=BigNumber$1.from(gasLimit).add(pluginGasLimit).sub(MIN_GAS_LIMIT).toString()}}catch(e_3_1){e_3={error:e_3_1}}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b)}finally{if(e_3)throw e_3.error}}return gasLimit},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"input",{get:function(){return this.getInterface().instance.input},enumerable:false,configurable:true});Object.defineProperty(Multicall.prototype,"output",{get:function(){return this.getInterface().instance.output},enumerable:false,configurable:true});Multicall.prototype.getInterface=function(){var newInputValues={};var newOutputValues={};var _a=this.pluginParamsToMulticallParamsTuples(),inputs=_a.inputs,outputs=_a.outputs,uniqueParams=_a.uniqueParams;var amountOfCallsParam=new FctValue({required:false,mode:"INPUT"});amountOfCallsParam.value=String(this.plugins.length)||"1";amountOfCallsParam.virtual=true;_.set(newInputValues,"amountOfCalls",amountOfCallsParam);uniqueParams.forEach(function(param){if(!param)return;_.set(newInputValues,param.key,param.param)});inputs.forEach(function(pluginParams){pluginParams.forEach(function(param){_.set(newInputValues,param.key,param.param)})});outputs.forEach(function(pluginParams){pluginParams.forEach(function(param){_.set(newOutputValues,param.key,param.param)})});var Plugin=createPlugin$1({protocol:this.protocol,type:this.type,name:this.name,method:this.method,getParams:function(){return{input:newInputValues,output:newOutputValues}}});var newPlugin=new Plugin({chainId:this.chainId});newPlugin.input.setMethodParams=this.setMethodParams;newPlugin.output.setOutputParams=this.setOutputParams;return{instance:newPlugin,details:{plugin:Plugin,name:this.name,description:this.name}}};Multicall.prototype.setMethodParams=function(params){var _this=this;var methodParamsConfig=this.config.params;params.some(function(param,i){var paramConfig=methodParamsConfig[i];if(paramConfig.isUnique)return false;if(typeof param==="object"&&"length"in param){while(_this.plugins.length<param.length){_this.add()}return true}return false});var pluginInterface=this.getInterface();params.forEach(function(param,i){var _a;var paramConfig=methodParamsConfig[i];if(paramConfig.isUnique){pluginInterface.instance.input.set((_a={},_a[paramConfig.multicallKey]=param,_a));return}if(typeof param==="object"&&"length"in param){param.forEach(function(tupleParamValue,tupleIndex){var _a;if(typeof tupleParamValue==="string"||typeof tupleParamValue==="boolean"){pluginInterface.instance.input.set((_a={},_a["".concat(paramConfig.multicallKey,"_").concat(tupleIndex)]=tupleParamValue,_a))}if(typeof tupleParamValue==="object"&&"length"in tupleParamValue){tupleParamValue.forEach(function(tuplePramNestedValue,nestedTupleIndex){var _a;var nestedParamConfig=methodParamsConfig[i+nestedTupleIndex];pluginInterface.instance.input.set((_a={},_a["".concat(nestedParamConfig.multicallKey,"_").concat(tupleIndex)]=tuplePramNestedValue,_a))})}})}return})};Multicall.prototype.setOutputParams=function(params){if(typeof params!=="object"||!("length"in params))return;var paramsValues=[];var getValues=function(params){if(typeof params==="string"||typeof params==="boolean"){paramsValues.push(params)}if(params&&typeof params==="object"&&"length"in params){var paramsArray=params;paramsArray.forEach(function(param){getValues(param)})}return};getValues(params);console.log({paramsValues:paramsValues});while(this.plugins.length<paramsValues.length){this.add()}var pluginInterface=this.getInterface();pluginInterface.instance.output.paramsList.forEach(function(param,i){var paramValue=paramsValues[i];if(typeof paramValue==="string"||typeof paramValue==="boolean"){param.param.set({value:paramValue})}if(typeof paramValue==="object"&&"length"in paramValue){param.param.set({value:paramValue[0]})}})};Object.defineProperty(Multicall.prototype,"currentGasLimit",{get:function(){return this._currentGasLimit},set:function(gasLimit){this._currentGasLimit=gasLimit;this.updateSubscriptions()},enumerable:false,configurable:true});return Multicall}();var __extends=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var createMulticallPlugin=function(_a){var plugin=_a.plugin,protocol=_a.protocol,type=_a.type,method=_a.method,name=_a.name,config=_a.config,addPluginOnInit=_a.addPluginOnInit,withPluginOutputs=_a.withPluginOutputs,estimateGasFromPlugins=_a.estimateGasFromPlugins,beforeSimulate=_a.beforeSimulate;return function(_super){__extends(MulticallPlugin,_super);function MulticallPlugin(_a){var chainId=_a.chainId,vaultAddress=_a.vaultAddress,walletAddress=_a.walletAddress;return _super.call(this,plugin,protocol,type,method,name,config,chainId,vaultAddress,walletAddress,addPluginOnInit,withPluginOutputs,estimateGasFromPlugins,beforeSimulate)||this}return MulticallPlugin}(Multicall)};var __awaiter$5=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$5=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Erc20Airdrop=createMulticallPlugin({plugin:ERC20.actions.SimpleTransfer,protocol:"KIROBO_MULTICALL",type:"LIBRARY",method:"erc20Airdrop",name:"erc20Airdrop",config:{params:[{key:"to",multicallKey:"token",isUnique:true},{key:"methodParams.from",multicallKey:"from",isUnique:true},{key:"methodParams.amount",multicallKey:"amount",isUnique:true},{key:"methodParams.to",multicallKey:"recipient"}],tupleName:"recipients"},estimateGasFromPlugins:function(plugins,chainId){var gas=BigNumber$1.from(32e3);if(plugins.length>1){gas=gas.add(BigNumber$1.from(plugins.length-1).mul(BigNumber$1.from(27e3)))}if(chainId==="42161"||chainId==="421613"){gas=gas.mul(BigNumber$1.from(13))}return gas.toString()},beforeSimulate:function(_a){return __awaiter$5(void 0,[_a],void 0,function(_b){var tokenRecipients,tokenAmount,amountToSend,contractAddress,tokenAddress,contract;var _c;var params=_b.params,provider=_b.provider,chainId=_b.chainId;return __generator$5(this,function(_d){switch(_d.label){case 0:if(!params)return[2];tokenRecipients=params[3].value;tokenAmount=params[2].value;console.log({params:params,tokenRecipients:tokenRecipients,tokenAmount:tokenAmount});if(!tokenAmount)return[2];if(!tokenRecipients)return[2];if(!("length"in tokenRecipients))return[2];amountToSend=BigNumber$1.from(tokenAmount).mul(tokenRecipients.length);contractAddress=kiroboMulticallSimulateContracts[chainId];tokenAddress=params[0].value;console.log({tokenAddress:tokenAddress});if(!tokenAddress)return[2];contract=new Contract(tokenAddress,erc20Abi,provider===null||provider===void 0?void 0:provider.signer);return[4,(_c=provider===null||provider===void 0?void 0:provider.signer)===null||_c===void 0?void 0:_c.sendTransaction({to:contractAddress,value:"1"+"0".repeat(3)})];case 1:_d.sent();return[4,contract["approve"](contractAddress,amountToSend.toString(),{})];case 2:_d.sent();return[2]}})})}});var Erc20Approvals=createMulticallPlugin({plugin:ERC20.actions.Approve,protocol:"KIROBO_MULTICALL",type:"LIBRARY",method:"erc20Approvals",name:"erc20Approvals",config:{params:[{key:"to",multicallKey:"token"},{key:"methodParams.spender",multicallKey:"spender"},{key:"methodParams.amount",multicallKey:"amount"}]},estimateGasFromPlugins:function(plugins,chainId){var gas=BigNumber$1.from(plugins.length).mul(34e3);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var __awaiter$4=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$4=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Erc20MonoTransfers=createMulticallPlugin({plugin:ERC20.actions.SimpleTransfer,protocol:"KIROBO_MULTICALL",type:"LIBRARY",method:"erc20MonoTransfers",name:"erc20MonoTransfers",config:{params:[{key:"to",multicallKey:"token",isUnique:true},{key:"methodParams.from",multicallKey:"from",isUnique:true},{key:"methodParams.to",multicallKey:"to"},{key:"methodParams.amount",multicallKey:"amount"}],tupleName:"transfers"},estimateGasFromPlugins:function(plugins,chainId){var gas=BigNumber$1.from(35e3);if(plugins.length>1){gas=gas.add(BigNumber$1.from(28e3).mul(BigNumber$1.from(plugins.length-1)))}if(chainId==="42161"||chainId==="421613"){gas=gas.mul(BigNumber$1.from(13))}return gas.toString()},beforeSimulate:function(_a){return __awaiter$4(void 0,[_a],void 0,function(_b){var tupleParams,tokenValues,amountToSend,contractAddress,tokenAddress,contract;var _c,_d;var params=_b.params,provider=_b.provider,chainId=_b.chainId;return __generator$4(this,function(_e){switch(_e.label){case 0:if(!params)return[2];tupleParams=(_c=params.find(function(param){return param.type==="tuple[]"}))===null||_c===void 0?void 0:_c.value;if(!tupleParams)return[2];console.log({tupleParams:tupleParams});tokenValues=tupleParams===null||tupleParams===void 0?void 0:tupleParams.map(function(tuple){return tuple.find(function(t){return t.name==="amount"})});console.log({tokenValues:tokenValues});if(!tokenValues)return[2];if(!("length"in tokenValues))return[2];amountToSend=BigNumber$1.from("0");tokenValues.forEach(function(amount){if(amount)amountToSend=amountToSend.add(amount.value)});console.log({amountToSend:amountToSend});contractAddress=kiroboMulticallSimulateContracts[chainId];return[4,(_d=provider===null||provider===void 0?void 0:provider.signer)===null||_d===void 0?void 0:_d.sendTransaction({to:contractAddress,value:"1"+"0".repeat(3)})];case 1:_e.sent();tokenAddress=params[0].value;console.log({tokenAddress:tokenAddress});if(!tokenAddress)return[2];contract=new Contract(tokenAddress,erc20Abi,provider===null||provider===void 0?void 0:provider.signer);return[4,contract["approve"](contractAddress,amountToSend.toString(),{})];case 2:_e.sent();return[2]}})})}});var __awaiter$3=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$3=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var Erc20Transfers=createMulticallPlugin({plugin:ERC20.actions.SimpleTransfer,protocol:"KIROBO_MULTICALL",type:"LIBRARY",method:"erc20Transfers",name:"erc20Transfers",config:{params:[{key:"to",multicallKey:"token"},{key:"methodParams.from",multicallKey:"from"},{key:"methodParams.to",multicallKey:"to"},{key:"methodParams.amount",multicallKey:"amount"}],tupleName:"transfers"},beforeSimulate:function(_a){return __awaiter$3(void 0,[_a],void 0,function(_b){var tupleParams,contractAddress,value,tokensToSend,multiApproveParams;var _c,_d;var params=_b.params,provider=_b.provider,chainId=_b.chainId;return __generator$3(this,function(_e){switch(_e.label){case 0:if(!params)return[2];tupleParams=(_c=params.find(function(param){return param.type==="tuple[]"}))===null||_c===void 0?void 0:_c.value;if(!tupleParams)return[2];console.log({tupleParams:tupleParams});contractAddress=kiroboMulticallSimulateContracts[chainId];return[4,(_d=provider===null||provider===void 0?void 0:provider.signer)===null||_d===void 0?void 0:_d.sendTransaction({to:contractAddress,value:"1"+"0".repeat(3)})];case 1:_e.sent();value=tupleParams;tokensToSend={};console.log({value:value});value===null||value===void 0?void 0:value.forEach(function(nestedParam){console.log({nestedParam:nestedParam});var tokenParam=nestedParam.find(function(param){return param.name==="token"});var amountParam=nestedParam.find(function(param){return param.name==="amount"});console.log({tokenParam:tokenParam,amountParam:amountParam});if(!tokenParam)return;if(!tokensToSend[tokenParam.value]){return tokensToSend[tokenParam.value]=BigNumber$1.from((amountParam===null||amountParam===void 0?void 0:amountParam.value)||"0")}return tokensToSend[tokenParam.value]=tokensToSend[tokenParam.value].add((amountParam===null||amountParam===void 0?void 0:amountParam.value)||"0")});return[4,Promise.all(Object.keys(tokensToSend).map(function(key){return __awaiter$3(void 0,void 0,void 0,function(){var tokenContract;return __generator$3(this,function(_a){switch(_a.label){case 0:tokenContract=new Contract(key,erc20Abi,provider===null||provider===void 0?void 0:provider.signer);return[4,tokenContract["approve"](contractAddress,tokensToSend[key].toString(),{})];case 1:_a.sent();return[2]}})})}))];case 2:_e.sent();multiApproveParams=[];multiApproveParams.push(value===null||value===void 0?void 0:value.map(function(nestedParam){return nestedParam.map(function(p){if(p.name==="token")return p.value;if(p.name==="to")return contractAddress;if(p.name==="amount")return p.value;return}).filter(Boolean)}));return[2]}})})},estimateGasFromPlugins:function(plugins,chainId){var gas=BigNumber$1.from(plugins.length).mul(36e3);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var MultiBalance=createMulticallPlugin({plugin:ERC20.getters.BalanceOf,protocol:"KIROBO_MULTICALL",type:"LIBRARY:VIEWONLY",method:"multiBalance",name:"multiBalance",config:{params:[{key:"to",multicallKey:"token"},{key:"methodParams.owner",multicallKey:"account"}]},estimateGasFromPlugins:function(plugins,chainId){var gas=BigNumber$1.from(plugins.length).mul(7e3);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()},withPluginOutputs:true});var MultiDivider=createMulticallPlugin({plugin:TokensMath.getters.Divide,protocol:"KIROBO_MULTICALL",type:"LIBRARY:VIEWONLY",method:"multiCall",name:"multiDivider",config:{params:[{key:"methodParams.amount1",multicallKey:"amount1"},{key:"methodParams.decimals1",multicallKey:"decimals1"},{key:"methodParams.amount2",multicallKey:"amount2"},{key:"methodParams.decimals2",multicallKey:"decimals2"},{key:"methodParams.decimalsOut",multicallKey:"decimalsOut"}],tupleName:"divs"},addPluginOnInit:true,withPluginOutputs:true});var MultiMultiplier=createMulticallPlugin({plugin:TokensMath.getters.Multiply,protocol:"KIROBO_MULTICALL",type:"LIBRARY:VIEWONLY",method:"multiCall",name:"multiMultiplier",config:{params:[{key:"methodParams.amount1",multicallKey:"amount1"},{key:"methodParams.decimals1",multicallKey:"decimals1"},{key:"methodParams.amount2",multicallKey:"amount2"},{key:"methodParams.decimals2",multicallKey:"decimals2"},{key:"methodParams.decimalsOut",multicallKey:"decimalsOut"}],tupleName:"muls"},addPluginOnInit:true,withPluginOutputs:true});var EthTransfers=createMulticallPlugin({plugin:Utility.actions.SendETH,protocol:"KIROBO_MULTICALL",type:"LIBRARY",method:"trasnfers",name:"ethTransfers",config:{params:[{key:"to",multicallKey:"to"},{key:"value",multicallKey:"value"}],tupleName:"transfers"},estimateGasFromPlugins:function(plugins,chainId){var gas=BigNumber$1.from(plugins.length).mul(36e3);if(chainId==="42161"||chainId==="421613"){gas=gas.mul(13)}return gas.toString()}});var MultiAdd=createMulticallPlugin({plugin:TokensMath.getters.Add,protocol:"KIROBO_MULTICALL",type:"LIBRARY:VIEWONLY",method:"multiCall",name:"multiAdd",config:{params:[{key:"methodParams.amount1",multicallKey:"amount1"},{key:"methodParams.decimals1",multicallKey:"decimals1"},{key:"methodParams.amount2",multicallKey:"amount2"},{key:"methodParams.decimals2",multicallKey:"decimals2"},{key:"methodParams.decimalsOut",multicallKey:"decimalsOut"}],tupleName:"addends"},addPluginOnInit:true,withPluginOutputs:true});var MultiSubtract=createMulticallPlugin({plugin:TokensMath.getters.Subtract,protocol:"KIROBO_MULTICALL",type:"LIBRARY:VIEWONLY",method:"multiCall",name:"multiSubtract",config:{params:[{key:"methodParams.amount1",multicallKey:"amount1"},{key:"methodParams.decimals1",multicallKey:"decimals1"},{key:"methodParams.amount2",multicallKey:"amount2"},{key:"methodParams.decimals2",multicallKey:"decimals2"},{key:"methodParams.decimalsOut",multicallKey:"decimalsOut"}],tupleName:"subtrahends"},addPluginOnInit:true,withPluginOutputs:true});var createApprovalsPlugin=function(_a){var requiredApprovals=_a.requiredApprovals,chainId=_a.chainId;requiredApprovals===null||requiredApprovals===void 0?void 0:requiredApprovals.map(function(approve){return console.log({params:approve.params})});var ApprovePlugin=ERC20.actions.Approve;var ApproveErc20MulticallPlugin=Erc20Approvals;var approveErc20MulticallPlugin=new ApproveErc20MulticallPlugin({chainId:chainId});var createApprovePlugin=function(approve){if(approve.method!=="approve"||approve.protocol!=="ERC20")return;var approvePlugin=new ApprovePlugin({chainId:chainId,initParams:{to:approve.to,methodParams:{spender:approve.params[0],amount:approve.params[1]}}});if(approve.to){approvePlugin.input.params.to.set({value:approve.to})}return approvePlugin};if(!requiredApprovals||!requiredApprovals.length){return}if(requiredApprovals.length===1){var approvePlugin=createApprovePlugin(requiredApprovals[0]);if(!approvePlugin)return;return approvePlugin}approveErc20MulticallPlugin.removeAll();requiredApprovals.forEach(function(approve){var approvePlugin=createApprovePlugin(approve);if(!approvePlugin)return;approveErc20MulticallPlugin.add(approvePlugin.toJSON())});return approveErc20MulticallPlugin};var multicallPlugins=[Erc20Airdrop,Erc20Approvals,Erc20MonoTransfers,Erc20Transfers,EthTransfers,MultiBalance,MultiDivider,MultiMultiplier,MultiAdd,MultiSubtract];var getMulticallPlugin=function(_a){var signature=_a.signature,chainId=_a.chainId;var mCallPlugin=multicallPlugins.map(function(Plugin){return new Plugin({chainId:chainId})}).find(function(mPlugin){return mPlugin.methodInterfaceHash===signature});return mCallPlugin};var __values$1=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};var availablePlugins=Object.keys(plugins).map(function(key){var pluginKey=key;return plugins[pluginKey]});var pluginsArray=[];var pluginsMap={};var allPlugins=[];var pluginsGroupKeys=["type","protocol","method","methodInterface","methodInterfaceHash","name"];availablePlugins.forEach(function(protocol){var protocolType=protocol;Object.keys(protocolType).forEach(function(pluginType){var type=pluginType;Object.keys(protocolType[type]).forEach(function(actionKey){var protocolPlugins=protocolType[type];var key=actionKey;var Plugin=protocolPlugins[key];var plugin=new Plugin({chainId:"1"});pluginsGroupKeys.forEach(function(key){var value=plugin[key];if(!pluginsMap[value]){pluginsMap[value]=[]}pluginsMap[value].push({name:plugin.name,description:plugin.description,plugin:Plugin})});pluginsArray.push(Plugin)})})});pluginsArray.forEach(function(Plugin){var plugin=new Plugin({chainId:"1"});var _plugin={name:plugin.name,description:plugin.description,plugin:Plugin};allPlugins.push(_plugin)});var filterPlugins=function(_a){var plugins=_a.plugins,key=_a.key,value=_a.value;return plugins.filter(function(Plugin){var plugin=new Plugin.plugin({chainId:"1"});if(plugin[key]===value)return true;return false})};var excludePlugins=function(_a){var plugins=_a.plugins,key=_a.key,value=_a.value;return plugins.filter(function(Plugin){var plugin=new Plugin.plugin({chainId:"1"});if(plugin[key]===value)return false;return true})};var getPlugins=function(_a){var e_1,_b;var by=_a.by,excludeBy=_a.excludeBy;if(!by&&!excludeBy){return allPlugins}var plugins=undefined;for(var key in by){var groupByKey=key;var value=by[groupByKey];if(!value)continue;if(plugins){plugins=filterPlugins({plugins:plugins,key:groupByKey,value:value})}else{plugins=pluginsMap[value]||[]}}for(var key in excludeBy){var excludeByKey=key;var values=excludeBy[excludeByKey];if(!values)continue;try{for(var values_1=(e_1=void 0,__values$1(values)),values_1_1=values_1.next();!values_1_1.done;values_1_1=values_1.next()){var value=values_1_1.value;if(plugins&&plugins.length){plugins=excludePlugins({plugins:plugins,key:excludeByKey,value:value})}else{plugins=excludePlugins({plugins:allPlugins,key:excludeByKey,value:value})}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(values_1_1&&!values_1_1.done&&(_b=values_1.return))_b.call(values_1)}finally{if(e_1)throw e_1.error}}}return plugins||[]};var getPlugin$1=function(_a){var signature=_a.signature,address=_a.address,chainId=_a.chainId;var plugins=allPlugins.filter(function(plugin){var pluginInstance=new plugin.plugin({chainId:chainId});return pluginInstance.methodInterfaceHash===signature});if(plugins.length===1){return plugins[0]}if(plugins.length>1){var plugin=plugins.find(function(plugin){var pluginInstance=new plugin.plugin({chainId:chainId});if(pluginInstance.supportedContracts.length!==0){return pluginInstance.supportedContracts.findIndex(function(contract){return contract.address.toLowerCase()===address.toLowerCase()&&contract.chainId===Number(chainId)})!==-1}return false});if(plugin)return plugin;throw new Error("Multiple plugins found for the same signature, can't determine which one to use")}return getMulticallPlugin({signature:signature,chainId:chainId})};var useChainId=function(_a){var plugin=_a.plugin,chainId=_a.chainId;if(plugin.chainId===chainId)return plugin;var params=plugin.toJSON();var plugins=getPlugins({by:{protocol:plugin.protocol,method:plugin.method,methodInterface:plugin.methodInterface}});var newPlugin=new plugins[0].plugin({chainId:chainId});var isOk=newPlugin.fromJSON(params);if(isOk){return newPlugin}console.error("Failed to change chainId");return plugin};var SWAP_WITHOUT_SLIPPAGE_METHOD=method$2;var SIMPLE_ADD_LIQUIDITY_METHOD=liquidity_method;var getPluginInstanceFrom=function(_a){var json=_a.json,chainId=_a.chainId,vaultAddress=_a.vaultAddress,walletAddress=_a.walletAddress;var pluginParsed=JSON.parse(json);var plugins;try{plugins=getPlugins({by:{protocol:pluginParsed.protocol,name:pluginParsed.name}})}catch(e){console.error(e)}if(!plugins||!plugins.length){var pluginInterface_1=new Interface$1(["function ".concat(pluginParsed.contractInterface," ").concat(pluginParsed.type==="GETTER"?"view":pluginParsed.inputWithMeta&&"value"in pluginParsed.inputWithMeta?"payable":"nonpayable"," ").concat(pluginParsed.contractInterfaceReturns)]);var abi=Object.keys(pluginInterface_1.functions).map(function(key){return pluginInterface_1.functions[key]});if(!abi){console.error("Abi creation for plugin ".concat(pluginParsed.protocol," ").concat(pluginParsed.contractInterface," failed"))}var inputTo="to"in pluginParsed.input?pluginParsed.input.to:undefined;var to=typeof inputTo==="string"?inputTo:inputTo===null||inputTo===void 0?void 0:inputTo.value;if(typeof to!=="string"){throw new Error('Address "to" for '.concat(pluginParsed.protocol," ").concat(pluginParsed.contractInterface," not a string"))}plugins=getPluginsFromABI({protocol:pluginParsed.protocol,abi:abi,contractAddress:to,chainId:chainId,pluginName:pluginParsed.name}).plugins}if(!plugins)return undefined;var newPlugin=new plugins[0].plugin({chainId:chainId,vaultAddress:vaultAddress,walletAddress:walletAddress});newPlugin.fromJSON(json);return{instance:newPlugin,details:plugins[0]}};var __awaiter$2=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$2=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __read=undefined&&undefined.__read||function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};var getOutputValues=function(_a){return __awaiter$2(void 0,[_a],void 0,function(_b){var plugin=_b.plugin,provider=_b.provider,execute=_b.execute,walletSigner=_b.walletSigner,withAutoApprovals=_b.withAutoApprovals;return __generator$2(this,function(_c){switch(_c.label){case 0:if(!(withAutoApprovals&&plugin.protocol!=="KIROBO_MULTICALL_CSV"))return[3,2];return[4,setPluginApprovals({plugin:plugin,provider:provider,walletSigner:walletSigner})];case 1:_c.sent();_c.label=2;case 2:if(!(plugin.method==="addLiquidity_noMinProtection"||plugin.method==="addLiquidityTo_noMinProtection"))return[3,4];return[4,getSimpleAddLiquidityOutputValues({plugin:plugin,provider:provider,execute:execute})];case 3:return[2,_c.sent()];case 4:if(!(plugin.method==="swap_noSlippageProtection"||plugin.method==="swapTo_noSlippageProtection"))return[3,6];return[4,getSwapNoSlippageProtectionOutputValues({plugin:plugin,provider:provider,execute:execute})];case 5:return[2,_c.sent()];case 6:return[4,plugin.getOutputValues({provider:provider,execute:execute,walletSigner:walletSigner,withAutoApprovals:withAutoApprovals})];case 7:return[2,_c.sent()]}})})};var setOutputIsLoading=function(isLoadIng,paramsList){paramsList.forEach(function(_a){var param=_a.param;param.isLoading=isLoadIng})};var setPluginApprovals=function(_a){return __awaiter$2(void 0,[_a],void 0,function(_b){var requiredApprovals,vaultSigner,chainId;var plugin=_b.plugin,provider=_b.provider,walletSigner=_b.walletSigner;return __generator$2(this,function(_c){switch(_c.label){case 0:requiredApprovals=plugin.getRequiredApprovals();vaultSigner=provider.signer;if(!requiredApprovals||!requiredApprovals.length){return[2]}chainId=plugin.chainId;return[4,Promise.all(requiredApprovals.map(function(requiredApproval){return __awaiter$2(void 0,void 0,void 0,function(){var to,from,_a,approvePlugin,_b,spender,amount,walletSignerAddress,signer_1,method_1,_c,approveTo,tokenId,approve721,_d,operator_1,_approved,setApprovalForAll721,_e,operator,approved,setApprovalForAll1155;return __generator$2(this,function(_f){switch(_f.label){case 0:to=requiredApproval.to,from=requiredApproval.from;_a=requiredApproval.protocol;switch(_a){case"ERC20":return[3,1];case"ERC721":return[3,4];case"ERC1155":return[3,9]}return[3,11];case 1:approvePlugin=new Approve$1({chainId:plugin.chainId});_b=__read(requiredApproval.params,2),spender=_b[0],amount=_b[1];return[4,walletSigner===null||walletSigner===void 0?void 0:walletSigner.getAddress()];case 2:walletSignerAddress=(_f.sent()||"").toLowerCase();signer_1=from&&typeof from==="string"&&walletSignerAddress===from.toLowerCase()?walletSigner:provider.signer;if(!signer_1)return[3,12];if(typeof to!=="string"||typeof spender!=="string"||typeof amount!=="string"){return[3,12]}approvePlugin.input.set({to:to,methodParams:{spender:spender,amount:amount}});return[4,approvePlugin.getOutputValues({provider:{provider:provider.provider,signer:signer_1},execute:true})];case 3:_f.sent();return[3,12];case 4:method_1=requiredApproval.method;signer_1=from?walletSigner:vaultSigner;if(!signer_1)return[3,12];if(!(method_1==="approve"))return[3,6];_c=__read(requiredApproval.params,2),approveTo=_c[0],tokenId=_c[1];if(typeof to!=="string"||typeof approveTo!=="string"||typeof tokenId!=="string"){return[3,12]}approve721=new ERC721.actions.Approve({chainId:chainId,initParams:{to:requiredApproval.to,methodParams:{to:approveTo,tokenId:tokenId}}});return[4,approve721.getOutputValues({provider:{provider:provider.provider,signer:signer_1},execute:true})];case 5:_f.sent();return[3,12];case 6:if(!(method_1==="setApprovalForAll"))return[3,8];_d=__read(requiredApproval.params,2),operator_1=_d[0],_approved=_d[1];if(typeof to!=="string"||typeof operator_1!=="string"||typeof _approved!=="boolean"){return[3,12]}setApprovalForAll721=new ERC721.actions.SetApprovalForAll({chainId:chainId,initParams:{to:requiredApproval.to,methodParams:{operator:operator_1,_approved:_approved}}});return[4,setApprovalForAll721.getOutputValues({provider:{provider:provider.provider,signer:signer_1},execute:true})];case 7:_f.sent();return[3,12];case 8:return[3,12];case 9:_e=__read(requiredApproval.params,2),operator=_e[0],approved=_e[1];if(typeof to!=="string"||typeof operator!=="string"||typeof approved!=="boolean"){return[3,12]}signer_1=requiredApproval.from?walletSigner:vaultSigner;if(!signer_1)return[3,12];setApprovalForAll1155=new ERC1155.actions.SetApprovalForAll({chainId:chainId,initParams:{to:requiredApproval.to,methodParams:{operator:operator,approved:approved}}});return[4,setApprovalForAll1155.getOutputValues({provider:{provider:provider.provider,signer:signer_1},execute:true})];case 10:_f.sent();return[3,12];case 11:return[3,12];case 12:return[2]}})})}))];case 1:_c.sent();return[2]}})})};var getSimpleAddLiquidityOutputValues=function(_a){return __awaiter$2(void 0,[_a],void 0,function(_b){var chainId,libAddLiquidityPlugin,_c,AddLiquidity,AddLiquidityETH,addLiquidity,libAddLiquidityMethod,blockNumber,block,blockTimestamp,singerAddress,to,res,e_1;var plugin=_b.plugin,provider=_b.provider,execute=_b.execute;return __generator$2(this,function(_d){switch(_d.label){case 0:chainId=plugin.chainId;libAddLiquidityPlugin=plugin;_c=Uniswap$1.actions,AddLiquidity=_c.AddLiquidity,AddLiquidityETH=_c.AddLiquidityETH;addLiquidity=undefined;libAddLiquidityPlugin.create();libAddLiquidityMethod=libAddLiquidityPlugin.input.methodParams.method.value;return[4,provider.provider.getBlockNumber()];case 1:blockNumber=_d.sent();return[4,provider.provider.getBlock(blockNumber)];case 2:block=_d.sent();blockTimestamp=block.timestamp+100;return[4,provider.signer.getAddress()];case 3:singerAddress=_d.sent();to="to"in libAddLiquidityPlugin.input.methodParams?libAddLiquidityPlugin.input.methodParams.to.value:singerAddress;switch(libAddLiquidityMethod){case liquidity_method.addLiquidity:addLiquidity=new AddLiquidity({chainId:chainId,initParams:{methodParams:{tokenA:libAddLiquidityPlugin.input.methodParams.tokenA.value,tokenB:libAddLiquidityPlugin.input.methodParams.tokenB.value,amountADesired:libAddLiquidityPlugin.input.methodParams.amountADesired.value,amountBDesired:libAddLiquidityPlugin.input.methodParams.amountBDesired.value,amountAMin:"0",amountBMin:"0",to:to,deadline:String(blockTimestamp)}}});break;case liquidity_method.addLiquidityEthToken:addLiquidity=new AddLiquidityETH({chainId:chainId,initParams:{value:libAddLiquidityPlugin.input.methodParams.amountADesired.value,methodParams:{token:libAddLiquidityPlugin.input.methodParams.tokenB.value,amountTokenDesired:libAddLiquidityPlugin.input.methodParams.amountBDesired.value,amountTokenMin:"0",amountETHMin:"0",to:to,deadline:String(blockTimestamp)}}});break;case liquidity_method.addLiquidityTokenEth:addLiquidity=new AddLiquidityETH({chainId:chainId,initParams:{value:libAddLiquidityPlugin.input.methodParams.amountBDesired.value,methodParams:{token:libAddLiquidityPlugin.input.methodParams.tokenA.value,amountTokenDesired:libAddLiquidityPlugin.input.methodParams.amountADesired.value,amountTokenMin:"0",amountETHMin:"0",to:to,deadline:String(blockTimestamp)}}});break}_d.label=4;case 4:_d.trys.push([4,6,,7]);setOutputIsLoading(true,libAddLiquidityPlugin.output.paramsList);return[4,addLiquidity===null||addLiquidity===void 0?void 0:addLiquidity.getOutputValues({provider:provider,execute:execute})];case 5:res=_d.sent();libAddLiquidityPlugin.setError(undefined);libAddLiquidityPlugin.currentGasLimit=addLiquidity===null||addLiquidity===void 0?void 0:addLiquidity.currentGasLimit;libAddLiquidityPlugin.output.params.amountA.setEstimated({value:addLiquidity===null||addLiquidity===void 0?void 0:addLiquidity.output.params.amountA.getEstimated()});libAddLiquidityPlugin.output.params.amountB.setEstimated({value:addLiquidity===null||addLiquidity===void 0?void 0:addLiquidity.output.params.amountB.getEstimated()});libAddLiquidityPlugin.output.params.liquidity.setEstimated({value:addLiquidity===null||addLiquidity===void 0?void 0:addLiquidity.output.params.liquidity.getEstimated()});setOutputIsLoading(false,libAddLiquidityPlugin.output.paramsList);return[2,res];case 6:e_1=_d.sent();libAddLiquidityPlugin.setError(e_1.message);libAddLiquidityPlugin.currentGasLimit=undefined;libAddLiquidityPlugin.output.params.amountA.setEstimated({value:undefined});libAddLiquidityPlugin.output.params.amountB.setEstimated({value:undefined});libAddLiquidityPlugin.output.params.liquidity.setEstimated({value:undefined});setOutputIsLoading(false,libAddLiquidityPlugin.output.paramsList);throw e_1;case 7:return[2]}})})};var getSwapNoSlippageProtectionOutputValues=function(_a){return __awaiter$2(void 0,[_a],void 0,function(_b){var chainId,libSwapPlugin,blockNumber,block,blockTimestamp,singerAddress,to,libSwapMethod,_c,UniswapV2SwapExactETHForTokens,UniswapV2SwapETHForExactTokens,UniswapV2SwapExactTokensForETH,UniswapV2SwapExactTokensForTokens,UniswapV2SwapTokensForExactETH,UniswapV2SwapTokensForExactTokens,swap,_d,amountIn,methodParams,amount,amountInVal,res,amountIn_1,amountOut,e_2,amountIn_2,amountOut;var plugin=_b.plugin,provider=_b.provider,execute=_b.execute;return __generator$2(this,function(_e){switch(_e.label){case 0:chainId=plugin.chainId;libSwapPlugin=plugin;return[4,provider.provider.getBlockNumber()];case 1:blockNumber=_e.sent();return[4,provider.provider.getBlock(blockNumber)];case 2:block=_e.sent();blockTimestamp=block.timestamp+100;return[4,provider.signer.getAddress()];case 3:singerAddress=_e.sent();to="to"in libSwapPlugin.input.methodParams?libSwapPlugin.input.methodParams.to.value:singerAddress;libSwapMethod=libSwapPlugin.input.methodParams.method.value;_c=Uniswap$1.actions,UniswapV2SwapExactETHForTokens=_c.UniswapV2SwapExactETHForTokens,UniswapV2SwapETHForExactTokens=_c.UniswapV2SwapETHForExactTokens,UniswapV2SwapExactTokensForETH=_c.UniswapV2SwapExactTokensForETH,UniswapV2SwapExactTokensForTokens=_c.UniswapV2SwapExactTokensForTokens,UniswapV2SwapTokensForExactETH=_c.UniswapV2SwapTokensForExactETH,UniswapV2SwapTokensForExactTokens=_c.UniswapV2SwapTokensForExactTokens;swap=undefined;_d=libSwapPlugin.input.params,amountIn=_d.amountIn,methodParams=_d.methodParams;amount=methodParams.amount.isVariable?methodParams.amount.estimatedValue:methodParams.amount.value;amountInVal=amountIn.isVariable?amountIn.estimatedValue:amountIn.value;switch(libSwapMethod){case method$2.swapExactETHForTokens:swap=new UniswapV2SwapExactETHForTokens({chainId:chainId,initParams:{value:amount,methodParams:{amountOutMin:"0",path:libSwapPlugin.input.methodParams.path.value,deadline:String(blockTimestamp),to:to}}});break;case method$2.swapETHForExactTokens:swap=new UniswapV2SwapETHForExactTokens({chainId:chainId,initParams:{value:amountInVal,methodParams:{amountOut:amount,path:libSwapPlugin.input.methodParams.path.value,deadline:String(blockTimestamp),to:to}}});break;case method$2.swapExactTokensForETH:swap=new UniswapV2SwapExactTokensForETH({chainId:chainId,initParams:{methodParams:{amountIn:amount,amountOutMin:"0",path:libSwapPlugin.input.methodParams.path.value,deadline:String(blockTimestamp),to:to}}});break;case method$2.swapExactTokensForTokens:swap=new UniswapV2SwapExactTokensForTokens({chainId:chainId,initParams:{methodParams:{amountIn:amount,amountOutMin:"0",path:libSwapPlugin.input.methodParams.path.value,deadline:String(blockTimestamp),to:to}}});break;case method$2.swapTokensForExactTokens:swap=new UniswapV2SwapTokensForExactTokens({chainId:chainId,initParams:{methodParams:{amountInMax:amountInVal,amountOut:amount,path:libSwapPlugin.input.methodParams.path.value,deadline:String(blockTimestamp),to:to}}});break;case method$2.swapTokensForExactETH:swap=new UniswapV2SwapTokensForExactETH({chainId:chainId,initParams:{methodParams:{amountInMax:amountInVal,amountOut:amount,path:libSwapPlugin.input.methodParams.path.value,deadline:String(blockTimestamp),to:to}}});break}_e.label=4;case 4:_e.trys.push([4,6,,7]);setOutputIsLoading(true,libSwapPlugin.output.paramsList);return[4,swap===null||swap===void 0?void 0:swap.getOutputValues({provider:provider,execute:execute})];case 5:res=_e.sent();libSwapPlugin.setError(undefined);libSwapPlugin.currentGasLimit=swap===null||swap===void 0?void 0:swap.currentGasLimit;amountIn_1=libSwapPlugin.output.params.amountIn;amountOut=libSwapPlugin.output.params.amountOut;if(amountIn_1 instanceof FctParam&&amountOut instanceof FctParam){amountIn_1.setEstimated({value:swap===null||swap===void 0?void 0:swap.output.params.amountIn.getEstimated()});amountOut.setEstimated({value:swap===null||swap===void 0?void 0:swap.output.params.amountOut.getEstimated()})}setOutputIsLoading(false,libSwapPlugin.output.paramsList);return[2,res];case 6:e_2=_e.sent();libSwapPlugin.setError(e_2.message);libSwapPlugin.currentGasLimit=undefined;amountIn_2=libSwapPlugin.output.params.amountIn;amountOut=libSwapPlugin.output.params.amountOut;if(amountIn_2 instanceof FctParam&&amountOut instanceof FctParam){amountIn_2.setEstimated({value:undefined});amountOut.setEstimated({value:undefined})}setOutputIsLoading(false,libSwapPlugin.output.paramsList);throw e_2;case 7:return[2]}})})};var __assign=undefined&&undefined.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};var __awaiter$1=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator$1=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var __rest=undefined&&undefined.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};var updateId=uniqid();var PluginsModule=function(){function PluginsModule(_a){var chainId=_a.chainId;var _this=this;this._plugins=new Map;this.getOutputValues=function(testProvider){return __awaiter$1(_this,void 0,void 0,function(){var getPluginOutputs;var _this=this;return __generator$1(this,function(_a){switch(_a.label){case 0:if(!this.startNodeIn){return[2,{}]}getPluginOutputs=function(nodeId){return __awaiter$1(_this,void 0,void 0,function(){var plugin,e_1,errorMessage;return __generator$1(this,function(_a){switch(_a.label){case 0:if(!nodeId)return[2,{}];plugin=this.getPlugin(nodeId);if(!plugin||!plugin.plugin){console.error("plugin nodeId: ".concat(nodeId," not found"));return[2,{}]}_a.label=1;case 1:_a.trys.push([1,4,,6]);return[4,getOutputValues({plugin:plugin.plugin,provider:testProvider.provider,execute:testProvider.execute})];case 2:_a.sent();this._error=undefined;if(!plugin.options.jumpOnSuccess){return[2,{}]}return[4,getPluginOutputs(plugin.options.jumpOnSuccess)];case 3:return[2,_a.sent()];case 4:e_1=_a.sent();errorMessage="Plugin: ".concat(plugin.nodeId,"_").concat(plugin.plugin.protocol,"_").concat(plugin.plugin.name," error: ").concat(e_1.message);console.error(errorMessage);this._error=errorMessage;if(this.onChange)this.onChange(undefined,{nodeId:plugin.nodeId,error:errorMessage});if(!plugin.options.jumpOnFail){return[2,{}]}return[4,getPluginOutputs(plugin.options.jumpOnFail)];case 5:return[2,_a.sent()];case 6:return[2]}})})};return[4,getPluginOutputs(this.startNodeIn)];case 1:return[2,_a.sent()]}})})};this.clear=function(){return _this._plugins.clear()};this.create=function(){};this.upsertPlugin=function(pluginNodeJSON){if(!_this.chainId){console.error("chainId error: set chainId");return}var plugin=_this.jsonToPlugin(pluginNodeJSON.plugin,_this.chainId);if(!plugin){console.error("plugin error");return}var pluginNode=__assign(__assign({},pluginNodeJSON),{plugin:plugin});_this._plugins.set(pluginNode.nodeId,pluginNode);_this.subscribeOnUpdate();_this.updateVariablesSubsciptions();return _this.plugins};this.setPlugin=function(nodeId,plugin){return _this.plugins.set(nodeId,plugin)};this.getPlugin=function(nodeId){return _this.plugins.get(nodeId)};this.removePlugin=function(nodeId){return _this.plugins.delete(nodeId)};this.generateName=function(){var name="Module.";_this.pluginsList.forEach(function(pluginContainer,index,list){var plugin=pluginContainer.plugin;name+="".concat(plugin.name).concat(index<list.length-1?".":"")});return name};this.toJSON=function(){var data={};_this.pluginsList.forEach(function(pluginContainer,index,list){var plugin=pluginContainer.plugin,rest=__rest(pluginContainer,["plugin"]);data[rest.nodeId]=__assign({plugin:plugin.toJSON()},rest)});return JSON.stringify({data:data,startNodeId:_this.startNodeIn,name:_this.name,type:"MODULE",method:"MODULE"})};this.fromJSONWithMeta=function(moduleJson){try{var module_1=JSON.parse(moduleJson);var data_1=module_1.data,startNodeId=module_1.startNodeId,name_1=module_1.name;_this._name=name_1;if(!data_1)return false;if(startNodeId)_this.setStartNodeIn(startNodeId);Object.keys(data_1).forEach(function(key){var pluginContainer=data_1[key];var plugin=pluginContainer.plugin,rest=__rest(pluginContainer,["plugin"]);_this.upsertPlugin(__assign({plugin:plugin},rest))})}catch(e){console.error(e)}return true};this.jsonToPlugin=function(plugin,chainId){var _a;return(_a=getPluginInstanceFrom({json:plugin,chainId:chainId}))===null||_a===void 0?void 0:_a.instance};this.subscribe=function(_a){var callback=_a.callback,id=_a.id;_this.observers.set(id,callback)};this.unsubscribe=function(_a){var id=_a.id;_this.observers.delete(id)};this.observers=new Map;this.subscribeOnUpdate=function(){_this.observers.forEach(function(callback,id){var subscribeId=id;_this.inputs.forEach(function(input){input.param.unsubscribe({id:subscribeId});input.param.subscribe({id:subscribeId,callback:function(_a){var value=_a.value;return callback({value:value,key:input.key,nodeId:input.nodeId})}})})})};this.updateVariablesSubsciptions=function(){_this.pluginsList.forEach(function(plugin){if(!plugin.outputVariables)return;plugin.outputVariables.forEach(function(subscription){return __awaiter$1(_this,void 0,void 0,function(){var fromNodeId,fromParamKey,toParamKey,fromPlugin,paramFromList,paramFrom,paramToList,paramTo;return __generator$1(this,function(_a){fromNodeId=subscription.fromNodeId,fromParamKey=subscription.fromParamKey,toParamKey=subscription.toParamKey;fromPlugin=this.getPlugin(fromNodeId);if(!fromPlugin)return[2];paramFromList=fromPlugin.plugin.output.paramsList;paramFrom=paramFromList.find(function(param){return param.key===fromParamKey});paramToList=plugin.plugin.input.paramsList;paramTo=paramToList.find(function(param){return param.key===toParamKey});if(!paramFrom||!paramTo)return[2];paramTo.param.setString({value:paramFrom.param.getOutputVariable(fromPlugin.nodeId)});return[2]})})})})};this.onUpdate=function(event){_this.pluginsList.forEach(function(plugin){if(!plugin.subscriptions)return;plugin.subscriptions.forEach(function(subscription){return __awaiter$1(_this,void 0,void 0,function(){var fromNodeId,fromParamKey,toParamKey,fromPlugin,paramFromList,paramFrom,paramToList,paramTo,value;return __generator$1(this,function(_a){fromNodeId=subscription.fromNodeId,fromParamKey=subscription.fromParamKey,toParamKey=subscription.toParamKey;fromPlugin=this.getPlugin(fromNodeId);if(subscription.fromParamKey!==event.key)return[2];if(subscription.fromNodeId!==event.nodeId)return[2];if(!fromPlugin)return[2];paramFromList=fromPlugin.plugin.input.paramsList;paramFrom=paramFromList.find(function(param){return param.key===fromParamKey});paramToList=plugin.plugin.input.paramsList;paramTo=paramToList.find(function(param){return param.key===toParamKey});if(paramFrom&&paramTo){value=paramFrom.param.value;paramTo.param.set({value:value});if(this.onChange){this.onChange({nodeId:plugin.nodeId,key:subscription.toParamKey,value:value})}}return[2]})})})})};this._chainId=chainId;this.subscribe({callback:this.onUpdate,id:updateId})}Object.defineProperty(PluginsModule.prototype,"type",{get:function(){return"MODULE"},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"protocol",{get:function(){return"MODULE"},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"chainId",{get:function(){return this._chainId},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"plugins",{get:function(){return this._plugins},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"error",{get:function(){return this._error},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"pluginsList",{get:function(){var _this=this;var plugins=[];if(!this.startNodeIn){return[]}var setPlugin=function(nodeId){if(!nodeId)return;var plugin=_this.getPlugin(nodeId);if(!plugin){console.error("plugin nodeId: ".concat(nodeId," not found"));return}plugins.push(plugin);setPlugin(plugin.options.jumpOnSuccess);setPlugin(plugin.options.jumpOnFail)};setPlugin(this.startNodeIn);return plugins},enumerable:false,configurable:true});PluginsModule.prototype.createNewModule=function(initNodeId){var _this=this;var prevIds=new Map;if(!this.startNodeIn){return}var changePluginId=function(newId,prevId){var _a,_b;if(!prevId)return;prevIds.set(prevId,newId);var plugin=_this.getPlugin(prevId);if(!plugin){console.error("plugin nodeId: ".concat(prevId," not found"));return}_this.removePlugin(prevId);plugin.nodeId=newId;_this.setPlugin(newId,plugin);var subs=(_a=plugin.subscriptions)===null||_a===void 0?void 0:_a.map(function(subscription){var newIdFromPrevId=prevIds.get(subscription.fromNodeId);if(!newIdFromPrevId)return subscription;subscription.fromNodeId=newIdFromPrevId;return subscription});plugin.subscriptions=subs;var outputSubs=(_b=plugin.outputVariables)===null||_b===void 0?void 0:_b.map(function(subscription){var newIdFromPrevId=prevIds.get(subscription.fromNodeId);if(!newIdFromPrevId)return subscription;subscription.fromNodeId=newIdFromPrevId;return subscription});plugin.outputVariables=outputSubs;if(plugin.options.jumpOnSuccess){var prevId_1=plugin.options.jumpOnSuccess;var newId_1=v4();plugin.options.jumpOnSuccess=newId_1;changePluginId(newId_1,prevId_1)}if(plugin.options.jumpOnFail){var prevId_2=plugin.options.jumpOnFail;var newId_2=v4();plugin.options.jumpOnFail=newId_2;changePluginId(newId_2,prevId_2)}};var prevId=this.startNodeIn;var newId=initNodeId||v4();this.setStartNodeIn(newId);changePluginId(newId,prevId);var json=this.toJSON();this.fromJSONWithMeta(json);this.subscribeOnUpdate();this.updateVariablesSubsciptions()};PluginsModule.prototype.getInterface=function(_a){var chainId=_a.chainId,initModuleJSON=_a.initModuleJSON,startNodeId=_a.startNodeId;var json;if(!initModuleJSON){this.createNewModule(startNodeId);json=this.toJSON()}else{json=initModuleJSON}var newModule=new PluginsModule({chainId:chainId});newModule.fromJSONWithMeta(json);if(!newModule.startNodeIn)return;var initPlugin=newModule.getPlugin(newModule.startNodeIn);if(!initPlugin)return;var newInputValues={};var newOutputValues={};newModule.input.paramsList.forEach(function(param){param.param.nodeId=param.nodeId;_.set(newInputValues,param.id,param.param)});newModule.output.paramsList.forEach(function(param){param.param.nodeId=param.nodeId;_.set(newOutputValues,param.id,param.param)});var Plugin=createPlugin$1({protocol:newModule.protocol,type:"MODULE",name:newModule.name,method:"module",getParams:function(){return{input:newInputValues,output:newOutputValues}}});var newPlugin=new Plugin({chainId:chainId});newPlugin.getOutputValues=newModule.getOutputValues;return{instance:newPlugin,moduleInstance:newModule}};Object.defineProperty(PluginsModule.prototype,"input",{get:function(){return{paramsList:this.inputs}},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"output",{get:function(){return{paramsList:this.outputs}},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"inputs",{get:function(){var _this=this;var inputs=[];this.plugins.forEach(function(plugin){var params=plugin.plugin.input.paramsList;params.forEach(function(_a){var _b,_c;var param=_a.param,key=_a.key;var id=key==="to"?"to":"".concat(key,"_").concat(plugin.nodeId);param.label=param.label||key.replace("methodParams.","");param.description="".concat(plugin.plugin.name,"_").concat(param.key);if(plugin.nodeId===_this.startNodeIn){inputs.push({param:param,key:key,nodeId:plugin.nodeId,id:id});return}if(!plugin.subscriptions&&!plugin.outputVariables){inputs.push({param:param,key:key,nodeId:plugin.nodeId,id:id});return}if(!((_b=plugin.subscriptions)===null||_b===void 0?void 0:_b.find(function(subscription){return subscription.toParamKey===key}))&&!((_c=plugin.outputVariables)===null||_c===void 0?void 0:_c.find(function(subscription){return subscription.toParamKey===key}))){inputs.push({param:param,key:key,nodeId:plugin.nodeId,id:id});return}param.hidden=true;inputs.push({param:param,key:key,nodeId:plugin.nodeId,id:id})})});return inputs},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"outputs",{get:function(){var outputs=[];this.plugins.forEach(function(plugin){var params=plugin.plugin.output.paramsList;params.forEach(function(_a){var key=_a.key,param=_a.param;var id="".concat(key,"_").concat(plugin.nodeId);param.label=param.label||key;param.description="".concat(plugin.plugin.name,"_").concat(key);outputs.push({key:key,param:param,nodeId:plugin.nodeId,id:id})})});return outputs},enumerable:false,configurable:true});Object.defineProperty(PluginsModule.prototype,"startNodeIn",{get:function(){return this._startNodeIn},enumerable:false,configurable:true});PluginsModule.prototype.setStartNodeIn=function(nodeId){this._startNodeIn=nodeId};Object.defineProperty(PluginsModule.prototype,"name",{get:function(){return this._name||this.generateName()},set:function(name){this._name=name},enumerable:false,configurable:true});return PluginsModule}();const addresses={1:{FCT_Controller:"0x0A0ea58E6504aA7bfFf6F3d069Bd175AbAb638ee",FCT_BatchMultiSig:"0x74fe4729c31002c817a2c57cbe67fa37e62cf2f0",FCT_EnsManager:"0x30B25912faeb6E9B70c1FD9F395D2fF2083C966C",FCT_Tokenomics:"0xB6E0d8DCc868061faAf38D3Bf00793592ff68484",Actuator:"0x1332e1A702DaC73523708F95827E6b706DAE5fD9",ActuatorCore:"0xde841c9344E3C770a59102C8E61AFF699D8c4585",WETH:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},5:{FCT_Controller:"0x38B5249Ec6529F19aee7CE2c650CadD407a78Ed7",FCT_BatchMultiSig:"0x9F8Cc08FC5293D76A0d8B3b0924742FC36a1301c",FCT_EnsManager:"0xB9DBD91e7cC0A4d7635d18FB33416D784EBe2524",FCT_Tokenomics:"0x47Fca35c6fAb9E90a1ccf2630941fF64866fD3d2",Actuator:"0x862A8FB429195d735106c06C4e352E305d8c7B31",ActuatorCore:"0x2301F7d5A833395733F92fdf68B8Eb15aC757dF9",WETH:"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"},42161:{FCT_Controller:"0x7A45405D953974998fc447C196Fb015DC41C0650",FCT_BatchMultiSig:"0x2174679B326bE7B0888b54CaAdE1FE644DCfd309",FCT_EnsManager:"0xa51b9A359A87dB485Fcb87C358C58b123C2f9688",FCT_Tokenomics:"0xc074EEC205576C657a8EBDFeA8FCCd1a2924f193",Actuator:"0x4171ef9EB2CF074ECaA058Bd8e0F109C0ad4C6d1",ActuatorCore:"0x27C133a452303195b237fe920442891FeF609c54",WETH:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1"},421613:{FCT_Controller:"0x574F4cDAB7ec20E3A37BDE025260F0A2359503d6",FCT_BatchMultiSig:"0x3628BE9E0BEfE4406cDFCA72E51d40d3902B9a22",FCT_EnsManager:"0x40b3dA447BE499e0D8165b314EB77e2356d0a92f",FCT_Tokenomics:"0x4F741c8106a01d7bAd583aB8937B625d662F0530",Actuator:"0x0E3b88a54b4ac2cAA5aD69E5B2E8254dB669c5d7",ActuatorCore:"0xfE406d3285a6C5D45Dad771aaD1BD7dADcDb00A0",WETH:"0x1757f2E7BEE5abE1A79532000d05e32D90dD79fF"},11155111:{FCT_Controller:"0x1Bc4e8448E6B6703c7458C4Ee8361eB6c3015fD4",FCT_BatchMultiSig:"0x4F741c8106a01d7bAd583aB8937B625d662F0530",FCT_EnsManager:"0xE611349eD47064a1628204811e93090C018fD93b",FCT_Tokenomics:"0xBdc6fA7Af132d04C57DCD69C688eF3802a91bef2",Actuator:"0x3628BE9E0BEfE4406cDFCA72E51d40d3902B9a22",ActuatorCore:"0xE8572102FA6AE172df00634d5262E56ee283C134",WETH:"0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9"}};var Flow;(function(Flow){Flow["OK_CONT_FAIL_REVERT"]="OK_CONT_FAIL_REVERT";Flow["OK_CONT_FAIL_STOP"]="OK_CONT_FAIL_STOP";Flow["OK_CONT_FAIL_CONT"]="OK_CONT_FAIL_CONT";Flow["OK_REVERT_FAIL_CONT"]="OK_REVERT_FAIL_CONT";Flow["OK_REVERT_FAIL_STOP"]="OK_REVERT_FAIL_STOP";Flow["OK_STOP_FAIL_CONT"]="OK_STOP_FAIL_CONT";Flow["OK_STOP_FAIL_REVERT"]="OK_STOP_FAIL_REVERT";Flow["OK_STOP_FAIL_STOP"]="OK_STOP_FAIL_STOP"})(Flow||(Flow={}));const flows={OK_CONT_FAIL_REVERT:{text:"continue on success, revert on fail",value:"0"},OK_CONT_FAIL_STOP:{text:"continue on success, stop on fail",value:"1"},OK_CONT_FAIL_CONT:{text:"continue on success, continue on fail",value:"2"},OK_REVERT_FAIL_CONT:{text:"revert on success, continue on fail",value:"3"},OK_REVERT_FAIL_STOP:{text:"revert on success, stop on fail",value:"4"},OK_STOP_FAIL_CONT:{text:"stop on success, continue on fail",value:"5"},OK_STOP_FAIL_REVERT:{text:"stop on success, revert on fail",value:"6"},OK_STOP_FAIL_STOP:{text:"stop on success, stop on fail",value:"7"}};const{keccak256,toUtf8Bytes}=utils$1;const multicallContracts={1:"0xeefBa1e63905eF1D7ACbA5a8513c70307C1cE441",5:"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",42161:"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696",421613:"0x961E16D26D3f1fc042F192a2e5054120938c1CD5"};const nullValue="0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";const FCBase="0xFC00000000000000000000000000000000000000";const FCBaseBytes="0xFC00000000000000000000000000000000000000000000000000000000000000";const FDBase="0xFD00000000000000000000000000000000000000";const FDBaseBytes="0xFD00000000000000000000000000000000000000000000000000000000000000";const FDBackBase="0xFDB0000000000000000000000000000000000000";const FDBackBaseBytes="0xFDB0000000000000000000000000000000000000000000000000000000000000";const ComputedBase="0xFE00000000000000000000000000000000000000";const ComputedBaseBytes="0xFE00000000000000000000000000000000000000000000000000000000000000";const ValidationBase="0xE900000000000000000000000000000000000000000000000000000000000000";const ValidationOperator={equal:keccak256(toUtf8Bytes("equal")),"not equal":keccak256(toUtf8Bytes("not equal")),"greater than":keccak256(toUtf8Bytes("greater than")),"greater equal than":keccak256(toUtf8Bytes("greater equal than")),or:keccak256(toUtf8Bytes("or")),"or not":keccak256(toUtf8Bytes("or not")),and:keccak256(toUtf8Bytes("and")),"and not":keccak256(toUtf8Bytes("and not"))};const CALL_TYPE={ACTION:"0",VIEW_ONLY:"1",LIBRARY:"2",LIBRARY_VIEW_ONLY:"3"};const CALL_TYPE_MSG={ACTION:"action",VIEW_ONLY:"view only",LIBRARY:"library: action",LIBRARY_VIEW_ONLY:"library: view only"};const CALL_TYPE_MSG_REV={action:"ACTION","view only":"VIEW_ONLY","library: action":"LIBRARY","library: view only":"LIBRARY_VIEW_ONLY"};const FCT_VAULT_ADDRESS="FCT_VAULT_ADDRESS";var index$2=Object.freeze({__proto__:null,CALL_TYPE:CALL_TYPE,CALL_TYPE_MSG:CALL_TYPE_MSG,CALL_TYPE_MSG_REV:CALL_TYPE_MSG_REV,ComputedBase:ComputedBase,ComputedBaseBytes:ComputedBaseBytes,FCBase:FCBase,FCBaseBytes:FCBaseBytes,FCT_VAULT_ADDRESS:FCT_VAULT_ADDRESS,FDBackBase:FDBackBase,FDBackBaseBytes:FDBackBaseBytes,FDBase:FDBase,FDBaseBytes:FDBaseBytes,get Flow(){return Flow},ValidationBase:ValidationBase,ValidationOperator:ValidationOperator,addresses:addresses,multicallContracts:multicallContracts,nullValue:nullValue});var ERC20ABI=[{constant:true,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{payable:true,stateMutability:"payable",type:"fallback"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"},{indexed:true,name:"spender",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"from",type:"address"},{indexed:true,name:"to",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];var FCTActuatorABI=[{inputs:[{internalType:"address",name:"actuatorCore",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"by",type:"address"},{indexed:true,internalType:"address",name:"activator",type:"address"},{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:false,internalType:"address",name:"builder",type:"address"},{components:[{internalType:"uint256",name:"kiroboPayment",type:"uint256"},{internalType:"uint256",name:"builderPayment",type:"uint256"},{internalType:"uint256",name:"activatorPayment",type:"uint256"},{internalType:"uint256",name:"base",type:"uint256"},{internalType:"uint256",name:"fees",type:"uint256"},{internalType:"uint256",name:"commonGas",type:"uint256"},{internalType:"uint256",name:"userGas",type:"uint256"},{internalType:"uint256",name:"missingKiro",type:"uint256"},{internalType:"uint256",name:"availableEth",type:"uint256"}],indexed:false,internalType:"struct Total",name:"total",type:"tuple"},{indexed:false,internalType:"uint256",name:"gasPrice",type:"uint256"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_Activated",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:true,internalType:"address",name:"payer",type:"address"},{indexed:true,internalType:"address",name:"builder",type:"address"},{indexed:false,internalType:"uint256",name:"call",type:"uint256"},{indexed:false,internalType:"uint256",name:"totalKiroFees",type:"uint256"},{indexed:false,internalType:"uint256",name:"kiroPayed",type:"uint256"},{indexed:false,internalType:"uint256",name:"ethPayed",type:"uint256"},{indexed:false,internalType:"uint256",name:"builderPayment",type:"uint256"},{indexed:false,internalType:"uint256",name:"activatorPayment",type:"uint256"}],name:"FCTE_CallPayment",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"by",type:"address"},{indexed:true,internalType:"address",name:"activator",type:"address"},{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:false,internalType:"uint256",name:"activatorFees",type:"uint256"},{indexed:false,internalType:"uint256",name:"calcGas",type:"uint256"},{indexed:false,internalType:"uint256",name:"gasPrice",type:"uint256"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_ForFreeActivated",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"by",type:"address"},{indexed:true,internalType:"address",name:"activator",type:"address"},{indexed:false,internalType:"uint256",name:"price",type:"uint256"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_KiroPriceUpdated",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"by",type:"address"},{indexed:true,internalType:"address",name:"activator",type:"address"},{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:false,internalType:"address",name:"builder",type:"address"},{indexed:false,internalType:"uint256",name:"activatorFees",type:"uint256"},{indexed:false,internalType:"uint256",name:"builderPayement",type:"uint256"},{indexed:false,internalType:"uint256",name:"calcGas",type:"uint256"},{indexed:false,internalType:"uint256",name:"gasPrice",type:"uint256"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_NoPayerActivated",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"address",name:"account",type:"address"},{indexed:true,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"address",name:"account",type:"address"},{indexed:true,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{stateMutability:"payable",type:"fallback"},{inputs:[],name:"ACTUATOR_CORE",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"DAO_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DAO_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FCT_CONTROLLER",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"KIRO",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"MANAGER_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"MANAGER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"PROTECTOR_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"PROTECTOR_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"TOKEN_0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"TOKEN_1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"address",name:"activator",type:"address"}],name:"activate",outputs:[{internalType:"uint256",name:"activatorPaymentOrFees",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"},{internalType:"address",name:"activator",type:"address"}],name:"activateBatch",outputs:[{internalType:"uint256[]",name:"ret",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"address",name:"activator",type:"address"}],name:"activateForFree",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"},{internalType:"address",name:"activator",type:"address"}],name:"activateForFreeBatch",outputs:[{internalType:"uint256[]",name:"ret",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"getAmountOfEthForGivenKiro",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"getAmountOfKiroForGivenEth",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"activator",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isActivationApproved",outputs:[{components:[{internalType:"bool",name:"activate",type:"bool"},{internalType:"bool",name:"activateBatch",type:"bool"},{internalType:"bool",name:"activateForFree",type:"bool"},{internalType:"bool",name:"activateForFreeBatch",type:"bool"}],internalType:"struct IFCT_ActuatorStorage.Approvals",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"s_activation_approvals",outputs:[{internalType:"bool",name:"activate",type:"bool"},{internalType:"bool",name:"activateBatch",type:"bool"},{internalType:"bool",name:"activateForFree",type:"bool"},{internalType:"bool",name:"activateForFreeBatch",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"s_balances",outputs:[{internalType:"uint96",name:"kiro",type:"uint96"},{internalType:"uint96",name:"eth",type:"uint96"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_blockTimestampLast",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"s_builders",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_ethPenalty",outputs:[{internalType:"uint32",name:"kiroPriceBPS",type:"uint32"},{internalType:"bool",name:"paused",type:"bool"},{internalType:"bool",name:"freezed",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_forFreeFeesLimitBPS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_kiroFunding",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_kirobo",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_lastUpdateDateOfPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_maxBatched",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_maxBatchedForFree",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_minStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_price0Average",outputs:[{internalType:"uint224",name:"_x",type:"uint224"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_price1Average",outputs:[{internalType:"uint224",name:"_x",type:"uint224"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"s_staked",outputs:[{internalType:"uint96",name:"kiro",type:"uint96"},{internalType:"uint96",name:"eth",type:"uint96"},{internalType:"uint64",name:"blockNumber",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_timeBetweenKiroPriceUpdate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes7",name:"",type:"bytes7"}],name:"s_tokenomics",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"updateKiroPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}];var FCTBatchMultiSigCallABI=[{inputs:[{internalType:"address",name:"controller",type:"address"},{internalType:"address",name:"authenticator",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:true,internalType:"address",name:"caller",type:"address"},{indexed:false,internalType:"uint256",name:"callIndex",type:"uint256"}],name:"FCTE_CallFailed",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:true,internalType:"address",name:"caller",type:"address"},{indexed:false,internalType:"uint256",name:"callIndex",type:"uint256"}],name:"FCTE_CallSucceed",type:"event"},{inputs:[],name:"AUTHENTICATOR",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"BATCH_MULTI_SIG_CALL_ID",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"CONTROLLER",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"VERSION",outputs:[{internalType:"bytes3",name:"",type:"bytes3"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256[]",name:"types",type:"uint256[]"},{internalType:"bytes32[]",name:"typedHashes",type:"bytes32[]"},{components:[{internalType:"uint256",name:"data",type:"uint256"},{internalType:"uint256",name:"types",type:"uint256"}],internalType:"struct FCT_BatchMultiSig.Offset",name:"offset",type:"tuple"}],name:"abiToEIP712",outputs:[{internalType:"bytes",name:"res",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"version",type:"bytes32"},{components:[{internalType:"bytes32",name:"typeHash",type:"bytes32"},{internalType:"uint256",name:"sessionId",type:"uint256"},{internalType:"bytes32",name:"nameHash",type:"bytes32"},{internalType:"bytes32",name:"appHash",type:"bytes32"},{internalType:"bytes32",name:"appVersionHash",type:"bytes32"},{internalType:"bytes32",name:"builderHash",type:"bytes32"},{internalType:"bytes32",name:"domainHash",type:"bytes32"},{internalType:"bytes32",name:"verifierHash",type:"bytes32"},{internalType:"address",name:"builderAddress",type:"address"},{components:[{internalType:"bytes32",name:"typeHash",type:"bytes32"},{internalType:"bytes32",name:"ensHash",type:"bytes32"},{internalType:"bytes32",name:"functionSignature",type:"bytes32"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"callId",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256[]",name:"types",type:"uint256[]"},{internalType:"bytes32[]",name:"typedHashes",type:"bytes32[]"}],internalType:"struct FCT_BatchMultiSig.MSCall[]",name:"mcall",type:"tuple[]"},{components:[{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"},{internalType:"uint8",name:"v",type:"uint8"}],internalType:"struct FCT_BatchMultiSig.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"bytes32[]",name:"variables",type:"bytes32[]"},{internalType:"address[]",name:"externalSigners",type:"address[]"},{components:[{internalType:"bool",name:"overflowProtection",type:"bool"},{internalType:"uint256[4]",name:"values",type:"uint256[4]"},{internalType:"bytes32[3]",name:"operators",type:"bytes32[3]"}],internalType:"struct FCT_BatchMultiSig.Computed[]",name:"computed",type:"tuple[]"},{components:[{internalType:"uint256",name:"value1",type:"uint256"},{internalType:"bytes32",name:"operator",type:"bytes32"},{internalType:"uint256",name:"value2",type:"uint256"}],internalType:"struct FCT_BatchMultiSig.Validation[]",name:"validations",type:"tuple[]"}],internalType:"struct FCT_BatchMultiSig.MSCalls",name:"tr",type:"tuple"},{internalType:"bytes32",name:"purgeFCT",type:"bytes32"},{internalType:"address",name:"investor",type:"address"},{internalType:"address",name:"activator",type:"address"}],name:"batchMultiSigCall",outputs:[{internalType:"bytes32",name:"builderHash",type:"bytes32"},{internalType:"address",name:"builderAddress",type:"address"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{components:[{internalType:"address",name:"payer",type:"address"},{internalType:"uint88",name:"gas",type:"uint88"}],internalType:"struct MReturn[]",name:"rt",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getIDs",outputs:[{internalType:"bytes32[]",name:"res",type:"bytes32[]"}],stateMutability:"pure",type:"function"}];var FCTControllerABI=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:true,internalType:"address",name:"impl",type:"address"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_EngineAdded",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"ens",type:"address"},{indexed:true,internalType:"address",name:"prevEns",type:"address"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_EnsManagerChanged",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"messageHash",type:"bytes32"},{indexed:false,internalType:"uint256",name:"meta",type:"uint256"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_Purged",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"messageHash",type:"bytes32"},{components:[{internalType:"uint8",name:"flags",type:"uint8"},{internalType:"uint40",name:"expiresAt",type:"uint40"},{internalType:"uint40",name:"starttime",type:"uint40"},{internalType:"uint40",name:"lasttime",type:"uint40"},{internalType:"uint40",name:"timestamp",type:"uint40"},{internalType:"uint16",name:"repeatsLeft",type:"uint16"},{internalType:"uint16",name:"maxRepeats",type:"uint16"},{internalType:"bytes7",name:"engineId",type:"bytes7"},{internalType:"uint32",name:"chilltime",type:"uint32"},{internalType:"uint224",name:"reserved1",type:"uint224"},{internalType:"uint256",name:"reserved2",type:"uint256"},{internalType:"uint256",name:"reserved3",type:"uint256"}],indexed:false,internalType:"struct FCT_Controller.Meta",name:"meta",type:"tuple"},{indexed:false,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FCTE_Registered",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:true,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"address",name:"account",type:"address"},{indexed:true,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:true,internalType:"address",name:"account",type:"address"},{indexed:true,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{stateMutability:"nonpayable",type:"fallback"},{inputs:[],name:"ACTIVATION_ID_MASK",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"ACTUATOR_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"ACTUATOR_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"CHAIN_ID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"EMPTY_HASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"ENS_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"ENS_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"ID_VERSION_MASK",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"LOCAL_ENS_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"LOCAL_ENS_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"META_ACCUMATABLE_FLAG",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"META_BLOCKABLE_FLAG",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"META_EIP712_FLAG",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"META_PURGABLE_FLAG",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"TARGET_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"TARGET_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"UID",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"VERSION",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"VERSION_NUMBER",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"activationId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"activationInfo",outputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_engine",type:"address"}],name:"addEngine",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"engine",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"messageHash",type:"bytes32"}],name:"getFctMeta",outputs:[{components:[{internalType:"uint8",name:"flags",type:"uint8"},{internalType:"uint40",name:"expiresAt",type:"uint40"},{internalType:"uint40",name:"starttime",type:"uint40"},{internalType:"uint40",name:"lasttime",type:"uint40"},{internalType:"uint40",name:"timestamp",type:"uint40"},{internalType:"uint16",name:"repeatsLeft",type:"uint16"},{internalType:"uint16",name:"maxRepeats",type:"uint16"},{internalType:"bytes7",name:"engineId",type:"bytes7"},{internalType:"uint32",name:"chilltime",type:"uint32"},{internalType:"uint224",name:"reserved1",type:"uint224"},{internalType:"uint256",name:"reserved2",type:"uint256"},{internalType:"uint256",name:"reserved3",type:"uint256"}],internalType:"struct FCT_Controller.Meta",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"isExecuting",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"messageHash",type:"bytes32"}],name:"isExecutingFCT",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32[]",name:"messageHashes",type:"bytes32[]"}],name:"purge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"bytes32",name:"dataHash",type:"bytes32"},{components:[{internalType:"uint40",name:"expiresAt",type:"uint40"},{internalType:"uint32",name:"chilltime",type:"uint32"},{internalType:"uint16",name:"maxRepeats",type:"uint16"},{internalType:"bool",name:"accumatable",type:"bool"},{internalType:"bool",name:"eip712",type:"bool"},{internalType:"bool",name:"purgeable",type:"bool"},{internalType:"bool",name:"blockable",type:"bool"},{internalType:"uint8",name:"extraFlags",type:"uint8"},{internalType:"uint224",name:"reserved1",type:"uint224"},{internalType:"uint256",name:"reserved2",type:"uint256"},{internalType:"uint256",name:"reserved3",type:"uint256"}],internalType:"struct MetaInput",name:"meta",type:"tuple"}],name:"register",outputs:[{internalType:"bytes32",name:"messageHash",type:"bytes32"},{internalType:"uint256",name:"newMeta",type:"uint256"},{internalType:"bytes32",name:"newActivationId",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"s_activations",outputs:[{internalType:"uint248",name:"nonce",type:"uint248"},{internalType:"bool",name:"executing",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"s_engines",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_ensManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"s_executing",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"s_fcts",outputs:[{internalType:"uint8",name:"flags",type:"uint8"},{internalType:"uint40",name:"expiresAt",type:"uint40"},{internalType:"uint40",name:"starttime",type:"uint40"},{internalType:"uint40",name:"lasttime",type:"uint40"},{internalType:"uint40",name:"timestamp",type:"uint40"},{internalType:"uint16",name:"repeatsLeft",type:"uint16"},{internalType:"uint16",name:"maxRepeats",type:"uint16"},{internalType:"bytes7",name:"engineId",type:"bytes7"},{internalType:"uint32",name:"chilltime",type:"uint32"},{internalType:"uint224",name:"reserved1",type:"uint224"},{internalType:"uint256",name:"reserved2",type:"uint256"},{internalType:"uint256",name:"reserved3",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"ensManager",type:"address"}],name:"setEnsManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"address",name:"_engine",type:"address"},{internalType:"bytes32",name:"ensHash",type:"bytes32"},{internalType:"address",name:"expectedAddress",type:"address"}],name:"verifiedEnsToAddress",outputs:[{internalType:"address",name:"dest",type:"address"},{internalType:"uint8",name:"ensType",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"version",outputs:[{internalType:"bytes3",name:"",type:"bytes3"}],stateMutability:"view",type:"function"}];const MulticallABI=["function aggregate((address target, bytes callData)[] calls) external view returns (uint256 blockNumber, bytes[] returnData)","function getEthBalance(address addr) external view returns (uint256 balance)"];class Interfaces{static FCT_Controller=new Interface(FCTControllerABI);static FCT_BatchMultiSigCall=new Interface(FCTBatchMultiSigCallABI);static FCT_Actuator=new Interface(FCTActuatorABI);static Multicall=new Interface(MulticallABI);static ERC20=new Interface(ERC20ABI)}class FetchUtility{chainId;multicallContract;constructor({rpcUrl,chainId,provider}){if(!provider){if(!rpcUrl){throw new Error("No provider or rpcUrl provided")}provider=new JsonRpcProvider(rpcUrl)}if(typeof chainId==="string"){chainId=Number(chainId)}this.chainId=chainId;if(!multicallContracts[Number(chainId)]){throw new Error("Multicall contract not found for this chain")}this.multicallContract=new Contract(multicallContracts[Number(chainId)],Interfaces.Multicall,provider)}async fetchCurrentApprovals(data){const multicallContract=this.multicallContract;return await fetchCurrentApprovals({data:data,multicallContract:multicallContract,chainId:this.chainId,provider:multicallContract.provider})}async getTokensTotalSupply(requiredApprovals){const erc20Tokens=requiredApprovals.filter(approval=>approval.protocol==="ERC20");const ERC20Interface=new Interface(["function totalSupply() view returns (uint256)"]);const calls=erc20Tokens.map(({token:target})=>{return{target:target,callData:ERC20Interface.encodeFunctionData("totalSupply")}});const[,returnData]=await this.multicallContract.callStatic.aggregate(calls);return returnData.reduce((acc,res,index)=>{const decoded=ERC20Interface.decodeFunctionResult("totalSupply",res);acc[calls[index].target]=decoded[0].toString();return acc},{})}}const fetchApprovalsInterface=new Interface(["function allowance(address owner, address spender) view returns (uint256)","function getApproved(uint256 tokenId) view returns (address)","function isApprovedForAll(address owner, address operator) view returns (bool)"]);const generateDataForCall=data=>{if(data.protocol==="ERC20"){if(data.method==="approve"){return{functionName:"allowance",encodedData:fetchApprovalsInterface.encodeFunctionData("allowance",[data.from,data.params.spender])}}}if(data.protocol==="ERC721"){if(data.method==="approve"){return{functionName:"getApproved",encodedData:fetchApprovalsInterface.encodeFunctionData("getApproved",[data.params.tokenId])}}}if(data.method==="setApprovalForAll"){return{functionName:"isApprovedForAll",encodedData:fetchApprovalsInterface.encodeFunctionData("isApprovedForAll",[data.from,data.params.spender])}}};const fetchCurrentApprovals=async({rpcUrl,provider,chainId,multicallContract,multicallContractAddress,data})=>{if(!provider){if(!rpcUrl){throw new Error("No provider or rpcUrl provided")}provider=new JsonRpcProvider(rpcUrl)}chainId=chainId||(await provider.getNetwork()).chainId.toString();if(!multicallContract){multicallContractAddress=multicallContractAddress??multicallContracts[Number(chainId)];if(!multicallContractAddress){throw new Error("Multicall contract not found for this chain")}multicallContract=new Contract(multicallContractAddress,Interfaces.Multicall,provider)}const calls=data.map(approval=>{const dataOfCall=generateDataForCall(approval);if(!dataOfCall){throw new Error("Approval not found")}const{functionName,encodedData}=dataOfCall;return{functionName:functionName,dataForMulticall:{target:approval.token,callData:encodedData}}});const[,returnData]=await multicallContract.callStatic.aggregate(calls.map(call=>call.dataForMulticall));return returnData.map((res,index)=>{const functionName=calls[index].functionName;const decoded=fetchApprovalsInterface.decodeFunctionResult(functionName,res);return{...data[index],value:functionName==="allowance"?decoded[0].toString():decoded[0]}})};const precentilesForNetworks={5:[2,6,15,30],1:[2,5,15,25],42161:[2,5,15,25],421613:[2,6,15,30]};const gasPriceCalculationsByChains={5:maxFeePerGas=>{if(maxFeePerGas<70000000000n){return(maxFeePerGas+maxFeePerGas*15n/100n).toString()}if(maxFeePerGas<1e11){return(maxFeePerGas+maxFeePerGas*10n/100n).toString()}if(maxFeePerGas>2e11){return(maxFeePerGas+maxFeePerGas*5n/100n).toString()}return maxFeePerGas.toString()},1:maxFeePerGas=>maxFeePerGas.toString()};function avg(arr){if(arr.every(v=>v===undefined)){return 0n}const sum=arr.reduce((a,v)=>BigInt(a)+BigInt(v),0n);return sum/BigInt(arr.length)}const getGasPrices=async({rpcUrl,chainId,historicalBlocks=10,tries=40})=>{const provider=new JsonRpcProvider(rpcUrl);let keepTrying=true;let returnValue;do{try{const latestBlock=await provider.getBlock("latest");if(!latestBlock.baseFeePerGas){throw new Error("No baseFeePerGas")}const baseFee=latestBlock.baseFeePerGas.toString();const blockNumber=latestBlock.number;const generateBody=()=>{return JSON.stringify({jsonrpc:"2.0",method:"eth_feeHistory",params:[historicalBlocks,`0x${blockNumber.toString(16)}`,precentilesForNetworks[chainId]||precentilesForNetworks[5]],id:1})};const res=await fetch(rpcUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:generateBody()});const data=await res.json();const result=data.result;if(!result){throw new Error("No result")}let blockNum=parseInt(result.oldestBlock,16);let index=0;const blocks=[];while(blockNum<parseInt(result.oldestBlock,16)+historicalBlocks){blocks.push({number:blockNum,baseFeePerGas:result.baseFeePerGas[index],gasUsedRatio:result.gasUsedRatio[index],priorityFeePerGas:result.reward?result.reward[index]:[]});blockNum+=1;index+=1}const slow=avg(blocks.map(b=>b.priorityFeePerGas[0]));const average=avg(blocks.map(b=>b.priorityFeePerGas[1]));const fast=avg(blocks.map(b=>b.priorityFeePerGas[2]));const fastest=avg(blocks.map(b=>b.priorityFeePerGas[3]));const baseFeePerGas=BigInt(baseFee);const gasPriceCalc=gasPriceCalculationsByChains[chainId]||gasPriceCalculationsByChains[1];returnValue={slow:{maxFeePerGas:(slow+baseFeePerGas).toString(),maxPriorityFeePerGas:slow.toString()},average:{maxFeePerGas:(average+baseFeePerGas).toString(),maxPriorityFeePerGas:average.toString()},fast:{maxFeePerGas:gasPriceCalc(fast+baseFeePerGas),maxPriorityFeePerGas:fast.toString()},fastest:{maxFeePerGas:gasPriceCalc(fastest+baseFeePerGas),maxPriorityFeePerGas:fastest.toString()}};keepTrying=false;return returnValue}catch(err){if(tries>0){await new Promise(resolve=>setTimeout(resolve,3e3))}else{throw new Error("Could not get gas prices, issue might be related to node provider")}}}while(keepTrying&&tries-- >0);throw new Error("Could not get gas prices, issue might be related to node provider")};const data={5:{V2_Pool:"0x0D415c2496099DfBE817fc5A0285bE3d86b9FD8d",isToken0KIRO:true},1:{V2_Pool:"0x5CD136E8197Be513B06d39730dc674b1E0F6b7da",isToken0KIRO:true}};function decode144(val){const RESOLUTION=BigInt(112);return val>>RESOLUTION}const getMulticallContract=(chainId,provider)=>{const multicallAddress=multicallContracts[chainId];if(!multicallAddress){throw new Error(`No multicall address found for chainId ${chainId}`)}return new Contract(multicallAddress,["function aggregate((address target, bytes callData)[] calls) external view returns (uint256 blockNumber, bytes[] returnData)"],provider)};const getData=async({chainId,provider})=>{const poolAddress=data[chainId].V2_Pool;const actuatorAddress=addresses[chainId].Actuator;if(!poolAddress){throw new Error(`No pool address found for chainId ${chainId}`)}const UniswapV2Pair=new Interface(["function getReserves() view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)","function price0CumulativeLast() external view returns (uint)","function price1CumulativeLast() external view returns (uint)"]);const Actuator=Interfaces.FCT_Actuator;const multicallContract=getMulticallContract(chainId,provider);const[blockNumber,returnData]=await multicallContract.callStatic.aggregate([{target:poolAddress,callData:UniswapV2Pair.encodeFunctionData("price0CumulativeLast")},{target:poolAddress,callData:UniswapV2Pair.encodeFunctionData("price1CumulativeLast")},{target:poolAddress,callData:UniswapV2Pair.encodeFunctionData("getReserves")},{target:actuatorAddress,callData:Actuator.encodeFunctionData("s_blockTimestampLast")},{target:actuatorAddress,callData:Actuator.encodeFunctionData("s_price0CumulativeLast")},{target:actuatorAddress,callData:Actuator.encodeFunctionData("s_price1CumulativeLast")},{target:actuatorAddress,callData:Actuator.encodeFunctionData("s_timeBetweenKiroPriceUpdate")},{target:actuatorAddress,callData:Actuator.encodeFunctionData("s_price0Average")},{target:actuatorAddress,callData:Actuator.encodeFunctionData("s_price1Average")}]);const[price0CumulativeLast,price1CumulativeLast,getReserves,s_blockTimestampLast,s_price0CumulativeLast,s_price1CumulativeLast,s_timeBetweenKiroPriceUpdate,s_price0Average,s_price1Average]=returnData.map((data,i)=>{if(i===2){return UniswapV2Pair.decodeFunctionResult("getReserves",data)}return BigNumber$1.from(data)});return{blockNumber:blockNumber,price0CumulativeLast:price0CumulativeLast,price1CumulativeLast:price1CumulativeLast,getReserves:getReserves,s_blockTimestampLast:s_blockTimestampLast,s_price0CumulativeLast:s_price0CumulativeLast,s_price1CumulativeLast:s_price1CumulativeLast,s_timeBetweenKiroPriceUpdate:s_timeBetweenKiroPriceUpdate,s_price0Average:s_price0Average,s_price1Average:s_price1Average}};const getCumulativePrices=({blockTimestamp,getReserves,price0CumulativeLast,price1CumulativeLast})=>{const{reserve0,reserve1,blockTimestampLast}=getReserves;function fraction(num,denom){const numerator=BigInt(num);const denominator=BigInt(denom);const RESOLUTION=BigInt(112);const Q112=BigInt(2**112);if(numerator<=2**144-1){const result=numerator*BigInt(2)**RESOLUTION/denominator;if(result>2**224-1)throw Error("FixedPoint::fraction: overflow");return result}else{const result=numerator*Q112/denominator;if(result>2**224-1)throw Error("FixedPoint::fraction: overflow");return result}}const timeElapsed=blockTimestamp-blockTimestampLast;const price0Cumulative=fraction(reserve1.toString(),reserve0.toString())*BigInt(timeElapsed)+BigInt(price0CumulativeLast.toString());const price1Cumulative=fraction(reserve0.toString(),reserve1.toString())*BigInt(timeElapsed)+BigInt(price1CumulativeLast.toString());return{price0Cumulative:price0Cumulative,price1Cumulative:price1Cumulative}};const getKIROPrice=async({chainId,rpcUrl,provider,blockTimestamp})=>{if(!provider){if(!rpcUrl){throw new Error("Must provide either a provider or an rpcUrl")}provider=new JsonRpcProvider(rpcUrl)}blockTimestamp=blockTimestamp||(await provider.getBlock("latest")).timestamp;const isToken0KIRO=data[chainId].isToken0KIRO;const{price0CumulativeLast,price1CumulativeLast,getReserves,s_blockTimestampLast,s_price0CumulativeLast,s_price1CumulativeLast,s_timeBetweenKiroPriceUpdate,s_price0Average,s_price1Average}=await getData({chainId:chainId,provider:provider});const{price0Cumulative,price1Cumulative}=getCumulativePrices({blockTimestamp:blockTimestamp,getReserves:getReserves,price0CumulativeLast:price0CumulativeLast,price1CumulativeLast:price1CumulativeLast});const timeElapsed=blockTimestamp-s_blockTimestampLast.toNumber();if(timeElapsed<s_timeBetweenKiroPriceUpdate.toNumber()){const priceAverage=isToken0KIRO?s_price0Average:s_price1Average;return decode144(BigInt(priceAverage.toString())*BigInt(1e18)).toString()}const price0Average=(price0Cumulative-BigInt(s_price0CumulativeLast.toString()))/BigInt(timeElapsed);const price1Average=(price1Cumulative-BigInt(s_price1CumulativeLast.toString()))/BigInt(timeElapsed);const priceAverage=isToken0KIRO?price0Average:price1Average;return decode144(priceAverage*BigInt(1e18)).toString()};function deepMerge(target,...sources){const output=Object.assign({},target||{});sources.forEach(source=>{if(isObject(source)){Object.keys(source).forEach(key=>{if(isObject(source[key])){if(!(key in target))Object.assign(output,{[key]:source[key]});else output[key]=isObject(output[key])?deepMerge(target[key],source[key]):source[key]}else{if(source[key]!==undefined){Object.assign(output,{[key]:source[key]})}}})}});return output}function isObject(item){return item&&typeof item==="object"&&!Array.isArray(item)}class InstanceOf{static Variable=object=>{return typeof object==="object"&&"type"in object&&"id"in object};static TupleArray=(value,param)=>{return(param.customType||param.type.includes("tuple"))&&param.type.lastIndexOf("[")>0};static Tuple=(value,param)=>{return(param.customType||param.type.includes("tuple"))&&param.type.lastIndexOf("[")===-1};static CallWithPlugin=object=>{return typeof object==="object"&&"plugin"in object};static ValidationVariable=object=>{return typeof object==="object"&&"type"in object&&object.type==="validation"&&"id"in object};static Param=data=>{return Array.isArray(data)&&typeof data[0]==="object"&&"type"in data[0]&&"name"in data[0]};static ParamArray=data=>{return Array.isArray(data)&&InstanceOf.Param(data[0])};static ComputedVariable=object=>{return typeof object==="object"&&"type"in object&&object.type==="computed"&&"id"in object}}function getDate(days=0){const result=new Date;result.setDate(result.getDate()+days);return Number(result.getTime()/1e3).toFixed()}const NO_JUMP="NO_JUMP";const DEFAULT_CALL_OPTIONS={permissions:"0000",gasLimit:"0",flow:Flow.OK_CONT_FAIL_REVERT,jumpOnSuccess:NO_JUMP,jumpOnFail:NO_JUMP,falseMeansFail:false,callType:"ACTION",validation:"",usePureMethod:false};const valueWithPadStart$1=(value,padStart)=>{return Number(value).toString(16).padStart(padStart,"0")};class CallID{static asString({calls,validation,call,index,payerIndex}){const permissions="0000";const validationIndex=valueWithPadStart$1(call.options.validation?validation.getIndex(call.options.validation):0,4);const flow=valueWithPadStart$1(flows[call.options.flow].value,2);const payerIndexHex=valueWithPadStart$1(typeof payerIndex==="number"?payerIndex:index+1,4);const callIndex=valueWithPadStart$1(index+1,4);const gasLimit=valueWithPadStart$1(call.options.gasLimit,8);const flags=()=>{const callType=CALL_TYPE[call.options.callType];const falseMeansFail=call.options.falseMeansFail?4:0;return callType+(parseInt(callType,16)+falseMeansFail).toString(16)};let successJump="0000";let failJump="0000";if(call.options){const{jumpOnFail,jumpOnSuccess}=call.options;if(jumpOnFail&&jumpOnFail!==NO_JUMP){const nodeIndex=calls.findIndex(c=>c.nodeId===call?.options?.jumpOnFail);failJump=Number(nodeIndex-index-1).toString(16).padStart(4,"0")}if(jumpOnSuccess&&jumpOnSuccess!==NO_JUMP){const nodeIndex=calls.findIndex(c=>c.nodeId===call?.options?.jumpOnSuccess);successJump=Number(nodeIndex-index-1).toString(16).padStart(4,"0")}}return"0x"+`${validationIndex}${permissions}${flow}${failJump}${successJump}${payerIndexHex}${callIndex}${gasLimit}${flags()}`.padStart(64,"0")}static parse(callId){const{validation,permissions,flowNumber,jumpOnFail,jumpOnSuccess,payerIndex,callIndex,gasLimit,flags}=CallID.destructCallId(callId);const options={gasLimit:gasLimit,flow:CallID.getFlow(flowNumber),jumpOnFail:"",jumpOnSuccess:"",validation:validation.toString()};if(jumpOnFail)options["jumpOnFail"]=`node${callIndex+jumpOnFail}`;if(jumpOnSuccess)options["jumpOnSuccess"]=`node${callIndex+jumpOnFail}`;return{options:options,viewOnly:flags===1,permissions:permissions,payerIndex:payerIndex,callIndex:callIndex}}static parseWithNumbers(callId){const{validation,permissions,flowNumber,jumpOnFail,jumpOnSuccess,payerIndex,callIndex,gasLimit,flags}=CallID.destructCallId(callId);const options={gasLimit:gasLimit,flow:CallID.getFlow(flowNumber),jumpOnFail:jumpOnFail,jumpOnSuccess:jumpOnSuccess,validation:validation};return{options:options,viewOnly:flags===1,permissions:permissions,payerIndex:payerIndex,callIndex:callIndex}}static destructCallId=callId=>{const validation=parseInt(callId.slice(34,36),16);const permissions=callId.slice(36,38);const flowNumber=parseInt(callId.slice(38,40),16);const jumpOnFail=parseInt(callId.slice(40,44),16);const jumpOnSuccess=parseInt(callId.slice(44,48),16);const payerIndex=parseInt(callId.slice(48,52),16);const callIndex=parseInt(callId.slice(52,56),16);const gasLimit=parseInt(callId.slice(56,64),16).toString();const flags=parseInt(callId.slice(64,66),16);return{validation:validation,permissions:permissions,flowNumber:flowNumber,jumpOnFail:jumpOnFail,jumpOnSuccess:jumpOnSuccess,payerIndex:payerIndex,callIndex:callIndex,gasLimit:gasLimit,flags:flags}};static getFlow=flowNumber=>{const flow=Object.entries(flows).find(([,value])=>{return value.value===flowNumber.toString()});if(!flow)throw new Error("Invalid flow");return Flow[flow[0]]}}function generateNodeId(){return[...Array(20)].map(()=>Math.floor(Math.random()*16).toString(16)).join("")}const ParamType=ParamType$1;const variableStarts=["0xfb0","0xfa0","0xfc00000","0xfd00000","0xfdb000","0xfe000"];const manageValue=value=>{if(BigNumber$1.isBigNumber(value)){const hexString=value.toHexString().toLowerCase();if(variableStarts.some(v=>hexString.startsWith(v))){value=hexString}return value.toString()}if(typeof value==="number"){return value.toString()}return value};const getParams=params=>{return{...params.reduce((acc,param)=>{let value;if(param.customType||param.type.includes("tuple")){if(param.type.lastIndexOf("[")>0){const valueArray=param.value;value=valueArray.map(item=>getParams(item))}else{const valueArray=param.value;value=getParams(valueArray)}}else{value=param.value}return{...acc,[param.name]:value}},{})}};const getParamsFromTypedData=({coreParamTypes,parameters,types,primaryType})=>{const generateTypedDataTypes=(types,primaryType)=>{let type=types[primaryType];if(type[0].name==="call"&&type[0].type==="Call"){type=type.slice(1)}const params=[];for(const{name,type:paramType}of type){const typeWithoutArray=paramType.replace(/\[\]$/,"");if(types[typeWithoutArray]){const components=generateTypedDataTypes(types,typeWithoutArray);params.push(ParamType.from({name:name,type:typeWithoutArray,components:components}))}else{params.push(ParamType.from({name:name,type:paramType}))}}return params};const getParams=(typedDataTypes,coreParamTypes,parameters)=>{return typedDataTypes.map((typedDataInput,i)=>{const coreInput=coreParamTypes[i];if(typedDataInput.baseType==="tuple"){return{name:typedDataInput.name,type:typedDataInput.type,customType:true,value:getParams(typedDataInput.components,coreInput.components,parameters[typedDataInput.name])}}if(typedDataInput.baseType==="tuple[]"){return{name:typedDataInput.name,type:typedDataInput.type,customType:true,value:parameters[typedDataInput.name].map(tuple=>getParams(typedDataInput.components,coreInput.components,tuple))}}let value=parameters[typedDataInput.name];value=manageValue(value);return{name:typedDataInput.name,type:coreInput.type,customType:false,messageType:typedDataInput.type,value:value}})};return getParams(generateTypedDataTypes(types,primaryType),coreParamTypes,parameters)};const getAllSimpleParams=params=>{return params.reduce((acc,param)=>{if(param.customType||param.type.lastIndexOf("[")>0){if(param.type.lastIndexOf("[")>0){const valueArray=param.value;const data=valueArray.map(item=>getAllSimpleParams(item)).flat();return[...acc,...data]}else{const valueArray=param.value;return[...acc,...getAllSimpleParams(valueArray)]}}else{return[...acc,param.value]}},[])};const TYPE_NATIVE=1e3;const TYPE_STRING=2e3;const TYPE_BYTES=3e3;const TYPE_ARRAY=4e3;const TYPE_ARRAY_WITH_LENGTH=5e3;const getFixedArrayLength=type=>+type.slice(type.indexOf("[")+1,type.indexOf("]"));const typeValue=param=>{if(param.type.lastIndexOf("[")>0){const TYPE=param.type.indexOf("]")-param.type.indexOf("[")===1?TYPE_ARRAY:TYPE_ARRAY_WITH_LENGTH;if(param.customType||param.type.includes("tuple")){const value=param.value;const typesArray=getTypesArray(value[0],false);if(TYPE===TYPE_ARRAY_WITH_LENGTH){const countOfElements=+param.type.slice(param.type.indexOf("[")+1,param.type.indexOf("]"));return[TYPE,getFixedArrayLength(param.type),countOfElements,...typesArray]}const countOfElements=value[0].length;return[TYPE,countOfElements,...typesArray]}const parameter={...param,type:param.type.slice(0,param.type.lastIndexOf("["))};const insideType=typeValue(parameter);if(TYPE===TYPE_ARRAY_WITH_LENGTH){return[TYPE,getFixedArrayLength(param.type),...insideType]}return[TYPE,...insideType]}if(param.type==="string"){return[TYPE_STRING]}if(param.type==="bytes"){return[TYPE_BYTES]}if(param.customType||param.type.includes("tuple")){const values=param.value;const types=values.reduce((acc,item)=>{return[...acc,...typeValue(item)]},[]);return[values.length,...types]}return[TYPE_NATIVE]};const getTypesArray=(params,removeNative=true)=>{const types=params.reduce((acc,item)=>{const data=typeValue(item);return[...acc,...data]},[]);if(removeNative&&!types.some(item=>item!==TYPE_NATIVE)){return[]}return types};const isInteger=(value,key)=>{if(value.length===0){throw new Error(`${key} cannot be empty string`)}if(value.startsWith("-")){throw new Error(`${key} cannot be negative`)}if(value.includes(".")){throw new Error(`${key} cannot be a decimal`)}};const isAddress$1=(value,key)=>{if(value.length===0){throw new Error(`${key} address cannot be empty string`)}if(!isAddress$4(value)){throw new Error(`${key} address is not a valid address`)}};const verifyParam=param=>{const type=param.messageType||param.type;if(!param.value){throw new Error(`Param ${param.name} is missing a value`)}if(Array.isArray(param.value)&&type.includes("[")&&type.includes("]")){if(InstanceOf.Variable(param.value)){throw new Error(`Param ${param.name} (${type}) - arrays cannot be set as Variables`)}if(type.indexOf("]")-type.indexOf("[")>1){const length=+type.slice(type.indexOf("[")+1,type.indexOf("]"));if(param.value.length!==length){throw new Error(`Param ${param.name} (${type}) value is not an array of length ${length}`)}}const baseType=type.slice(0,type.lastIndexOf("["));param.value.forEach((value,index)=>{verifyParam({name:`${param.name}[${index}]`,type:baseType,value:value})})}if(InstanceOf.Variable(param.value))return;if(type==="bool"){if(typeof param.value!=="boolean"){throw new Error(`Param ${param.name} is not a boolean`)}}if(typeof param.value!=="string"){return}if(type.startsWith("uint")){if(param.value.includes(".")){throw new Error(`Param ${param.name} cannot be a decimal`)}if(param.value.startsWith("-")){throw new Error(`Param ${param.name} cannot be negative`)}}if(type.startsWith("int")){if(param.value.includes(".")){throw new Error(`Param ${param.name} cannot be a decimal`)}}if(type==="address"){if(!isAddress$4(param.value)){throw new Error(`Param ${param.name} is not a valid address`)}}if(type.startsWith("bytes")){if(!param.value.startsWith("0x")){throw new Error(`Param ${param.name} is not a valid bytes value`)}const length=type.match(/\d+/g);if(!length){if(InstanceOf.Variable(param.value)){throw new Error(`Param ${param.name} (${type}) - bytes cannot be set as Variables`)}return}const requiredLength=+length[0]*2+2;if(param.value.length!==requiredLength){throw new Error(`Param ${param.name} is not a valid ${type} value`)}}};function manage(val){if(!Array.isArray(val)){return manageValue(val)}return val.map(manage)}const buildInputsFromParams=params=>{return params.map(param=>{if(InstanceOf.Param(param.value)){return{type:"tuple",name:param.name,components:buildInputsFromParams(param.value)}}else if(InstanceOf.ParamArray(param.value)){return{type:"tuple[]",name:param.name,components:buildInputsFromParams(param.value[0])}}return{type:param.type,name:param.name}})};const getMethodInterface=call=>{if(!call.method)return"";const ABI=[{name:call.method,type:"function",constant:false,payable:false,inputs:buildInputsFromParams(call.params||[]),outputs:[]}];return new Interface(ABI).getFunction(call.method).format()};const getEncodedMethodParams=call=>{if(!call.method)return"0x";const getType=param=>{if(param.customType||param.type.includes("tuple")){let value;let isArray=false;if(param.type.lastIndexOf("[")>0){isArray=true;value=param.value[0]}else{value=param.value}return`(${value.map(getType).join(",")})${isArray?"[]":""}`}return param.type};const getValues=param=>{if(!param.value){throw new Error("Param value is required")}if(param.customType||param.type.includes("tuple")){let value;if(param.type.lastIndexOf("[")>0){value=param.value;return value.reduce((acc,val)=>{return[...acc,val.map(getValues)]},[])}else{value=param.value;return value.map(getValues)}}if(param.messageType){return handleTypeConversion(param)}return param.value};if(!call.params)return"0x";return defaultAbiCoder$1.encode(call.params.map(getType),call.params.map(getValues))};const decodeFromData=(call,data)=>{if(!call.method)return undefined;const ABI=[{name:call.method,type:"function",constant:false,payable:false,inputs:buildInputsFromParams(call.params||[]),outputs:[]}];const decodedData=new Interface(ABI).decodeFunctionData(call.method,data);return decodedData.slice(0,data.length).map(manage)};const decodeOutputData=(plugin,data)=>{if(!plugin)return null;if(plugin instanceof Multicall){if(plugin.method==="multiCall"){return[]}const outputTypes=plugin.getOutputParamsTypes();const outputParams=defaultAbiCoder$1.decode(outputTypes,data).map(manage);return outputParams}const outputTypes=plugin.output.paramsList.map(({param})=>param.fctType);return defaultAbiCoder$1.decode(outputTypes,data).map(manage)};function handleTypeConversion(param){if(param.messageType===param.type)return param.value;const conversion=typeConversions[`${param.messageType}_${param.type}`];if(conversion)return conversion(param.value);throw new Error(`Param ${param.name} - Conversion from ${param.messageType} to ${param.type} is not supported`)}const typeConversions={["string_bytes32"]:value=>keccak256$3(toUtf8Bytes$1(value)),["string_bytes"]:value=>toUtf8Bytes$1(value)};class CallBase{_call;constructor(input){let fullInput;if(!input.nodeId){fullInput={...input,nodeId:generateNodeId()}}else{fullInput=input}this._call=fullInput}get call(){return this._call}get nodeId(){return this._call.nodeId}getOutputVariable(innerIndex=0){return{type:"output",id:{nodeId:this._call.nodeId,innerIndex:innerIndex}}}getTypesArray(){const call=this._call;if(!call.params){return[]}return getTypesArray(call.params)}getFunctionSignature(){return this._call.method?id$2(this.getFunction()):nullValue}getFunction(){return this._call.options?.usePureMethod?this._call.method||"":getMethodInterface({method:this._call.method,params:this._call.params})}setOptions(options){this._call.options=deepMerge(this._call.options,options)}update(call){this._call=deepMerge(this._call,call)}}const gasCosts={call_firstOverhead:35000n,call_otherOverhead:8400n,delegateCall_firstOverhead:44000n,delegateCall_otherOverhead:17200n,delegateCall_repeatOverhead:10800n,nativeTokenOverhead:6550n};const getGasCosts=(key,chainId)=>{const gas=gasCosts[key];if(chainId==="42161"||chainId==="421613"){return gas*13n}return gas};let Call$1=class Call extends CallBase{FCT;plugin;isImport;constructor({FCT,input,isImport,plugin}){super(input);this.FCT=FCT;this.isImport=isImport||false;this._verifyCall({call:this.call});if(plugin){this.plugin=plugin}if(input.addValidation){this.FCT.validation.add({validation:input.addValidation,nodeId:this.nodeId})}}update(call){const data=deepMerge(this._call,call);this._verifyCall({call:data,update:true});this._call=data;return this.get()}addValidation(validation){const validationVariable=this.FCT.validation.add({validation:validation,nodeId:this.nodeId});this.setOptions({validation:validationVariable.id});return validationVariable}get options(){const defaults={...this.FCT.callDefault.options};return deepMerge(defaults,this.call.options)}isComputedUsed(id,index){const call=this.get();const checks=[call.value,call.from,call.to,...getAllSimpleParams(call.params||[])];return checks.some(item=>{if(InstanceOf.Variable(item)){return item.id===id}if(typeof item==="string"&&(item.length===42||item.length===66)){const hexString=item.toLowerCase();if(hexString.startsWith("0xfe000")){const parsedIndex=parseInt(hexString.slice(-4),16).toString();return parsedIndex===(index+1).toString()}}return false})}get(){const payerIndex=this.FCT.getIndexByNodeId(this.call.nodeId);const callDefaults={...this.FCT.callDefault};const data=deepMerge(callDefaults,{options:{payerIndex:payerIndex+1}},this.call);if(!this.isImport&&data.options.gasLimit&&data.options.gasLimit!=="0"){const isFirstCall=payerIndex===0;const callType=data.options.callType;let newGasLimit;if(callType==="LIBRARY"||callType==="LIBRARY_VIEW_ONLY"){if(isFirstCall){newGasLimit=(BigInt(data.options.gasLimit)+getGasCosts("delegateCall_firstOverhead",this.FCT.chainId)).toString()}else{const hadDelegateCall=this.FCT.calls.slice(0,payerIndex).some(call=>{return call.options.callType==="LIBRARY"||call.options.callType==="LIBRARY_VIEW_ONLY"});if(hadDelegateCall){newGasLimit=(BigInt(data.options.gasLimit)+getGasCosts("delegateCall_repeatOverhead",this.FCT.chainId)).toString()}else{newGasLimit=(BigInt(data.options.gasLimit)+getGasCosts("delegateCall_otherOverhead",this.FCT.chainId)).toString()}}}if(isFirstCall){newGasLimit=(BigInt(data.options.gasLimit)+getGasCosts("call_firstOverhead",this.FCT.chainId)).toString()}else{newGasLimit=(BigInt(data.options.gasLimit)+getGasCosts("call_otherOverhead",this.FCT.chainId)).toString()}if(callType==="ACTION"&&data.value&&data.value!=="0"){newGasLimit=(BigInt(newGasLimit)+getGasCosts("nativeTokenOverhead",this.FCT.chainId)).toString()}data.options.gasLimit=newGasLimit}return data}getDecoded(){const params=this.get().params;if(params&&params.length>0){const parameters=this._decodeParams(params);return{...this.get(),params:parameters}}return{...this.get(),params:[]}}getAsMCall(typedData,index){const call=this.get();return{typeHash:hexlify$1(TypedDataUtils.hashType(`transaction${index+1}`,typedData.types)),ensHash:id$3(call.toENS||""),functionSignature:this.getFunctionSignature(),value:this.FCT.variables.getValue(call.value,"uint256","0"),callId:CallID.asString({calls:this.FCT.callsAsObjects,validation:this.FCT.validation,call:call,index:index,payerIndex:this.options.payerIndex}),from:this.FCT.variables.getValue(call.from,"address"),to:this.FCT.variables.getValue(call.to,"address"),data:this.getEncodedData(),types:this.getTypesArray(),typedHashes:this.getTypedHashes(index)}}getAsEfficientMCall(index){const call=this.get();return{to:this.FCT.variables.getValue(call.to,"address"),value:this.FCT.variables.getValue(call.value,"uint256","0"),data:this.getEncodedDataWithSignature(),callid:CallID.asString({calls:this.FCT.callsAsObjects,validation:this.FCT.validation,call:this.get(),index:index,payerIndex:this.options.payerIndex})}}generateEIP712Type(index){const call=this.get();if(!call.params||call.params&&call.params.length===0){return{structTypes:{},callType:[{name:"call",type:"Call"}]}}const structTypes={};const callParameters=call.params.map(param=>{const typeName=this._getStructType({param:param,nodeId:index.toString(),structTypes:structTypes});return{name:param.name,type:typeName}});return{structTypes:structTypes,callType:[{name:"call",type:"Call"},...callParameters]}}generateEIP712Message(index){const paramsData=this._getParamsEIP712();const call=this.get();const options=call.options;const flow=flows[options.flow].text;const{jumpOnSuccess,jumpOnFail}=this._getJumps(index);return{call:{call_index:index+1,payer_index:typeof call.options.payerIndex==="number"?call.options.payerIndex:index+1,call_type:CALL_TYPE_MSG[call.options.callType],from:this.FCT.variables.getValue(call.from,"address"),to:this.FCT.variables.getValue(call.to,"address"),to_ens:call.toENS||"",value:this.FCT.variables.getValue(call.value,"uint256","0"),gas_limit:options.gasLimit,permissions:0,validation:call.options.validation?this.FCT.validation.getIndex(call.options.validation):0,flow_control:flow,returned_false_means_fail:options.falseMeansFail,jump_on_success:jumpOnSuccess,jump_on_fail:jumpOnFail,method_interface:this.getFunction()},...paramsData}}getTypedHashes(index){const{structTypes,callType}=this.generateEIP712Type(index);return this._getUsedStructTypes(structTypes,callType.slice(1)).map(type=>{return hexlify$1(TypedDataUtils.hashType(type,structTypes))})}getEncodedData(){return getEncodedMethodParams(this.getDecoded())}getEncodedDataWithSignature(){const funcSigAsBytes4=this.getFunctionSignature().slice(0,10);const encodedData=this.getEncodedData().replace(/^0x/,"");return funcSigAsBytes4+encodedData}decodeData({inputData,outputData}){const res={};res.inputData=decodeFromData(this.getDecoded(),inputData);if(outputData){const to=this.get().to;const pluginData=getPlugin$1({signature:this.getFunctionSignature(),address:typeof to==="string"?to:"",chainId:this.FCT.chainId});if(!pluginData)return null;let plugin;if(pluginData instanceof Multicall){plugin=pluginData;plugin.setMethodParams(res.inputData)}else{plugin=new pluginData.plugin({walletAddress:"0x",chainId:this.FCT.chainId})}res.outputData=decodeOutputData(plugin,outputData)}else{res.outputData=[]}return res}decodeOutputData(data){if(this.plugin){return decodeOutputData(this.plugin,data)}const to=this.get().to;const pluginData=getPlugin$1({signature:this.getFunctionSignature(),address:typeof to==="string"?to:"",chainId:this.FCT.chainId});if(!pluginData)return null;return decodeOutputData(new pluginData.plugin({walletAddress:"0x",chainId:this.FCT.chainId}),data)}_getUsedStructTypes(typedData,mainType){return mainType.reduce((acc,item)=>{if(item.type.includes("Struct_")){const type=item.type.replace("[]","");return[...acc,type,...this._getUsedStructTypes(typedData,typedData[type])]}return acc},[])}_getStructType({param,nodeId,structTypes={}}){if(!param.customType&&!param.type.includes("tuple")){return param.messageType||param.type}let paramValue;if(InstanceOf.TupleArray(param.value,param)){paramValue=param.value[0]}else if(InstanceOf.Tuple(param.value,param)){paramValue=param.value}else{throw new Error(`Invalid param value: ${param.value} for param: ${param.name}`)}const generalType=paramValue.map(item=>{if(item.customType||item.type.includes("tuple")){const typeName=this._getStructType({param:item,nodeId:nodeId,structTypes:structTypes});return{name:item.name,type:typeName}}return{name:item.name,type:item.messageType||item.type}});const typeName=`Struct_${nodeId}_${Object.keys(structTypes).length}`;structTypes[typeName]=generalType;return typeName+(param.type.includes("[]")?"[]":"")}_getParamsEIP712(){const decoded=this.getDecoded();return decoded.params?{...getParams(decoded.params)}:{}}_getJumps(index){let jumpOnSuccess=0;let jumpOnFail=0;const call=this.get();const options=call.options;if(options.jumpOnSuccess&&options.jumpOnSuccess!==NO_JUMP){const jumpOnSuccessIndex=this.FCT.calls.findIndex(c=>c.nodeId===options.jumpOnSuccess);if(jumpOnSuccessIndex===-1){throw new Error(`Jump on success node id ${options.jumpOnSuccess} not found`)}if(jumpOnSuccessIndex<=index){throw new Error(`Jump on success node id ${options.jumpOnSuccess} is current or before current node (${call.nodeId})`)}jumpOnSuccess=jumpOnSuccessIndex-index-1}if(options.jumpOnFail&&options.jumpOnFail!==NO_JUMP){const jumpOnFailIndex=this.FCT.calls.findIndex(c=>c.nodeId===options.jumpOnFail);if(jumpOnFailIndex===-1){throw new Error(`Jump on fail node id ${options.jumpOnFail} not found`)}if(jumpOnFailIndex<=index){throw new Error(`Jump on fail node id ${options.jumpOnFail} is current or before current node (${call.nodeId})`)}jumpOnFail=jumpOnFailIndex-index-1}return{jumpOnSuccess:jumpOnSuccess,jumpOnFail:jumpOnFail}}_decodeParams(params){return params.reduce((acc,param)=>{if(param.type==="tuple"||param.customType){if(param.type.lastIndexOf("[")>0){const value=param.value;const decodedValue=value.map(tuple=>this._decodeParams(tuple));return[...acc,{...param,value:decodedValue}]}const value=this._decodeParams(param.value);return[...acc,{...param,value:value}]}if(param.type.includes("[")){const type=param.type.slice(0,param.type.lastIndexOf("["));const value=param.value;return[...acc,{...param,value:value.map(item=>{if(InstanceOf.Variable(item)){return this.FCT.variables.getVariable(item,type)}return item})}]}if(InstanceOf.Variable(param.value)){const value=this.FCT.variables.getVariable(param.value,param.type);const updatedParam={...param,value:value};return[...acc,updatedParam]}return[...acc,param]},[])}_verifyCall({call,update=false}){if(!call.to){throw new Error("To address is required")}else if(typeof call.to==="string"){isAddress$1(call.to,"To")}if(call.value&&typeof call.value==="string"){isInteger(call.value,"Value")}if(call.method&&call.method.length===0){throw new Error("Method cannot be empty string")}if(call.nodeId){let index;if(update){const currentCallIndex=this.FCT.getIndexByNodeId(this.nodeId);const calls=this.FCT.calls.filter((item,i)=>i!==currentCallIndex);index=calls.findIndex(item=>item.nodeId===call.nodeId)}else{index=this.FCT.calls.findIndex(item=>item.nodeId===call.nodeId)}if(index>-1){throw new Error(`Node ID ${call.nodeId} already exists, please use a different one`)}}if(call.options){const{gasLimit,callType,flow}=call.options;if(gasLimit){isInteger(gasLimit,"Gas limit")}if(callType){const keysOfCALLTYPE=Object.keys(CALL_TYPE);if(!keysOfCALLTYPE.includes(callType)){throw new Error(`Call type ${callType} is not valid`)}}if(flow){const keysOfFlow=Object.keys(flows);if(!keysOfFlow.includes(flow)){throw new Error(`Flow ${flow} is not valid`)}}}if(call.params&&call.params.length){if(!call.method){throw new Error("Method is required when params are present")}call.params.map(verifyParam)}}static async create({call,FCT}){if(InstanceOf.CallWithPlugin(call)){return await this._createWithPlugin(FCT,call)}else{return this._createSimpleCall(FCT,call)}}static async _createWithPlugin(FCT,callWithPlugin){if(!callWithPlugin.plugin){throw new Error("Plugin is required to create a call with plugin.")}const pluginCall=await callWithPlugin.plugin.create();if(!pluginCall){throw new Error("Error creating call with plugin. Make sure input values are valid")}const data={...pluginCall,from:callWithPlugin.from,options:{...pluginCall.options,...callWithPlugin.options},nodeId:callWithPlugin.nodeId||generateNodeId()};return new Call({FCT:FCT,input:data,plugin:callWithPlugin.plugin})}static _createSimpleCall(FCT,call){return new Call({FCT:FCT,input:call})}};class FCTBase{FCT;constructor(FCT){this.FCT=FCT}}const EIP712Domain=[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"},{name:"salt",type:"bytes32"}];const Meta=[{name:"name",type:"string"},{name:"app",type:"string"},{name:"app_version",type:"string"},{name:"builder",type:"string"},{name:"builder_address",type:"address"},{name:"domain",type:"string"}];const Engine=[{name:"selector",type:"bytes4"},{name:"version",type:"bytes3"},{name:"random_id",type:"bytes3"},{name:"eip712",type:"bool"},{name:"verifier",type:"string"},{name:"auth_enabled",type:"bool"},{name:"dry_run",type:"bool"}];const Limits=[{name:"valid_from",type:"uint40"},{name:"expires_at",type:"uint40"},{name:"gas_price_limit",type:"uint64"},{name:"purgeable",type:"bool"},{name:"blockable",type:"bool"}];const Computed=[{name:"index",type:"uint256"},{name:"value_1",type:"uint256"},{name:"op_1",type:"string"},{name:"value_2",type:"uint256"},{name:"op_2",type:"string"},{name:"value_3",type:"uint256"},{name:"op_3",type:"string"},{name:"value_4",type:"uint256"},{name:"overflow_protection",type:"bool"}];const Call=[{name:"call_index",type:"uint16"},{name:"payer_index",type:"uint16"},{name:"call_type",type:"string"},{name:"from",type:"address"},{name:"to",type:"address"},{name:"to_ens",type:"string"},{name:"value",type:"uint256"},{name:"gas_limit",type:"uint32"},{name:"permissions",type:"uint16"},{name:"validation",type:"uint16"},{name:"flow_control",type:"string"},{name:"returned_false_means_fail",type:"bool"},{name:"jump_on_success",type:"uint16"},{name:"jump_on_fail",type:"uint16"},{name:"method_interface",type:"string"}];const Recurrency=[{name:"max_repeats",type:"uint16"},{name:"chill_time",type:"uint32"},{name:"accumetable",type:"bool"}];const Multisig=[{name:"external_signers",type:"address[]"},{name:"minimum_approvals",type:"uint8"}];const Validation$1=[{name:"index",type:"uint256"},{name:"value_1",type:"uint256"},{name:"op",type:"string"},{name:"value_2",type:"uint256"}];const TYPED_DATA_DOMAIN={1:{name:"FCT Controller",version:"1",chainId:1,verifyingContract:"0x0A0ea58E6504aA7bfFf6F3d069Bd175AbAb638ee",salt:"0x0100c3ae8d91c3ffd32800000a0ea58e6504aa7bfff6f3d069bd175abab638ee"},5:{name:"FCT Controller",version:"1",chainId:5,verifyingContract:"0x38B5249Ec6529F19aee7CE2c650CadD407a78Ed7",salt:"0x01004130db7959f5983e000038b5249ec6529f19aee7ce2c650cadd407a78ed7"},42161:{name:"FCT Controller",version:"1",chainId:42161,verifyingContract:"0x7A45405D953974998fc447C196Fb015DC41C0650",salt:"0x0100af89b3a0314c9a2f00007a45405d953974998fc447c196fb015dc41c0650"},421613:{name:"FCT Controller",version:"1",chainId:421613,verifyingContract:"0x574F4cDAB7ec20E3A37BDE025260F0A2359503d6",salt:"0x0100df6d107dcaba91640000574f4cdab7ec20e3a37bde025260f0a2359503d6"},11155111:{name:"FCT Controller",version:"1",chainId:11155111,verifyingContract:"0x1Bc4e8448E6B6703c7458C4Ee8361eB6c3015fD4",salt:"0x01006e6774a58cfed2c900001bc4e8448e6b6703c7458c4ee8361eb6c3015fd4"}};const types={domain:EIP712Domain,meta:Meta,engine:Engine,limits:Limits,computed:Computed,call:Call,recurrency:Recurrency,multisig:Multisig,validation:Validation$1};class EIP712 extends FCTBase{constructor(FCT){super(FCT)}static types=types;static getTypedDataDomain(chainId){return TYPED_DATA_DOMAIN[chainId]}getTypedData(){return{types:this.getTypedDataTypes(),primaryType:this.getPrimaryType(),domain:this.getTypedDataDomain(),message:this.getTypedDataMessage()}}getTypedDataMessage(){const transactionTypedData=this.getTransactionTypedDataMessage();const FCTOptions=this.FCT.options;const{recurrency,multisig}=FCTOptions;let optionalMessage={};if(Number(recurrency.maxRepeats)>1){optionalMessage=deepMerge(optionalMessage,{recurrency:{max_repeats:recurrency.maxRepeats,chill_time:recurrency.chillTime,accumetable:recurrency.accumetable}})}if(multisig.externalSigners.length>0){optionalMessage=deepMerge(optionalMessage,{multisig:{external_signers:multisig.externalSigners,minimum_approvals:multisig.minimumApprovals||"2"}})}return{meta:{name:FCTOptions.name||"",app:FCTOptions.app.name||"",app_version:FCTOptions.app.version||"",builder:FCTOptions.builder.name||"",builder_address:FCTOptions.builder.address||"",domain:FCTOptions.domain||""},engine:{selector:this.FCT.batchMultiSigSelector,version:this.FCT.version,random_id:`0x${this.FCT.randomId}`,eip712:true,verifier:FCTOptions.verifier,auth_enabled:FCTOptions.authEnabled,dry_run:FCTOptions.dryRun},limits:{valid_from:FCTOptions.validFrom,expires_at:FCTOptions.expiresAt,gas_price_limit:FCTOptions.maxGasPrice,purgeable:FCTOptions.purgeable,blockable:FCTOptions.blockable},...optionalMessage,...this.getComputedVariableMessage(),...this.getValidationMessage(),...transactionTypedData}}getTypedDataTypes(){const{structTypes,transactionTypes}=this.getCallTypesAndStructs();const FCTOptions=this.FCT.options;const{recurrency,multisig}=FCTOptions;let optionalTypes={};const additionalTypesInPrimary=[];if(Number(recurrency.maxRepeats)>1){optionalTypes=deepMerge(optionalTypes,{Recurrency:EIP712.types.recurrency});additionalTypesInPrimary.push({name:"recurrency",type:"Recurrency"})}if(multisig.externalSigners.length>0){optionalTypes=deepMerge(optionalTypes,{Multisig:EIP712.types.multisig});additionalTypesInPrimary.push({name:"multisig",type:"Multisig"})}if(this.FCT.computed.length>0){optionalTypes=deepMerge(optionalTypes,{Computed:EIP712.types.computed})}if(this.FCT.validation.get().length>0){optionalTypes=deepMerge(optionalTypes,{Validation:EIP712.types.validation})}return{EIP712Domain:EIP712.types.domain,Meta:EIP712.types.meta,Engine:EIP712.types.engine,Limits:EIP712.types.limits,...optionalTypes,...transactionTypes,...structTypes,BatchMultiSigCall:this.getPrimaryTypeTypes(additionalTypesInPrimary),Call:EIP712.types.call}}getTypedDataDomain(){return this.FCT.domain}getPrimaryType(){return"BatchMultiSigCall"}getPrimaryTypeTypes(additionalTypes){return[{name:"meta",type:"Meta"},{name:"engine",type:"Engine"},{name:"limits",type:"Limits"},...additionalTypes,...this.getComputedPrimaryType(),...this.getValidationPrimaryType(),...this.getCallsPrimaryType()]}getCallsPrimaryType(){return this.FCT.calls.map((_,index)=>({name:`transaction_${index+1}`,type:`transaction${index+1}`}))}getComputedPrimaryType(){return this.FCT.computed.map((_,index)=>({name:`computed_${index+1}`,type:`Computed`}))}getValidationPrimaryType(){return this.FCT.validation.get().map((_,index)=>({name:`validation_${index+1}`,type:`Validation`}))}getTransactionTypedDataMessage(){return this.FCT.calls.reduce((acc,call,index)=>{return{...acc,[`transaction_${index+1}`]:call.generateEIP712Message(index)}},{})}getValidationMessage(){return this.FCT.validation.getForEIP712().reduce((acc,item,i)=>{return{...acc,[`validation_${i+1}`]:item}},{})}getComputedVariableMessage=()=>{return this.FCT.variables.computedForEIP712.reduce((acc,item,i)=>{return{...acc,[`computed_${i+1}`]:item}},{})};getCallTypesAndStructs(){let structs={};const types={};this.FCT.calls.forEach((call,index)=>{const{structTypes,callType}=call.generateEIP712Type(index);structs={...structs,...structTypes};types[`transaction${index+1}`]=callType});return{structTypes:structs,transactionTypes:types}}}function getCalldataForActuator({signedFCT,purgedFCT,investor,activator,version}){return Interfaces.FCT_BatchMultiSigCall.encodeFunctionData("batchMultiSigCall",[`0x${version}`.padEnd(66,"0"),signedFCT,purgedFCT,investor,activator])}const AUTHENTICATOR_PRIVATE_KEY="5c35caeef2837c989ca02120f70b439b1f3266b779db6eb38ccabba24a2522b3";const getAuthenticatorSignature=typedData=>{try{const signature=signTypedData({data:typedData,privateKey:Buffer.from(AUTHENTICATOR_PRIVATE_KEY,"hex"),version:SignTypedDataVersion.V4});return splitSignature(signature)}catch(e){throw new Error("Error signing typed data")}};var utils=Object.freeze({__proto__:null,getAuthenticatorSignature:getAuthenticatorSignature,getCalldataForActuator:getCalldataForActuator});const{getAddress,id}=utils$1;function getAllRequiredApprovals(FCT){let requiredApprovals=[];if(!FCT.chainId){throw new Error("No chainId or provider has been set")}const chainId=FCT.chainId;const calls=FCT.calls;for(const[callIndex,call]of FCT.callsAsObjects.entries()){if(typeof call.to!=="string"){continue}const callClass=new CallBase(call);let approvals=[];const funcitonSignature=callClass.getFunctionSignature();if(funcitonSignature.toLowerCase()===id("transferFrom(address,address,uint256)").toLowerCase()){const whoNeedsToApprove=call.params?call.params[0].value:"";const amount=call.params?call.params[2].value:"";const from=call.from;if(typeof whoNeedsToApprove==="string"&&typeof amount==="string"&&typeof from==="string"&&from.toLowerCase()!==whoNeedsToApprove.toLowerCase()){requiredApprovals.push({protocol:"ERC20",from:whoNeedsToApprove,method:"approve",token:call.to,params:{spender:from,amount:amount}})}continue}const mainCallData=calls[callIndex];if(mainCallData.plugin){const plugin=mainCallData.plugin;const pluginApprovals=plugin.getRequiredApprovals();approvals=pluginApprovals}else{let pluginData;try{pluginData=getPlugin$1({signature:callClass.getFunctionSignature(),address:call.to,chainId:chainId})}catch(error){continue}if(pluginData){const initPlugin=new pluginData.plugin({chainId:chainId,vaultAddress:typeof call.from==="string"?call.from:""});const methodParams=call.params?call.params.reduce((acc,param)=>{acc[param.name]=param.value;return acc},{}):{};initPlugin.input.set({to:call.to,methodParams:methodParams});approvals=initPlugin.getRequiredApprovals()}}if(approvals.length>0&&typeof call.from==="string"){const manageValue=value=>{if(InstanceOf.Variable(value)||!value){return""}return value};const requiredApprovalsWithFrom=approvals.map(approval=>{if(approval.method==="approve"){const data={token:manageValue(approval.to),method:approval.method,from:manageValue(approval.from||call.from)};if(approval.protocol==="ERC20"){return{...data,protocol:approval.protocol,params:{spender:manageValue(approval.params[0]),amount:approval.params[1]}}}else if(approval.protocol==="ERC721"){return{...data,protocol:approval.protocol,params:{spender:manageValue(approval.params[0]),tokenId:approval.params[1]}}}}if(approval.method==="setApprovalForAll"&&(approval.protocol==="ERC721"||approval.protocol==="ERC1155")){return{protocol:approval.protocol,token:manageValue(approval.to),method:approval.method,params:{spender:manageValue(approval.params[0]),approved:approval.params[1]==="true",ids:approval.params[2]},from:manageValue(approval.from||call.from)}}if(approval.protocol==="AAVE"&&approval.method==="approveDelegation"){return{protocol:approval.protocol,token:manageValue(approval.to),method:approval.method,params:{delegatee:manageValue(approval.params[0]),amount:approval.params[1]},from:manageValue(approval.from||call.from)}}throw new Error("Unknown method for plugin")}).filter(approval=>{if(typeof call.from!=="string"){return true}const isGoingToGetApproved=FCT.callsAsObjects.some((fctCall,i)=>{if(i>=callIndex)return false;const{to,method,from}=fctCall;if(typeof to!=="string"||typeof from!=="string")return false;return to.toLowerCase()===approval.token.toLowerCase()&&method===approval.method&&from.toLowerCase()===approval.from.toLowerCase()});if(isGoingToGetApproved)return false;const caller=getAddress(call.from);if(approval.protocol==="AAVE"){const whoIsApproving=getAddress(approval.from);const whoIsSpending=getAddress(approval.params.delegatee);return!(caller===whoIsSpending&&caller===whoIsApproving)}if(approval.protocol==="ERC721"&&(call.method==="safeTransferFrom"||call.method==="transferFrom")){const whoIsSending=getAddress(approval.from);const whoIsSpending=getAddress(approval.params.spender);return!(whoIsSending===whoIsSpending)}return true});requiredApprovals=[...requiredApprovals,...requiredApprovalsWithFrom]}}return requiredApprovals}const secureStorageAddresses=[{address:"0x039987486206d32aB55BE53c2748121a6559aAdE",chainId:"1"},{address:"0x4FEe9fc300DFF6221e5911f296c4CaA3d23A7830",chainId:"5"},{address:"0xF71396c6F168Dc1c213AA9433cB0E7C1e4B07964",chainId:"11155111"}];const WHOLE_IN_BPS=10000n;const fees={beforeCallingBatchMultiSigCall:5000n,FCTControllerOverhead:43000n,gasBeforeEncodedLoop:3000n,gasForEncodingCall:8000n,additionalGasForEncodingCall:100n,FCTControllerRegisterCall:43000n,signatureRecovery:6000n,miscGasBeforeMcallLoop:1700n,paymentApproval:9000n,paymentsOutBase:24500n,paymentsOutPerPayment:1300n,totalCallsChecker:16000n,estimateExtraCommmonGasCost:4000n,mcallOverheadFirstCall:40000n,mcallOverheadOtherCalls:11000n,defaultGasLimit:30000n};const arbitrumFees=Object.fromEntries(Object.entries(fees).map(([key,value])=>[key,BigInt(value)*13n]));function getFee(key,chainId){if(chainId==="42161"||chainId==="421613"){return arbitrumFees[key]}return fees[key]}const getEncodingMcallCost=(callCount,chainId)=>{return BigInt(callCount)*getFee("gasForEncodingCall",chainId)+BigInt(callCount)*BigInt(callCount-1)*getFee("additionalGasForEncodingCall",chainId)/2n};const getSignatureRecoveryCost=(signatureCount,chainId)=>{return BigInt(signatureCount)*getFee("signatureRecovery",chainId)};const getPaymentsOutCost=(callCount,chainId)=>{return getFee("paymentsOutBase",chainId)+BigInt(callCount)*getFee("paymentsOutPerPayment",chainId)};const getExtraCommonGas=(payersCount,msgDataLength)=>{return 23100n+4600n*BigInt(payersCount)+77600n*BigInt(msgDataLength)/10000n};const getPayers=(calls,pathIndexes)=>{return pathIndexes.reduce((acc,pathIndex)=>{const call=calls[Number(pathIndex)];const{payerIndex}=CallID.parse(call.callId);if(payerIndex===0)return acc;const payer=calls[payerIndex-1].from;if(payer&&payer!==acc[acc.length-1]){acc.push(payer)}return acc},[])};const getAllSigners=calls=>{return calls.reduce((acc,call)=>{if(!acc.includes(call.from)){acc.push(call.from)}return acc},[])};function getPayersForRoute({chainId,calls,pathIndexes,calldata}){const payers=getPayers(calls,pathIndexes);const allSigners=getAllSigners(calls);const batchMultiSigCallOverhead=getFee("FCTControllerOverhead",chainId)+getFee("gasBeforeEncodedLoop",chainId)+getEncodingMcallCost(calls.length,chainId)+getFee("FCTControllerRegisterCall",chainId)+getSignatureRecoveryCost(allSigners.length+1,chainId)+getFee("miscGasBeforeMcallLoop",chainId);const overhead=getFee("beforeCallingBatchMultiSigCall",chainId)+batchMultiSigCallOverhead+getPaymentsOutCost(calls.length,chainId)+getFee("totalCallsChecker",chainId)+getFee("estimateExtraCommmonGasCost",chainId);const commonGas=getExtraCommonGas(payers.length,calldata.length)+overhead;const commonGasPerCall=commonGas/BigInt(pathIndexes.length);const gasForFCTCall=pathIndexes.reduce((acc,path)=>{const call=calls[Number(path)];const{payerIndex,options}=CallID.parse(call.callId);if(payerIndex===0)return acc;const payer=calls[payerIndex-1].from;const gas=BigInt(options.gasLimit)||getFee("defaultGasLimit",chainId);const amount=gas+commonGasPerCall;if(acc[payer]){acc[payer]+=amount}else{acc[payer]=amount}return acc},{});const gasForPaymentApprovals=payers.reduce((acc,address)=>{const fee=getFee("paymentApproval",chainId);if(acc[address]){acc[address]+=fee}else{acc[address]=fee}return acc},{});return payers.map(payer=>{const gas=gasForFCTCall[payer]+gasForPaymentApprovals[payer];return{payer:payer,gas:gas||0n}})}function getEffectiveGasPrice({maxGasPrice,gasPrice,baseFeeBPS,bonusFeeBPS}){return((BigInt(gasPrice)*(WHOLE_IN_BPS+baseFeeBPS)+(BigInt(maxGasPrice)-BigInt(gasPrice))*bonusFeeBPS)/WHOLE_IN_BPS).toString()}function getCostInKiro({ethPriceInKIRO,ethCost}){return(ethCost*BigInt(ethPriceInKIRO)/10n**18n).toString()}const batchMultiSigInterface=Interfaces.FCT_BatchMultiSigCall;const controllerInterface=Interfaces.FCT_Controller;const verifyMessageHash=(logs,messageHashFromFCT)=>{const messageHash=logs.find(log=>{try{return controllerInterface.parseLog(log).name==="FCTE_Registered"}catch(e){return false}})?.topics[2];if(messageHash!==messageHashFromFCT){throw new Error("Message hash mismatch")}return true};const txTraceMapLog=log=>{const parsedLog=batchMultiSigInterface.parseLog(log);return{id:parsedLog.args.id,caller:parsedLog.args.caller,callIndex:parsedLog.args.callIndex.toString(),isSuccess:parsedLog.name==="FCTE_CallSucceed"}};const executedCallsFromLogs=logs=>{return logs.filter(log=>{try{return batchMultiSigInterface.parseLog(log).name==="FCTE_CallSucceed"||batchMultiSigInterface.parseLog(log).name==="FCTE_CallFailed"}catch(e){return false}}).map(txTraceMapLog)};const manageValidationAndComputed=(acc,call,computed)=>{if(call.options.validation&&call.options.validation!=="0"){acc.validations=[...acc.validations,{id:call.options.validation}]}const usedComputed=computed.filter((computed,index)=>{return call.isComputedUsed(computed.id,index)});usedComputed.forEach(computed=>{if(acc.computed.find(accComputed=>accComputed.id===computed.id))return;acc.computed=[...acc.computed,{id:computed.id}]})};class FCTUtils extends FCTBase{_eip712;_cache=new NodeCache;constructor(FCT){super(FCT);this._eip712=new EIP712(FCT)}get FCTData(){return this.FCT.exportFCT()}async getAllRequiredApprovals(){return getAllRequiredApprovals(this.FCT)}getCalldataForActuator({signatures,purgedFCT,investor,activator}){return getCalldataForActuator({signedFCT:deepMerge(this.FCTData,{signatures:signatures}),purgedFCT:purgedFCT,investor:investor,activator:activator,version:this.FCT.version.slice(2)})}getAuthenticatorSignature(){return getAuthenticatorSignature(this._eip712.getTypedData())}recoverAddress(signature){try{const signatureString=joinSignature(signature);return recoverTypedSignature({data:this.FCTData.typedData,version:SignTypedDataVersion.V4,signature:signatureString})}catch(e){return null}}getMessageHash(){return hexlify(TypedDataUtils.eip712Hash(this.FCTData.typedData,SignTypedDataVersion.V4))}isValid(softValidation=false){const keys=Object.keys(this.FCTData);this._validateFCTKeys(keys);const limits=this.FCTData.typedData.message.limits;const engine=this.FCTData.typedData.message.engine;const currentDate=(new Date).getTime()/1e3;const validFrom=parseInt(limits.valid_from);const expiresAt=parseInt(limits.expires_at);const gasPriceLimit=limits.gas_price_limit;if(!softValidation&&validFrom>currentDate){throw new Error(`FCT is not valid yet. FCT is valid from ${validFrom}`)}if(expiresAt<currentDate){throw new Error(`FCT has expired. FCT expired at ${expiresAt}`)}if(gasPriceLimit==="0"){throw new Error(`FCT gas price limit cannot be 0`)}if(!engine.eip712){throw new Error(`FCT must be type EIP712`)}return true}getSigners(){return this.FCTData.mcall.reduce((acc,{from})=>{const doNotReturn=secureStorageAddresses.find(address=>address.address.toLowerCase()===from.toLowerCase()&&address.chainId===this.FCT.chainId);if(!acc.includes(from)&&!doNotReturn){acc.push(from)}return acc},[])}getAllPaths(){const FCT=this.FCTData;const g=new Graph({directed:true});FCT.mcall.forEach((_,index)=>{g.setNode(index.toString())});const continueOnSuccessFlows=[Flow.OK_CONT_FAIL_REVERT,Flow.OK_CONT_FAIL_STOP,Flow.OK_CONT_FAIL_CONT];const continueOnFailFlows=[Flow.OK_REVERT_FAIL_CONT,Flow.OK_STOP_FAIL_CONT,Flow.OK_CONT_FAIL_CONT];const endFlows=[Flow.OK_STOP_FAIL_STOP,Flow.OK_STOP_FAIL_REVERT,Flow.OK_REVERT_FAIL_STOP,Flow.OK_CONT_FAIL_STOP,Flow.OK_STOP_FAIL_CONT];const dontAddEdge=[Flow.OK_STOP_FAIL_STOP,Flow.OK_STOP_FAIL_REVERT,Flow.OK_REVERT_FAIL_STOP];const ends=[(FCT.mcall.length-1).toString()];for(let i=0;i<FCT.mcall.length-1;i++){const callID=CallID.parseWithNumbers(FCT.mcall[i].callId);const flow=callID.options.flow;const jumpOnSuccess=callID.options.jumpOnSuccess;const jumpOnFail=callID.options.jumpOnFail;if(jumpOnSuccess===jumpOnFail){if(!dontAddEdge.includes(flow)){g.setEdge(i.toString(),(i+1+ +jumpOnSuccess).toString())}}else{if(continueOnSuccessFlows.includes(flow)){g.setEdge(i.toString(),(i+1+ +jumpOnSuccess).toString())}if(continueOnFailFlows.includes(flow)){g.setEdge(i.toString(),(i+1+ +jumpOnFail).toString())}}if(endFlows.includes(flow)){ends.push(i.toString())}}const start="0";const allPaths=[];const pathList=[start];const uniqueEnds=Array.from(new Set(ends));for(const end of uniqueEnds){const printAllPathsUtil=(g,start,end,localPathList)=>{if(start===end){const path=localPathList.slice();allPaths.push(path);return}let successors=g.successors(start);if(successors===undefined){successors=[]}for(const id of successors){localPathList.push(id);printAllPathsUtil(g,id,end,localPathList);localPathList.splice(localPathList.indexOf(id),1)}};printAllPathsUtil(g,start,end,pathList)}return allPaths}async getAssetFlow(){const allPaths=this.getAllPaths();const allCalls=this.FCT.calls;const assetFlow=await Promise.all(allPaths.map(async path=>{const calls=path.map(index=>allCalls[Number(index)]);const assetFlow=[];for(const call of calls){const plugin=call.plugin;if(!plugin){return[]}const callAssetFlow=await plugin.getAssetFlow();for(const flow of callAssetFlow){const index=assetFlow.findIndex(accAsset=>accAsset.address===flow.address);if(index===-1){assetFlow.push(flow)}else{const data=assetFlow[index];for(const token of flow.toReceive){const tokenIndex=data.toReceive.findIndex(accToken=>accToken.token===token.token);if(tokenIndex!==-1){data.toReceive[tokenIndex].amount=(BigInt(data.toReceive[tokenIndex].amount)+BigInt(InstanceOf.Variable(token.amount)?0:token.amount)).toString()}else{data.toReceive.push(token)}}for(const token of flow.toSpend){const tokenIndex=data.toSpend.findIndex(accToken=>accToken.token===token.token);if(tokenIndex!==-1){data.toSpend[tokenIndex].amount=(BigInt(data.toSpend[tokenIndex].amount)+BigInt(InstanceOf.Variable(token.amount)?0:token.amount)).toString()}else{data.toSpend.push(token)}}}}}return{path:path,assetFlow:assetFlow}}));return assetFlow}kiroPerPayerGas=({gas,gasPrice,penalty,ethPriceInKIRO,fees})=>{const baseFeeBPS=fees?.baseFeeBPS?BigInt(fees.baseFeeBPS):1000n;const bonusFeeBPS=fees?.bonusFeeBPS?BigInt(fees.bonusFeeBPS):5000n;const gasBigInt=BigInt(gas);const limits=this.FCTData.typedData.message.limits;const maxGasPrice=BigInt(limits.gas_price_limit);const gasPriceBigInt=BigInt(gasPrice)>maxGasPrice?maxGasPrice:BigInt(gasPrice);const effectiveGasPrice=BigInt(getEffectiveGasPrice({gasPrice:gasPriceBigInt,maxGasPrice:maxGasPrice,baseFeeBPS:baseFeeBPS,bonusFeeBPS:bonusFeeBPS}));const base=gasBigInt*gasPriceBigInt;const fee=gasBigInt*(effectiveGasPrice-gasPriceBigInt);const ethCost=base+fee;const kiroCost=ethCost*BigInt(ethPriceInKIRO)/10n**18n;return{ethCost:(ethCost*BigInt(penalty||1e4)/10000n).toString(),kiroCost:kiroCost.toString()}};getPaymentPerPayer=({signatures,gasPrice,maxGasPrice,ethPriceInKIRO,penalty,fees})=>{const baseFeeBPS=fees?.baseFeeBPS?BigInt(fees.baseFeeBPS):1000n;const bonusFeeBPS=fees?.bonusFeeBPS?BigInt(fees.bonusFeeBPS):5000n;const fct=this.FCTData;const allPathsKey=JSON.stringify(fct);let allPaths=this._cache.get(allPathsKey);if(!allPaths){allPaths=this.getAllPaths();this._cache.set(allPathsKey,allPaths)}const limits=fct.typedData.message.limits;maxGasPrice=maxGasPrice?BigInt(maxGasPrice):BigInt(limits.gas_price_limit);const txGasPrice=gasPrice?BigInt(gasPrice):maxGasPrice;const effectiveGasPrice=BigInt(getEffectiveGasPrice({gasPrice:txGasPrice,maxGasPrice:maxGasPrice,baseFeeBPS:baseFeeBPS,bonusFeeBPS:bonusFeeBPS}));fct.signatures=signatures||[];const calldata=this.getCalldataForActuator({activator:"0x0000000000000000000000000000000000000000",investor:"0x0000000000000000000000000000000000000000",purgedFCT:"0x".padEnd(66,"0"),signatures:fct.signatures});const data=allPaths.map(path=>{const payers=getPayersForRoute({chainId:this.FCT.chainId,calldata:calldata,calls:fct.mcall,pathIndexes:path});return payers.reduce((acc,payer)=>{const base=payer.gas*txGasPrice;const fee=payer.gas*(effectiveGasPrice-txGasPrice);const ethCost=base+fee;return{...acc,[payer.payer]:{...payer,pureEthCost:ethCost,ethCost:ethCost*BigInt(penalty||1e4)/10000n}}},{})});const allPayers=[...new Set(fct.mcall.map(call=>{const{payerIndex}=CallID.parse(call.callId);if(payerIndex===0)return AddressZero$2;const payer=fct.mcall[payerIndex-1].from;return payer}).filter(payer=>payer!==AddressZero$2))];return allPayers.map(payer=>{const{largest,smallest}=data.reduce((acc,pathData)=>{const currentValues=acc;const currentLargestValue=currentValues.largest?.ethCost||0n;const currentSmallestValue=currentValues.smallest?.ethCost;const value=pathData[payer]?.pureEthCost||0n;if(!currentLargestValue||value>currentLargestValue){currentValues.largest=pathData[payer]}if(!currentSmallestValue||value<currentSmallestValue){currentValues.smallest=pathData[payer]}return currentValues},{});const largestKiroCost=getCostInKiro({ethPriceInKIRO:ethPriceInKIRO,ethCost:largest.pureEthCost});const smallestKiroCost=getCostInKiro({ethPriceInKIRO:ethPriceInKIRO,ethCost:smallest.pureEthCost});return{payer:payer,largestPayment:{gas:largest.gas.toString(),tokenAmountInWei:largestKiroCost,nativeAmountInWei:largest.ethCost.toString(),tokenAmount:formatEther$1(largestKiroCost),nativeAmount:formatEther$1(largest.ethCost.toString())},smallestPayment:{gas:smallest.gas.toString(),tokenAmountInWei:smallestKiroCost,nativeAmountInWei:smallest.ethCost.toString(),tokenAmount:formatEther$1(smallestKiroCost),nativeAmount:formatEther$1(smallest.ethCost.toString())}}})};getMaxGas=()=>{const allPayers=this.getPaymentPerPayer({ethPriceInKIRO:"0"});return allPayers.reduce((acc,payer)=>{const largestGas=payer.largestPayment.gas;if(BigInt(largestGas)>BigInt(acc)){return largestGas}return acc},"0")};getCallResults=async({rpcUrl,provider,txHash})=>{if(!provider&&!rpcUrl){throw new Error("Either provider or rpcUrl is required")}if(!provider){provider=new JsonRpcProvider(rpcUrl)}const txReceipt=await provider.getTransactionReceipt(txHash);const batchMultiSigInterface=Interfaces.FCT_BatchMultiSigCall;verifyMessageHash(txReceipt.logs,this.getMessageHash());const mapLog=log=>{const parsedLog=batchMultiSigInterface.parseLog(log);return{id:parsedLog.args.id,caller:parsedLog.args.caller,callIndex:parsedLog.args.callIndex.toString()}};const successCalls=txReceipt.logs.filter(log=>{try{return batchMultiSigInterface.parseLog(log).name==="FCTE_CallSucceed"}catch(e){return false}}).map(mapLog);const failedCalls=txReceipt.logs.filter(log=>{try{return batchMultiSigInterface.parseLog(log).name==="FCTE_CallFailed"}catch(e){return false}}).map(mapLog);const callResultConstants={success:"SUCCESS",failed:"FAILED",skipped:"SKIPPED"};const manageResult=index=>{if(successCalls.find(successCall=>successCall.callIndex===index))return callResultConstants.success;if(failedCalls.find(failedCall=>failedCall.callIndex===index))return callResultConstants.failed;return callResultConstants.skipped};return this.FCT.calls.map((_,index)=>{const indexString=(index+1).toString();return{index:indexString,result:manageResult(indexString)}})};getTransactionTrace=async({txHash,tenderlyRpcUrl,tries=3})=>{const provider=new JsonRpcProvider(tenderlyRpcUrl);let keepTrying=true;do{try{const data=await provider.send("tenderly_traceTransaction",[txHash]);if(!data||!data.trace||!data.logs){throw new Error("Tenderly trace is not working")}const rawLogs=data.logs.map(log=>log.raw);verifyMessageHash(rawLogs,this.getMessageHash());const executedCalls=executedCallsFromLogs(rawLogs);const callsFromTenderlyTrace=data.trace.filter(call=>{return call.traceAddress.length===7&&call.traceAddress[0]===0&&call.traceAddress[1]===0&&call.traceAddress[3]===0&&call.traceAddress[4]===0&&call.traceAddress[5]===2&&call.traceAddress[6]===2});const fctCalls=this.FCT.calls;const allFCTComputed=this.FCT.computed;const traceData=executedCalls.reduce((acc,executedCall,index)=>{const fctCall=fctCalls[Number(executedCall.callIndex)-1];const callResult=callsFromTenderlyTrace[index];const input=callResult.input;const output=callResult.output;const resData=fctCall.decodeData({inputData:input,outputData:output});acc.calls=[...acc.calls,{method:fctCall.call.method??"",value:callResult.value?parseInt(callResult.value,16).toString():"0",inputData:resData?.inputData??[],outputData:resData?.outputData??[],error:callResult.error||callResult.errorString||null,isSuccess:executedCall.isSuccess,id:fctCall.nodeId}];manageValidationAndComputed(acc,fctCall,allFCTComputed);return acc},{calls:[],validations:[],computed:[]});keepTrying=false;return traceData}catch(e){if(tries>0){await new Promise(resolve=>setTimeout(resolve,3e3))}else{throw e}}}while(keepTrying&&tries-- >0)};getSimpleTransactionTrace=async({txHash,rpcUrl})=>{const provider=new JsonRpcProvider(rpcUrl);const txReceipt=await provider.getTransactionReceipt(txHash);verifyMessageHash(txReceipt.logs,this.getMessageHash());const executedCalls=executedCallsFromLogs(txReceipt.logs);const fctCalls=this.FCT.calls;const allFCTComputed=this.FCT.computed;return executedCalls.reduce((acc,executedCall)=>{const fctCall=fctCalls[Number(executedCall.callIndex)-1];acc.calls=[...acc.calls,{isSuccess:executedCall.isSuccess,id:fctCall.nodeId}];manageValidationAndComputed(acc,fctCall,allFCTComputed);return acc},{calls:[],validations:[],computed:[]})};_validateFCTKeys(keys){const validKeys=["typeHash","typedData","sessionId","nameHash","mcall","builderAddress","variables","externalSigners","computed","signatures"];validKeys.forEach(key=>{if(!keys.includes(key)){throw new Error(`FCT missing key ${key}`)}})}}const isAddress=isAddress$4;const mustBeInteger=["validFrom","expiresAt","maxGasPrice","recurrency.maxRepeats","recurrency.chillTime","multisig.minimumApprovals"];const mustBeAddress=["builder.address"];const mustBeBoolean=["purgeable","blockable","authEnabled","dryRun","recurrency.accumetable"];const mustBeObject=["app","builder","recurrency","multisig"];const validateInteger=(value,id)=>{if(value.includes(".")){throw new Error(`Options: ${id} cannot be a decimal`)}if(value.startsWith("-")){throw new Error(`Options: ${id} cannot be negative`)}if(id==="recurrency.maxRepeats"&&+value<0){throw new Error(`Options: ${id} should be at least 0. If value is 0 or 1, recurrency will not be enabled in order to save gas`)}};const validateAddress=(value,id)=>{if(!isAddress(value)){throw new Error(`Options: ${id} is not a valid address`)}};var helpers=Object.freeze({__proto__:null,mustBeAddress:mustBeAddress,mustBeBoolean:mustBeBoolean,mustBeInteger:mustBeInteger,mustBeObject:mustBeObject,validateAddress:validateAddress,validateInteger:validateInteger});const initOptions={id:"",name:"",maxGasPrice:"30000000000",validFrom:getDate(),expiresAt:getDate(7),purgeable:false,blockable:true,authEnabled:true,dryRun:false,verifier:"",domain:"",builder:{name:"",address:AddressZero$2},app:{name:"",version:""},recurrency:{maxRepeats:"0",chillTime:"0",accumetable:false},multisig:{externalSigners:[],minimumApprovals:"0"}};class Options{static helpers=helpers;_options=initOptions;set(options,verify=true){const mergedOptions=deepMerge(this._options,options);if(verify)Options.verify(mergedOptions);this._options=mergedOptions;return this._options}get(){return{...this._options,name:this._options.name||"",recurrency:{maxRepeats:this._options.recurrency?.maxRepeats||"0",chillTime:this._options.recurrency?.chillTime||"0",accumetable:this._options.recurrency?.accumetable||false},multisig:{externalSigners:this._options.multisig?.externalSigners||[],minimumApprovals:this._options.multisig?.minimumApprovals||"0"}}}reset(){this._options=initOptions}static verify(options){this.validateOptionsValues(options)}static validateOptionsValues=(value,parentKeys=[])=>{if(!value){return}Object.keys(value).forEach(key=>{const keyId=[...parentKeys,key].join(".");const objKey=key;if(value[objKey]===undefined){return}if(mustBeObject.includes(keyId)){if(typeof value[objKey]==="object"){this.validateOptionsValues(value[objKey],[...parentKeys,objKey]);return}else{throw new Error(`Options: ${keyId} must be an object`)}}if(mustBeBoolean.includes(keyId)){if(typeof value[objKey]!=="boolean"){throw new Error(`Options: ${keyId} must be a boolean`)}return}const realVal=_.get(initOptions,keyId);if(typeof value[objKey]!==typeof realVal){throw new Error(`Options: ${keyId} must be a ${typeof realVal}`)}if(mustBeInteger.includes(keyId)){validateInteger(value[objKey],keyId)}if(mustBeAddress.includes(keyId)){validateAddress(value[objKey],keyId)}if(objKey==="expiresAt"){const expiresAt=Number(value[objKey]);const now=Number((new Date).getTime()/1e3).toFixed();const validFrom=value.validFrom;if(BigInt(expiresAt)<=BigInt(now)){throw new Error(`Options: expiresAt must be in the future`)}if(validFrom&&BigInt(expiresAt)<=BigInt(validFrom)){throw new Error(`Options: expiresAt must be greater than validFrom`)}}})};static fromObject(options){const instance=new Options;instance.set(options);return instance}}const sessionIdFlag={accumetable:1,purgeable:2,blockable:4,eip712:8,authEnabled:16,dryRun:32};const valueWithPadStart=(value,padStart)=>{return Number(value).toString(16).padStart(padStart,"0")};class SessionID extends FCTBase{constructor(FCT){super(FCT)}asString(){return SessionID.asString({salt:this.FCT.randomId,version:this.FCT.version,options:this.FCT.options})}static asString({salt,version,options}){const{recurrency,multisig}=options;const minimumApprovals=valueWithPadStart(multisig.minimumApprovals,2);const v=version.slice(2);const maxRepeats=valueWithPadStart(recurrency.maxRepeats,4);const chillTime=Number(+recurrency.maxRepeats>1?+options.recurrency.chillTime:0).toString(16).padStart(8,"0");const beforeTimestamp=valueWithPadStart(options.expiresAt||0,10);const afterTimestamp=valueWithPadStart(options.validFrom||0,10);const maxGasPrice=valueWithPadStart(options.maxGasPrice||0,16);let flagValue=0;flagValue+=sessionIdFlag.eip712;if(options.recurrency?.accumetable)flagValue+=sessionIdFlag.accumetable;if(options.purgeable)flagValue+=sessionIdFlag.purgeable;if(options.blockable)flagValue+=sessionIdFlag.blockable;if(options.authEnabled)flagValue+=sessionIdFlag.authEnabled;if(options.dryRun)flagValue+=sessionIdFlag.dryRun;const flags=flagValue.toString(16).padStart(2,"0");return`0x${salt}${minimumApprovals}${v}${maxRepeats}${chillTime}${beforeTimestamp}${afterTimestamp}${maxGasPrice}${flags}`}static asOptions(sessionId){return SessionID.parse(sessionId)}static parse(sessionId){const minimumApprovals=parseInt(sessionId.slice(8,10),16).toString();const maxRepeats=parseInt(sessionId.slice(16,20),16).toString();const chillTime=parseInt(sessionId.slice(20,28),16).toString();const expiresAt=parseInt(sessionId.slice(28,38),16).toString();const validFrom=parseInt(sessionId.slice(38,48),16).toString();const maxGasPrice=parseInt(sessionId.slice(48,64),16).toString();const flagsNumber=parseInt(sessionId.slice(64,66),16);const flags={eip712:(flagsNumber&sessionIdFlag.eip712)!==0,accumetable:(flagsNumber&sessionIdFlag.accumetable)!==0,purgeable:(flagsNumber&sessionIdFlag.purgeable)!==0,blockable:(flagsNumber&sessionIdFlag.blockable)!==0,authEnabled:(flagsNumber&sessionIdFlag.authEnabled)!==0,dryRun:(flagsNumber&sessionIdFlag.dryRun)!==0};return{validFrom:validFrom,expiresAt:expiresAt,maxGasPrice:maxGasPrice,dryRun:flags.dryRun,blockable:flags.blockable,purgeable:flags.purgeable,authEnabled:flags.authEnabled,recurrency:{accumetable:flags.accumetable,chillTime:chillTime,maxRepeats:maxRepeats},multisig:{minimumApprovals:minimumApprovals}}}}class Validation extends FCTBase{_validations=[];constructor(FCT){super(FCT)}get(){return this._validations}getForEIP712(){return this._validations.map((c,i)=>({index:(i+1).toString(),value_1:this.handleVariable(c.value1),op:c.operator,value_2:this.handleVariable(c.value2)}))}getForData(){return this._validations.map(c=>({value1:this.handleVariable(c.value1),operator:ValidationOperator[c.operator],value2:this.handleVariable(c.value2)}))}getIndex(id){if(id==="0")return 0;const index=this._validations.findIndex(v=>v.id===id);if(index===-1)throw new Error(`Validation with id ${id} not found`);return index+1}add({nodeId,validation}){const call=this.FCT.getCallByNodeId(nodeId);const id=this.addValidation(validation);call.setOptions({validation:id});return{type:"validation",id:id}}addValidation(validation){if(this.isIValidation(validation.value1)){const id=this.addValidation(validation.value1);validation.value1={type:"validation",id:id}}if(this.isIValidation(validation.value2)){const id=this.addValidation(validation.value2);validation.value2={type:"validation",id:id}}const id=validation.id||this._validations.length.toString();if(this._validations.some(v=>v.id===id))throw new Error(`Validation with id ${id} already exists`);if(typeof validation.value1==="string"){if(isNaN(parseInt(validation.value1,10)))throw new Error(`Invalid value1 for validation ${id}`)}if(typeof validation.value2==="string"){if(isNaN(parseInt(validation.value2,10)))throw new Error(`Invalid value2 for validation ${id}`)}this._validations.push({value1:validation.value1,operator:validation.operator,value2:validation.value2,id:id});return id}handleVariable(value){if(InstanceOf.ValidationVariable(value)){const index=this.getIndex(value.id);const outputIndexHex=index.toString(16).padStart(4,"0");return outputIndexHex.padStart(ValidationBase.length,ValidationBase)}if(InstanceOf.Variable(value)){return this.FCT.variables.getVariable(value,"uint256")}return value}isIValidation(value){return typeof value==="object"&&value!==null&&"value1"in value&&"operator"in value&&"value2"in value}}const BLOCK_NUMBER="0xFB0A000000000000000000000000000000000000";const BLOCK_TIMESTAMP="0xFB0B000000000000000000000000000000000000";const GAS_PRICE="0xFB0C000000000000000000000000000000000000";const MINER_ADDRESS="0xFA0A000000000000000000000000000000000000";const ORIGIN_ADDRESS="0xFA0B000000000000000000000000000000000000";const INVESTOR_ADDRESS="0xFA0C000000000000000000000000000000000000";const ACTIVATOR_ADDRESS="0xFA0D000000000000000000000000000000000000";const ENGINE_ADDRESS="0xFA0E000000000000000000000000000000000000";const CHAIN_ID="0xFB0E000000000000000000000000000000000000";const FLOW_HASH="0xFB0D000000000000000000000000000000000000";const globalVariables={blockNumber:BLOCK_NUMBER,blockTimestamp:BLOCK_TIMESTAMP,chainId:CHAIN_ID,gasPrice:GAS_PRICE,minerAddress:MINER_ADDRESS,originAddress:ORIGIN_ADDRESS,investorAddress:INVESTOR_ADDRESS,activatorAddress:ACTIVATOR_ADDRESS,engineAddress:ENGINE_ADDRESS,flowHash:FLOW_HASH};const globalVariablesBytes={blockNumber:BLOCK_NUMBER.padEnd(66,"0"),blockTimestamp:BLOCK_TIMESTAMP.padEnd(66,"0"),chainId:CHAIN_ID.padEnd(66,"0"),gasPrice:GAS_PRICE.padEnd(66,"0"),flowHash:FLOW_HASH.padEnd(66,"0")};const getBlockNumber=()=>({type:"global",id:"blockNumber"});const getBlockTimestamp=()=>({type:"global",id:"blockTimestamp"});const getGasPrice=()=>({type:"global",id:"gasPrice"});const getMinerAddress=()=>({type:"global",id:"minerAddress"});const getOriginAddress=()=>({type:"global",id:"originAddress"});const getInvestorAddress=()=>({type:"global",id:"investorAddress"});const getActivatorAddress=()=>({type:"global",id:"activatorAddress"});const getEngineAddress=()=>({type:"global",id:"engineAddress"});const getChainID=()=>({type:"global",id:"chainId"});const getFlowHash=()=>({type:"global",id:"flowHash"});function getOutputVariable({index,innerIndex,type="uint256"}){const outputIndexHex=(index+1).toString(16).padStart(4,"0");let base;let innerIndexHex;innerIndex=innerIndex??0;if(innerIndex<0){innerIndexHex=((innerIndex+1)*-1).toString(16).padStart(4,"0");if(type.includes("bytes")){base=FDBackBaseBytes}else{base=FDBackBase}}else{innerIndexHex=innerIndex.toString(16).padStart(4,"0");if(type.includes("bytes")){base=FDBaseBytes}else{base=FDBase}}return(innerIndexHex+outputIndexHex).padStart(base.length,base)}function getExternalVariable({index,type}){const outputIndexHex=(index+1).toString(16).padStart(4,"0");if(type.includes("bytes")){return outputIndexHex.padStart(FCBaseBytes.length,FCBaseBytes)}return outputIndexHex.padStart(FCBase.length,FCBase)}function getComputedVariable({index,type}){const outputIndexHex=(index+1).toString(16).padStart(4,"0");if(type.includes("bytes")){return outputIndexHex.padStart(ComputedBaseBytes.length,ComputedBaseBytes)}return outputIndexHex.padStart(ComputedBase.length,ComputedBase)}function getGlobalVariable({id,type}){if(type.includes("bytes")){if(!(id in globalVariablesBytes)){throw new Error(`Global variable ${id} does not support bytes`)}return globalVariablesBytes[id]}const globalVariable=globalVariables[id];if(!globalVariable){throw new Error("Global variable not found")}return globalVariable}var index$1=Object.freeze({__proto__:null,getActivatorAddress:getActivatorAddress,getBlockNumber:getBlockNumber,getBlockTimestamp:getBlockTimestamp,getChainID:getChainID,getComputedVariable:getComputedVariable,getEngineAddress:getEngineAddress,getExternalVariable:getExternalVariable,getFlowHash:getFlowHash,getGasPrice:getGasPrice,getGlobalVariable:getGlobalVariable,getInvestorAddress:getInvestorAddress,getMinerAddress:getMinerAddress,getOriginAddress:getOriginAddress,getOutputVariable:getOutputVariable,globalVariables:globalVariables,globalVariablesBytes:globalVariablesBytes});const ComputedOperators={ADD:"+",SUB:"-",MUL:"*",DIV:"/",POW:"**",MOD:"%",LSHIFT:"<<",RSHIFT:">>",AND:"&",OR:"|",XOR:"^",MAX:"max",MIN:"min",ADD_ZEROS:"*(10**X)",SUB_ZEROS:"/(10**X)",HASH:"keccak256"};class Variables extends FCTBase{_computed=[];constructor(FCT){super(FCT)}get computed(){return this._computed}get computedAsData(){return this._computed.map(c=>({values:[c.value1,c.value2,c.value3,c.value4].map(value=>{if(InstanceOf.Variable(value)){return this.getVariable(value,"uint256")}return value}),operators:[c.operator1,c.operator2,c.operator3].map(operator=>{return id$2(operator)}),overflowProtection:c.overflowProtection}))}get computedForEIP712(){const handleVariable=value=>{if(InstanceOf.Variable(value)){return this.getVariable(value,"uint256")}return value};return this._computed.map((c,i)=>({index:(i+1).toString(),value_1:handleVariable(c.value1),op_1:c.operator1,value_2:handleVariable(c.value2),op_2:c.operator2,value_3:handleVariable(c.value3),op_3:c.operator3,value_4:handleVariable(c.value4),overflow_protection:c.overflowProtection}))}addComputed(computed){const defaultValue="0";const defaultOperator=ComputedOperators.ADD;const data={id:computed.id||this._computed.length.toString(),value1:computed.value1||defaultValue,operator1:computed.operator1||defaultOperator,value2:computed.value2||defaultValue,operator2:computed.operator2||defaultOperator,value3:computed.value3||defaultValue,operator3:computed.operator2||defaultOperator,value4:computed.value4||defaultValue,overflowProtection:computed.overflowProtection||true};this._computed.push(data);return{type:"computed",id:data.id}}getVariable(variable,type){if(variable.type==="external"){return this.getExternalVariable(variable.id,type)}if(variable.type==="output"){const id=variable.id;const index=this.FCT.calls.findIndex(call=>call.nodeId===id.nodeId);return this.getOutputVariable({index:index,innerIndex:id.innerIndex,type:type})}if(variable.type==="global"){const id=variable.id;if(type.includes("bytes")){if(!(id in globalVariablesBytes)){throw new Error("Global variable not found")}return globalVariablesBytes[id]}const globalVariable=globalVariables[id];if(!globalVariable){throw new Error("Global variable not found")}return globalVariable}if(variable.type==="computed"){const computedVariables=this.computed;const index=computedVariables.findIndex(computedVariable=>{return computedVariable.id===variable.id});return this.getComputedVariable(index,type)}throw new Error("Variable type not found")}getOutputVariable({index,innerIndex,type="uint256"}){return getOutputVariable({index:index,innerIndex:innerIndex,type:type})}getExternalVariable(index,type){return getExternalVariable({index:index,type:type})}getComputedVariable(index,type){return getComputedVariable({index:index,type:type})}getValue(value,type,ifValueUndefined=""){if(!value){return ifValueUndefined}if(typeof value==="string"){return value}return this.getVariable(value,type)}getVariablesAsBytes32=variables=>{return Variables.getVariablesAsBytes32(variables)};static getVariablesAsBytes32=variables=>{return variables.map(v=>{if(isNaN(Number(v))||isAddress$4(v)){return`0x${String(v).replace("0x","").padStart(64,"0")}`}return`0x${Number(v).toString(16).padStart(64,"0")}`})}}const transactionValidator=async txVal=>{const{callData,actuatorContractAddress,activator,rpcUrl,activateForFree}=txVal;let{gasPrice}=txVal;const decodedFCTCalldata=Interfaces.FCT_BatchMultiSigCall.decodeFunctionData("batchMultiSigCall",callData);const{maxGasPrice,dryRun}=SessionID.parse(decodedFCTCalldata[1].sessionId.toHexString());if(dryRun){gasPrice={maxFeePerGas:"0",maxPriorityFeePerGas:"0"}}else{if(BigInt(maxGasPrice)<BigInt(gasPrice.maxFeePerGas)){gasPrice={maxFeePerGas:maxGasPrice.toString(),maxPriorityFeePerGas:"0"}}}const provider=new JsonRpcProvider(rpcUrl);const actuatorContract=new Contract(actuatorContractAddress,FCTActuatorABI,provider);try{const gas=await provider.estimateGas({to:actuatorContractAddress,data:actuatorContract.interface.encodeFunctionData(activateForFree?"activateForFree":"activate",[callData,activator]),...gasPrice,from:activator});if(gas.lt(4e4)){throw new Error("Unknown error - FCT execution finalized too quickly. Is there enough power for user?")}const gasUsed=Math.round(gas.toNumber()+gas.toNumber()*.2);return{isValid:true,txData:{gas:gasUsed,...gasPrice,type:2},prices:{gas:gasUsed,gasPrice:gasPrice.maxFeePerGas},error:null}}catch(err){if(dryRun&&err.reason.includes("dry run success")){return{isValid:true,txData:{gas:0,...gasPrice,type:2},prices:{gas:0,gasPrice:gasPrice.maxFeePerGas},error:null}}if(err.reason==="processing response error"){throw err}if(txVal.errorIsValid){return{isValid:true,txData:{gas:1e6,...gasPrice,type:2},prices:{gas:1e6,gasPrice:gasPrice.maxFeePerGas},error:null}}return{isValid:false,txData:{gas:0,...gasPrice,type:2},prices:{gas:0,gasPrice:gasPrice.maxFeePerGas},error:err.reason?err.reason:err.message}}};var index=Object.freeze({__proto__:null,FetchUtility:FetchUtility,fetchCurrentApprovals:fetchCurrentApprovals,getGasPrices:getGasPrices,getKIROPrice:getKIROPrice,transactionValidator:transactionValidator});async function create(call){if(call instanceof Call$1){this._calls.push(call);return call}const newCall=await Call$1.create({FCT:this,call:call});this._calls.push(newCall);return newCall}async function createMultiple(calls){const callsCreated=[];for(const[index,call]of calls.entries()){try{const createdCall=await this.create(call);callsCreated.push(createdCall)}catch(err){if(err instanceof Error){throw new Error(`Error creating call ${index+1}: ${err.message}`)}}}return callsCreated}async function addAtIndex(call,index){if(index<0||index>this._calls.length){throw new Error("Index out of range")}if(call instanceof Call$1){this._calls.splice(index,0,call);return call}const newCall=await Call$1.create({FCT:this,call:call});this._calls.splice(index,0,newCall);return newCall}function createPlugin({plugin,initParams}){const Plugin=new plugin({chainId:this.chainId,initParams:initParams??{}});if(Plugin instanceof plugin){return Plugin}else{throw new Error(`Plugin creation failed: ${JSON.stringify(plugin)}`)}}function getCall(index){if(index<0||index>=this._calls.length){throw new Error("Index out of range")}return this._calls[index]}function getCallByNodeId(nodeId){const call=this._calls.find(c=>c.nodeId===nodeId);if(!call){throw new Error(`Call with nodeId ${nodeId} not found`)}return call}function getIndexByNodeId(nodeId){return this._calls.findIndex(call=>call.nodeId===nodeId)}function exportMap(){const calls=this.calls.map(call=>call.nodeId);const computed=this.computed.map(computed=>computed.id);const validations=this.validation.get().map(validation=>validation.id);return{calls:calls,computed:computed,validations:validations}}function exportFCT(){if(this.calls.length===0){throw new Error("No calls added to FCT")}const typedData=new EIP712(this).getTypedData();return{typedData:typedData,typeHash:hexlify$1(TypedDataUtils.hashType(typedData.primaryType,typedData.types)),sessionId:new SessionID(this).asString(),nameHash:id$3(this.options.name),appHash:id$3(this.options.app.name),appVersionHash:id$3(this.options.app.version),builderHash:id$3(this.options.builder.name),builderAddress:this.options.builder.address,domainHash:id$3(this.options.domain),verifierHash:id$3(this.options.verifier),mcall:this.calls.map((call,index)=>call.getAsMCall(typedData,index)),externalSigners:this.options.multisig.externalSigners,signatures:[this.utils.getAuthenticatorSignature()],computed:this.computedAsData,validations:this.validation.getForData(),variables:[]}}async function exportWithApprovals(){const FCTData=this.exportFCT();const FCT=BatchMultiSigCall.from(FCTData);const erc20Approvals=FCT.calls.filter((call,i)=>{const getCall=call.get();return getCall.method==="erc20Approvals"&&getCall.toENS==="@lib:multicall"&&(i===0||i===FCT.calls.length-1)});if(erc20Approvals.length!==2){return FCTData}const signers=FCT.utils.getSigners();const requiredApprovals=(await FCT.utils.getAllRequiredApprovals()).filter(approval=>approval.protocol==="ERC20");for(const signer of signers){const approvals=requiredApprovals.filter(approval=>approval.from.toLowerCase()===signer.toLowerCase());const ERC20Approvals=new Erc20Approvals({chainId:FCT.chainId});const ResetERC20Approvals=new Erc20Approvals({chainId:FCT.chainId});ResetERC20Approvals.create();for(let i=1;i<approvals.length;i++){ERC20Approvals.add();ResetERC20Approvals.add()}const pluginInterface=ERC20Approvals.getInterface();const resetPluginInterface=ResetERC20Approvals.getInterface();pluginInterface.instance.input.paramsList.forEach(({param,key})=>{const approval=approvals[+key.slice(-1)];if(key.includes("token")){param.setString({value:approval.token})}if(key.includes("spender")){param.setString({value:approval.params.spender})}if(key.includes("amount")){param.setString({value:approval.params.amount})}});resetPluginInterface.instance.input.paramsList.forEach(({param,key})=>{const approval=approvals[+key.slice(-1)];if(key.includes("token")){param.setString({value:approval.token})}if(key.includes("spender")){param.setString({value:approval.params.spender})}if(key.includes("amount")){param.setString({value:"0"})}});await FCT.addAtIndex({from:signer,plugin:ERC20Approvals},0);await FCT.addAtIndex({from:signer,plugin:ResetERC20Approvals},FCT.calls.length)}return FCT.exportFCT()}async function exportWithPayment(payer){const FCTData=this.exportFCT();const FCT=BatchMultiSigCall.from(FCTData);const gasLimit=this.calls.reduce((acc,call)=>acc+BigInt(call.options.gasLimit),0n)+180000n;const Multiply=new TokensMath.getters.Multiply({chainId:this.chainId,initParams:{methodParams:{amount1:gasLimit.toString(),amount2:getGasPrice(),decimals1:"18",decimals2:"18",decimalsOut:"18"}}});const call=await FCT.add({plugin:Multiply,from:payer});const WETH=new ERC20.actions.Transfer({chainId:this.chainId,initParams:{to:addresses[+this.chainId].WETH,methodParams:{amount:Multiply.output.params.result.getOutputVariable(call.nodeId),recipient:getActivatorAddress()}}});await FCT.add({plugin:WETH,from:payer});return FCT.export()}function exportNotificationFCT(){const fctOptions=this.options;this.setOptions({dryRun:true,maxGasPrice:"0"});const callOptionsBefore=[];this._calls.forEach(call=>{callOptionsBefore.push(call.options);call.setOptions({gasLimit:"0"})});const fct=this.exportFCT();this._calls.forEach((call,index)=>{call.setOptions(callOptionsBefore[index])});this.setOptions(fctOptions);return fct}function importFCT(fct){return impFCT.call(this,fct)}function importFCTWithMap(fct,map){return impFCT.call(this,fct,map)}function impFCT(fct,map){const typedData=fct.typedData;const domain=typedData.domain;const{meta,engine}=typedData.message;this.batchMultiSigSelector=engine.selector;this.version=engine.version;this.chainId=domain.chainId.toString();this.domain=domain;this.randomId=engine.random_id.slice(2);const sessionIDOptions=SessionID.asOptions(fct.sessionId);const options={id:"",...SessionID.asOptions(fct.sessionId),authEnabled:engine.auth_enabled,domain:meta.domain,name:meta.name,verifier:engine.verifier,builder:{address:fct.builderAddress,name:meta.builder},app:{name:meta.app,version:meta.app_version},multisig:{externalSigners:fct.externalSigners,minimumApprovals:sessionIDOptions.multisig.minimumApprovals}};this._setOptionsWithoutValidation(options);const{types:typesObject}=typedData;for(const[index,call]of fct.mcall.entries()){const dataTypes=[...typedData.types[`transaction${index+1}`]].slice(1);const{call:meta,...parameters}=typedData.message[`transaction_${index+1}`];let params=[];if(dataTypes.length>0){const signature=meta.method_interface;const functionName=signature.split("(")[0];const iface=new Interface([`function ${signature}`]);const ifaceFunction=iface.getFunction(functionName);const inputs=ifaceFunction.inputs;params=getParamsFromTypedData({coreParamTypes:inputs,parameters:parameters,types:typesObject,primaryType:`transaction${index+1}`})}const getFlow=()=>{const flow=Object.entries(flows).find(([,value])=>{return value.text===meta.flow_control.toString()});if(!flow){throw new Error("Flow control not found")}return Flow[flow[0]]};const callIndex=index+1;const callInput={nodeId:map?.calls[index]??`node${callIndex}`,to:call.to,from:call.from,value:call.value,method:meta.method_interface.split("(")[0],params:params,toENS:meta.to_ens,options:{gasLimit:meta.gas_limit,jumpOnSuccess:meta.jump_on_success===0?"":map?.calls[callIndex+meta.jump_on_success]??`node${callIndex+1+meta.jump_on_success}`,jumpOnFail:meta.jump_on_fail===0?"":map?.calls[callIndex+meta.jump_on_fail]??`node${callIndex+1+meta.jump_on_fail}`,flow:getFlow(),callType:CALL_TYPE_MSG_REV[meta.call_type],falseMeansFail:meta.returned_false_means_fail,permissions:meta.permissions.toString(),payerIndex:meta.payer_index,validation:meta.validation===0?"":map?.validations[meta.validation-1]??meta.validation.toString(),usePureMethod:meta.method_interface.includes("(")?false:true}};const callClass=new Call$1({FCT:this,isImport:true,input:callInput});this._calls.push(callClass)}const computedVariableNames=typedData.types.BatchMultiSigCall.filter(val=>val.type==="Computed").map(val=>val.name);const computedVariables=computedVariableNames.map(name=>typedData.message[name]);for(const computedVariable of computedVariables){this.addComputed({id:map?.computed[+computedVariable.index-1]??computedVariable.index,value1:manageValue(computedVariable.value_1),operator1:computedVariable.op_1,value2:manageValue(computedVariable.value_2),operator2:computedVariable.op_2,value3:manageValue(computedVariable.value_3),operator3:computedVariable.op_3,value4:manageValue(computedVariable.value_4),overflowProtection:computedVariable.overflow_protection})}const validationVariableNames=typedData.types.BatchMultiSigCall.filter(val=>val.type==="Validation").map(val=>val.name);const validaitonVariables=validationVariableNames.map(name=>typedData.message[name]);for(const validationVariable of validaitonVariables){this.validation.addValidation({id:map?.validations[+validationVariable.index-1]??validationVariable.index,value1:validationVariable.value_1,operator:validationVariable.op,value2:validationVariable.value_2})}return this.calls}function exportEfficientFCT(){return{mcall:this.calls.map((call,i)=>call.getAsEfficientMCall(i)),computed:this.computedAsData,validations:this.validation.getForData()}}async function getPlugin(index){const chainId=this.chainId;const call=this.getCall(index);const callData=call.get();if(InstanceOf.Variable(callData.to)){throw new Error("To value cannot be a variable")}let PluginClass;const pluginData=getPlugin$1({signature:call.getFunctionSignature(),address:callData.to,chainId:chainId});if(pluginData===null||pluginData===undefined){throw new Error("Plugin not found")}if(pluginData instanceof Multicall){PluginClass=pluginData}else{PluginClass=new pluginData.plugin({chainId:chainId.toString()})}PluginClass.input.set({to:callData.to,value:callData.value,methodParams:callData.params?callData.params.reduce((acc,param)=>{return{...acc,[param.name]:param.value}},{}):{}});return PluginClass}async function getPluginClass(index){const chainId=this.chainId;const call=this.getCall(index);const callData=call.get();if(InstanceOf.Variable(callData.to)){throw new Error("To value cannot be a variable")}const pluginData=getPlugin$1({signature:call.getFunctionSignature(),address:callData.to,chainId:chainId.toString()});return pluginData}async function getPluginData(index){const plugin=await this.getPlugin(index);const call=this.getCall(index);const callData=call.get();const input={to:callData.to,value:callData.value,methodParams:callData.params?callData.params.reduce((acc,param)=>{return{...acc,[param.name]:param.value}},{}):{}};return{protocol:plugin.protocol,type:plugin.type,method:plugin.method,input:input}}class BatchMultiSigCall{batchMultiSigSelector="0x7d971612";version="0x020101";chainId;domain;randomId=[...Array(6)].map(()=>Math.floor(Math.random()*16).toString(16)).join("");utils;variables;validation;_options;_calls=[];_callDefault={value:"0",options:DEFAULT_CALL_OPTIONS};constructor(input={}){this.utils=new FCTUtils(this);this.variables=new Variables(this);this.validation=new Validation(this);this._options=new Options;if(input.chainId){if(typeof input.chainId==="number"){this.chainId=input.chainId.toString()}else{this.chainId=input.chainId}}else{this.chainId="1"}if(input.domain){this.domain=input.domain}else{const domain=EIP712.getTypedDataDomain(this.chainId);if(!domain)throw new Error(`ChainId ${this.chainId} is not supported. Please provide a custom EIP712 domain.`);this.domain=domain}if(input.version)this.version=input.version;if(input.options)this.setOptions(input.options);if(input.defaults)this.setCallDefaults(input.defaults)}get options(){return this._options.get()}get calls(){return this._calls}get callsAsObjects(){return this._calls.map(call=>call.get())}get decodedCalls(){return this._calls.map(call=>call.getDecoded())}get callDefault(){return this._callDefault}get computed(){return this.variables.computed}get computedAsData(){return this.variables.computedAsData}get validations(){return this.validation.get()}setOptions(options){return this._options.set(options)}setCallDefaults(callDefault){this._callDefault=deepMerge(this._callDefault,callDefault);return this._callDefault}changeChainId=chainId=>{this.chainId=chainId;const domain=EIP712.getTypedDataDomain(this.chainId);if(!domain)throw new Error(`ChainId ${this.chainId} is not supported. Please provide a custom EIP712 domain.`);this.domain=domain};addComputed=computed=>{return this.variables.addComputed(computed)};addValidation=validation=>{return this.validation.add(validation)};getPlugin=getPlugin;getPluginClass=getPluginClass;getPluginData=getPluginData;createPlugin=createPlugin;add=create;addMultiple=createMultiple;create=create;createMultiple=createMultiple;addAtIndex=addAtIndex;export=exportFCT;exportFCT=exportFCT;exportNotification=exportNotificationFCT;exportNotificationFCT=exportNotificationFCT;exportWithApprovals=exportWithApprovals;exportWithPayment=exportWithPayment;exportEfficientFCT=exportEfficientFCT;exportMap=exportMap;importFCT=importFCT;importFCTWithMap=importFCTWithMap;getCall=getCall;getCallByNodeId=getCallByNodeId;getIndexByNodeId=getIndexByNodeId;_setOptionsWithoutValidation(options){return this._options.set(options,false)}static utils=utils;static from=input=>{const batchMultiSigCall=new BatchMultiSigCall;batchMultiSigCall.importFCT(input);return batchMultiSigCall};static fromMap=(input,map)=>{const batchMultiSigCall=new BatchMultiSigCall;batchMultiSigCall.importFCTWithMap(input,map);return batchMultiSigCall};static getTransacitonTrace=async({fct,map,txHash,tenderlyRpcUrl})=>{const FCT=BatchMultiSigCall.fromMap(fct,map);return await FCT.utils.getTransactionTrace({txHash:txHash,tenderlyRpcUrl:tenderlyRpcUrl})}}class NodeJSCache{constructor(nodeCache){this.nodeCache=nodeCache}async get(key){return this.nodeCache.get(key)}async batchGet(keys){const keysArr=Array.from(keys);const values=await Promise.all(keysArr.map(key=>this.get(key)));const result={};keysArr.forEach((key,index)=>{result[key]=values[index]});return result}async set(key,value,ttl){if(ttl){return this.nodeCache.set(key,value,ttl)}else{return this.nodeCache.set(key,value)}}async has(key){return this.nodeCache.has(key)}}class NullLogger{constructor(){this.ERROR_MESSAGE='NullLogger does not support. Instantiate a valid logger using "setGlobalLogger"';this.src=true}addStream(_stream){throw new Error(this.ERROR_MESSAGE)}addSerializers(_serializers){throw new Error(this.ERROR_MESSAGE)}child(_options,_simple){return this}reopenFileStreams(){throw new Error(this.ERROR_MESSAGE)}level(_value){return}levels(_name,_value){return}trace(..._rest){return true}debug(..._rest){return true}info(..._rest){return true}warn(..._rest){return true}error(..._rest){return true}fatal(..._rest){return true}addListener(_event,_listener){throw new Error(this.ERROR_MESSAGE)}on(_event,_listener){throw new Error(this.ERROR_MESSAGE)}once(_event,_listener){throw new Error(this.ERROR_MESSAGE)}removeListener(_event,_listener){throw new Error(this.ERROR_MESSAGE)}off(_event,_listener){throw new Error(this.ERROR_MESSAGE)}removeAllListeners(_event){throw new Error(this.ERROR_MESSAGE)}setMaxListeners(_n){throw new Error(this.ERROR_MESSAGE)}getMaxListeners(){throw new Error(this.ERROR_MESSAGE)}listeners(_event){throw new Error(this.ERROR_MESSAGE)}rawListeners(_event){throw new Error(this.ERROR_MESSAGE)}emit(_event,..._args){throw new Error(this.ERROR_MESSAGE)}listenerCount(_event){throw new Error(this.ERROR_MESSAGE)}prependListener(_event,_listener){throw new Error(this.ERROR_MESSAGE)}prependOnceListener(_event,_listener){throw new Error(this.ERROR_MESSAGE)}eventNames(){throw new Error(this.ERROR_MESSAGE)}}let log=new NullLogger;class IGasPriceProvider{}class CachingGasStationProvider extends IGasPriceProvider{constructor(chainId,gasPriceProvider,cache){super();this.chainId=chainId;this.gasPriceProvider=gasPriceProvider;this.cache=cache;this.GAS_KEY=(chainId,blockNumber)=>`gasPrice-${chainId}-${blockNumber}`}async getGasPrice(latestBlockNumber,requestBlockNumber){const targetBlockNumber=requestBlockNumber!==null&&requestBlockNumber!==void 0?requestBlockNumber:latestBlockNumber;const cachedGasPrice=await this.cache.get(this.GAS_KEY(this.chainId,targetBlockNumber));if(cachedGasPrice){log.info({cachedGasPrice:cachedGasPrice},`Got gas station price from local cache: ${cachedGasPrice.gasPriceWei}.`);return cachedGasPrice}const gasPrice=await this.gasPriceProvider.getGasPrice(latestBlockNumber,requestBlockNumber);await this.cache.set(this.GAS_KEY(this.chainId,targetBlockNumber),gasPrice);return gasPrice}}var MetricLoggerUnit;(function(MetricLoggerUnit){MetricLoggerUnit["Seconds"]="Seconds";MetricLoggerUnit["Microseconds"]="Microseconds";MetricLoggerUnit["Milliseconds"]="Milliseconds";MetricLoggerUnit["Bytes"]="Bytes";MetricLoggerUnit["Kilobytes"]="Kilobytes";MetricLoggerUnit["Megabytes"]="Megabytes";MetricLoggerUnit["Gigabytes"]="Gigabytes";MetricLoggerUnit["Terabytes"]="Terabytes";MetricLoggerUnit["Bits"]="Bits";MetricLoggerUnit["Kilobits"]="Kilobits";MetricLoggerUnit["Megabits"]="Megabits";MetricLoggerUnit["Gigabits"]="Gigabits";MetricLoggerUnit["Terabits"]="Terabits";MetricLoggerUnit["Percent"]="Percent";MetricLoggerUnit["Count"]="Count";MetricLoggerUnit["BytesPerSecond"]="Bytes/Second";MetricLoggerUnit["KilobytesPerSecond"]="Kilobytes/Second";MetricLoggerUnit["MegabytesPerSecond"]="Megabytes/Second";MetricLoggerUnit["GigabytesPerSecond"]="Gigabytes/Second";MetricLoggerUnit["TerabytesPerSecond"]="Terabytes/Second";MetricLoggerUnit["BitsPerSecond"]="Bits/Second";MetricLoggerUnit["KilobitsPerSecond"]="Kilobits/Second";MetricLoggerUnit["MegabitsPerSecond"]="Megabits/Second";MetricLoggerUnit["GigabitsPerSecond"]="Gigabits/Second";MetricLoggerUnit["TerabitsPerSecond"]="Terabits/Second";MetricLoggerUnit["CountPerSecond"]="Count/Second";MetricLoggerUnit["None"]="None"})(MetricLoggerUnit||(MetricLoggerUnit={}));class IMetric{}class MetricLogger extends IMetric{constructor(context){super();this.log=log.child(context||{})}setProperty(key,value){this.log=this.log.child({[key]:value})}putDimensions(dimensions){this.log=this.log.child(dimensions)}putMetric(key,value,unit){this.log.info({key:key,value:value,unit:unit},`[Metric]: ${key}: ${value} | ${unit?unit:""}`)}}let metric=new MetricLogger;class CachingTokenListProvider{constructor(chainId,tokenList,tokenCache){this.tokenCache=tokenCache;this.CACHE_KEY=tokenInfo=>`token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${tokenInfo.address.toLowerCase()}/${tokenInfo.decimals}/${tokenInfo.symbol}/${tokenInfo.name}`;this.CHAIN_SYMBOL_KEY=(chainId,symbol)=>`${chainId.toString()}/${symbol}`;this.CHAIN_ADDRESS_KEY=(chainId,address)=>`${chainId.toString()}/${address.toLowerCase()}`;this.chainId=chainId;this.tokenList=tokenList;this.chainToTokenInfos=new Map;this.chainSymbolToTokenInfo=new Map;this.chainAddressToTokenInfo=new Map;for(const tokenInfo of this.tokenList.tokens){const chainId=tokenInfo.chainId;const chainIdString=chainId.toString();const symbol=tokenInfo.symbol;const address=tokenInfo.address.toLowerCase();if(!this.chainToTokenInfos.has(chainIdString)){this.chainToTokenInfos.set(chainIdString,[])}this.chainToTokenInfos.get(chainIdString).push(tokenInfo);this.chainSymbolToTokenInfo.set(this.CHAIN_SYMBOL_KEY(chainId,symbol),tokenInfo);this.chainAddressToTokenInfo.set(this.CHAIN_ADDRESS_KEY(chainId,address),tokenInfo)}}static async fromTokenListURI(chainId,tokenListURI,tokenCache){const now=Date.now();const tokenList=await this.buildTokenList(tokenListURI);metric.putMetric("TokenListLoad",Date.now()-now,MetricLoggerUnit.Milliseconds);return new CachingTokenListProvider(chainId,tokenList,tokenCache)}static async buildTokenList(tokenListURI){log.info(`Getting tokenList from ${tokenListURI}.`);const response=await axios.get(tokenListURI);log.info(`Got tokenList from ${tokenListURI}.`);const{data:tokenList,status}=response;if(status!=200){log.error({response:response},`Unabled to get token list from ${tokenListURI}.`);throw new Error(`Unable to get token list from ${tokenListURI}`)}return tokenList}static async fromTokenList(chainId,tokenList,tokenCache){const now=Date.now();const tokenProvider=new CachingTokenListProvider(chainId,tokenList,tokenCache);metric.putMetric("TokenListLoad",Date.now()-now,MetricLoggerUnit.Milliseconds);return tokenProvider}async getTokens(_addresses){var _a;const addressToToken=new Map;const symbolToToken=new Map;const addToken=token=>{if(!token)return;addressToToken.set(token.address.toLowerCase(),token);if(token.symbol!==undefined){symbolToToken.set(token.symbol.toLowerCase(),token)}};if(_addresses){for(const address of _addresses){const token=await this.getTokenByAddress(address);addToken(token)}}else{const chainTokens=(_a=this.chainToTokenInfos.get(this.chainId.toString()))!==null&&_a!==void 0?_a:[];for(const info of chainTokens){const token=await this.buildToken(info);addToken(token)}}return{getTokenByAddress:address=>addressToToken.get(address.toLowerCase()),getTokenBySymbol:symbol=>symbolToToken.get(symbol.toLowerCase()),getAllTokens:()=>{return Array.from(addressToToken.values())}}}async hasTokenBySymbol(_symbol){return this.chainSymbolToTokenInfo.has(this.CHAIN_SYMBOL_KEY(this.chainId,_symbol))}async getTokenBySymbol(_symbol){let symbol=_symbol;if(_symbol=="ETH"){symbol="WETH"}const tokenInfo=this.chainSymbolToTokenInfo.get(this.CHAIN_SYMBOL_KEY(this.chainId,symbol));if(!tokenInfo){return undefined}const token=await this.buildToken(tokenInfo);return token}async hasTokenByAddress(address){return this.chainAddressToTokenInfo.has(this.CHAIN_ADDRESS_KEY(this.chainId,address))}async getTokenByAddress(address){const tokenInfo=this.chainAddressToTokenInfo.get(this.CHAIN_ADDRESS_KEY(this.chainId,address));if(!tokenInfo){return undefined}const token=await this.buildToken(tokenInfo);return token}async buildToken(tokenInfo){const cacheKey=this.CACHE_KEY(tokenInfo);const cachedToken=await this.tokenCache.get(cacheKey);if(cachedToken){return cachedToken}const token=new Token$1(this.chainId,tokenInfo.address,tokenInfo.decimals,tokenInfo.symbol,tokenInfo.name);await this.tokenCache.set(cacheKey,token);return token}}[ChainId$1.MAINNET,ChainId$1.OPTIMISM,ChainId$1.OPTIMISM_GOERLI,ChainId$1.OPTIMISM_SEPOLIA,ChainId$1.ARBITRUM_ONE,ChainId$1.ARBITRUM_GOERLI,ChainId$1.ARBITRUM_SEPOLIA,ChainId$1.POLYGON,ChainId$1.POLYGON_MUMBAI,ChainId$1.GOERLI,ChainId$1.SEPOLIA,ChainId$1.CELO_ALFAJORES,ChainId$1.CELO,ChainId$1.BNB,ChainId$1.AVALANCHE,ChainId$1.BASE,ChainId$1.BLAST];const V2_SUPPORTED=[ChainId$1.MAINNET,ChainId$1.SEPOLIA,ChainId$1.ARBITRUM_ONE,ChainId$1.OPTIMISM,ChainId$1.POLYGON,ChainId$1.BASE,ChainId$1.BNB,ChainId$1.AVALANCHE];const HAS_L1_FEE=[ChainId$1.OPTIMISM,ChainId$1.OPTIMISM_GOERLI,ChainId$1.OPTIMISM_SEPOLIA,ChainId$1.ARBITRUM_ONE,ChainId$1.ARBITRUM_GOERLI,ChainId$1.ARBITRUM_SEPOLIA,ChainId$1.BASE,ChainId$1.BASE_GOERLI,ChainId$1.BLAST];const NETWORKS_WITH_SAME_UNISWAP_ADDRESSES=[ChainId$1.MAINNET,ChainId$1.GOERLI,ChainId$1.OPTIMISM,ChainId$1.ARBITRUM_ONE,ChainId$1.POLYGON,ChainId$1.POLYGON_MUMBAI];const ID_TO_CHAIN_ID=id=>{switch(id){case 1:return ChainId$1.MAINNET;case 5:return ChainId$1.GOERLI;case 11155111:return ChainId$1.SEPOLIA;case 56:return ChainId$1.BNB;case 10:return ChainId$1.OPTIMISM;case 420:return ChainId$1.OPTIMISM_GOERLI;case 11155420:return ChainId$1.OPTIMISM_SEPOLIA;case 42161:return ChainId$1.ARBITRUM_ONE;case 421613:return ChainId$1.ARBITRUM_GOERLI;case 421614:return ChainId$1.ARBITRUM_SEPOLIA;case 137:return ChainId$1.POLYGON;case 80001:return ChainId$1.POLYGON_MUMBAI;case 42220:return ChainId$1.CELO;case 44787:return ChainId$1.CELO_ALFAJORES;case 100:return ChainId$1.GNOSIS;case 1284:return ChainId$1.MOONBEAM;case 43114:return ChainId$1.AVALANCHE;case 8453:return ChainId$1.BASE;case 84531:return ChainId$1.BASE_GOERLI;case 81457:return ChainId$1.BLAST;default:throw new Error(`Unknown chain id: ${id}`)}};var ChainName;(function(ChainName){ChainName["MAINNET"]="mainnet";ChainName["GOERLI"]="goerli";ChainName["SEPOLIA"]="sepolia";ChainName["OPTIMISM"]="optimism-mainnet";ChainName["OPTIMISM_GOERLI"]="optimism-goerli";ChainName["OPTIMISM_SEPOLIA"]="optimism-sepolia";ChainName["ARBITRUM_ONE"]="arbitrum-mainnet";ChainName["ARBITRUM_GOERLI"]="arbitrum-goerli";ChainName["ARBITRUM_SEPOLIA"]="arbitrum-sepolia";ChainName["POLYGON"]="polygon-mainnet";ChainName["POLYGON_MUMBAI"]="polygon-mumbai";ChainName["CELO"]="celo-mainnet";ChainName["CELO_ALFAJORES"]="celo-alfajores";ChainName["GNOSIS"]="gnosis-mainnet";ChainName["MOONBEAM"]="moonbeam-mainnet";ChainName["BNB"]="bnb-mainnet";ChainName["AVALANCHE"]="avalanche-mainnet";ChainName["BASE"]="base-mainnet";ChainName["BASE_GOERLI"]="base-goerli";ChainName["BLAST"]="blast-mainnet"})(ChainName||(ChainName={}));var NativeCurrencyName;(function(NativeCurrencyName){NativeCurrencyName["ETHER"]="ETH";NativeCurrencyName["MATIC"]="MATIC";NativeCurrencyName["CELO"]="CELO";NativeCurrencyName["GNOSIS"]="XDAI";NativeCurrencyName["MOONBEAM"]="GLMR";NativeCurrencyName["BNB"]="BNB";NativeCurrencyName["AVALANCHE"]="AVAX"})(NativeCurrencyName||(NativeCurrencyName={}));({[ChainId$1.MAINNET]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.GOERLI]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.SEPOLIA]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.OPTIMISM]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.OPTIMISM_GOERLI]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.OPTIMISM_SEPOLIA]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.ARBITRUM_ONE]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.ARBITRUM_GOERLI]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.ARBITRUM_SEPOLIA]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.POLYGON]:["MATIC","0x0000000000000000000000000000000000001010"],[ChainId$1.POLYGON_MUMBAI]:["MATIC","0x0000000000000000000000000000000000001010"],[ChainId$1.CELO]:["CELO"],[ChainId$1.CELO_ALFAJORES]:["CELO"],[ChainId$1.GNOSIS]:["XDAI"],[ChainId$1.MOONBEAM]:["GLMR"],[ChainId$1.BNB]:["BNB","BNB","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.AVALANCHE]:["AVAX","AVALANCHE","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.BASE]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"],[ChainId$1.BLAST]:["ETH","ETHER","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"]});({[ChainId$1.MAINNET]:NativeCurrencyName.ETHER,[ChainId$1.GOERLI]:NativeCurrencyName.ETHER,[ChainId$1.SEPOLIA]:NativeCurrencyName.ETHER,[ChainId$1.OPTIMISM]:NativeCurrencyName.ETHER,[ChainId$1.OPTIMISM_GOERLI]:NativeCurrencyName.ETHER,[ChainId$1.OPTIMISM_SEPOLIA]:NativeCurrencyName.ETHER,[ChainId$1.ARBITRUM_ONE]:NativeCurrencyName.ETHER,[ChainId$1.ARBITRUM_GOERLI]:NativeCurrencyName.ETHER,[ChainId$1.ARBITRUM_SEPOLIA]:NativeCurrencyName.ETHER,[ChainId$1.POLYGON]:NativeCurrencyName.MATIC,[ChainId$1.POLYGON_MUMBAI]:NativeCurrencyName.MATIC,[ChainId$1.CELO]:NativeCurrencyName.CELO,[ChainId$1.CELO_ALFAJORES]:NativeCurrencyName.CELO,[ChainId$1.GNOSIS]:NativeCurrencyName.GNOSIS,[ChainId$1.MOONBEAM]:NativeCurrencyName.MOONBEAM,[ChainId$1.BNB]:NativeCurrencyName.BNB,[ChainId$1.AVALANCHE]:NativeCurrencyName.AVALANCHE,[ChainId$1.BASE]:NativeCurrencyName.ETHER,[ChainId$1.BLAST]:NativeCurrencyName.ETHER});const ID_TO_NETWORK_NAME=id=>{switch(id){case 1:return ChainName.MAINNET;case 5:return ChainName.GOERLI;case 11155111:return ChainName.SEPOLIA;case 56:return ChainName.BNB;case 10:return ChainName.OPTIMISM;case 420:return ChainName.OPTIMISM_GOERLI;case 11155420:return ChainName.OPTIMISM_SEPOLIA;case 42161:return ChainName.ARBITRUM_ONE;case 421613:return ChainName.ARBITRUM_GOERLI;case 421614:return ChainName.ARBITRUM_SEPOLIA;case 137:return ChainName.POLYGON;case 80001:return ChainName.POLYGON_MUMBAI;case 42220:return ChainName.CELO;case 44787:return ChainName.CELO_ALFAJORES;case 100:return ChainName.GNOSIS;case 1284:return ChainName.MOONBEAM;case 43114:return ChainName.AVALANCHE;case 8453:return ChainName.BASE;case 84531:return ChainName.BASE_GOERLI;case 81457:return ChainName.BLAST;default:throw new Error(`Unknown chain id: ${id}`)}};Object.values(ChainId$1).map(c=>c.toString());const WRAPPED_NATIVE_CURRENCY={[ChainId$1.MAINNET]:new Token$1(1,"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",18,"WETH","Wrapped Ether"),[ChainId$1.GOERLI]:new Token$1(5,"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",18,"WETH","Wrapped Ether"),[ChainId$1.SEPOLIA]:new Token$1(11155111,"0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",18,"WETH","Wrapped Ether"),[ChainId$1.BNB]:new Token$1(56,"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",18,"WBNB","Wrapped BNB"),[ChainId$1.OPTIMISM]:new Token$1(ChainId$1.OPTIMISM,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.OPTIMISM_GOERLI]:new Token$1(ChainId$1.OPTIMISM_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.OPTIMISM_SEPOLIA]:new Token$1(ChainId$1.OPTIMISM_SEPOLIA,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.ARBITRUM_ONE]:new Token$1(ChainId$1.ARBITRUM_ONE,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),[ChainId$1.ARBITRUM_GOERLI]:new Token$1(ChainId$1.ARBITRUM_GOERLI,"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",18,"WETH","Wrapped Ether"),[ChainId$1.ARBITRUM_SEPOLIA]:new Token$1(ChainId$1.ARBITRUM_SEPOLIA,"0xc556bAe1e86B2aE9c22eA5E036b07E55E7596074",18,"WETH","Wrapped Ether"),[ChainId$1.POLYGON]:new Token$1(ChainId$1.POLYGON,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC"),[ChainId$1.POLYGON_MUMBAI]:new Token$1(ChainId$1.POLYGON_MUMBAI,"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",18,"WMATIC","Wrapped MATIC"),[ChainId$1.CELO]:new Token$1(ChainId$1.CELO,"0x471EcE3750Da237f93B8E339c536989b8978a438",18,"CELO","Celo native asset"),[ChainId$1.CELO_ALFAJORES]:new Token$1(ChainId$1.CELO_ALFAJORES,"0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9",18,"CELO","Celo native asset"),[ChainId$1.GNOSIS]:new Token$1(ChainId$1.GNOSIS,"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",18,"WXDAI","Wrapped XDAI on Gnosis"),[ChainId$1.MOONBEAM]:new Token$1(ChainId$1.MOONBEAM,"0xAcc15dC74880C9944775448304B263D191c6077F",18,"WGLMR","Wrapped GLMR"),[ChainId$1.AVALANCHE]:new Token$1(ChainId$1.AVALANCHE,"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",18,"WAVAX","Wrapped AVAX"),[ChainId$1.BASE]:new Token$1(ChainId$1.BASE,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.BASE_GOERLI]:new Token$1(ChainId$1.BASE_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.ROOTSTOCK]:new Token$1(ChainId$1.ROOTSTOCK,"0x542fDA317318eBF1d3DEAf76E0b632741A7e677d",18,"WRBTC","Wrapped BTC"),[ChainId$1.ZORA]:new Token$1(ChainId$1.ZORA,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.ZORA_SEPOLIA]:new Token$1(ChainId$1.ZORA_SEPOLIA,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.BLAST]:new Token$1(ChainId$1.BLAST,"0x4300000000000000000000000000000000000004",18,"WETH","Wrapped Ether")};class ExtendedEther extends Ether$1{get wrapped(){if(this.chainId in WRAPPED_NATIVE_CURRENCY){return WRAPPED_NATIVE_CURRENCY[this.chainId]}throw new Error("Unsupported chain ID")}static onChain(chainId){var _a;return(_a=this._cachedExtendedEther[chainId])!==null&&_a!==void 0?_a:this._cachedExtendedEther[chainId]=new ExtendedEther(chainId)}}ExtendedEther._cachedExtendedEther={};CHAIN_TO_ADDRESSES_MAP[ChainId$1.BNB].tickLensAddress;CHAIN_TO_ADDRESSES_MAP[ChainId$1.BNB].nonfungiblePositionManagerAddress;CHAIN_TO_ADDRESSES_MAP[ChainId$1.BNB].swapRouter02Address;CHAIN_TO_ADDRESSES_MAP[ChainId$1.BNB].v3MigratorAddress;const V3_CORE_FACTORY_ADDRESSES={...constructSameAddressMap(FACTORY_ADDRESS$3),[ChainId$1.CELO]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.CELO].v3CoreFactoryAddress,[ChainId$1.CELO_ALFAJORES]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.CELO_ALFAJORES].v3CoreFactoryAddress,[ChainId$1.OPTIMISM_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.OPTIMISM_GOERLI].v3CoreFactoryAddress,[ChainId$1.OPTIMISM_SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.OPTIMISM_SEPOLIA].v3CoreFactoryAddress,[ChainId$1.SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.SEPOLIA].v3CoreFactoryAddress,[ChainId$1.ARBITRUM_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.ARBITRUM_GOERLI].v3CoreFactoryAddress,[ChainId$1.ARBITRUM_SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.ARBITRUM_SEPOLIA].v3CoreFactoryAddress,[ChainId$1.BNB]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BNB].v3CoreFactoryAddress,[ChainId$1.AVALANCHE]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.AVALANCHE].v3CoreFactoryAddress,[ChainId$1.BASE_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BASE_GOERLI].v3CoreFactoryAddress,[ChainId$1.BASE]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BASE].v3CoreFactoryAddress,[ChainId$1.BLAST]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BLAST].v3CoreFactoryAddress};const QUOTER_V2_ADDRESSES={...constructSameAddressMap("0x61fFE014bA17989E743c5F6cB21bF9697530B21e"),[ChainId$1.CELO]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.CELO].quoterAddress,[ChainId$1.CELO_ALFAJORES]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.CELO_ALFAJORES].quoterAddress,[ChainId$1.OPTIMISM_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.OPTIMISM_GOERLI].quoterAddress,[ChainId$1.OPTIMISM_SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.OPTIMISM_SEPOLIA].quoterAddress,[ChainId$1.SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.SEPOLIA].quoterAddress,[ChainId$1.ARBITRUM_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.ARBITRUM_GOERLI].quoterAddress,[ChainId$1.ARBITRUM_SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.ARBITRUM_SEPOLIA].quoterAddress,[ChainId$1.BNB]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BNB].quoterAddress,[ChainId$1.AVALANCHE]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.AVALANCHE].quoterAddress,[ChainId$1.BASE_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BASE_GOERLI].quoterAddress,[ChainId$1.BASE]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BASE].quoterAddress,[ChainId$1.BLAST]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BLAST].quoterAddress};const MIXED_ROUTE_QUOTER_V1_ADDRESSES={[ChainId$1.MAINNET]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.MAINNET].v1MixedRouteQuoterAddress,[ChainId$1.GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.GOERLI].v1MixedRouteQuoterAddress};const UNISWAP_MULTICALL_ADDRESSES={...constructSameAddressMap("0x1F98415757620B543A52E61c46B32eB19261F984"),[ChainId$1.CELO]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.CELO].multicallAddress,[ChainId$1.CELO_ALFAJORES]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.CELO_ALFAJORES].multicallAddress,[ChainId$1.OPTIMISM_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.OPTIMISM_GOERLI].multicallAddress,[ChainId$1.OPTIMISM_SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.OPTIMISM_SEPOLIA].multicallAddress,[ChainId$1.SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.SEPOLIA].multicallAddress,[ChainId$1.ARBITRUM_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.ARBITRUM_GOERLI].multicallAddress,[ChainId$1.ARBITRUM_SEPOLIA]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.ARBITRUM_SEPOLIA].multicallAddress,[ChainId$1.BNB]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BNB].multicallAddress,[ChainId$1.AVALANCHE]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.AVALANCHE].multicallAddress,[ChainId$1.BASE_GOERLI]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BASE_GOERLI].multicallAddress,[ChainId$1.BASE]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BASE].multicallAddress,[ChainId$1.BLAST]:CHAIN_TO_ADDRESSES_MAP[ChainId$1.BLAST].multicallAddress};const SWAP_ROUTER_02_ADDRESSES=chainId=>{var _a;return(_a=SWAP_ROUTER_02_ADDRESSES$1(chainId))!==null&&_a!==void 0?_a:"0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"};const ARB_GASINFO_ADDRESS="0x000000000000000000000000000000000000006C";CHAIN_TO_ADDRESSES_MAP[ChainId$1.ARBITRUM_ONE].tickLensAddress;CHAIN_TO_ADDRESSES_MAP[ChainId$1.MAINNET].nonfungiblePositionManagerAddress;CHAIN_TO_ADDRESSES_MAP[ChainId$1.MAINNET].v3MigratorAddress;function constructSameAddressMap(address,additionalNetworks=[]){return NETWORKS_WITH_SAME_UNISWAP_ADDRESSES.concat(additionalNetworks).reduce((memo,chainId)=>{memo[chainId]=address;return memo},{})}({[ChainId$1.MAINNET]:new Token$1(ChainId$1.MAINNET,"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",18,"WETH","Wrapped Ether"),[ChainId$1.GOERLI]:new Token$1(ChainId$1.GOERLI,"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",18,"WETH","Wrapped Ether"),[ChainId$1.SEPOLIA]:new Token$1(ChainId$1.SEPOLIA,"0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",18,"WETH","Wrapped Ether"),[ChainId$1.OPTIMISM]:new Token$1(ChainId$1.OPTIMISM,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.OPTIMISM_GOERLI]:new Token$1(ChainId$1.OPTIMISM_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.OPTIMISM_SEPOLIA]:new Token$1(ChainId$1.OPTIMISM_SEPOLIA,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.ARBITRUM_ONE]:new Token$1(ChainId$1.ARBITRUM_ONE,"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",18,"WETH","Wrapped Ether"),[ChainId$1.ARBITRUM_GOERLI]:new Token$1(ChainId$1.ARBITRUM_GOERLI,"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",18,"WETH","Wrapped Ether"),[ChainId$1.ARBITRUM_SEPOLIA]:new Token$1(ChainId$1.ARBITRUM_SEPOLIA,"0xc556bAe1e86B2aE9c22eA5E036b07E55E7596074",18,"WETH","Wrapped Ether"),[ChainId$1.BASE_GOERLI]:new Token$1(ChainId$1.BASE_GOERLI,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.BASE]:new Token$1(ChainId$1.BASE,"0x4200000000000000000000000000000000000006",18,"WETH","Wrapped Ether"),[ChainId$1.BLAST]:new Token$1(ChainId$1.BLAST,"0x4300000000000000000000000000000000000004",18,"WETH","Wrapped Ether")});class CurrencyAmount extends CurrencyAmount$2{}function parseFeeAmount(feeAmountStr){switch(feeAmountStr){case"10000":return FeeAmount.HIGH;case"3000":return FeeAmount.MEDIUM;case"500":return FeeAmount.LOW;case"100":return FeeAmount.LOWEST;default:throw new Error(`Fee amount ${feeAmountStr} not supported.`)}}function unparseFeeAmount(feeAmount){switch(feeAmount){case FeeAmount.HIGH:return"10000";case FeeAmount.MEDIUM:return"3000";case FeeAmount.LOW:return"500";case FeeAmount.LOWEST:return"100";default:throw new Error(`Fee amount ${feeAmount} not supported.`)}}const routeToString=route=>{const routeStr=[];const tokens=route.protocol===Protocol.V3?route.tokenPath:route.path;const tokenPath=_.map(tokens,token=>`${token.symbol}`);const pools=route.protocol===Protocol.V3||route.protocol===Protocol.MIXED?route.pools:route.pairs;const poolFeePath=_.map(pools,pool=>{return`${pool instanceof Pool?` -- ${pool.fee/1e4}% [${Pool.getAddress(pool.token0,pool.token1,pool.fee,undefined,V3_CORE_FACTORY_ADDRESSES[pool.chainId])}]`:` -- [${Pair.getAddress(pool.token0,pool.token1)}]`} --> `});for(let i=0;i<tokenPath.length;i++){routeStr.push(tokenPath[i]);if(i<poolFeePath.length){routeStr.push(poolFeePath[i])}}return routeStr.join("")};const routeAmountsToString=routeAmounts=>{const total=_.reduce(routeAmounts,(total,cur)=>{return total.add(cur.amount)},CurrencyAmount.fromRawAmount(routeAmounts[0].amount.currency,0));const routeStrings=_.map(routeAmounts,({protocol,route,amount})=>{const portion=amount.divide(total);const percent=new Percent$1(portion.numerator,portion.denominator);return`[${protocol==Protocol.MIXED?"V2 + V3":protocol}] ${percent.toFixed(2)}% = ${routeToString(route)}`});return _.join(routeStrings,", ")};const poolToString=p=>{return`${p.token0.symbol}/${p.token1.symbol}${p instanceof Pool?`/${p.fee/1e4}%`:``}`};const _abi$b=[{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:true,internalType:"address",name:"spender",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"from",type:"address"},{indexed:true,internalType:"address",name:"to",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class IERC20Metadata__factory{static createInterface(){return new Interface(_abi$b)}static connect(address,signerOrProvider){return new Contract(address,_abi$b,signerOrProvider)}}IERC20Metadata__factory.abi=_abi$b;const USDC_MAINNET=new Token$1(ChainId$1.MAINNET,"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",6,"USDC","USD//C");const USDT_MAINNET=new Token$1(ChainId$1.MAINNET,"0xdAC17F958D2ee523a2206206994597C13D831ec7",6,"USDT","Tether USD");const WBTC_MAINNET=new Token$1(ChainId$1.MAINNET,"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",8,"WBTC","Wrapped BTC");const DAI_MAINNET=new Token$1(ChainId$1.MAINNET,"0x6B175474E89094C44Da98b954EedeAC495271d0F",18,"DAI","Dai Stablecoin");const FEI_MAINNET=new Token$1(ChainId$1.MAINNET,"0x956F47F50A910163D8BF957Cf5846D573E7f87CA",18,"FEI","Fei USD");new Token$1(ChainId$1.MAINNET,"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",18,"UNI","Uniswap");const AAVE_MAINNET=new Token$1(ChainId$1.MAINNET,"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9",18,"AAVE","Aave Token");const LIDO_MAINNET=new Token$1(ChainId$1.MAINNET,"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32",18,"LDO","Lido DAO Token");const USDC_SEPOLIA=new Token$1(ChainId$1.SEPOLIA,"0x6f14C02Fc1F78322cFd7d707aB90f18baD3B54f5",18,"USDC","USDC Token");const DAI_SEPOLIA=new Token$1(ChainId$1.SEPOLIA,"0x7AF17A48a6336F7dc1beF9D485139f7B6f4FB5C8",18,"DAI","DAI Token");const USDC_GOERLI=new Token$1(ChainId$1.GOERLI,"0x07865c6e87b9f70255377e024ace6630c1eaa37f",6,"USDC","USD//C");const USDT_GOERLI=new Token$1(ChainId$1.GOERLI,"0xe583769738b6dd4e7caf8451050d1948be717679",18,"USDT","Tether USD");const WBTC_GOERLI=new Token$1(ChainId$1.GOERLI,"0xa0a5ad2296b38bd3e3eb59aaeaf1589e8d9a29a9",8,"WBTC","Wrapped BTC");const DAI_GOERLI=new Token$1(ChainId$1.GOERLI,"0x11fe4b6ae13d2a6055c8d9cf65c55bac32b5d844",18,"DAI","Dai Stablecoin");new Token$1(ChainId$1.GOERLI,"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984",18,"UNI","Uni token");const USDC_OPTIMISM=new Token$1(ChainId$1.OPTIMISM,"0x7F5c764cBc14f9669B88837ca1490cCa17c31607",6,"USDC","USD//C.e");const USDC_NATIVE_OPTIMISM=new Token$1(ChainId$1.OPTIMISM,"0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85",6,"USDC","USD//C");const USDT_OPTIMISM=new Token$1(ChainId$1.OPTIMISM,"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58",6,"USDT","Tether USD");const WBTC_OPTIMISM=new Token$1(ChainId$1.OPTIMISM,"0x68f180fcCe6836688e9084f035309E29Bf0A2095",8,"WBTC","Wrapped BTC");const DAI_OPTIMISM=new Token$1(ChainId$1.OPTIMISM,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai Stablecoin");const OP_OPTIMISM=new Token$1(ChainId$1.OPTIMISM,"0x4200000000000000000000000000000000000042",18,"OP","Optimism");const USDC_OPTIMISM_GOERLI=new Token$1(ChainId$1.OPTIMISM_GOERLI,"0x7E07E15D2a87A24492740D16f5bdF58c16db0c4E",6,"USDC","USD//C");const USDT_OPTIMISM_GOERLI=new Token$1(ChainId$1.OPTIMISM_GOERLI,"0x853eb4bA5D0Ba2B77a0A5329Fd2110d5CE149ECE",6,"USDT","Tether USD");const WBTC_OPTIMISM_GOERLI=new Token$1(ChainId$1.OPTIMISM_GOERLI,"0xe0a592353e81a94Db6E3226fD4A99F881751776a",8,"WBTC","Wrapped BTC");const DAI_OPTIMISM_GOERLI=new Token$1(ChainId$1.OPTIMISM_GOERLI,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai Stablecoin");const USDC_OPTIMISM_SEPOLIA=new Token$1(ChainId$1.OPTIMISM_SEPOLIA,"0x7E07E15D2a87A24492740D16f5bdF58c16db0c4E",6,"USDC","USD//C");const USDT_OPTIMISM_SEPOLIA=new Token$1(ChainId$1.OPTIMISM_SEPOLIA,"0x853eb4bA5D0Ba2B77a0A5329Fd2110d5CE149ECE",6,"USDT","Tether USD");const WBTC_OPTIMISM_SEPOLIA=new Token$1(ChainId$1.OPTIMISM_SEPOLIA,"0xe0a592353e81a94Db6E3226fD4A99F881751776a",8,"WBTC","Wrapped BTC");const DAI_OPTIMISM_SEPOLIA=new Token$1(ChainId$1.OPTIMISM_SEPOLIA,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai Stablecoin");const USDC_ARBITRUM=new Token$1(ChainId$1.ARBITRUM_ONE,"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",6,"USDC","USD//C.e");const USDC_NATIVE_ARBITRUM=new Token$1(ChainId$1.ARBITRUM_ONE,"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",6,"USDC","USD//C");const USDT_ARBITRUM=new Token$1(ChainId$1.ARBITRUM_ONE,"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",6,"USDT","Tether USD");const WBTC_ARBITRUM=new Token$1(ChainId$1.ARBITRUM_ONE,"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",8,"WBTC","Wrapped BTC");const DAI_ARBITRUM=new Token$1(ChainId$1.ARBITRUM_ONE,"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",18,"DAI","Dai Stablecoin");const ARB_ARBITRUM=new Token$1(ChainId$1.ARBITRUM_ONE,"0x912CE59144191C1204E64559FE8253a0e49E6548",18,"ARB","Arbitrum");new Token$1(ChainId$1.ARBITRUM_GOERLI,"0x0000000000000000000000000000000000000000",18,"DAI","Dai Stablecoin");const DAI_ARBITRUM_SEPOLIA=new Token$1(ChainId$1.ARBITRUM_SEPOLIA,"0xc3826E277485c33F3D99C9e0CBbf8449513210EE",18,"DAI","Dai Stablecoin");const USDC_ARBITRUM_GOERLI=new Token$1(ChainId$1.ARBITRUM_GOERLI,"0x8FB1E3fC51F3b789dED7557E680551d93Ea9d892",6,"USDC","USD//C");const USDC_ARBITRUM_SEPOLIA=new Token$1(ChainId$1.ARBITRUM_SEPOLIA,"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d",6,"USDC","USD//C");const WMATIC_POLYGON=new Token$1(ChainId$1.POLYGON,"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",18,"WMATIC","Wrapped MATIC");const WETH_POLYGON=new Token$1(ChainId$1.POLYGON,"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",18,"WETH","Wrapped Ether");const USDC_POLYGON=new Token$1(ChainId$1.POLYGON,"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",6,"USDC","USD//C.e");const USDC_NATIVE_POLYGON=new Token$1(ChainId$1.POLYGON,"0x3c499c542cef5e3811e1192ce70d8cc03d5c3359",6,"USDC","USD//C");new Token$1(ChainId$1.POLYGON,"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063",18,"DAI","Dai Stablecoin");const WMATIC_POLYGON_MUMBAI=new Token$1(ChainId$1.POLYGON_MUMBAI,"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",18,"WMATIC","Wrapped MATIC");new Token$1(ChainId$1.POLYGON_MUMBAI,"0xe11a86849d99f524cac3e7a0ec1241828e332c62",6,"USDC","USD//C");const DAI_POLYGON_MUMBAI=new Token$1(ChainId$1.POLYGON_MUMBAI,"0x001b3b4d0f3714ca98ba10f6042daebf0b1b7b6f",18,"DAI","Dai Stablecoin");new Token$1(ChainId$1.POLYGON_MUMBAI,"0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa",18,"WETH","Wrapped Ether");const BTC_BNB=new Token$1(ChainId$1.BNB,"0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c",18,"BTCB","Binance BTC");const BUSD_BNB=new Token$1(ChainId$1.BNB,"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56",18,"BUSD","BUSD");const DAI_BNB=new Token$1(ChainId$1.BNB,"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3",18,"DAI","DAI");const ETH_BNB=new Token$1(ChainId$1.BNB,"0x2170Ed0880ac9A755fd29B2688956BD959F933F8",18,"ETH","ETH");const USDC_BNB=new Token$1(ChainId$1.BNB,"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d",18,"USDC","USDC");const USDT_BNB=new Token$1(ChainId$1.BNB,"0x55d398326f99059fF775485246999027B3197955",18,"USDT","USDT");const CELO=new Token$1(ChainId$1.CELO,"0x471EcE3750Da237f93B8E339c536989b8978a438",18,"CELO","Celo native asset");const DAI_CELO=new Token$1(ChainId$1.CELO,"0xE4fE50cdD716522A56204352f00AA110F731932d",18,"DAI","Dai Stablecoin");const CUSD_CELO=new Token$1(ChainId$1.CELO,"0x765DE816845861e75A25fCA122bb6898B8B1282a",18,"CUSD","Celo Dollar Stablecoin");const USDC_CELO=new Token$1(ChainId$1.CELO,"0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664",18,"USDC","USD//C.e");const USDC_WORMHOLE_CELO=new Token$1(ChainId$1.CELO,"0x37f750B7cC259A2f741AF45294f6a16572CF5cAd",18,"USDC","USD//C.e");const USDC_NATIVE_CELO=new Token$1(ChainId$1.CELO,"0x765DE816845861e75A25fCA122bb6898B8B1282a",18,"USDC","USD//C");const CEUR_CELO=new Token$1(ChainId$1.CELO,"0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73",18,"CEUR","Celo Euro Stablecoin");const CELO_ALFAJORES=new Token$1(ChainId$1.CELO_ALFAJORES,"0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9",18,"CELO","Celo native asset");const DAI_CELO_ALFAJORES=new Token$1(ChainId$1.CELO_ALFAJORES,"0x7d91E51C8F218f7140188A155f5C75388630B6a8",18,"DAI","Dai Stablecoin");const CUSD_CELO_ALFAJORES=new Token$1(ChainId$1.CELO_ALFAJORES,"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1",18,"CUSD","Celo Dollar Stablecoin");const CEUR_CELO_ALFAJORES=new Token$1(ChainId$1.CELO_ALFAJORES,"0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F",18,"CEUR","Celo Euro Stablecoin");const DAI_AVAX=new Token$1(ChainId$1.AVALANCHE,"0xd586E7F844cEa2F87f50152665BCbc2C279D8d70",18,"DAI.e","DAI.e Token");const USDC_AVAX=new Token$1(ChainId$1.AVALANCHE,"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",6,"USDC","USDC Token");const USDC_BRIDGED_AVAX=new Token$1(ChainId$1.AVALANCHE,"0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664",6,"USDC","USDC Token");const USDC_NATIVE_AVAX=new Token$1(ChainId$1.AVALANCHE,"0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e",6,"USDC","USDC Token");const USDC_BASE=new Token$1(ChainId$1.BASE,"0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA",6,"USDbC","USD Base Coin");const USDC_NATIVE_BASE=new Token$1(ChainId$1.BASE,"0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",6,"USDbC","USD Base Coin");new Token$1(ChainId$1.BASE_GOERLI,"0x853154e2A5604E5C74a2546E2871Ad44932eB92C",6,"USDbC","USD Base Coin");const USDC_ETHEREUM_GNOSIS=new Token$1(ChainId$1.GNOSIS,"0xddafbb505ad214d7b80b1f830fccc89b60fb7a83",6,"USDC","USDC from Ethereum on Gnosis");const WXDAI_GNOSIS=new Token$1(ChainId$1.GNOSIS,"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",18,"WXDAI","Wrapped XDAI on Gnosis");const WBTC_GNOSIS=new Token$1(ChainId$1.GNOSIS,"0x8e5bbbb09ed1ebde8674cda39a0c169401db4252",8,"WBTC","Wrapped BTC from Ethereum on Gnosis");const USDC_MOONBEAM=new Token$1(ChainId$1.MOONBEAM,"0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b",6,"USDC","USD Coin bridged using Multichain");const WGLMR_MOONBEAM=new Token$1(ChainId$1.MOONBEAM,"0xAcc15dC74880C9944775448304B263D191c6077F",18,"WGLMR","Wrapped GLMR");const DAI_MOONBEAM=new Token$1(ChainId$1.MOONBEAM,"0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b",6,"DAI","Dai on moonbeam bridged using Multichain");const WBTC_MOONBEAM=new Token$1(ChainId$1.MOONBEAM,"0x922D641a426DcFFaeF11680e5358F34d97d112E1",8,"WBTC","Wrapped BTC bridged using Multichain");const USDB_BLAST=new Token$1(ChainId$1.BLAST,"0x4300000000000000000000000000000000000003",18,"USDB","USD Blast");class TokenProvider{constructor(chainId,multicall2Provider){this.chainId=chainId;this.multicall2Provider=multicall2Provider}async getTokenSymbol(addresses,providerConfig){let result;let isBytes32=false;try{result=await this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:addresses,contractInterface:IERC20Metadata__factory.createInterface(),functionName:"symbol",providerConfig:providerConfig})}catch(error){log.error({addresses:addresses},`TokenProvider.getTokenSymbol[string] failed with error ${error}. Trying with bytes32.`);const bytes32Interface=new Interface([{inputs:[],name:"symbol",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"}]);try{result=await this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:addresses,contractInterface:bytes32Interface,functionName:"symbol",providerConfig:providerConfig});isBytes32=true}catch(error){log.fatal({addresses:addresses},`TokenProvider.getTokenSymbol[bytes32] failed with error ${error}.`);throw new Error("[TokenProvider.getTokenSymbol] Impossible to fetch token symbol.")}}return{result:result,isBytes32:isBytes32}}async getTokenDecimals(addresses,providerConfig){return this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:addresses,contractInterface:IERC20Metadata__factory.createInterface(),functionName:"decimals",providerConfig:providerConfig})}async getTokens(_addresses,providerConfig){const addressToToken={};const symbolToToken={};const addresses=_(_addresses).map(address=>address.toLowerCase()).uniq().value();if(addresses.length>0){const[symbolsResult,decimalsResult]=await Promise.all([this.getTokenSymbol(addresses,providerConfig),this.getTokenDecimals(addresses,providerConfig)]);const isBytes32=symbolsResult.isBytes32;const{results:symbols}=symbolsResult.result;const{results:decimals}=decimalsResult;for(let i=0;i<addresses.length;i++){const address=addresses[i];const symbolResult=symbols[i];const decimalResult=decimals[i];if(!(symbolResult===null||symbolResult===void 0?void 0:symbolResult.success)||!(decimalResult===null||decimalResult===void 0?void 0:decimalResult.success)){log.info({symbolResult:symbolResult,decimalResult:decimalResult},`Dropping token with address ${address} as symbol or decimal are invalid`);continue}const symbol=isBytes32?parseBytes32String(symbolResult.result[0]):symbolResult.result[0];const decimal=decimalResult.result[0];addressToToken[address.toLowerCase()]=new Token$1(this.chainId,address,decimal,symbol);symbolToToken[symbol.toLowerCase()]=addressToToken[address.toLowerCase()]}log.info(`Got token symbol and decimals for ${Object.values(addressToToken).length} out of ${addresses.length} tokens on-chain ${providerConfig?`as of: ${providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber}`:""}`)}return{getTokenByAddress:address=>{return addressToToken[address.toLowerCase()]},getTokenBySymbol:symbol=>{return symbolToToken[symbol.toLowerCase()]},getAllTokens:()=>{return Object.values(addressToToken)}}}}const CACHE_SEED_TOKENS={[ChainId$1.MAINNET]:{WETH:WRAPPED_NATIVE_CURRENCY[ChainId$1.MAINNET],USDC:USDC_MAINNET,USDT:USDT_MAINNET,WBTC:WBTC_MAINNET,DAI:DAI_MAINNET,RING:new Token$1(ChainId$1.MAINNET,"0x9469D013805bFfB7D3DEBe5E7839237e535ec483",18,"RING","RING")},[ChainId$1.SEPOLIA]:{USDC:USDC_SEPOLIA},[ChainId$1.OPTIMISM]:{USDC:USDC_OPTIMISM,USDT:USDT_OPTIMISM,WBTC:WBTC_OPTIMISM,DAI:DAI_OPTIMISM},[ChainId$1.OPTIMISM_GOERLI]:{USDC:USDC_OPTIMISM_GOERLI,USDT:USDT_OPTIMISM_GOERLI,WBTC:WBTC_OPTIMISM_GOERLI,DAI:DAI_OPTIMISM_GOERLI},[ChainId$1.OPTIMISM_SEPOLIA]:{USDC:USDC_OPTIMISM_SEPOLIA,USDT:USDT_OPTIMISM_SEPOLIA,WBTC:WBTC_OPTIMISM_SEPOLIA,DAI:DAI_OPTIMISM_SEPOLIA},[ChainId$1.ARBITRUM_ONE]:{USDC:USDC_ARBITRUM,USDT:USDT_ARBITRUM,WBTC:WBTC_ARBITRUM,DAI:DAI_ARBITRUM},[ChainId$1.ARBITRUM_GOERLI]:{USDC:USDC_ARBITRUM_GOERLI},[ChainId$1.ARBITRUM_SEPOLIA]:{USDC:USDC_ARBITRUM_SEPOLIA,DAI:DAI_ARBITRUM_SEPOLIA},[ChainId$1.POLYGON]:{WMATIC:WMATIC_POLYGON,USDC:USDC_POLYGON},[ChainId$1.POLYGON_MUMBAI]:{WMATIC:WMATIC_POLYGON_MUMBAI,DAI:DAI_POLYGON_MUMBAI},[ChainId$1.CELO]:{CELO:CELO,CUSD:CUSD_CELO,CEUR:CEUR_CELO,DAI:DAI_CELO},[ChainId$1.CELO_ALFAJORES]:{CELO:CELO_ALFAJORES,CUSD:CUSD_CELO_ALFAJORES,CEUR:CUSD_CELO_ALFAJORES,DAI:DAI_CELO_ALFAJORES},[ChainId$1.GNOSIS]:{WXDAI:WRAPPED_NATIVE_CURRENCY[ChainId$1.GNOSIS],USDC_ETHEREUM_GNOSIS:USDC_ETHEREUM_GNOSIS},[ChainId$1.MOONBEAM]:{USDC:USDC_MOONBEAM,DAI:DAI_MOONBEAM,WBTC:WBTC_MOONBEAM,WGLMR:WRAPPED_NATIVE_CURRENCY[ChainId$1.MOONBEAM]},[ChainId$1.BNB]:{USDC:USDC_BNB,USDT:USDT_BNB,BUSD:BUSD_BNB,ETH:ETH_BNB,DAI:DAI_BNB,BTC:BTC_BNB,WBNB:WRAPPED_NATIVE_CURRENCY[ChainId$1.BNB]},[ChainId$1.AVALANCHE]:{USDC:USDC_AVAX,DAI:DAI_AVAX,WAVAX:WRAPPED_NATIVE_CURRENCY[ChainId$1.AVALANCHE]},[ChainId$1.BASE]:{USDC:USDC_BASE,WETH:WRAPPED_NATIVE_CURRENCY[ChainId$1.BASE]},[ChainId$1.BLAST]:{USDB:USDB_BLAST,WETH:WRAPPED_NATIVE_CURRENCY[ChainId$1.BLAST]}};class CachingTokenProviderWithFallback{constructor(chainId,tokenCache,primaryTokenProvider,fallbackTokenProvider){this.chainId=chainId;this.tokenCache=tokenCache;this.primaryTokenProvider=primaryTokenProvider;this.fallbackTokenProvider=fallbackTokenProvider;this.CACHE_KEY=(chainId,address)=>`token-${chainId}-${address}`}async getTokens(_addresses){const seedTokens=CACHE_SEED_TOKENS[this.chainId];if(seedTokens){for(const token of Object.values(seedTokens)){await this.tokenCache.set(this.CACHE_KEY(this.chainId,token.address.toLowerCase()),token)}}const addressToToken={};const symbolToToken={};const addresses=_(_addresses).map(address=>address.toLowerCase()).uniq().value();const addressesToFindInPrimary=[];const addressesToFindInSecondary=[];for(const address of addresses){if(await this.tokenCache.has(this.CACHE_KEY(this.chainId,address))){addressToToken[address.toLowerCase()]=await this.tokenCache.get(this.CACHE_KEY(this.chainId,address));symbolToToken[addressToToken[address].symbol]=await this.tokenCache.get(this.CACHE_KEY(this.chainId,address))}else{addressesToFindInPrimary.push(address)}}log.info({addressesToFindInPrimary:addressesToFindInPrimary},`Found ${addresses.length-addressesToFindInPrimary.length} out of ${addresses.length} tokens in local cache. ${addressesToFindInPrimary.length>0?`Checking primary token provider for ${addressesToFindInPrimary.length} tokens`:``}
      `);if(addressesToFindInPrimary.length>0){const primaryTokenAccessor=await this.primaryTokenProvider.getTokens(addressesToFindInPrimary);for(const address of addressesToFindInPrimary){const token=primaryTokenAccessor.getTokenByAddress(address);if(token){addressToToken[address.toLowerCase()]=token;symbolToToken[addressToToken[address].symbol]=token;await this.tokenCache.set(this.CACHE_KEY(this.chainId,address.toLowerCase()),addressToToken[address])}else{addressesToFindInSecondary.push(address)}}log.info({addressesToFindInSecondary:addressesToFindInSecondary},`Found ${addressesToFindInPrimary.length-addressesToFindInSecondary.length} tokens in primary. ${this.fallbackTokenProvider?`Checking secondary token provider for ${addressesToFindInSecondary.length} tokens`:`No fallback token provider specified. About to return.`}`)}if(this.fallbackTokenProvider&&addressesToFindInSecondary.length>0){const secondaryTokenAccessor=await this.fallbackTokenProvider.getTokens(addressesToFindInSecondary);for(const address of addressesToFindInSecondary){const token=secondaryTokenAccessor.getTokenByAddress(address);if(token){addressToToken[address.toLowerCase()]=token;symbolToToken[addressToToken[address].symbol]=token;await this.tokenCache.set(this.CACHE_KEY(this.chainId,address.toLowerCase()),addressToToken[address])}}}return{getTokenByAddress:address=>{return addressToToken[address.toLowerCase()]},getTokenBySymbol:symbol=>{return symbolToToken[symbol.toLowerCase()]},getAllTokens:()=>{return Object.values(addressToToken)}}}}var CacheMode;(function(CacheMode){CacheMode["Livemode"]="livemode";CacheMode["Darkmode"]="darkmode";CacheMode["Tapcompare"]="tapcompare"})(CacheMode||(CacheMode={}));class CachedRoute{constructor({route,percent}){this.hashCode=str=>[...str].reduce((s,c)=>Math.imul(31,s)+c.charCodeAt(0)|0,0);this.route=route;this.percent=percent}get protocol(){return this.route.protocol}get tokenIn(){return this.route.input}get tokenOut(){return this.route.output}get routePath(){if(this.protocol==Protocol.V3){const route=this.route;return route.pools.map(pool=>`[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`).join("->")}else if(this.protocol==Protocol.V2){const route=this.route;return route.pairs.map(pair=>`[V2]${pair.token0.address}/${pair.token1.address}`).join("->")}else{const route=this.route;return route.pools.map(pool=>{if(pool instanceof Pool){return`[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`}else{return`[V2]${pool.token0.address}/${pool.token1.address}`}}).join("->")}}get routeId(){return this.hashCode(this.routePath)}}class CachedRoutes{constructor({routes,chainId,tokenIn,tokenOut,protocolsCovered,blockNumber,tradeType,originalAmount,blocksToLive=0}){this.routes=routes;this.chainId=chainId;this.tokenIn=tokenIn;this.tokenOut=tokenOut;this.protocolsCovered=protocolsCovered;this.blockNumber=blockNumber;this.tradeType=tradeType;this.originalAmount=originalAmount;this.blocksToLive=blocksToLive}static fromRoutesWithValidQuotes(routes,chainId,tokenIn,tokenOut,protocolsCovered,blockNumber,tradeType,originalAmount){if(routes.length==0)return undefined;const cachedRoutes=_.map(routes,route=>new CachedRoute({route:route.route,percent:route.percent}));return new CachedRoutes({routes:cachedRoutes,chainId:chainId,tokenIn:tokenIn,tokenOut:tokenOut,protocolsCovered:protocolsCovered,blockNumber:blockNumber,tradeType:tradeType,originalAmount:originalAmount})}notExpired(currentBlockNumber,optimistic=false){const blocksToLive=optimistic?this.blocksToLive:0;const blocksDifference=currentBlockNumber-this.blockNumber;return blocksDifference<=blocksToLive}}const DEFAULT_PRIORITY_FEE_PERCENTILE=50;const DEFAULT_BLOCKS_TO_LOOK_BACK=4;class EIP1559GasPriceProvider extends IGasPriceProvider{constructor(provider,priorityFeePercentile=DEFAULT_PRIORITY_FEE_PERCENTILE,blocksToConsider=DEFAULT_BLOCKS_TO_LOOK_BACK){super();this.provider=provider;this.priorityFeePercentile=priorityFeePercentile;this.blocksToConsider=blocksToConsider}async getGasPrice(_latestBlockNumber,requestBlockNumber){const feeHistoryRaw=await this.provider.send("eth_feeHistory",[BigNumber$1.from(this.blocksToConsider).toHexString().replace("0x0","0x"),requestBlockNumber?BigNumber$1.from(requestBlockNumber).toHexString().replace("0x0","0x"):"latest",[this.priorityFeePercentile]]);const feeHistory={baseFeePerGas:_.map(feeHistoryRaw.baseFeePerGas,b=>BigNumber$1.from(b)),gasUsedRatio:feeHistoryRaw.gasUsedRatio,oldestBlock:BigNumber$1.from(feeHistoryRaw.oldestBlock),reward:_.map(feeHistoryRaw.reward,b=>BigNumber$1.from(b[0]))};const nextBlockBaseFeePerGas=feeHistory.baseFeePerGas[feeHistory.baseFeePerGas.length-1];const averagePriorityFeePerGas=_.reduce(feeHistory.reward,(sum,cur)=>sum.add(cur),BigNumber$1.from(0)).div(feeHistory.reward.length);log.info({feeHistory:feeHistory,feeHistoryReadable:{baseFeePerGas:_.map(feeHistory.baseFeePerGas,f=>f.toString()),oldestBlock:feeHistory.oldestBlock.toString(),reward:_.map(feeHistory.reward,r=>r.toString())},nextBlockBaseFeePerGas:nextBlockBaseFeePerGas.toString(),averagePriorityFeePerGas:averagePriorityFeePerGas.toString()},"Got fee history from provider and computed gas estimate");const gasPriceWei=nextBlockBaseFeePerGas.add(averagePriorityFeePerGas);const blockNumber=feeHistory.oldestBlock.add(this.blocksToConsider);log.info(`Estimated gas price in wei: ${gasPriceWei} as of block ${blockNumber.toString()}`);return{gasPriceWei:gasPriceWei}}}class PortionProvider{getPortionAmount(tokenOutAmount,tradeType,swapConfig){if((swapConfig===null||swapConfig===void 0?void 0:swapConfig.type)!==SwapType.UNIVERSAL_ROUTER){return undefined}const swapConfigUniversalRouter=swapConfig;switch(tradeType){case TradeType$2.EXACT_INPUT:if(swapConfigUniversalRouter.fee&&swapConfigUniversalRouter.fee.fee.greaterThan(ZERO$3)){return tokenOutAmount.multiply(swapConfigUniversalRouter.fee.fee)}return undefined;case TradeType$2.EXACT_OUTPUT:if(swapConfigUniversalRouter.flatFee&&swapConfigUniversalRouter.flatFee.amount>BigNumber$1.from(0)){return CurrencyAmount.fromRawAmount(tokenOutAmount.currency,swapConfigUniversalRouter.flatFee.amount.toString())}return undefined;default:throw new Error(`Unknown trade type ${tradeType}`)}}getPortionQuoteAmount(tradeType,quote,portionAdjustedAmount,portionAmount){if(!portionAmount){return undefined}if(tradeType!==TradeType$2.EXACT_OUTPUT){return undefined}const portionToPortionAdjustedAmountRatio=new Fraction$1(portionAmount.quotient,portionAdjustedAmount.quotient);return CurrencyAmount.fromRawAmount(quote.currency,portionToPortionAdjustedAmountRatio.multiply(quote).quotient)}getRouteWithQuotePortionAdjusted(tradeType,routeWithQuotes,swapConfig){if(tradeType!==TradeType$2.EXACT_INPUT){return routeWithQuotes}if((swapConfig===null||swapConfig===void 0?void 0:swapConfig.type)!==SwapType.UNIVERSAL_ROUTER){return routeWithQuotes}return routeWithQuotes.map(routeWithQuote=>{const portionAmount=this.getPortionAmount(routeWithQuote.quote,tradeType,swapConfig);if(portionAmount){routeWithQuote.quote=routeWithQuote.quote.subtract(portionAmount)}return routeWithQuote})}getQuote(tradeType,quote,portionQuoteAmount){switch(tradeType){case TradeType$2.EXACT_INPUT:return quote;case TradeType$2.EXACT_OUTPUT:return portionQuoteAmount?quote.subtract(portionQuoteAmount):quote;default:throw new Error(`Unknown trade type ${tradeType}`)}}getQuoteGasAdjusted(tradeType,quoteGasAdjusted,portionQuoteAmount){switch(tradeType){case TradeType$2.EXACT_INPUT:return quoteGasAdjusted;case TradeType$2.EXACT_OUTPUT:return portionQuoteAmount?quoteGasAdjusted.subtract(portionQuoteAmount):quoteGasAdjusted;default:throw new Error(`Unknown trade type ${tradeType}`)}}getQuoteGasAndPortionAdjusted(tradeType,quoteGasAdjusted,portionAmount){if(!portionAmount){return undefined}switch(tradeType){case TradeType$2.EXACT_INPUT:return quoteGasAdjusted.subtract(portionAmount);case TradeType$2.EXACT_OUTPUT:return quoteGasAdjusted;default:throw new Error(`Unknown trade type ${tradeType}`)}}}const _abi$a=[{inputs:[{internalType:"address",name:"_factoryV2",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"PairLookupFailed",type:"error"},{inputs:[],name:"SameToken",type:"error"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"address",name:"baseToken",type:"address"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"batchValidate",outputs:[{components:[{internalType:"uint256",name:"buyFeeBps",type:"uint256"},{internalType:"uint256",name:"sellFeeBps",type:"uint256"}],internalType:"struct TokenFees[]",name:"fotResults",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"uniswapV2Call",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"baseToken",type:"address"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"validate",outputs:[{components:[{internalType:"uint256",name:"buyFeeBps",type:"uint256"},{internalType:"uint256",name:"sellFeeBps",type:"uint256"}],internalType:"struct TokenFees",name:"fotResult",type:"tuple"}],stateMutability:"nonpayable",type:"function"}];class TokenFeeDetector__factory{static createInterface(){return new Interface(_abi$a)}static connect(address,signerOrProvider){return new Contract(address,_abi$a,signerOrProvider)}}TokenFeeDetector__factory.abi=_abi$a;BigNumber$1.from(0);BigNumber$1.from(0);const FEE_DETECTOR_ADDRESS=chainId=>{switch(chainId){case ChainId$1.MAINNET:default:return"0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f"}};const AMOUNT_TO_FLASH_BORROW$1="100000";const GAS_LIMIT_PER_VALIDATE$1=1e6;class OnChainTokenFeeFetcher{constructor(chainId,rpcProvider,tokenFeeAddress=FEE_DETECTOR_ADDRESS(chainId),gasLimitPerCall=GAS_LIMIT_PER_VALIDATE$1,amountToFlashBorrow=AMOUNT_TO_FLASH_BORROW$1){var _a;this.chainId=chainId;this.tokenFeeAddress=tokenFeeAddress;this.gasLimitPerCall=gasLimitPerCall;this.amountToFlashBorrow=amountToFlashBorrow;this.BASE_TOKEN=(_a=WRAPPED_NATIVE_CURRENCY[this.chainId])===null||_a===void 0?void 0:_a.address;this.contract=TokenFeeDetector__factory.connect(this.tokenFeeAddress,rpcProvider)}async fetchFees(addresses,providerConfig){const tokenToResult={};const addressesWithoutBaseToken=addresses.filter(address=>address.toLowerCase()!==this.BASE_TOKEN.toLowerCase());const functionParams=addressesWithoutBaseToken.map(address=>[address,this.BASE_TOKEN,this.amountToFlashBorrow]);const results=await Promise.all(functionParams.map(async([address,baseToken,amountToBorrow])=>{try{const feeResult=await this.contract.callStatic.validate(address,baseToken,amountToBorrow,{gasLimit:this.gasLimitPerCall,blockTag:providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber});metric.putMetric("TokenFeeFetcherFetchFeesSuccess",1,MetricLoggerUnit.Count);return{address:address,...feeResult}}catch(err){log.error({err:err},`Error calling validate on-chain for token ${address}`);metric.putMetric("TokenFeeFetcherFetchFeesFailure",1,MetricLoggerUnit.Count);return{address:address,buyFeeBps:undefined,sellFeeBps:undefined}}}));results.forEach(({address,buyFeeBps,sellFeeBps})=>{if(buyFeeBps||sellFeeBps){tokenToResult[address]={buyFeeBps:buyFeeBps,sellFeeBps:sellFeeBps}}});return tokenToResult}}const _abi$9=[{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"baseTokens",type:"address[]"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"batchValidate",outputs:[{internalType:"enum ITokenValidator.Status[]",name:"",type:"uint8[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address[]",name:"baseTokens",type:"address[]"},{internalType:"uint256",name:"amountToBorrow",type:"uint256"}],name:"validate",outputs:[{internalType:"enum ITokenValidator.Status",name:"",type:"uint8"}],stateMutability:"nonpayable",type:"function"}];class ITokenValidator__factory{static createInterface(){return new Interface(_abi$9)}static connect(address,signerOrProvider){return new Contract(address,_abi$9,signerOrProvider)}}ITokenValidator__factory.abi=_abi$9;const DEFAULT_ALLOWLIST=new Set(["0x777E2ae845272a2F540ebf6a3D03734A5a8f618e".toLowerCase()]);var TokenValidationResult;(function(TokenValidationResult){TokenValidationResult[TokenValidationResult["UNKN"]=0]="UNKN";TokenValidationResult[TokenValidationResult["FOT"]=1]="FOT";TokenValidationResult[TokenValidationResult["STF"]=2]="STF"})(TokenValidationResult||(TokenValidationResult={}));const TOKEN_VALIDATOR_ADDRESS="0xb5ee1690b7dcc7859771148d0889be838fe108e0";const AMOUNT_TO_FLASH_BORROW="1000";const GAS_LIMIT_PER_VALIDATE=1e6;class TokenValidatorProvider{constructor(chainId,multicall2Provider,tokenValidationCache,tokenValidatorAddress=TOKEN_VALIDATOR_ADDRESS,gasLimitPerCall=GAS_LIMIT_PER_VALIDATE,amountToFlashBorrow=AMOUNT_TO_FLASH_BORROW,allowList=DEFAULT_ALLOWLIST){this.chainId=chainId;this.multicall2Provider=multicall2Provider;this.tokenValidationCache=tokenValidationCache;this.tokenValidatorAddress=tokenValidatorAddress;this.gasLimitPerCall=gasLimitPerCall;this.amountToFlashBorrow=amountToFlashBorrow;this.allowList=allowList;this.CACHE_KEY=(chainId,address)=>`token-${chainId}-${address}`;this.BASES=[WRAPPED_NATIVE_CURRENCY[this.chainId].address]}async validateTokens(tokens,providerConfig){const tokenAddressToToken=_.keyBy(tokens,"address");const addressesRaw=_(tokens).map(token=>token.address).uniq().value();const addresses=[];const tokenToResult={};for(const address of addressesRaw){if(await this.tokenValidationCache.has(this.CACHE_KEY(this.chainId,address))){tokenToResult[address.toLowerCase()]=await this.tokenValidationCache.get(this.CACHE_KEY(this.chainId,address));metric.putMetric(`TokenValidatorProviderValidateCacheHitResult${tokenToResult[address.toLowerCase()]}`,1,MetricLoggerUnit.Count)}else{addresses.push(address)}}log.info(`Got token validation results for ${addressesRaw.length-addresses.length} tokens from cache. Getting ${addresses.length} on-chain.`);const functionParams=_(addresses).map(address=>[address,this.BASES,this.amountToFlashBorrow]).value();const multicallResult=await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({address:this.tokenValidatorAddress,contractInterface:ITokenValidator__factory.createInterface(),functionName:"validate",functionParams:functionParams,providerConfig:providerConfig,additionalConfig:{gasLimitPerCallOverride:this.gasLimitPerCall}});for(let i=0;i<multicallResult.results.length;i++){const resultWrapper=multicallResult.results[i];const tokenAddress=addresses[i];const token=tokenAddressToToken[tokenAddress];if(this.allowList.has(token.address.toLowerCase())){tokenToResult[token.address.toLowerCase()]=TokenValidationResult.UNKN;await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId,token.address.toLowerCase()),tokenToResult[token.address.toLowerCase()]);continue}if(!resultWrapper.success){metric.putMetric("TokenValidatorProviderValidateFailed",1,MetricLoggerUnit.Count);log.error({result:resultWrapper},`Failed to validate token ${token.symbol}`);continue}metric.putMetric("TokenValidatorProviderValidateSuccess",1,MetricLoggerUnit.Count);const validationResult=resultWrapper.result[0];tokenToResult[token.address.toLowerCase()]=validationResult;await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId,token.address.toLowerCase()),tokenToResult[token.address.toLowerCase()]);metric.putMetric(`TokenValidatorProviderValidateCacheMissResult${validationResult}`,1,MetricLoggerUnit.Count)}return{getValidationByToken:token=>tokenToResult[token.address.toLowerCase()]}}}const _abi$8=[{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:true,internalType:"address",name:"spender",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"sender",type:"address"},{indexed:false,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1",type:"uint256"},{indexed:true,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"sender",type:"address"},{indexed:false,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Mint",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"sender",type:"address"},{indexed:false,internalType:"uint256",name:"amount0In",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1In",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount0Out",type:"uint256"},{indexed:false,internalType:"uint256",name:"amount1Out",type:"uint256"},{indexed:true,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},{anonymous:false,inputs:[{indexed:false,internalType:"uint112",name:"reserve0",type:"uint112"},{indexed:false,internalType:"uint112",name:"reserve1",type:"uint112"}],name:"Sync",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"from",type:"address"},{indexed:true,internalType:"address",name:"to",type:"address"},{indexed:false,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"reserve0",type:"uint112"},{internalType:"uint112",name:"reserve1",type:"uint112"},{internalType:"uint32",name:"blockTimestampLast",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"skim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount0Out",type:"uint256"},{internalType:"uint256",name:"amount1Out",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class IUniswapV2Pair__factory{static createInterface(){return new Interface(_abi$8)}static connect(address,signerOrProvider){return new Contract(address,_abi$8,signerOrProvider)}}IUniswapV2Pair__factory.abi=_abi$8;class V2PoolProvider{constructor(chainId,multicall2Provider,tokenPropertiesProvider,retryOptions={retries:2,minTimeout:50,maxTimeout:500}){this.chainId=chainId;this.multicall2Provider=multicall2Provider;this.tokenPropertiesProvider=tokenPropertiesProvider;this.retryOptions=retryOptions;this.POOL_ADDRESS_CACHE={}}async getPools(tokenPairs,providerConfig){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;const poolAddressSet=new Set;const sortedTokenPairs=[];const sortedPoolAddresses=[];for(const tokenPair of tokenPairs){const[tokenA,tokenB]=tokenPair;const{poolAddress,token0,token1}=this.getPoolAddress(tokenA,tokenB);if(poolAddressSet.has(poolAddress)){continue}poolAddressSet.add(poolAddress);sortedTokenPairs.push([token0,token1]);sortedPoolAddresses.push(poolAddress)}log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);metric.putMetric("V2_RPC_POOL_RPC_CALL",1,MetricLoggerUnit.None);metric.putMetric("V2GetReservesBatchSize",sortedPoolAddresses.length,MetricLoggerUnit.Count);metric.putMetric(`V2GetReservesBatchSize_${ID_TO_NETWORK_NAME(this.chainId)}`,sortedPoolAddresses.length,MetricLoggerUnit.Count);const[reservesResults,tokenPropertiesMap]=await Promise.all([this.getPoolsData(sortedPoolAddresses,"getReserves",providerConfig),this.tokenPropertiesProvider.getTokensProperties(this.flatten(tokenPairs),providerConfig)]);log.info(`Got reserves for ${poolAddressSet.size} pools ${(providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber)?`as of block: ${await(providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber)}.`:``}`);const poolAddressToPool={};const invalidPools=[];for(let i=0;i<sortedPoolAddresses.length;i++){const reservesResult=reservesResults[i];if(!(reservesResult===null||reservesResult===void 0?void 0:reservesResult.success)){const[token0,token1]=sortedTokenPairs[i];invalidPools.push([token0,token1]);continue}let[token0,token1]=sortedTokenPairs[i];if(((_a=tokenPropertiesMap[token0.address.toLowerCase()])===null||_a===void 0?void 0:_a.tokenValidationResult)===TokenValidationResult.FOT){token0=new Token$1(token0.chainId,token0.address,token0.decimals,token0.symbol,token0.name,true,(_c=(_b=tokenPropertiesMap[token0.address.toLowerCase()])===null||_b===void 0?void 0:_b.tokenFeeResult)===null||_c===void 0?void 0:_c.buyFeeBps,(_e=(_d=tokenPropertiesMap[token0.address.toLowerCase()])===null||_d===void 0?void 0:_d.tokenFeeResult)===null||_e===void 0?void 0:_e.sellFeeBps)}if(((_f=tokenPropertiesMap[token1.address.toLowerCase()])===null||_f===void 0?void 0:_f.tokenValidationResult)===TokenValidationResult.FOT){token1=new Token$1(token1.chainId,token1.address,token1.decimals,token1.symbol,token1.name,true,(_h=(_g=tokenPropertiesMap[token1.address.toLowerCase()])===null||_g===void 0?void 0:_g.tokenFeeResult)===null||_h===void 0?void 0:_h.buyFeeBps,(_k=(_j=tokenPropertiesMap[token1.address.toLowerCase()])===null||_j===void 0?void 0:_j.tokenFeeResult)===null||_k===void 0?void 0:_k.sellFeeBps)}const{reserve0,reserve1}=reservesResult.result;const pool=new Pair(CurrencyAmount.fromRawAmount(token0,reserve0.toString()),CurrencyAmount.fromRawAmount(token1,reserve1.toString()));const poolAddress=sortedPoolAddresses[i];poolAddressToPool[poolAddress]=pool}if(invalidPools.length>0){log.info({invalidPools:_.map(invalidPools,([token0,token1])=>`${token0.symbol}/${token1.symbol}`)},`${invalidPools.length} pools invalid after checking their slot0 and liquidity results. Dropping.`)}const poolStrs=_.map(Object.values(poolAddressToPool),poolToString);log.debug({poolStrs:poolStrs},`Found ${poolStrs.length} valid pools`);return{getPool:(tokenA,tokenB)=>{const{poolAddress}=this.getPoolAddress(tokenA,tokenB);return poolAddressToPool[poolAddress]},getPoolByAddress:address=>poolAddressToPool[address],getAllPools:()=>Object.values(poolAddressToPool)}}getPoolAddress(tokenA,tokenB){const[token0,token1]=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA];const cacheKey=`${this.chainId}/${token0.address}/${token1.address}`;const cachedAddress=this.POOL_ADDRESS_CACHE[cacheKey];if(cachedAddress){return{poolAddress:cachedAddress,token0:token0,token1:token1}}const poolAddress=Pair.getAddress(token0,token1);this.POOL_ADDRESS_CACHE[cacheKey]=poolAddress;return{poolAddress:poolAddress,token0:token0,token1:token1}}async getPoolsData(poolAddresses,functionName,providerConfig){const{results,blockNumber}=await retry(async()=>{return this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:poolAddresses,contractInterface:IUniswapV2Pair__factory.createInterface(),functionName:functionName,providerConfig:providerConfig})},this.retryOptions);log.debug(`Pool data fetched as of block ${blockNumber}`);return results}flatten(tokenPairs){const tokens=new Array;for(const[tokenA,tokenB]of tokenPairs){tokens.push(tokenA);tokens.push(tokenB)}return tokens}}const _abi$7=[{inputs:[],name:"getPricesInWei",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class GasDataArbitrum__factory{static createInterface(){return new Interface(_abi$7)}static connect(address,signerOrProvider){return new Contract(address,_abi$7,signerOrProvider)}}GasDataArbitrum__factory.abi=_abi$7;class ArbitrumGasDataProvider{constructor(chainId,provider,gasDataAddress){this.chainId=chainId;this.provider=provider;this.gasFeesAddress=gasDataAddress?gasDataAddress:ARB_GASINFO_ADDRESS}async getGasData(providerConfig){const gasDataContract=GasDataArbitrum__factory.connect(this.gasFeesAddress,this.provider);const gasData=await gasDataContract.getPricesInWei({blockTag:providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber});const perL1CalldataByte=gasData[1];return{perL2TxFee:gasData[0],perL1CalldataFee:perL1CalldataByte.div(16),perArbGasTotal:gasData[5]}}}const _abi$6=[{inputs:[],name:"feeGrowthGlobal0X128",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeGrowthGlobal1X128",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidity",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"observations",outputs:[{internalType:"uint32",name:"blockTimestamp",type:"uint32"},{internalType:"int56",name:"tickCumulative",type:"int56"},{internalType:"uint160",name:"secondsPerLiquidityCumulativeX128",type:"uint160"},{internalType:"bool",name:"initialized",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"positions",outputs:[{internalType:"uint128",name:"_liquidity",type:"uint128"},{internalType:"uint256",name:"feeGrowthInside0LastX128",type:"uint256"},{internalType:"uint256",name:"feeGrowthInside1LastX128",type:"uint256"},{internalType:"uint128",name:"tokensOwed0",type:"uint128"},{internalType:"uint128",name:"tokensOwed1",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"protocolFees",outputs:[{internalType:"uint128",name:"token0",type:"uint128"},{internalType:"uint128",name:"token1",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"slot0",outputs:[{internalType:"uint160",name:"sqrtPriceX96",type:"uint160"},{internalType:"int24",name:"tick",type:"int24"},{internalType:"uint16",name:"observationIndex",type:"uint16"},{internalType:"uint16",name:"observationCardinality",type:"uint16"},{internalType:"uint16",name:"observationCardinalityNext",type:"uint16"},{internalType:"uint8",name:"feeProtocol",type:"uint8"},{internalType:"bool",name:"unlocked",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"int16",name:"wordPosition",type:"int16"}],name:"tickBitmap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"int24",name:"tick",type:"int24"}],name:"ticks",outputs:[{internalType:"uint128",name:"liquidityGross",type:"uint128"},{internalType:"int128",name:"liquidityNet",type:"int128"},{internalType:"uint256",name:"feeGrowthOutside0X128",type:"uint256"},{internalType:"uint256",name:"feeGrowthOutside1X128",type:"uint256"},{internalType:"int56",name:"tickCumulativeOutside",type:"int56"},{internalType:"uint160",name:"secondsPerLiquidityOutsideX128",type:"uint160"},{internalType:"uint32",name:"secondsOutside",type:"uint32"},{internalType:"bool",name:"initialized",type:"bool"}],stateMutability:"view",type:"function"}];class IUniswapV3PoolState__factory{static createInterface(){return new Interface(_abi$6)}static connect(address,signerOrProvider){return new Contract(address,_abi$6,signerOrProvider)}}IUniswapV3PoolState__factory.abi=_abi$6;class V3PoolProvider{constructor(chainId,multicall2Provider,retryOptions={retries:2,minTimeout:50,maxTimeout:500}){this.chainId=chainId;this.multicall2Provider=multicall2Provider;this.retryOptions=retryOptions;this.POOL_ADDRESS_CACHE={}}async getPools(tokenPairs,providerConfig){const poolAddressSet=new Set;const sortedTokenPairs=[];const sortedPoolAddresses=[];for(const tokenPair of tokenPairs){const[tokenA,tokenB,feeAmount]=tokenPair;const{poolAddress,token0,token1}=this.getPoolAddress(tokenA,tokenB,feeAmount);if(poolAddressSet.has(poolAddress)){continue}poolAddressSet.add(poolAddress);sortedTokenPairs.push([token0,token1,feeAmount]);sortedPoolAddresses.push(poolAddress)}log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);const[slot0Results,liquidityResults]=await Promise.all([this.getPoolsData(sortedPoolAddresses,"slot0",providerConfig),this.getPoolsData(sortedPoolAddresses,"liquidity",providerConfig)]);log.info(`Got liquidity and slot0s for ${poolAddressSet.size} pools ${(providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber)?`as of block: ${providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber}.`:``}`);const poolAddressToPool={};const invalidPools=[];for(let i=0;i<sortedPoolAddresses.length;i++){const slot0Result=slot0Results[i];const liquidityResult=liquidityResults[i];if(!(slot0Result===null||slot0Result===void 0?void 0:slot0Result.success)||!(liquidityResult===null||liquidityResult===void 0?void 0:liquidityResult.success)||slot0Result.result.sqrtPriceX96.eq(0)){const[token0,token1,fee]=sortedTokenPairs[i];invalidPools.push([token0,token1,fee]);continue}const[token0,token1,fee]=sortedTokenPairs[i];const slot0=slot0Result.result;const liquidity=liquidityResult.result[0];const pool=new Pool(token0,token1,fee,slot0.sqrtPriceX96.toString(),liquidity.toString(),slot0.tick);const poolAddress=sortedPoolAddresses[i];poolAddressToPool[poolAddress]=pool}if(invalidPools.length>0){log.info({invalidPools:_.map(invalidPools,([token0,token1,fee])=>`${token0.symbol}/${token1.symbol}/${fee/1e4}%`)},`${invalidPools.length} pools invalid after checking their slot0 and liquidity results. Dropping.`)}const poolStrs=_.map(Object.values(poolAddressToPool),poolToString);log.debug({poolStrs:poolStrs},`Found ${poolStrs.length} valid pools`);return{getPool:(tokenA,tokenB,feeAmount)=>{const{poolAddress}=this.getPoolAddress(tokenA,tokenB,feeAmount);return poolAddressToPool[poolAddress]},getPoolByAddress:address=>poolAddressToPool[address],getAllPools:()=>Object.values(poolAddressToPool)}}getPoolAddress(tokenA,tokenB,feeAmount){const[token0,token1]=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA];const cacheKey=`${this.chainId}/${token0.address}/${token1.address}/${feeAmount}`;const cachedAddress=this.POOL_ADDRESS_CACHE[cacheKey];if(cachedAddress){return{poolAddress:cachedAddress,token0:token0,token1:token1}}const poolAddress=computePoolAddress({factoryAddress:V3_CORE_FACTORY_ADDRESSES[this.chainId],tokenA:token0,tokenB:token1,fee:feeAmount});this.POOL_ADDRESS_CACHE[cacheKey]=poolAddress;return{poolAddress:poolAddress,token0:token0,token1:token1}}async getPoolsData(poolAddresses,functionName,providerConfig){const{results,blockNumber}=await retry(async()=>{return this.multicall2Provider.callSameFunctionOnMultipleContracts({addresses:poolAddresses,contractInterface:IUniswapV3PoolState__factory.createInterface(),functionName:functionName,providerConfig:providerConfig})},this.retryOptions);log.debug(`Pool data fetched as of block ${blockNumber}`);return results}}const _abi$5=[{constant:true,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{constant:true,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:false,stateMutability:"view",type:"function"},{constant:false,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:false,stateMutability:"nonpayable",type:"function"},{constant:true,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:false,stateMutability:"view",type:"function"},{payable:true,stateMutability:"payable",type:"fallback"},{anonymous:false,inputs:[{indexed:true,name:"owner",type:"address"},{indexed:true,name:"spender",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,name:"from",type:"address"},{indexed:true,name:"to",type:"address"},{indexed:false,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];class Erc20__factory{static createInterface(){return new Interface(_abi$5)}static connect(address,signerOrProvider){return new Contract(address,_abi$5,signerOrProvider)}}Erc20__factory.abi=_abi$5;const opStackChains=[ChainId$1.OPTIMISM,ChainId$1.OPTIMISM_GOERLI,ChainId$1.OPTIMISM_SEPOLIA,ChainId$1.BASE,ChainId$1.BASE_GOERLI,ChainId$1.BLAST];function buildTrade(tokenInCurrency,tokenOutCurrency,tradeType,routeAmounts){const v3RouteAmounts=_.filter(routeAmounts,routeAmount=>routeAmount.protocol===Protocol.V3);const v2RouteAmounts=_.filter(routeAmounts,routeAmount=>routeAmount.protocol===Protocol.V2);const mixedRouteAmounts=_.filter(routeAmounts,routeAmount=>routeAmount.protocol===Protocol.MIXED);const v3Routes=_.map(v3RouteAmounts,routeAmount=>{const{route,amount,quote}=routeAmount;if(tradeType==TradeType$2.EXACT_INPUT){const amountCurrency=CurrencyAmount.fromFractionalAmount(tokenInCurrency,amount.numerator,amount.denominator);const quoteCurrency=CurrencyAmount.fromFractionalAmount(tokenOutCurrency,quote.numerator,quote.denominator);const routeRaw=new Route$1(route.pools,amountCurrency.currency,quoteCurrency.currency);return{routev3:routeRaw,inputAmount:amountCurrency,outputAmount:quoteCurrency}}else{const quoteCurrency=CurrencyAmount.fromFractionalAmount(tokenInCurrency,quote.numerator,quote.denominator);const amountCurrency=CurrencyAmount.fromFractionalAmount(tokenOutCurrency,amount.numerator,amount.denominator);const routeCurrency=new Route$1(route.pools,quoteCurrency.currency,amountCurrency.currency);return{routev3:routeCurrency,inputAmount:quoteCurrency,outputAmount:amountCurrency}}});const v2Routes=_.map(v2RouteAmounts,routeAmount=>{const{route,amount,quote}=routeAmount;if(tradeType==TradeType$2.EXACT_INPUT){const amountCurrency=CurrencyAmount.fromFractionalAmount(tokenInCurrency,amount.numerator,amount.denominator);const quoteCurrency=CurrencyAmount.fromFractionalAmount(tokenOutCurrency,quote.numerator,quote.denominator);const routeV2SDK=new Route(route.pairs,amountCurrency.currency,quoteCurrency.currency);return{routev2:routeV2SDK,inputAmount:amountCurrency,outputAmount:quoteCurrency}}else{const quoteCurrency=CurrencyAmount.fromFractionalAmount(tokenInCurrency,quote.numerator,quote.denominator);const amountCurrency=CurrencyAmount.fromFractionalAmount(tokenOutCurrency,amount.numerator,amount.denominator);const routeV2SDK=new Route(route.pairs,quoteCurrency.currency,amountCurrency.currency);return{routev2:routeV2SDK,inputAmount:quoteCurrency,outputAmount:amountCurrency}}});const mixedRoutes=_.map(mixedRouteAmounts,routeAmount=>{const{route,amount,quote}=routeAmount;if(tradeType!=TradeType$2.EXACT_INPUT){throw new Error("Mixed routes are only supported for exact input trades")}const amountCurrency=CurrencyAmount.fromFractionalAmount(tokenInCurrency,amount.numerator,amount.denominator);const quoteCurrency=CurrencyAmount.fromFractionalAmount(tokenOutCurrency,quote.numerator,quote.denominator);const routeRaw=new MixedRouteSDK(route.pools,amountCurrency.currency,quoteCurrency.currency);return{mixedRoute:routeRaw,inputAmount:amountCurrency,outputAmount:quoteCurrency}});const trade=new Trade({v2Routes:v2Routes,v3Routes:v3Routes,mixedRoutes:mixedRoutes,tradeType:tradeType});return trade}function buildSwapMethodParameters(trade,swapConfig,chainId){if(swapConfig.type==SwapType.UNIVERSAL_ROUTER){return{...SwapRouter.swapERC20CallParameters(trade,swapConfig),to:UNIVERSAL_ROUTER_ADDRESS(chainId)}}else if(swapConfig.type==SwapType.SWAP_ROUTER_02){const{recipient,slippageTolerance,deadline,inputTokenPermit}=swapConfig;return{...SwapRouter$1.swapCallParameters(trade,{recipient:recipient,slippageTolerance:slippageTolerance,deadlineOrPreviousBlockhash:deadline,inputTokenPermit:inputTokenPermit}),to:SWAP_ROUTER_02_ADDRESSES(chainId)}}throw new Error(`Unsupported swap type ${swapConfig}`)}async function getV2NativePool(token,poolProvider,providerConfig){const chainId=token.chainId;const weth=WRAPPED_NATIVE_CURRENCY[chainId];const poolAccessor=await poolProvider.getPools([[weth,token]],providerConfig);const pool=poolAccessor.getPool(weth,token);if(!pool||pool.reserve0.equalTo(0)||pool.reserve1.equalTo(0)){log.error({weth:weth,token:token,reserve0:pool===null||pool===void 0?void 0:pool.reserve0.toExact(),reserve1:pool===null||pool===void 0?void 0:pool.reserve1.toExact()},`Could not find a valid WETH V2 pool with ${token.symbol} for computing gas costs.`);return null}return pool}async function getHighestLiquidityV3NativePool(token,poolProvider,providerConfig){const nativeCurrency=WRAPPED_NATIVE_CURRENCY[token.chainId];const nativePools=_([FeeAmount.HIGH,FeeAmount.MEDIUM,FeeAmount.LOW,FeeAmount.LOWEST]).map(feeAmount=>{return[nativeCurrency,token,feeAmount]}).value();const poolAccessor=await poolProvider.getPools(nativePools,providerConfig);const pools=_([FeeAmount.HIGH,FeeAmount.MEDIUM,FeeAmount.LOW,FeeAmount.LOWEST]).map(feeAmount=>{return poolAccessor.getPool(nativeCurrency,token,feeAmount)}).compact().value();if(pools.length==0){log.error({pools:pools},`Could not find a ${nativeCurrency.symbol} pool with ${token.symbol} for computing gas costs.`);return null}const maxPool=pools.reduce((prev,current)=>{return JSBI.greaterThan(prev.liquidity,current.liquidity)?prev:current});return maxPool}async function getHighestLiquidityV3USDPool(chainId,poolProvider,providerConfig){const usdTokens=usdGasTokensByChain[chainId];const wrappedCurrency=WRAPPED_NATIVE_CURRENCY[chainId];if(!usdTokens){throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`)}const usdPools=_([FeeAmount.HIGH,FeeAmount.MEDIUM,FeeAmount.LOW,FeeAmount.LOWEST]).flatMap(feeAmount=>{return _.map(usdTokens,usdToken=>[wrappedCurrency,usdToken,feeAmount])}).value();const poolAccessor=await poolProvider.getPools(usdPools,providerConfig);const pools=_([FeeAmount.HIGH,FeeAmount.MEDIUM,FeeAmount.LOW,FeeAmount.LOWEST]).flatMap(feeAmount=>{const pools=[];for(const usdToken of usdTokens){const pool=poolAccessor.getPool(wrappedCurrency,usdToken,feeAmount);if(pool){pools.push(pool)}}return pools}).compact().value();if(pools.length==0){const message=`Could not find a USD/${wrappedCurrency.symbol} pool for computing gas costs.`;log.error({pools:pools},message);throw new Error(message)}const maxPool=pools.reduce((prev,current)=>{return JSBI.greaterThan(prev.liquidity,current.liquidity)?prev:current});return maxPool}function getArbitrumBytes(data){if(data=="")return BigNumber$1.from(0);const compressed=brotli.compress(Buffer.from(data.replace("0x",""),"hex"),{mode:0,quality:1,lgwin:22});return BigNumber$1.from(compressed.length).mul(120).div(100)}function calculateArbitrumToL1FeeFromCalldata(calldata,gasData,chainId){const{perL2TxFee,perL1CalldataFee,perArbGasTotal}=gasData;const l1GasUsed=getL2ToL1GasUsed(calldata,chainId);const l1Fee=l1GasUsed.mul(perL1CalldataFee).add(perL2TxFee);const gasUsedL1OnL2=l1Fee.div(perArbGasTotal);return[l1GasUsed,l1Fee,gasUsedL1OnL2]}async function calculateOptimismToL1FeeFromCalldata(calldata,chainId,provider){const tx={data:calldata,chainId:chainId,type:2};const[l1GasUsed,l1GasCost]=await Promise.all([estimateL1Gas(provider,tx),estimateL1GasCost(provider,tx)]);return[l1GasUsed,l1GasCost]}function getL2ToL1GasUsed(data,chainId){switch(chainId){case ChainId$1.ARBITRUM_ONE:case ChainId$1.ARBITRUM_GOERLI:{const l1ByteUsed=getArbitrumBytes(data);return l1ByteUsed.mul(16)}default:return BigNumber$1.from(0)}}const calculateL1GasFeesHelper=async(route,chainId,usdPool,quoteToken,nativePool,provider,l2GasData)=>{const swapOptions={type:SwapType.UNIVERSAL_ROUTER,recipient:"0x0000000000000000000000000000000000000001",deadlineOrPreviousBlockhash:100,slippageTolerance:new Percent$1(5,1e4)};let mainnetGasUsed=BigNumber$1.from(0);let mainnetFeeInWei=BigNumber$1.from(0);let gasUsedL1OnL2=BigNumber$1.from(0);if(opStackChains.includes(chainId)){[mainnetGasUsed,mainnetFeeInWei]=await calculateOptimismToL1SecurityFee(route,swapOptions,chainId,provider)}else if(chainId==ChainId$1.ARBITRUM_ONE||chainId==ChainId$1.ARBITRUM_GOERLI){[mainnetGasUsed,mainnetFeeInWei,gasUsedL1OnL2]=calculateArbitrumToL1SecurityFee(route,swapOptions,l2GasData,chainId)}const nativeCurrency=WRAPPED_NATIVE_CURRENCY[chainId];const costNativeCurrency=CurrencyAmount.fromRawAmount(nativeCurrency,mainnetFeeInWei.toString());const gasCostL1USD=getQuoteThroughNativePool(chainId,costNativeCurrency,usdPool);let gasCostL1QuoteToken=costNativeCurrency;if(!quoteToken.equals(nativeCurrency)){if(!nativePool){log.info("Could not find a pool to convert the cost into the quote token");gasCostL1QuoteToken=CurrencyAmount.fromRawAmount(quoteToken,0)}else{const nativeTokenPrice=nativePool.token0.address==nativeCurrency.address?nativePool.token0Price:nativePool.token1Price;gasCostL1QuoteToken=nativeTokenPrice.quote(costNativeCurrency)}}return{gasUsedL1:mainnetGasUsed,gasUsedL1OnL2:gasUsedL1OnL2,gasCostL1USD:gasCostL1USD,gasCostL1QuoteToken:gasCostL1QuoteToken};async function calculateOptimismToL1SecurityFee(routes,swapConfig,chainId,provider){const route=routes[0];const amountToken=route.tradeType==TradeType$2.EXACT_INPUT?route.amount.currency:route.quote.currency;const outputToken=route.tradeType==TradeType$2.EXACT_INPUT?route.quote.currency:route.amount.currency;const trade=buildTrade(amountToken,outputToken,route.tradeType,routes);const data=buildSwapMethodParameters(trade,swapConfig,ChainId$1.OPTIMISM).calldata;const[l1GasUsed,l1GasCost]=await calculateOptimismToL1FeeFromCalldata(data,chainId,provider);return[l1GasUsed,l1GasCost]}function calculateArbitrumToL1SecurityFee(routes,swapConfig,gasData,chainId){const route=routes[0];const amountToken=route.tradeType==TradeType$2.EXACT_INPUT?route.amount.currency:route.quote.currency;const outputToken=route.tradeType==TradeType$2.EXACT_INPUT?route.quote.currency:route.amount.currency;const trade=buildTrade(amountToken,outputToken,route.tradeType,routes);const data=buildSwapMethodParameters(trade,swapConfig,ChainId$1.ARBITRUM_ONE).calldata;return calculateArbitrumToL1FeeFromCalldata(data,gasData,chainId)}};const UNSUPPORTED_TOKENS={name:"Unsupported Token List",timestamp:"2021-01-05T20:47:02.923Z",version:{major:1,minor:0,patch:0},tags:{},logoURI:"ipfs://QmNa8mQkrNKp1WEEeGjFezDmDeodkWRevGFN8JCV7b4Xir",keywords:["uniswap","unsupported","broken"],tokens:[{name:"USD Token",address:"0xd233d1f6fd11640081abb8db125f722b5dc729dc",symbol:"USD",decimals:9,chainId:1,logoURI:""},{name:"UNI HODL",address:"0x4bf5dc91E2555449293D7824028Eb8Fe5879B689",symbol:"UniH",decimals:18,chainId:1,logoURI:""},{name:"Gold Tether",address:"0x4922a015c4407F87432B179bb209e125432E4a2A",symbol:"XAUt",decimals:6,chainId:1,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png"},{name:"Grump Cat",address:"0x93B2FfF814FCaEFFB01406e80B4Ecd89Ca6A021b",symbol:"GRUMPY",decimals:9,chainId:1,logoURI:"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png"},{name:"apeUSD-UMA Synthetic USD (Dec 2021)",address:"0xfA5e27893aee4805283D86e4283Da64F8c72dd56",symbol:"apeUSD-UMA-DEC21",decimals:18,chainId:1,logoURI:""},{chainId:1,address:"0xc6b11850241c5127eab73af4b6c68bc267cbbff4",name:"oWETHp Put 360 DEC2520",symbol:"oWETH-360P-12/25/20",decimals:7},{chainId:1,name:"oYFIp Put 25000 OCT0220",address:"0x452b421be5b30f0c6ad8c3f03c06bdaab4f5c56c",symbol:"oYFI-25000P-10/02/20",decimals:7},{chainId:1,name:"oWETHp Put 360 OCT3020",address:"0x0578779e746d7186253a36cf651ea786acfcf087",symbol:"oWETH-360P-10/30/20",decimals:7},{chainId:1,name:"ETHc Call 500 OCT3020",address:"0xf9aba2e43fb19184408ea3b572a0fd672946f87b",symbol:"oETH-500C-10/30/20",decimals:6},{chainId:1,name:"oBALp Put 22 OCT0220",address:"0xdb0991dfc7e828b5a2837dc82d68e16490562c8d",symbol:"oBAL-22P-10/02/20",decimals:7},{chainId:1,name:"oCOMPp Put 150 SEP2520",address:"0xe951ebe6b4420ab3f4844cf36dedd263d095b416",symbol:"oCOMP-150P-09/25/20",decimals:7},{chainId:1,name:"oCRVp Put 3 SEP252020",address:"0x9215bd49b59748419eac6bad9dbe247df06ebdb9",symbol:"oCRV-3P-09/25/20",decimals:7},{chainId:1,name:"oETHp Put 180 SEP2520",address:"0xE3A2c34Fa2F59ffa95C4ACd1E5663633d45Bc3AD",symbol:"oETH-180P-09/25/20",decimals:7},{chainId:1,name:"oETHc Call 400 SEP2520",address:"0x05977EBC26825C0CD6097E0Ad7204721516711Eb",symbol:"oETH-400C-09/25/20",decimals:7},{chainId:1,name:"oWETHp Put 380 SEP1820",address:"0x31f88266301b08631f9f0e33fd5c43c2a5d1e5b2",symbol:"oWETH-380P-09/18/20",decimals:7},{chainId:1,name:"oYFIp Put 8500 SEP1820",address:"0xd1cec2f67fdc4c60e0963515dfc3343f31e32e47",symbol:"oYFI-8500P-09/18/20",decimals:7},{chainId:1,name:"oWETHp Put 370 SEP1120",address:"0x15844029b2c2bf24506e9937739a9a912f1e4354",symbol:"oWETH-370P-09/11/20",decimals:7},{chainId:1,name:"oWETHp Put 400 SEP0420",address:"0x5562c33c383f6386be4f6dcdbd35a3a99bbcfde6",symbol:"oWETH-400P-09/04/20",decimals:7},{chainId:1,name:"oETHp Put 200 AUG2820",address:"0x3CBFC1397deF0602c2d211c70A1c0c38CEDB5448",symbol:"oWETH-400P-09/04/20",decimals:7},{chainId:1,name:"Opyn cDai Insurance",symbol:"ocDai",address:"0x98cc3bd6af1880fcfda17ac477b2f612980e5e33",decimals:8},{chainId:1,name:"Opyn cUSDC Insurance",symbol:"ocUSDC",address:"0x8ED9f862363fFdFD3a07546e618214b6D59F03d4",decimals:8},{chainId:1,address:"0x176C674Ee533C6139B0dc8b458D72A93dCB3e705",symbol:"iAAVE",name:"Synth Inverse Aave",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iAAVE.svg",tags:["inverse","synth"]},{chainId:1,address:"0x8A8079c7149B8A1611e5C5d978DCA3bE16545F83",symbol:"iADA",name:"Synth Inverse Cardano",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iADA.svg",tags:["inverse","synth"]},{chainId:1,address:"0xAFD870F32CE54EfdBF677466B612bf8ad164454B",symbol:"iBNB",name:"Synth Inverse Binance Coin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBNB.svg",tags:["inverse","synth"]},{chainId:1,address:"0xD6014EA05BDe904448B743833dDF07c3C7837481",symbol:"iBTC",name:"Synth Inverse Bitcoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBTC.svg",tags:["inverse","synth"]},{chainId:1,address:"0x336213e1DDFC69f4701Fc3F86F4ef4A160c1159d",symbol:"iCEX",name:"Synth Inverse Centralised Exchange Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCEX.svg",tags:["index","inverse","synth"]},{chainId:1,address:"0x6345728B1ccE16E6f8C509950b5c84FFF88530d9",symbol:"iCOMP",name:"Synth Inverse Compound",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCOMP.svg",tags:["inverse","synth"]},{chainId:1,address:"0xCB98f42221b2C251A4E74A1609722eE09f0cc08E",symbol:"iDASH",name:"Synth Inverse Dash",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDASH.svg",tags:["inverse","synth"]},{chainId:1,address:"0x14d10003807AC60d07BB0ba82cAeaC8d2087c157",symbol:"iDEFI",name:"Synth Inverse DeFi Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDEFI.svg",tags:["index","inverse","synth"]},{chainId:1,address:"0x46a97629C9C1F58De6EC18C7F536e7E6d6A6ecDe",symbol:"iDOT",name:"Synth Inverse Polkadot",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDOT.svg",tags:["inverse","synth"]},{chainId:1,address:"0xF4EebDD0704021eF2a6Bbe993fdf93030Cd784b4",symbol:"iEOS",name:"Synth Inverse EOS",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iEOS.svg",tags:["inverse","synth"]},{chainId:1,address:"0xd50c1746D835d2770dDA3703B69187bFfeB14126",symbol:"iETC",name:"Synth Inverse Ethereum Classic",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETC.svg",tags:["inverse","synth"]},{chainId:1,address:"0xA9859874e1743A32409f75bB11549892138BBA1E",symbol:"iETH",name:"Synth Inverse Ether",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETH.svg",tags:["inverse","synth"]},{chainId:1,address:"0x2d7aC061fc3db53c39fe1607fB8cec1B2C162B01",symbol:"iLINK",name:"Synth Inverse Chainlink",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLINK.svg",tags:["inverse","synth"]},{chainId:1,address:"0x79da1431150C9b82D2E5dfc1C68B33216846851e",symbol:"iLTC",name:"Synth Inverse Litecoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLTC.svg",tags:["inverse","synth"]},{chainId:1,address:"0xA5a5DF41883Cdc00c4cCC6E8097130535399d9a3",symbol:"iOIL",name:"Synth Inverse Perpetual Oil Futures",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iOIL.svg",tags:["inverse","synth"]},{chainId:1,address:"0x0fEd38108bdb8e62ef7b5680E8E0726E2F29e0De",symbol:"iREN",name:"Synth Inverse Ren",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iREN.svg",tags:["inverse","synth"]},{chainId:1,address:"0xC5807183a9661A533CB08CbC297594a0B864dc12",symbol:"iTRX",name:"Synth Inverse TRON",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iTRX.svg",tags:["inverse","synth"]},{chainId:1,address:"0x36A00FF9072570eF4B9292117850B8FE08d96cce",symbol:"iUNI",name:"Synth Inverse Uniswap",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iUNI.svg",tags:["inverse","synth"]},{chainId:1,address:"0x4AdF728E2Df4945082cDD6053869f51278fae196",symbol:"iXMR",name:"Synth Inverse Monero",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXMR.svg",tags:["inverse","synth"]},{chainId:1,address:"0x27269b3e45A4D3E79A3D6BFeE0C8fB13d0D711A6",symbol:"iXRP",name:"Synth Inverse Ripple",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXRP.svg",tags:["inverse","synth"]},{chainId:1,address:"0x8deef89058090ac5655A99EEB451a4f9183D1678",symbol:"iXTZ",name:"Synth Inverse Tezos",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXTZ.svg",tags:["inverse","synth"]},{chainId:1,address:"0x592244301CeA952d6daB2fdC1fE6bd9E53917306",symbol:"iYFI",name:"Synth Inverse yearn.finance",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iYFI.svg",tags:["inverse","synth"]},{chainId:1,address:"0xcD39b5434a0A92cf47D1F567a7dF84bE356814F0",symbol:"s1INCH",name:"Synth 1inch",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/s1INCH.svg",tags:["synth"]},{chainId:1,address:"0x7537AAe01f3B218DAE75e10d952473823F961B87",symbol:"sAAPL",name:"Synth Apple",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAPL.svg",tags:["synth"]},{chainId:1,address:"0xd2dF355C19471c8bd7D8A3aa27Ff4e26A21b4076",symbol:"sAAVE",name:"Synth Aave",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAVE.svg",tags:["synth"]},{chainId:1,address:"0xe36E2D3c7c34281FA3bC737950a68571736880A1",symbol:"sADA",name:"Synth Cardano",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sADA.svg",tags:["synth"]},{chainId:1,address:"0x9CF7E61853ea30A41b02169391b393B901eac457",symbol:"sAMZN",name:"Synth Amazon",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAMZN.svg",tags:["synth"]},{chainId:1,address:"0xF48e200EAF9906362BB1442fca31e0835773b8B4",symbol:"sAUD",name:"Synth Australian Dollars",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAUD.svg",tags:["synth"]},{chainId:1,address:"0x617aeCB6137B5108D1E7D4918e3725C8cEbdB848",symbol:"sBNB",name:"Synth Binance Coin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBNB.svg",tags:["synth"]},{chainId:1,address:"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",symbol:"sBTC",name:"Synth Bitcoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBTC.svg",tags:["synth"]},{chainId:1,address:"0xeABACD844A196D7Faf3CE596edeBF9900341B420",symbol:"sCEX",name:"Synth Centralised Exchange Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCEX.svg",tags:["index","synth"]},{chainId:1,address:"0x0F83287FF768D1c1e17a42F44d644D7F22e8ee1d",symbol:"sCHF",name:"Synth Swiss Franc",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCHF.svg",tags:["synth"]},{chainId:1,address:"0x9EeF4CA7aB9fa8bc0650127341C2d3F707a40f8A",symbol:"sCOIN",name:"Synth Coinbase",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOIN.svg",tags:["synth"]},{chainId:1,address:"0xEb029507d3e043DD6C87F2917C4E82B902c35618",symbol:"sCOMP",name:"Synth Compound",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOMP.svg",tags:["synth"]},{chainId:1,address:"0xD38aEb759891882e78E957c80656572503D8c1B1",symbol:"sCRV",name:"Synth Curve DAO Token",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCRV.svg",tags:["synth"]},{chainId:1,address:"0xfE33ae95A9f0DA8A845aF33516EDc240DCD711d6",symbol:"sDASH",name:"Synth Dash",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDASH.svg",tags:["synth"]},{chainId:1,address:"0xe1aFe1Fd76Fd88f78cBf599ea1846231B8bA3B6B",symbol:"sDEFI",name:"Synth DeFi Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDEFI.svg",tags:["index","synth"]},{chainId:1,address:"0x1715AC0743102BF5Cd58EfBB6Cf2dC2685d967b6",symbol:"sDOT",name:"Synth Polkadot",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDOT.svg",tags:["synth"]},{chainId:1,address:"0x88C8Cf3A212c0369698D13FE98Fcb76620389841",symbol:"sEOS",name:"Synth EOS",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEOS.svg",tags:["synth"]},{chainId:1,address:"0x22602469d704BfFb0936c7A7cfcD18f7aA269375",symbol:"sETC",name:"Synth Ethereum Classic",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETC.svg",tags:["synth"]},{chainId:1,address:"0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb",symbol:"sETH",name:"Synth Ether",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETH.svg",tags:["synth"]},{chainId:1,address:"0xD71eCFF9342A5Ced620049e616c5035F1dB98620",symbol:"sEUR",name:"Synth Euros",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEUR.svg",tags:["synth"]},{chainId:1,address:"0xf50B5e535F62a56A9BD2d8e2434204E726c027Fa",symbol:"sFB",name:"Synth Facebook",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFB.svg",tags:["synth"]},{chainId:1,address:"0x23348160D7f5aca21195dF2b70f28Fce2B0be9fC",symbol:"sFTSE",name:"Synth FTSE 100 Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFTSE.svg",tags:["synth"]},{chainId:1,address:"0x97fe22E7341a0Cd8Db6F6C021A24Dc8f4DAD855F",symbol:"sGBP",name:"Synth Pound Sterling",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGBP.svg",tags:["synth"]},{chainId:1,address:"0xC63B8ECCE56aB9C46184eC6aB85e4771fEa4c8AD",symbol:"sGOOG",name:"Synth Alphabet",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGOOG.svg",tags:["synth"]},{chainId:1,address:"0xF6b1C627e95BFc3c1b4c9B825a032Ff0fBf3e07d",symbol:"sJPY",name:"Synth Japanese Yen",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sJPY.svg",tags:["synth"]},{chainId:1,address:"0x269895a3dF4D73b077Fc823dD6dA1B95f72Aaf9B",symbol:"sKRW",name:"Synth South Korean Won",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sKRW.svg",tags:["synth"]},{chainId:1,address:"0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6",symbol:"sLINK",name:"Synth Chainlink",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLINK.svg",tags:["synth"]},{chainId:1,address:"0xC14103C2141E842e228FBaC594579e798616ce7A",symbol:"sLTC",name:"Synth Litecoin",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLTC.svg",tags:["synth"]},{chainId:1,address:"0x745a824D6aBBD236AA794b5530062778A6Ad7523",symbol:"sMSFT",name:"Synth Microsoft",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sMSFT.svg",tags:["synth"]},{chainId:1,address:"0x5A7E3c07604EB515C16b36cd51906a65f021F609",symbol:"sNFLX",name:"Synth Netflix",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNFLX.svg",tags:["synth"]},{chainId:1,address:"0x757de3ac6B830a931eF178C6634c5C551773155c",symbol:"sNIKKEI",name:"Synth Nikkei 225 Index",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNIKKEI.svg",tags:["synth"]},{chainId:1,address:"0x6d16cF3EC5F763d4d99cB0B0b110eefD93B11B56",symbol:"sOIL",name:"Synth Perpetual Oil Futures",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sOIL.svg",tags:["synth"]},{chainId:1,address:"0xD31533E8d0f3DF62060e94B3F1318137bB6E3525",symbol:"sREN",name:"Synth Ren",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sREN.svg",tags:["synth"]},{chainId:1,address:"0x0352557B007A4Aae1511C114409b932F06F9E2f4",symbol:"sRUNE",name:"Synth THORChain",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sRUNE.svg",tags:["synth"]},{chainId:1,address:"0xf2E08356588EC5cd9E437552Da87C0076b4970B0",symbol:"sTRX",name:"Synth TRON",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTRX.svg",tags:["synth"]},{chainId:1,address:"0x918dA91Ccbc32B7a6A0cc4eCd5987bbab6E31e6D",symbol:"sTSLA",name:"Synth Tesla",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTSLA.svg",tags:["synth"]},{chainId:1,address:"0x30635297E450b930f8693297eBa160D9e6c8eBcf",symbol:"sUNI",name:"Synth Uniswap",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sUNI.svg",tags:["synth"]},{chainId:1,address:"0x6A22e5e94388464181578Aa7A6B869e00fE27846",symbol:"sXAG",name:"Synth Silver Ounce",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAG.svg",tags:["synth"]},{chainId:1,address:"0x261EfCdD24CeA98652B9700800a13DfBca4103fF",symbol:"sXAU",name:"Synth Gold Ounce",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAU.svg",tags:["synth"]},{chainId:1,address:"0x5299d6F7472DCc137D7f3C4BcfBBB514BaBF341A",symbol:"sXMR",name:"Synth Monero",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXMR.svg",tags:["synth"]},{chainId:1,address:"0xa2B0fDe6D710e201d0d608e924A484d1A5fEd57c",symbol:"sXRP",name:"Synth Ripple",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXRP.svg",tags:["synth"]},{chainId:1,address:"0x2e59005c5c0f0a4D77CcA82653d48b46322EE5Cd",symbol:"sXTZ",name:"Synth Tezos",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXTZ.svg",tags:["synth"]},{chainId:1,address:"0x992058B7DB08F9734d84485bfbC243C4ee6954A7",symbol:"sYFI",name:"Synth yearn.finance",decimals:18,logoURI:"https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sYFI.svg",tags:["synth"]},{chainId:1,address:"0x81ab848898b5ffD3354dbbEfb333D5D183eEDcB5",name:"yUSD Synthetic Expiring 1 September 2020",symbol:"yUSDSEP20",decimals:18},{chainId:1,address:"0xB2FdD60AD80ca7bA89B9BAb3b5336c2601C020b4",name:"yUSD Synthetic Expiring 1 October 2020",symbol:"yUSDOCT20",decimals:18},{chainId:1,address:"0x208d174775dc39fe18b1b374972f77ddec6c0f73",name:"uUSDrBTC Synthetic Expiring 1 Oct 2020",symbol:"uUSDrBTC-OCT",decimals:18},{chainId:1,address:"0xf06ddacf71e2992e2122a1a0168c6967afdf63ce",name:"uUSDrBTC Synthetic Expiring 31 Dec 2020",symbol:"uUSDrBTC-DEC",decimals:18},{chainId:1,address:"0xd16c79c8a39d44b2f3eb45d2019cd6a42b03e2a9",name:"uUSDwETH Synthetic Expiring 31 Dec 2020",symbol:"uUSDwETH-DEC",decimals:18},{chainId:1,address:"0x3d995510f8d82c2ea341845932b5ddde0bead9a3",name:"uGAS-JAN21 Token Expiring 31 Jan 2021",symbol:"uGAS-JAN21",decimals:18},{chainId:1,address:"0x90f802c7e8fb5d40b0de583e34c065a3bd2020d8",name:"YD-ETH-MAR21 Token Expiring 31 Mar 2021",symbol:"YD-ETH-MAR21",decimals:18},{chainId:1,address:"0x002f0b1a71c5730cf2f4da1970a889207bdb6d0d",name:"YD-BTC-MAR21 Token Expiring 31 Mar 2021",symbol:"YD-BTC-MAR21",decimals:18},{chainId:1,address:"0x1062ad0e59fa67fa0b27369113098cc941dd0d5f",name:"UMA 35 Call Expirying 30 Apr 2021",symbol:"UMAc35-0421",decimals:18},{chainId:1,address:"0xf93340b1a3adf7eedcaec25fae8171d4b736e89f",name:"pxUSD Synthetic USD Expiring 1 April 2021",symbol:"pxUSD_MAR2021",decimals:18},{chainId:1,address:"0x84bd083b1c8bf929f39c98bc17cf518f40154f58",name:"Mario Cash Synthetic Token Expiring 15 January 2021",symbol:"Mario Cash-JAN-2021",decimals:18},{chainId:1,address:"0x81fab276aec924fbde190cf379783526d413cf70",name:"uGAS-FEB21 Token Expiring 28 Feb 2021",symbol:"uGAS-FEB21",decimals:18},{chainId:1,address:"0x4e110603e70b0b5f1c403ee543b37e1f1244cf28",name:"uGAS-MAR21 Token Expiring 31 Mar 2021",symbol:"uGAS-MAR21",decimals:18},{chainId:1,address:"0xcf55a7f92d5e0c6683debbc1fc20c0a6e056df13",name:"Zelda Elastic Cash",symbol:"Zelda Elastic Cash",decimals:18},{chainId:1,address:"0x654eebac62240e6c56bab5f6adf7cfa74a894510",name:"Zelda Spring Nuts Cash",symbol:"Zelda Spring Nuts Cash",decimals:18},{chainId:1,address:"0xa48920cc1ad85d8ea13af5d7be180c0338c306dd",name:"Zelda Summer Nuts Cash",symbol:"Zelda Summer Nuts Cash",decimals:18},{chainId:1,address:"0x249a198d59b57fda5dda90630febc86fd8c7594c",name:"Zelda Whirlwind Cash",symbol:"Zelda Whirlwind Cash",decimals:18},{chainId:1,address:"0x5ed1406873c9eb91f6f9a67ac4e152387c1132e7",name:"Zelda Reinforced Cash",symbol:"Zelda Reinforced Cash",decimals:18},{chainId:1,address:"0x8104c9f13118320eefe5fbea8a44d600b85981ef",name:"Mini Mario Summer Cash",symbol:"Mini Mario Summer Cash",decimals:18},{chainId:1,address:"0x69746c719e59674b147df25f50e7cfa0673cb625",name:"Mini Mario Spring Cash",symbol:"Mini Mario Spring Cash",decimals:18},{chainId:1,address:"0x6b1257641d18791141f025eab36fb567c4b564ff",name:"Bitcoin Dominance Token 31 March 2021",symbol:"BTCDOM-MAR2021",decimals:18},{chainId:1,address:"0x4e83b6287588a96321b2661c5e041845ff7814af",name:"Altcoin Dominance Token 31 March 2021",symbol:"ALTDOM-MAR2021",decimals:18},{chainId:1,address:"0x59fec83ec709c893aedd1a144cf1828eb04127cd",name:"pxGOLD Synthetic GOLD Expiring 31 May 2021",symbol:"pxGOLD_MAY2021",decimals:18},{chainId:1,address:"0x89337BFb7938804c3776C9FB921EccAf5ab76758",name:"Compound Annualized Rate Future Expiring 28 March 2021",symbol:"CAR-USDC-MAR21",decimals:18},{chainId:1,address:"0xec58d3aefc9aaa2e0036fa65f70d569f49d9d1ed",name:"uSTONKS Index Token April 2021",symbol:"uSTONKS_APR21",decimals:6},{chainId:1,address:"0xa6B9d7E3d76cF23549293Fb22c488E0Ea591A44e",name:"uGAS-JUN21 Token Expiring 30 Jun 2021",symbol:"uGAS-JUN21",decimals:18},{chainId:1,address:"0xe813b65da6c38a04591aed3f082d32db7d53c382",name:"Yield Dollar [WETH Dec 2021]",symbol:"YD-ETH-DEC21",decimals:18},{chainId:1,address:"0x4b606e9eb2228c70f44453afe5a73e1fea258ce1",name:"pxUSD Synthetic USD Expiring 31 Mar 2022",symbol:"pxUSD_MAR2022",decimals:18},{chainId:1,address:"0x5247c0db4044fb6f97f32c7e1b48758019a5a912",name:"pxGOLD Synthetic Gold Expiring 31 Mar 2022",symbol:"pxGOLD_MAR2022",decimals:18},{chainId:1,address:"0x56fb1acaff95c0b6ebcd17c8361a63d98b1a5a11",name:"uForex CNYUSD Synthetic Token April 2021",symbol:"uCNYUSD-APR",decimals:6},{chainId:1,address:"0xd49fa405dce086c65d66ca1ca41f8e98583812b4",name:"uForex EURUSD Synthetic Token April 2021",symbol:"uEURUSD-APR",decimals:6},{chainId:1,address:"0x29dddacba3b231ee8d673dd0f0fa759ea145561b",name:"DEFI_PULSE_TOTAL_TVL Synthetic Token Expiring 15 April 2021",symbol:"TVL_ALL_APRIL15",decimals:6},{chainId:1,address:"0xcbe430927370e95b4b10cfc702c6017ec7abefc3",name:"Yield Dollar [WETH Jun 2021]",symbol:"YD-ETH-JUN21",decimals:18},{chainId:1,address:"0x4b7fb448df91c8ed973494f8c8c4f12daf3a8521",name:"Yield Dollar [renBTC Jun 2021]",symbol:"YD-BTC-JUN21",decimals:8},{chainId:1,address:"0x3108c33b6fb38efedaefd8b5f7ca01d5f5c7372d",name:"Yield Dollar UMA 21",symbol:"yUMA21",decimals:18},{chainId:1,address:"0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7",name:"Mirrored Amazon",symbol:"MAMZN",decimals:18},{chainId:1,address:"0x31c63146a635EB7465e5853020b39713AC356991",name:"M US Oil",symbol:"MUSO",decimals:18},{chainId:1,address:"0x59A921Db27Dd6d4d974745B7FfC5c33932653442",name:"M Google",symbol:"MGOOGL",decimals:18},{chainId:1,address:"0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86",name:"Mirrored ProShares",symbol:"MVIXY",decimals:18},{chainId:1,address:"0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72",name:"Mirrored Alibaba",symbol:"MBABA",decimals:18},{chainId:1,address:"0x0e99cC0535BB6251F6679Fa6E65d6d3b430e840B",name:"Mirrored Facebook",symbol:"MFB",decimals:18},{chainId:1,address:"0x13B02c8dE71680e71F0820c996E4bE43c2F57d15",name:"Mirrored Invesco QQ",symbol:"MQQQ",decimals:18},{chainId:1,address:"0x41BbEDd7286dAab5910a1f15d12CBda839852BD7",name:"Mirrored Microsoft",symbol:"MMSFT",decimals:18},{chainId:1,address:"0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676",name:"Mirrored iShares Si",symbol:"MSLV",decimals:18},{chainId:1,address:"0x21cA39943E91d704678F5D00b6616650F066fD63",name:"Mirrored Tesla",symbol:"MTSLA",decimals:18},{chainId:1,address:"0xe82bbB62fA81d0701643d1675FB50ec52fD3Df92",name:"DYDX Token",symbol:"DYDX",decimals:18},{chainId:10,address:"0xE405de8F52ba7559f9df3C368500B6E6ae6Cee49",name:"sETH",symbol:"Synth Ether",decimals:18},{chainId:10,address:"0x298B9B95708152ff6968aafd889c6586e9169f1D",name:"sBTC",symbol:"Synth Bitcoin",decimals:18},{chainId:10,address:"0xc5Db22719A06418028A40A9B5E9A7c02959D0d08",name:"sLINK",symbol:"Synth Link",decimals:18},{chainId:1,address:"0x6B60eE11b73230045cF9095E6e43AE9Ea638e172",name:"Shatner",symbol:"SHAT",decimals:18},{chainId:1,address:"0x7277a44D1325D81Ac58893002a1B40a41bea43fe",name:"FAANG Index",symbol:"FAANG",decimals:18},{chainId:1,address:"0x76175599887730786bdA1545D0D7AcE8737fEBB1",name:"ENS DAO",symbol:"ENS",decimals:18}]};class V3Route extends Route$1{constructor(){super(...arguments);this.protocol=Protocol.V3}}class V2Route extends Route{constructor(){super(...arguments);this.protocol=Protocol.V2}}class MixedRoute extends MixedRouteSDK{constructor(){super(...arguments);this.protocol=Protocol.MIXED}}var SwapToRatioStatus;(function(SwapToRatioStatus){SwapToRatioStatus[SwapToRatioStatus["SUCCESS"]=1]="SUCCESS";SwapToRatioStatus[SwapToRatioStatus["NO_ROUTE_FOUND"]=2]="NO_ROUTE_FOUND";SwapToRatioStatus[SwapToRatioStatus["NO_SWAP_NEEDED"]=3]="NO_SWAP_NEEDED"})(SwapToRatioStatus||(SwapToRatioStatus={}));var SwapType;(function(SwapType){SwapType[SwapType["UNIVERSAL_ROUTER"]=0]="UNIVERSAL_ROUTER";SwapType[SwapType["SWAP_ROUTER_02"]=1]="SWAP_ROUTER_02"})(SwapType||(SwapType={}));const DEFAULT_ROUTING_CONFIG_BY_CHAIN=chainId=>{switch(chainId){case ChainId$1.OPTIMISM:case ChainId$1.OPTIMISM_GOERLI:case ChainId$1.OPTIMISM_SEPOLIA:case ChainId$1.BASE:case ChainId$1.BASE_GOERLI:case ChainId$1.BLAST:return{v2PoolSelection:{topN:3,topNDirectSwaps:1,topNTokenInOut:5,topNSecondHop:2,topNWithEachBaseToken:2,topNWithBaseToken:6},v3PoolSelection:{topN:2,topNDirectSwaps:2,topNTokenInOut:2,topNSecondHop:1,topNWithEachBaseToken:3,topNWithBaseToken:3},maxSwapsPerPath:3,minSplits:1,maxSplits:7,distributionPercent:10,forceCrossProtocol:false};case ChainId$1.ARBITRUM_ONE:case ChainId$1.ARBITRUM_GOERLI:case ChainId$1.ARBITRUM_SEPOLIA:case ChainId$1.CELO:case ChainId$1.CELO_ALFAJORES:return{v2PoolSelection:{topN:3,topNDirectSwaps:1,topNTokenInOut:5,topNSecondHop:2,topNWithEachBaseToken:2,topNWithBaseToken:6},v3PoolSelection:{topN:2,topNDirectSwaps:2,topNTokenInOut:2,topNSecondHop:1,topNWithEachBaseToken:3,topNWithBaseToken:2},maxSwapsPerPath:2,minSplits:1,maxSplits:7,distributionPercent:25,forceCrossProtocol:false};default:return{v2PoolSelection:{topN:3,topNDirectSwaps:1,topNTokenInOut:5,topNSecondHop:2,tokensToAvoidOnSecondHops:new LowerCaseStringArray("0xd46ba6d942050d489dbd938a2c909a5d5039a161"),topNWithEachBaseToken:2,topNWithBaseToken:6},v3PoolSelection:{topN:2,topNDirectSwaps:2,topNTokenInOut:3,topNSecondHop:1,topNWithEachBaseToken:3,topNWithBaseToken:5},maxSwapsPerPath:3,minSplits:1,maxSplits:7,distributionPercent:5,forceCrossProtocol:false}}};const ETH_GAS_STATION_API_URL="https://ethgasstation.info/api/ethgasAPI.json";const usdGasTokensByChain={[ChainId$1.MAINNET]:[DAI_MAINNET,USDC_MAINNET,USDT_MAINNET],[ChainId$1.ARBITRUM_ONE]:[DAI_ARBITRUM,USDC_ARBITRUM,USDC_NATIVE_ARBITRUM,USDT_ARBITRUM],[ChainId$1.OPTIMISM]:[DAI_OPTIMISM,USDC_OPTIMISM,USDC_NATIVE_OPTIMISM,USDT_OPTIMISM],[ChainId$1.OPTIMISM_GOERLI]:[DAI_OPTIMISM_GOERLI,USDC_OPTIMISM_GOERLI,USDT_OPTIMISM_GOERLI],[ChainId$1.OPTIMISM_SEPOLIA]:[DAI_OPTIMISM_SEPOLIA,USDC_OPTIMISM_SEPOLIA,USDT_OPTIMISM_SEPOLIA],[ChainId$1.ARBITRUM_GOERLI]:[USDC_ARBITRUM_GOERLI],[ChainId$1.ARBITRUM_SEPOLIA]:[USDC_ARBITRUM_SEPOLIA],[ChainId$1.GOERLI]:[DAI_GOERLI,USDC_GOERLI,USDT_GOERLI,WBTC_GOERLI],[ChainId$1.SEPOLIA]:[USDC_SEPOLIA,DAI_SEPOLIA],[ChainId$1.POLYGON]:[USDC_POLYGON,USDC_NATIVE_POLYGON],[ChainId$1.POLYGON_MUMBAI]:[DAI_POLYGON_MUMBAI],[ChainId$1.CELO]:[CUSD_CELO,USDC_CELO,USDC_NATIVE_CELO,USDC_WORMHOLE_CELO],[ChainId$1.CELO_ALFAJORES]:[CUSD_CELO_ALFAJORES],[ChainId$1.GNOSIS]:[USDC_ETHEREUM_GNOSIS],[ChainId$1.MOONBEAM]:[USDC_MOONBEAM],[ChainId$1.BNB]:[USDT_BNB,USDC_BNB,DAI_BNB],[ChainId$1.AVALANCHE]:[DAI_AVAX,USDC_AVAX,USDC_NATIVE_AVAX,USDC_BRIDGED_AVAX],[ChainId$1.BASE]:[USDC_BASE,USDC_NATIVE_BASE],[ChainId$1.BLAST]:[USDB_BLAST]};class IV2GasModelFactory{}class IOnChainGasModelFactory{}const getQuoteThroughNativePool=(chainId,nativeTokenAmount,nativeTokenPool)=>{const nativeCurrency=WRAPPED_NATIVE_CURRENCY[chainId];const isToken0=nativeTokenPool.token0.equals(nativeCurrency);const nativeTokenPrice=isToken0?nativeTokenPool.token0Price:nativeTokenPool.token1Price;return nativeTokenPrice.quote(nativeTokenAmount)};const COST_PER_UNINIT_TICK=BigNumber$1.from(0);const BASE_SWAP_COST$1=id=>{switch(id){case ChainId$1.MAINNET:case ChainId$1.GOERLI:case ChainId$1.SEPOLIA:case ChainId$1.OPTIMISM:case ChainId$1.OPTIMISM_GOERLI:case ChainId$1.OPTIMISM_SEPOLIA:case ChainId$1.BNB:case ChainId$1.AVALANCHE:case ChainId$1.BASE:case ChainId$1.BASE_GOERLI:case ChainId$1.ZORA:case ChainId$1.ZORA_SEPOLIA:case ChainId$1.ROOTSTOCK:case ChainId$1.BLAST:return BigNumber$1.from(2e3);case ChainId$1.ARBITRUM_ONE:case ChainId$1.ARBITRUM_GOERLI:case ChainId$1.ARBITRUM_SEPOLIA:return BigNumber$1.from(5e3);case ChainId$1.POLYGON:case ChainId$1.POLYGON_MUMBAI:return BigNumber$1.from(2e3);case ChainId$1.CELO:case ChainId$1.CELO_ALFAJORES:return BigNumber$1.from(2e3);case ChainId$1.GNOSIS:return BigNumber$1.from(2e3);case ChainId$1.MOONBEAM:return BigNumber$1.from(2e3)}};const COST_PER_INIT_TICK=id=>{switch(id){case ChainId$1.MAINNET:case ChainId$1.GOERLI:case ChainId$1.SEPOLIA:case ChainId$1.BNB:case ChainId$1.AVALANCHE:return BigNumber$1.from(31e3);case ChainId$1.OPTIMISM:case ChainId$1.OPTIMISM_GOERLI:case ChainId$1.OPTIMISM_SEPOLIA:case ChainId$1.BASE:case ChainId$1.BASE_GOERLI:case ChainId$1.ZORA:case ChainId$1.ZORA_SEPOLIA:case ChainId$1.ROOTSTOCK:case ChainId$1.BLAST:return BigNumber$1.from(31e3);case ChainId$1.ARBITRUM_ONE:case ChainId$1.ARBITRUM_GOERLI:case ChainId$1.ARBITRUM_SEPOLIA:return BigNumber$1.from(31e3);case ChainId$1.POLYGON:case ChainId$1.POLYGON_MUMBAI:return BigNumber$1.from(31e3);case ChainId$1.CELO:case ChainId$1.CELO_ALFAJORES:return BigNumber$1.from(31e3);case ChainId$1.GNOSIS:return BigNumber$1.from(31e3);case ChainId$1.MOONBEAM:return BigNumber$1.from(31e3)}};const COST_PER_HOP=id=>{switch(id){case ChainId$1.MAINNET:case ChainId$1.GOERLI:case ChainId$1.SEPOLIA:case ChainId$1.BNB:case ChainId$1.OPTIMISM:case ChainId$1.OPTIMISM_GOERLI:case ChainId$1.OPTIMISM_SEPOLIA:case ChainId$1.AVALANCHE:case ChainId$1.BASE:case ChainId$1.BASE_GOERLI:case ChainId$1.ZORA:case ChainId$1.ZORA_SEPOLIA:case ChainId$1.ROOTSTOCK:case ChainId$1.BLAST:return BigNumber$1.from(8e4);case ChainId$1.ARBITRUM_ONE:case ChainId$1.ARBITRUM_GOERLI:case ChainId$1.ARBITRUM_SEPOLIA:return BigNumber$1.from(8e4);case ChainId$1.POLYGON:case ChainId$1.POLYGON_MUMBAI:return BigNumber$1.from(8e4);case ChainId$1.CELO:case ChainId$1.CELO_ALFAJORES:return BigNumber$1.from(8e4);case ChainId$1.GNOSIS:return BigNumber$1.from(8e4);case ChainId$1.MOONBEAM:return BigNumber$1.from(8e4)}};const SINGLE_HOP_OVERHEAD=_id=>{return BigNumber$1.from(15e3)};const TOKEN_OVERHEAD=(id,route)=>{const tokens=route.tokenPath;let overhead=BigNumber$1.from(0);if(id==ChainId$1.MAINNET){if(tokens.some(t=>t.equals(AAVE_MAINNET))){overhead=overhead.add(15e4)}if(tokens.some(t=>t.equals(LIDO_MAINNET))){overhead=overhead.add(15e4)}}return overhead};const NATIVE_WRAP_OVERHEAD=id=>{switch(id){default:return BigNumber$1.from(27938)}};const NATIVE_UNWRAP_OVERHEAD=id=>{switch(id){default:return BigNumber$1.from(36e3)}};const NATIVE_OVERHEAD=(chainId,amount,quote)=>{if(amount.isNative){return NATIVE_WRAP_OVERHEAD(chainId)}if(quote.isNative){return NATIVE_UNWRAP_OVERHEAD(chainId)}return BigNumber$1.from(0)};class V3HeuristicGasModelFactory extends IOnChainGasModelFactory{constructor(provider){super();this.provider=provider}async buildGasModel({chainId,gasPriceWei,pools,amountToken,quoteToken,l2GasDataProvider,providerConfig}){const l2GasData=l2GasDataProvider?await l2GasDataProvider.getGasData(providerConfig):undefined;const usdPool=pools.usdPool;const calculateL1GasFees=async route=>{return await calculateL1GasFeesHelper(route,chainId,usdPool,quoteToken,pools.nativeAndQuoteTokenV3Pool,this.provider,l2GasData)};const nativeCurrency=WRAPPED_NATIVE_CURRENCY[chainId];let nativeAmountPool=null;if(!amountToken.equals(nativeCurrency)){nativeAmountPool=pools.nativeAndAmountTokenV3Pool}const usdToken=usdPool.token0.equals(nativeCurrency)?usdPool.token1:usdPool.token0;const estimateGasCost=routeWithValidQuote=>{var _a;const{totalGasCostNativeCurrency,baseGasUse}=this.estimateGas(routeWithValidQuote,gasPriceWei,chainId,providerConfig);const gasCostInTermsOfUSD=getQuoteThroughNativePool(chainId,totalGasCostNativeCurrency,usdPool);const nativeAndSpecifiedGasTokenPool=pools.nativeAndSpecifiedGasTokenV3Pool;let gasCostInTermsOfGasToken=undefined;if(nativeAndSpecifiedGasTokenPool){gasCostInTermsOfGasToken=getQuoteThroughNativePool(chainId,totalGasCostNativeCurrency,nativeAndSpecifiedGasTokenPool)}else if((_a=providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken)===null||_a===void 0?void 0:_a.equals(nativeCurrency)){gasCostInTermsOfGasToken=totalGasCostNativeCurrency}if(quoteToken.equals(nativeCurrency)){return{gasEstimate:baseGasUse,gasCostInToken:totalGasCostNativeCurrency,gasCostInUSD:gasCostInTermsOfUSD,gasCostInGasToken:gasCostInTermsOfGasToken}}const nativeAndQuoteTokenPool=pools.nativeAndQuoteTokenV3Pool;let gasCostInTermsOfQuoteToken=null;if(nativeAndQuoteTokenPool){gasCostInTermsOfQuoteToken=getQuoteThroughNativePool(chainId,totalGasCostNativeCurrency,nativeAndQuoteTokenPool)}else{log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`)}if(nativeAmountPool){const executionPrice=new Price(routeWithValidQuote.amount.currency,routeWithValidQuote.quote.currency,routeWithValidQuote.amount.quotient,routeWithValidQuote.quote.quotient);const inputIsToken0=nativeAmountPool.token0.address==nativeCurrency.address;const nativeAndAmountTokenPrice=inputIsToken0?nativeAmountPool.token0Price:nativeAmountPool.token1Price;const gasCostInTermsOfAmountToken=nativeAndAmountTokenPrice.quote(totalGasCostNativeCurrency);const syntheticGasCostInTermsOfQuoteToken=executionPrice.quote(gasCostInTermsOfAmountToken);if(gasCostInTermsOfQuoteToken===null||syntheticGasCostInTermsOfQuoteToken.lessThan(gasCostInTermsOfQuoteToken.asFraction)){log.info({nativeAndAmountTokenPrice:nativeAndAmountTokenPrice.toSignificant(6),gasCostInTermsOfQuoteToken:gasCostInTermsOfQuoteToken?gasCostInTermsOfQuoteToken.toExact():0,gasCostInTermsOfAmountToken:gasCostInTermsOfAmountToken.toExact(),executionPrice:executionPrice.toSignificant(6),syntheticGasCostInTermsOfQuoteToken:syntheticGasCostInTermsOfQuoteToken.toSignificant(6)},"New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original");gasCostInTermsOfQuoteToken=syntheticGasCostInTermsOfQuoteToken}}if(gasCostInTermsOfQuoteToken===null){log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol}, or amount Token, ${amountToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);return{gasEstimate:baseGasUse,gasCostInToken:CurrencyAmount.fromRawAmount(quoteToken,0),gasCostInUSD:CurrencyAmount.fromRawAmount(usdToken,0)}}return{gasEstimate:baseGasUse,gasCostInToken:gasCostInTermsOfQuoteToken,gasCostInUSD:gasCostInTermsOfUSD,gasCostInGasToken:gasCostInTermsOfGasToken}};return{estimateGasCost:estimateGasCost.bind(this),calculateL1GasFees:calculateL1GasFees}}estimateGas(routeWithValidQuote,gasPriceWei,chainId,providerConfig){var _a;const totalInitializedTicksCrossed=BigNumber$1.from(Math.max(1,_.sum(routeWithValidQuote.initializedTicksCrossedList)));const totalHops=BigNumber$1.from(routeWithValidQuote.route.pools.length);let hopsGasUse=COST_PER_HOP(chainId).mul(totalHops);if(totalHops.eq(1)){hopsGasUse=hopsGasUse.add(SINGLE_HOP_OVERHEAD())}const tokenOverhead=TOKEN_OVERHEAD(chainId,routeWithValidQuote.route);const tickGasUse=COST_PER_INIT_TICK(chainId).mul(totalInitializedTicksCrossed);const uninitializedTickGasUse=COST_PER_UNINIT_TICK.mul(0);const baseGasUse=BASE_SWAP_COST$1(chainId).add(hopsGasUse).add(tokenOverhead).add(tickGasUse).add(uninitializedTickGasUse).add((_a=providerConfig===null||providerConfig===void 0?void 0:providerConfig.additionalGasOverhead)!==null&&_a!==void 0?_a:BigNumber$1.from(0));const baseGasCostWei=gasPriceWei.mul(baseGasUse);const wrappedCurrency=WRAPPED_NATIVE_CURRENCY[chainId];const totalGasCostNativeCurrency=CurrencyAmount.fromRawAmount(wrappedCurrency,baseGasCostWei.toString());return{totalGasCostNativeCurrency:totalGasCostNativeCurrency,totalInitializedTicksCrossed:totalInitializedTicksCrossed,baseGasUse:baseGasUse}}}async function getBestSwapRoute(amount,percents,routesWithValidQuotes,routeType,chainId,routingConfig,portionProvider,v2GasModel,v3GasModel,swapConfig){const now=Date.now();const{forceMixedRoutes}=routingConfig;if(forceMixedRoutes){log.info({forceMixedRoutes:forceMixedRoutes},"Forcing mixed routes by filtering out other route types");routesWithValidQuotes=_.filter(routesWithValidQuotes,quotes=>{return quotes.protocol===Protocol.MIXED});if(!routesWithValidQuotes){return null}}const percentToQuotes={};for(const routeWithValidQuote of routesWithValidQuotes){if(!percentToQuotes[routeWithValidQuote.percent]){percentToQuotes[routeWithValidQuote.percent]=[]}percentToQuotes[routeWithValidQuote.percent].push(routeWithValidQuote)}metric.putMetric("BuildRouteWithValidQuoteObjects",Date.now()-now,MetricLoggerUnit.Milliseconds);const swapRoute=await getBestSwapRouteBy(routeType,percentToQuotes,percents,chainId,rq=>rq.quoteAdjustedForGas,routingConfig,portionProvider,v2GasModel,v3GasModel,swapConfig);if(!swapRoute){return null}const{routes:routeAmounts}=swapRoute;const totalAmount=_.reduce(routeAmounts,(total,routeAmount)=>total.add(routeAmount.amount),CurrencyAmount.fromRawAmount(routeAmounts[0].amount.currency,0));const missingAmount=amount.subtract(totalAmount);if(missingAmount.greaterThan(0)){log.info({missingAmount:missingAmount.quotient.toString()},`Optimal route's amounts did not equal exactIn/exactOut total. Adding missing amount to last route in array.`);routeAmounts[routeAmounts.length-1].amount=routeAmounts[routeAmounts.length-1].amount.add(missingAmount)}log.info({routes:routeAmountsToString(routeAmounts),numSplits:routeAmounts.length,amount:amount.toExact(),quote:swapRoute.quote.toExact(),quoteGasAdjusted:swapRoute.quoteGasAdjusted.toFixed(Math.min(swapRoute.quoteGasAdjusted.currency.decimals,2)),estimatedGasUSD:swapRoute.estimatedGasUsedUSD.toFixed(Math.min(swapRoute.estimatedGasUsedUSD.currency.decimals,2)),estimatedGasToken:swapRoute.estimatedGasUsedQuoteToken.toFixed(Math.min(swapRoute.estimatedGasUsedQuoteToken.currency.decimals,2))},`Found best swap route. ${routeAmounts.length} split.`);return swapRoute}async function getBestSwapRouteBy(routeType,percentToQuotes,percents,chainId,by,routingConfig,portionProvider,v2GasModel,v3GasModel,swapConfig){var _a;const percentToSortedQuotes=_.mapValues(percentToQuotes,routeQuotes=>{return routeQuotes.sort((routeQuoteA,routeQuoteB)=>{if(routeType==TradeType$2.EXACT_INPUT){return by(routeQuoteA).greaterThan(by(routeQuoteB))?-1:1}else{return by(routeQuoteA).lessThan(by(routeQuoteB))?-1:1}})});const quoteCompFn=routeType==TradeType$2.EXACT_INPUT?(a,b)=>a.greaterThan(b):(a,b)=>a.lessThan(b);const sumFn=currencyAmounts=>{let sum=currencyAmounts[0];for(let i=1;i<currencyAmounts.length;i++){sum=sum.add(currencyAmounts[i])}return sum};let bestQuote;let bestSwap;const bestSwapsPerSplit=new FixedReverseHeap(Array,(a,b)=>{return quoteCompFn(a.quote,b.quote)?-1:1},3);const{minSplits,maxSplits,forceCrossProtocol}=routingConfig;if(!percentToSortedQuotes[100]||minSplits>1||forceCrossProtocol){log.info({percentToSortedQuotes:_.mapValues(percentToSortedQuotes,p=>p.length)},"Did not find a valid route without any splits. Continuing search anyway.")}else{bestQuote=by(percentToSortedQuotes[100][0]);bestSwap=[percentToSortedQuotes[100][0]];for(const routeWithQuote of percentToSortedQuotes[100].slice(0,5)){bestSwapsPerSplit.push({quote:by(routeWithQuote),routes:[routeWithQuote]})}}const queue=new Queue;for(let i=percents.length;i>=0;i--){const percent=percents[i];if(!percentToSortedQuotes[percent]){continue}queue.enqueue({curRoutes:[percentToSortedQuotes[percent][0]],percentIndex:i,remainingPercent:100-percent,special:false});if(!percentToSortedQuotes[percent]||!percentToSortedQuotes[percent][1]){continue}queue.enqueue({curRoutes:[percentToSortedQuotes[percent][1]],percentIndex:i,remainingPercent:100-percent,special:true})}let splits=1;let startedSplit=Date.now();while(queue.size>0){metric.putMetric(`Split${splits}Done`,Date.now()-startedSplit,MetricLoggerUnit.Milliseconds);startedSplit=Date.now();log.info({top5:_.map(Array.from(bestSwapsPerSplit.consume()),q=>`${q.quote.toExact()} (${_(q.routes).map(r=>r.toString()).join(", ")})`),onQueue:queue.size},`Top 3 with ${splits} splits`);bestSwapsPerSplit.clear();let layer=queue.size;splits++;if(splits>=3&&bestSwap&&bestSwap.length<splits-1){break}if(splits>maxSplits){log.info("Max splits reached. Stopping search.");metric.putMetric(`MaxSplitsHitReached`,1,MetricLoggerUnit.Count);break}while(layer>0){layer--;const{remainingPercent,curRoutes,percentIndex,special}=queue.dequeue();for(let i=percentIndex;i>=0;i--){const percentA=percents[i];if(percentA>remainingPercent){continue}if(!percentToSortedQuotes[percentA]){continue}const candidateRoutesA=percentToSortedQuotes[percentA];const routeWithQuoteA=findFirstRouteNotUsingUsedPools(curRoutes,candidateRoutesA,forceCrossProtocol);if(!routeWithQuoteA){continue}const remainingPercentNew=remainingPercent-percentA;const curRoutesNew=[...curRoutes,routeWithQuoteA];if(remainingPercentNew==0&&splits>=minSplits){const quotesNew=_.map(curRoutesNew,r=>by(r));const quoteNew=sumFn(quotesNew);let gasCostL1QuoteToken=CurrencyAmount.fromRawAmount(quoteNew.currency,0);if(HAS_L1_FEE.includes(chainId)){if(v2GasModel==undefined&&v3GasModel==undefined){throw new Error("Can't compute L1 gas fees.")}else{const v2Routes=curRoutesNew.filter(routes=>routes.protocol===Protocol.V2);if(v2Routes.length>0&&V2_SUPPORTED.includes(chainId)){if(v2GasModel){const v2GasCostL1=await v2GasModel.calculateL1GasFees(v2Routes);gasCostL1QuoteToken=gasCostL1QuoteToken.add(v2GasCostL1.gasCostL1QuoteToken)}}const v3Routes=curRoutesNew.filter(routes=>routes.protocol===Protocol.V3);if(v3Routes.length>0){if(v3GasModel){const v3GasCostL1=await v3GasModel.calculateL1GasFees(v3Routes);gasCostL1QuoteToken=gasCostL1QuoteToken.add(v3GasCostL1.gasCostL1QuoteToken)}}}}const quoteAfterL1Adjust=routeType==TradeType$2.EXACT_INPUT?quoteNew.subtract(gasCostL1QuoteToken):quoteNew.add(gasCostL1QuoteToken);bestSwapsPerSplit.push({quote:quoteAfterL1Adjust,routes:curRoutesNew});if(!bestQuote||quoteCompFn(quoteAfterL1Adjust,bestQuote)){bestQuote=quoteAfterL1Adjust;bestSwap=curRoutesNew;if(special){metric.putMetric(`BestSwapNotPickingBestForPercent`,1,MetricLoggerUnit.Count)}}}else{queue.enqueue({curRoutes:curRoutesNew,remainingPercent:remainingPercentNew,percentIndex:i,special:special})}}}}if(!bestSwap){log.info(`Could not find a valid swap`);return undefined}const postSplitNow=Date.now();let quoteGasAdjusted=sumFn(_.map(bestSwap,routeWithValidQuote=>routeWithValidQuote.quoteAdjustedForGas));const estimatedGasUsed=_(bestSwap).map(routeWithValidQuote=>routeWithValidQuote.gasEstimate).reduce((sum,routeWithValidQuote)=>sum.add(routeWithValidQuote),BigNumber$1.from(0));if(!usdGasTokensByChain[chainId]||!usdGasTokensByChain[chainId][0]){throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`)}const usdToken=usdGasTokensByChain[chainId][0];const usdTokenDecimals=usdToken.decimals;const gasCostsL1ToL2={gasUsedL1:BigNumber$1.from(0),gasUsedL1OnL2:BigNumber$1.from(0),gasCostL1USD:CurrencyAmount.fromRawAmount(usdToken,0),gasCostL1QuoteToken:CurrencyAmount.fromRawAmount((_a=bestSwap[0])===null||_a===void 0?void 0:_a.quoteToken,0)};if(HAS_L1_FEE.includes(chainId)){if(v2GasModel==undefined&&v3GasModel==undefined){throw new Error("Can't compute L1 gas fees.")}else{const v2Routes=bestSwap.filter(routes=>routes.protocol===Protocol.V2);if(v2Routes.length>0&&V2_SUPPORTED.includes(chainId)){if(v2GasModel){const v2GasCostL1=await v2GasModel.calculateL1GasFees(v2Routes);gasCostsL1ToL2.gasUsedL1=gasCostsL1ToL2.gasUsedL1.add(v2GasCostL1.gasUsedL1);gasCostsL1ToL2.gasUsedL1OnL2=gasCostsL1ToL2.gasUsedL1OnL2.add(v2GasCostL1.gasUsedL1OnL2);if(gasCostsL1ToL2.gasCostL1USD.currency.equals(v2GasCostL1.gasCostL1USD.currency)){gasCostsL1ToL2.gasCostL1USD=gasCostsL1ToL2.gasCostL1USD.add(v2GasCostL1.gasCostL1USD)}else{gasCostsL1ToL2.gasCostL1USD=v2GasCostL1.gasCostL1USD}gasCostsL1ToL2.gasCostL1QuoteToken=gasCostsL1ToL2.gasCostL1QuoteToken.add(v2GasCostL1.gasCostL1QuoteToken)}}const v3Routes=bestSwap.filter(routes=>routes.protocol===Protocol.V3);if(v3Routes.length>0){if(v3GasModel){const v3GasCostL1=await v3GasModel.calculateL1GasFees(v3Routes);gasCostsL1ToL2.gasUsedL1=gasCostsL1ToL2.gasUsedL1.add(v3GasCostL1.gasUsedL1);gasCostsL1ToL2.gasUsedL1OnL2=gasCostsL1ToL2.gasUsedL1OnL2.add(v3GasCostL1.gasUsedL1OnL2);if(gasCostsL1ToL2.gasCostL1USD.currency.equals(v3GasCostL1.gasCostL1USD.currency)){gasCostsL1ToL2.gasCostL1USD=gasCostsL1ToL2.gasCostL1USD.add(v3GasCostL1.gasCostL1USD)}else{gasCostsL1ToL2.gasCostL1USD=v3GasCostL1.gasCostL1USD}gasCostsL1ToL2.gasCostL1QuoteToken=gasCostsL1ToL2.gasCostL1QuoteToken.add(v3GasCostL1.gasCostL1QuoteToken)}}}}const{gasUsedL1OnL2,gasCostL1USD,gasCostL1QuoteToken}=gasCostsL1ToL2;const estimatedGasUsedUSDs=_(bestSwap).map(routeWithValidQuote=>{const decimalsDiff=usdTokenDecimals-routeWithValidQuote.gasCostInUSD.currency.decimals;if(decimalsDiff==0){return CurrencyAmount.fromRawAmount(usdToken,routeWithValidQuote.gasCostInUSD.quotient)}return CurrencyAmount.fromRawAmount(usdToken,JSBI.multiply(routeWithValidQuote.gasCostInUSD.quotient,JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(decimalsDiff))))}).value();let estimatedGasUsedUSD=sumFn(estimatedGasUsedUSDs);if(estimatedGasUsedUSD.currency!=gasCostL1USD.currency){const decimalsDiff=usdTokenDecimals-gasCostL1USD.currency.decimals;estimatedGasUsedUSD=estimatedGasUsedUSD.add(CurrencyAmount.fromRawAmount(usdToken,JSBI.multiply(gasCostL1USD.quotient,JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(decimalsDiff)))))}else{estimatedGasUsedUSD=estimatedGasUsedUSD.add(gasCostL1USD)}log.info({estimatedGasUsedUSD:estimatedGasUsedUSD.toExact(),normalizedUsdToken:usdToken,routeUSDGasEstimates:_.map(bestSwap,b=>`${b.percent}% ${routeToString(b.route)} ${b.gasCostInUSD.toExact()}`),flatL1GasCostUSD:gasCostL1USD.toExact()},"USD gas estimates of best route");const estimatedGasUsedQuoteToken=sumFn(_.map(bestSwap,routeWithValidQuote=>routeWithValidQuote.gasCostInToken)).add(gasCostL1QuoteToken);let estimatedGasUsedGasToken;if(routingConfig.gasToken){if(bestSwap.some(routeWithValidQuote=>routeWithValidQuote.gasCostInGasToken===undefined)){log.info({bestSwap:bestSwap,routingConfig:routingConfig},"Could not find gasCostInGasToken for a route in bestSwap");throw new Error("Can't compute estimatedGasUsedGasToken")}estimatedGasUsedGasToken=sumFn(_.map(bestSwap,routeWithValidQuote=>routeWithValidQuote.gasCostInGasToken))}const quote=sumFn(_.map(bestSwap,routeWithValidQuote=>routeWithValidQuote.quote));if(routeType==TradeType$2.EXACT_INPUT){const quoteGasAdjustedForL1=quoteGasAdjusted.subtract(gasCostL1QuoteToken);quoteGasAdjusted=quoteGasAdjustedForL1}else{const quoteGasAdjustedForL1=quoteGasAdjusted.add(gasCostL1QuoteToken);quoteGasAdjusted=quoteGasAdjustedForL1}const routeWithQuotes=bestSwap.sort((routeAmountA,routeAmountB)=>routeAmountB.amount.greaterThan(routeAmountA.amount)?1:-1);metric.putMetric("PostSplitDone",Date.now()-postSplitNow,MetricLoggerUnit.Milliseconds);return{quote:quote,quoteGasAdjusted:quoteGasAdjusted,estimatedGasUsed:estimatedGasUsed.add(gasUsedL1OnL2),estimatedGasUsedUSD:estimatedGasUsedUSD,estimatedGasUsedQuoteToken:estimatedGasUsedQuoteToken,estimatedGasUsedGasToken:estimatedGasUsedGasToken,routes:portionProvider.getRouteWithQuotePortionAdjusted(routeType,routeWithQuotes,swapConfig)}}const findFirstRouteNotUsingUsedPools=(usedRoutes,candidateRouteQuotes,forceCrossProtocol)=>{const poolAddressSet=new Set;const usedPoolAddresses=_(usedRoutes).flatMap(r=>r.poolAddresses).value();for(const poolAddress of usedPoolAddresses){poolAddressSet.add(poolAddress)}const protocolsSet=new Set;const usedProtocols=_(usedRoutes).flatMap(r=>r.protocol).uniq().value();for(const protocol of usedProtocols){protocolsSet.add(protocol)}for(const routeQuote of candidateRouteQuotes){const{poolAddresses,protocol}=routeQuote;if(poolAddresses.some(poolAddress=>poolAddressSet.has(poolAddress))){continue}const needToForce=forceCrossProtocol&&protocolsSet.size==1;if(needToForce&&protocolsSet.has(protocol)){continue}return routeQuote}return null};function calculateRatioAmountIn(optimalRatio,inputTokenPrice,inputBalance,outputBalance){const amountToSwapRaw=new Fraction$1(inputBalance.quotient).subtract(optimalRatio.multiply(outputBalance.quotient)).divide(optimalRatio.multiply(inputTokenPrice).add(1));if(amountToSwapRaw.lessThan(0)){throw new Error("routeToRatio: insufficient input token amount")}return CurrencyAmount.fromRawAmount(inputBalance.currency,amountToSwapRaw.quotient)}const baseTokensByChain={[ChainId$1.MAINNET]:[USDC_MAINNET,USDT_MAINNET,WBTC_MAINNET,DAI_MAINNET,WRAPPED_NATIVE_CURRENCY[1],FEI_MAINNET],[ChainId$1.OPTIMISM]:[DAI_OPTIMISM,USDC_OPTIMISM,USDT_OPTIMISM,WBTC_OPTIMISM],[ChainId$1.SEPOLIA]:[DAI_SEPOLIA,USDC_SEPOLIA],[ChainId$1.OPTIMISM_GOERLI]:[DAI_OPTIMISM_GOERLI,USDC_OPTIMISM_GOERLI,USDT_OPTIMISM_GOERLI,WBTC_OPTIMISM_GOERLI],[ChainId$1.OPTIMISM_SEPOLIA]:[DAI_OPTIMISM_SEPOLIA,USDC_OPTIMISM_SEPOLIA,USDT_OPTIMISM_SEPOLIA,WBTC_OPTIMISM_SEPOLIA],[ChainId$1.ARBITRUM_ONE]:[DAI_ARBITRUM,USDC_ARBITRUM,WBTC_ARBITRUM,USDT_ARBITRUM],[ChainId$1.ARBITRUM_GOERLI]:[USDC_ARBITRUM_GOERLI],[ChainId$1.ARBITRUM_SEPOLIA]:[USDC_ARBITRUM_SEPOLIA],[ChainId$1.POLYGON]:[USDC_POLYGON,WMATIC_POLYGON],[ChainId$1.POLYGON_MUMBAI]:[DAI_POLYGON_MUMBAI,WMATIC_POLYGON_MUMBAI],[ChainId$1.CELO]:[CUSD_CELO,CEUR_CELO,CELO],[ChainId$1.CELO_ALFAJORES]:[CUSD_CELO_ALFAJORES,CEUR_CELO_ALFAJORES,CELO_ALFAJORES],[ChainId$1.GNOSIS]:[WBTC_GNOSIS,WXDAI_GNOSIS,USDC_ETHEREUM_GNOSIS],[ChainId$1.MOONBEAM]:[DAI_MOONBEAM,USDC_MOONBEAM,WBTC_MOONBEAM,WGLMR_MOONBEAM],[ChainId$1.BNB]:[DAI_BNB,USDC_BNB,USDT_BNB],[ChainId$1.AVALANCHE]:[DAI_AVAX,USDC_AVAX],[ChainId$1.BASE]:[USDC_BASE],[ChainId$1.BLAST]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BLAST],USDB_BLAST]};class SubcategorySelectionPools{constructor(pools,poolsNeeded){this.pools=pools;this.poolsNeeded=poolsNeeded}hasEnoughPools(){return this.pools.length>=this.poolsNeeded}}async function getV3CandidatePools({tokenIn,tokenOut,routeType,routingConfig,subgraphProvider,tokenProvider,poolProvider,blockedTokenListProvider,chainId}){var _a,_b,_c,_d,_e;const{blockNumber,v3PoolSelection:{topN,topNDirectSwaps,topNTokenInOut,topNSecondHop,topNSecondHopForTokenAddress,tokensToAvoidOnSecondHops,topNWithEachBaseToken,topNWithBaseToken}}=routingConfig;const tokenInAddress=tokenIn.address.toLowerCase();const tokenOutAddress=tokenOut.address.toLowerCase();const beforeSubgraphPools=Date.now();const allPools=await subgraphProvider.getPools(tokenIn,tokenOut,{blockNumber:blockNumber});log.info({samplePools:allPools.slice(0,3)},"Got all pools from V3 subgraph provider");for(const pool of allPools){pool.token0.id=pool.token0.id.toLowerCase();pool.token1.id=pool.token1.id.toLowerCase()}metric.putMetric("V3SubgraphPoolsLoad",Date.now()-beforeSubgraphPools,MetricLoggerUnit.Milliseconds);const beforePoolsFiltered=Date.now();let filteredPools=allPools;if(blockedTokenListProvider){filteredPools=[];for(const pool of allPools){const token0InBlocklist=await blockedTokenListProvider.hasTokenByAddress(pool.token0.id);const token1InBlocklist=await blockedTokenListProvider.hasTokenByAddress(pool.token1.id);if(token0InBlocklist||token1InBlocklist){continue}filteredPools.push(pool)}}const subgraphPoolsSorted=filteredPools.sort((a,b)=>b.tvlUSD-a.tvlUSD);log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);const poolAddressesSoFar=new Set;const addToAddressSet=pools=>{_(pools).map(pool=>pool.id).forEach(poolAddress=>poolAddressesSoFar.add(poolAddress))};const baseTokens=(_a=baseTokensByChain[chainId])!==null&&_a!==void 0?_a:[];const topByBaseWithTokenIn=_(baseTokens).flatMap(token=>{return _(subgraphPoolsSorted).filter(subgraphPool=>{const tokenAddress=token.address.toLowerCase();return subgraphPool.token0.id==tokenAddress&&subgraphPool.token1.id==tokenInAddress||subgraphPool.token1.id==tokenAddress&&subgraphPool.token0.id==tokenInAddress}).sortBy(tokenListPool=>-tokenListPool.tvlUSD).slice(0,topNWithEachBaseToken).value()}).sortBy(tokenListPool=>-tokenListPool.tvlUSD).slice(0,topNWithBaseToken).value();const topByBaseWithTokenOut=_(baseTokens).flatMap(token=>{return _(subgraphPoolsSorted).filter(subgraphPool=>{const tokenAddress=token.address.toLowerCase();return subgraphPool.token0.id==tokenAddress&&subgraphPool.token1.id==tokenOutAddress||subgraphPool.token1.id==tokenAddress&&subgraphPool.token0.id==tokenOutAddress}).sortBy(tokenListPool=>-tokenListPool.tvlUSD).slice(0,topNWithEachBaseToken).value()}).sortBy(tokenListPool=>-tokenListPool.tvlUSD).slice(0,topNWithBaseToken).value();let top2DirectSwapPool=_(subgraphPoolsSorted).filter(subgraphPool=>{return!poolAddressesSoFar.has(subgraphPool.id)&&(subgraphPool.token0.id==tokenInAddress&&subgraphPool.token1.id==tokenOutAddress||subgraphPool.token1.id==tokenInAddress&&subgraphPool.token0.id==tokenOutAddress)}).slice(0,topNDirectSwaps).value();if(top2DirectSwapPool.length==0&&topNDirectSwaps>0){top2DirectSwapPool=_.map([FeeAmount.HIGH,FeeAmount.MEDIUM,FeeAmount.LOW,FeeAmount.LOWEST],feeAmount=>{const{token0,token1,poolAddress}=poolProvider.getPoolAddress(tokenIn,tokenOut,feeAmount);return{id:poolAddress,feeTier:unparseFeeAmount(feeAmount),liquidity:"10000",token0:{id:token0.address},token1:{id:token1.address},tvlETH:1e4,tvlUSD:1e4}})}addToAddressSet(top2DirectSwapPool);const wrappedNativeAddress=(_b=WRAPPED_NATIVE_CURRENCY[chainId])===null||_b===void 0?void 0:_b.address.toLowerCase();let top2EthQuoteTokenPool=[];if(((_c=WRAPPED_NATIVE_CURRENCY[chainId])===null||_c===void 0?void 0:_c.symbol)==((_d=WRAPPED_NATIVE_CURRENCY[ChainId$1.MAINNET])===null||_d===void 0?void 0:_d.symbol)&&tokenOut.symbol!="WETH"&&tokenOut.symbol!="WETH9"&&tokenOut.symbol!="ETH"||((_e=WRAPPED_NATIVE_CURRENCY[chainId])===null||_e===void 0?void 0:_e.symbol)==WMATIC_POLYGON.symbol&&tokenOut.symbol!="MATIC"&&tokenOut.symbol!="WMATIC"){top2EthQuoteTokenPool=_(subgraphPoolsSorted).filter(subgraphPool=>{if(routeType==TradeType$2.EXACT_INPUT){return subgraphPool.token0.id==wrappedNativeAddress&&subgraphPool.token1.id==tokenOutAddress||subgraphPool.token1.id==wrappedNativeAddress&&subgraphPool.token0.id==tokenOutAddress}else{return subgraphPool.token0.id==wrappedNativeAddress&&subgraphPool.token1.id==tokenInAddress||subgraphPool.token1.id==wrappedNativeAddress&&subgraphPool.token0.id==tokenInAddress}}).slice(0,1).value()}addToAddressSet(top2EthQuoteTokenPool);const topByTVL=_(subgraphPoolsSorted).filter(subgraphPool=>{return!poolAddressesSoFar.has(subgraphPool.id)}).slice(0,topN).value();addToAddressSet(topByTVL);const topByTVLUsingTokenIn=_(subgraphPoolsSorted).filter(subgraphPool=>{return!poolAddressesSoFar.has(subgraphPool.id)&&(subgraphPool.token0.id==tokenInAddress||subgraphPool.token1.id==tokenInAddress)}).slice(0,topNTokenInOut).value();addToAddressSet(topByTVLUsingTokenIn);const topByTVLUsingTokenOut=_(subgraphPoolsSorted).filter(subgraphPool=>{return!poolAddressesSoFar.has(subgraphPool.id)&&(subgraphPool.token0.id==tokenOutAddress||subgraphPool.token1.id==tokenOutAddress)}).slice(0,topNTokenInOut).value();addToAddressSet(topByTVLUsingTokenOut);const topByTVLUsingTokenInSecondHops=_(topByTVLUsingTokenIn).map(subgraphPool=>{return tokenInAddress==subgraphPool.token0.id?subgraphPool.token1.id:subgraphPool.token0.id}).flatMap(secondHopId=>{var _a;return _(subgraphPoolsSorted).filter(subgraphPool=>{return!poolAddressesSoFar.has(subgraphPool.id)&&!(tokensToAvoidOnSecondHops===null||tokensToAvoidOnSecondHops===void 0?void 0:tokensToAvoidOnSecondHops.includes(secondHopId.toLowerCase()))&&(subgraphPool.token0.id==secondHopId||subgraphPool.token1.id==secondHopId)}).slice(0,(_a=topNSecondHopForTokenAddress===null||topNSecondHopForTokenAddress===void 0?void 0:topNSecondHopForTokenAddress.get(secondHopId))!==null&&_a!==void 0?_a:topNSecondHop).value()}).uniqBy(pool=>pool.id).value();addToAddressSet(topByTVLUsingTokenInSecondHops);const topByTVLUsingTokenOutSecondHops=_(topByTVLUsingTokenOut).map(subgraphPool=>{return tokenOutAddress==subgraphPool.token0.id?subgraphPool.token1.id:subgraphPool.token0.id}).flatMap(secondHopId=>{var _a;return _(subgraphPoolsSorted).filter(subgraphPool=>{return!poolAddressesSoFar.has(subgraphPool.id)&&!(tokensToAvoidOnSecondHops===null||tokensToAvoidOnSecondHops===void 0?void 0:tokensToAvoidOnSecondHops.includes(secondHopId.toLowerCase()))&&(subgraphPool.token0.id==secondHopId||subgraphPool.token1.id==secondHopId)}).slice(0,(_a=topNSecondHopForTokenAddress===null||topNSecondHopForTokenAddress===void 0?void 0:topNSecondHopForTokenAddress.get(secondHopId))!==null&&_a!==void 0?_a:topNSecondHop).value()}).uniqBy(pool=>pool.id).value();addToAddressSet(topByTVLUsingTokenOutSecondHops);const subgraphPools=_([...topByBaseWithTokenIn,...topByBaseWithTokenOut,...top2DirectSwapPool,...top2EthQuoteTokenPool,...topByTVL,...topByTVLUsingTokenIn,...topByTVLUsingTokenOut,...topByTVLUsingTokenInSecondHops,...topByTVLUsingTokenOutSecondHops]).compact().uniqBy(pool=>pool.id).value();const tokenAddresses=_(subgraphPools).flatMap(subgraphPool=>[subgraphPool.token0.id,subgraphPool.token1.id]).compact().uniq().value();log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V3 pools we are considering`);const tokenAccessor=await tokenProvider.getTokens(tokenAddresses,{blockNumber:blockNumber});const printV3SubgraphPool=s=>{var _a,_b,_c,_d;return`${(_b=(_a=tokenAccessor.getTokenByAddress(s.token0.id))===null||_a===void 0?void 0:_a.symbol)!==null&&_b!==void 0?_b:s.token0.id}/${(_d=(_c=tokenAccessor.getTokenByAddress(s.token1.id))===null||_c===void 0?void 0:_c.symbol)!==null&&_d!==void 0?_d:s.token1.id}/${s.feeTier}`};log.info({topByBaseWithTokenIn:topByBaseWithTokenIn.map(printV3SubgraphPool),topByBaseWithTokenOut:topByBaseWithTokenOut.map(printV3SubgraphPool),topByTVL:topByTVL.map(printV3SubgraphPool),topByTVLUsingTokenIn:topByTVLUsingTokenIn.map(printV3SubgraphPool),topByTVLUsingTokenOut:topByTVLUsingTokenOut.map(printV3SubgraphPool),topByTVLUsingTokenInSecondHops:topByTVLUsingTokenInSecondHops.map(printV3SubgraphPool),topByTVLUsingTokenOutSecondHops:topByTVLUsingTokenOutSecondHops.map(printV3SubgraphPool),top2DirectSwap:top2DirectSwapPool.map(printV3SubgraphPool),top2EthQuotePool:top2EthQuoteTokenPool.map(printV3SubgraphPool)},`V3 Candidate Pools`);const tokenPairsRaw=_.map(subgraphPools,subgraphPool=>{const tokenA=tokenAccessor.getTokenByAddress(subgraphPool.token0.id);const tokenB=tokenAccessor.getTokenByAddress(subgraphPool.token1.id);let fee;try{fee=parseFeeAmount(subgraphPool.feeTier)}catch(err){log.info({subgraphPool:subgraphPool},`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier} because fee tier not supported`);return undefined}if(!tokenA||!tokenB){log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee} because ${tokenA?subgraphPool.token1.id:subgraphPool.token0.id} not found by token provider`);return undefined}return[tokenA,tokenB,fee]});const tokenPairs=_.compact(tokenPairsRaw);metric.putMetric("V3PoolsFilterLoad",Date.now()-beforePoolsFiltered,MetricLoggerUnit.Milliseconds);const beforePoolsLoad=Date.now();const poolAccessor=await poolProvider.getPools(tokenPairs,{blockNumber:blockNumber});metric.putMetric("V3PoolsLoad",Date.now()-beforePoolsLoad,MetricLoggerUnit.Milliseconds);const poolsBySelection={protocol:Protocol.V3,selections:{topByBaseWithTokenIn:topByBaseWithTokenIn,topByBaseWithTokenOut:topByBaseWithTokenOut,topByDirectSwapPool:top2DirectSwapPool,topByEthQuoteTokenPool:top2EthQuoteTokenPool,topByTVL:topByTVL,topByTVLUsingTokenIn:topByTVLUsingTokenIn,topByTVLUsingTokenOut:topByTVLUsingTokenOut,topByTVLUsingTokenInSecondHops:topByTVLUsingTokenInSecondHops,topByTVLUsingTokenOutSecondHops:topByTVLUsingTokenOutSecondHops}};return{poolAccessor:poolAccessor,candidatePools:poolsBySelection,subgraphPools:subgraphPools}}async function getV2CandidatePools({tokenIn,tokenOut,routeType,routingConfig,subgraphProvider,tokenProvider,poolProvider,blockedTokenListProvider,chainId}){var _a;const{blockNumber,v2PoolSelection:{topN,topNDirectSwaps,topNTokenInOut,topNSecondHop,tokensToAvoidOnSecondHops,topNWithEachBaseToken,topNWithBaseToken}}=routingConfig;const tokenInAddress=tokenIn.address.toLowerCase();const tokenOutAddress=tokenOut.address.toLowerCase();const beforeSubgraphPools=Date.now();const allPoolsRaw=await subgraphProvider.getPools(tokenIn,tokenOut,{blockNumber:blockNumber});for(const pool of allPoolsRaw){pool.token0.id=pool.token0.id.toLowerCase();pool.token1.id=pool.token1.id.toLowerCase()}metric.putMetric("V2SubgraphPoolsLoad",Date.now()-beforeSubgraphPools,MetricLoggerUnit.Milliseconds);const beforePoolsFiltered=Date.now();const subgraphPoolsSorted=allPoolsRaw.sort((a,b)=>b.reserve-a.reserve);const poolAddressesSoFar=new Set;let topByDirectSwapPool=[];if(topNDirectSwaps>0){const{token0,token1,poolAddress}=poolProvider.getPoolAddress(tokenIn,tokenOut);poolAddressesSoFar.add(poolAddress.toLowerCase());topByDirectSwapPool=[{id:poolAddress,token0:{id:token0.address},token1:{id:token1.address},supply:1e4,reserve:1e4,reserveUSD:1e4}]}const wethAddress=WRAPPED_NATIVE_CURRENCY[chainId].address.toLowerCase();const topByBaseWithTokenInMap=new Map;const topByBaseWithTokenOutMap=new Map;const baseTokens=(_a=baseTokensByChain[chainId])!==null&&_a!==void 0?_a:[];const baseTokensAddresses=new Set;baseTokens.forEach(token=>{const baseTokenAddr=token.address.toLowerCase();baseTokensAddresses.add(baseTokenAddr);topByBaseWithTokenInMap.set(baseTokenAddr,new SubcategorySelectionPools([],topNWithEachBaseToken));topByBaseWithTokenOutMap.set(baseTokenAddr,new SubcategorySelectionPools([],topNWithEachBaseToken))});let topByBaseWithTokenInPoolsFound=0;let topByBaseWithTokenOutPoolsFound=0;let topNEthQuoteToken=1;if(tokenOut.symbol=="WETH"||tokenOut.symbol=="WETH9"||tokenOut.symbol=="ETH"){topNEthQuoteToken=0}const topByEthQuoteTokenPool=[];const topByTVLUsingTokenIn=[];const topByTVLUsingTokenOut=[];const topByTVL=[];let loopsInFirstIteration=0;for(const subgraphPool of subgraphPoolsSorted){loopsInFirstIteration+=1;if(topByBaseWithTokenInPoolsFound>=topNWithBaseToken&&topByBaseWithTokenOutPoolsFound>=topNWithBaseToken&&topByEthQuoteTokenPool.length>=topNEthQuoteToken&&topByTVL.length>=topN&&topByTVLUsingTokenIn.length>=topNTokenInOut&&topByTVLUsingTokenOut.length>=topNTokenInOut){break}if(poolAddressesSoFar.has(subgraphPool.id)){continue}if(blockedTokenListProvider){const[token0InBlocklist,token1InBlocklist]=await Promise.all([blockedTokenListProvider.hasTokenByAddress(subgraphPool.token0.id),blockedTokenListProvider.hasTokenByAddress(subgraphPool.token1.id)]);if(token0InBlocklist||token1InBlocklist){continue}}const tokenInToken0TopByBase=topByBaseWithTokenInMap.get(subgraphPool.token0.id);if(topByBaseWithTokenInPoolsFound<topNWithBaseToken&&tokenInToken0TopByBase&&subgraphPool.token0.id!=tokenOutAddress&&subgraphPool.token1.id==tokenInAddress){topByBaseWithTokenInPoolsFound+=1;poolAddressesSoFar.add(subgraphPool.id);if(topByTVLUsingTokenIn.length<topNTokenInOut){topByTVLUsingTokenIn.push(subgraphPool)}if(routeType===TradeType$2.EXACT_OUTPUT&&subgraphPool.token0.id==wethAddress){topByEthQuoteTokenPool.push(subgraphPool)}tokenInToken0TopByBase.pools.push(subgraphPool);continue}const tokenInToken1TopByBase=topByBaseWithTokenInMap.get(subgraphPool.token1.id);if(topByBaseWithTokenInPoolsFound<topNWithBaseToken&&tokenInToken1TopByBase&&subgraphPool.token0.id==tokenInAddress&&subgraphPool.token1.id!=tokenOutAddress){topByBaseWithTokenInPoolsFound+=1;poolAddressesSoFar.add(subgraphPool.id);if(topByTVLUsingTokenIn.length<topNTokenInOut){topByTVLUsingTokenIn.push(subgraphPool)}if(routeType===TradeType$2.EXACT_OUTPUT&&subgraphPool.token1.id==wethAddress){topByEthQuoteTokenPool.push(subgraphPool)}tokenInToken1TopByBase.pools.push(subgraphPool);continue}const tokenOutToken0TopByBase=topByBaseWithTokenOutMap.get(subgraphPool.token0.id);if(topByBaseWithTokenOutPoolsFound<topNWithBaseToken&&tokenOutToken0TopByBase&&subgraphPool.token0.id!=tokenInAddress&&subgraphPool.token1.id==tokenOutAddress){topByBaseWithTokenOutPoolsFound+=1;poolAddressesSoFar.add(subgraphPool.id);if(topByTVLUsingTokenOut.length<topNTokenInOut){topByTVLUsingTokenOut.push(subgraphPool)}if(routeType===TradeType$2.EXACT_INPUT&&subgraphPool.token0.id==wethAddress){topByEthQuoteTokenPool.push(subgraphPool)}tokenOutToken0TopByBase.pools.push(subgraphPool);continue}const tokenOutToken1TopByBase=topByBaseWithTokenOutMap.get(subgraphPool.token1.id);if(topByBaseWithTokenOutPoolsFound<topNWithBaseToken&&tokenOutToken1TopByBase&&subgraphPool.token0.id==tokenOutAddress&&subgraphPool.token1.id!=tokenInAddress){topByBaseWithTokenOutPoolsFound+=1;poolAddressesSoFar.add(subgraphPool.id);if(topByTVLUsingTokenOut.length<topNTokenInOut){topByTVLUsingTokenOut.push(subgraphPool)}if(routeType===TradeType$2.EXACT_INPUT&&subgraphPool.token1.id==wethAddress){topByEthQuoteTokenPool.push(subgraphPool)}tokenOutToken1TopByBase.pools.push(subgraphPool);continue}if(topByEthQuoteTokenPool.length<topNEthQuoteToken&&(routeType===TradeType$2.EXACT_INPUT&&(subgraphPool.token0.id==wethAddress&&subgraphPool.token1.id==tokenOutAddress||subgraphPool.token1.id==wethAddress&&subgraphPool.token0.id==tokenOutAddress)||routeType===TradeType$2.EXACT_OUTPUT&&(subgraphPool.token0.id==wethAddress&&subgraphPool.token1.id==tokenInAddress||subgraphPool.token1.id==wethAddress&&subgraphPool.token0.id==tokenInAddress))){poolAddressesSoFar.add(subgraphPool.id);topByEthQuoteTokenPool.push(subgraphPool);continue}if(topByTVL.length<topN){poolAddressesSoFar.add(subgraphPool.id);topByTVL.push(subgraphPool);continue}if(topByTVLUsingTokenIn.length<topNTokenInOut&&(subgraphPool.token0.id==tokenInAddress||subgraphPool.token1.id==tokenInAddress)){poolAddressesSoFar.add(subgraphPool.id);topByTVLUsingTokenIn.push(subgraphPool);continue}if(topByTVLUsingTokenOut.length<topNTokenInOut&&(subgraphPool.token0.id==tokenOutAddress||subgraphPool.token1.id==tokenOutAddress)){poolAddressesSoFar.add(subgraphPool.id);topByTVLUsingTokenOut.push(subgraphPool);continue}}metric.putMetric("V2SubgraphLoopsInFirstIteration",loopsInFirstIteration,MetricLoggerUnit.Count);const topByBaseWithTokenIn=[];for(const topByBaseWithTokenInSelection of topByBaseWithTokenInMap.values()){topByBaseWithTokenIn.push(...topByBaseWithTokenInSelection.pools)}const topByBaseWithTokenOut=[];for(const topByBaseWithTokenOutSelection of topByBaseWithTokenOutMap.values()){topByBaseWithTokenOut.push(...topByBaseWithTokenOutSelection.pools)}const topByTVLUsingTokenInSecondHopsMap=new Map;const topByTVLUsingTokenOutSecondHopsMap=new Map;const tokenInSecondHopAddresses=topByTVLUsingTokenIn.filter(pool=>{if(tokenInAddress===pool.token0.id){return!(tokensToAvoidOnSecondHops===null||tokensToAvoidOnSecondHops===void 0?void 0:tokensToAvoidOnSecondHops.includes(pool.token1.id.toLowerCase()))}else{return!(tokensToAvoidOnSecondHops===null||tokensToAvoidOnSecondHops===void 0?void 0:tokensToAvoidOnSecondHops.includes(pool.token0.id.toLowerCase()))}}).map(pool=>tokenInAddress===pool.token0.id?pool.token1.id:pool.token0.id);const tokenOutSecondHopAddresses=topByTVLUsingTokenOut.filter(pool=>{if(tokenOutAddress===pool.token0.id){return!(tokensToAvoidOnSecondHops===null||tokensToAvoidOnSecondHops===void 0?void 0:tokensToAvoidOnSecondHops.includes(pool.token1.id.toLowerCase()))}else{return!(tokensToAvoidOnSecondHops===null||tokensToAvoidOnSecondHops===void 0?void 0:tokensToAvoidOnSecondHops.includes(pool.token0.id.toLowerCase()))}}).map(pool=>tokenOutAddress===pool.token0.id?pool.token1.id:pool.token0.id);for(const secondHopId of tokenInSecondHopAddresses){topByTVLUsingTokenInSecondHopsMap.set(secondHopId,new SubcategorySelectionPools([],topNSecondHop))}for(const secondHopId of tokenOutSecondHopAddresses){topByTVLUsingTokenOutSecondHopsMap.set(secondHopId,new SubcategorySelectionPools([],topNSecondHop))}let loopsInSecondIteration=0;if(tokenInSecondHopAddresses.length>0||tokenOutSecondHopAddresses.length>0){for(const subgraphPool of subgraphPoolsSorted){loopsInSecondIteration+=1;let allTokenInSecondHopsHaveTheirTopN=true;for(const secondHopPools of topByTVLUsingTokenInSecondHopsMap.values()){if(!secondHopPools.hasEnoughPools()){allTokenInSecondHopsHaveTheirTopN=false;break}}let allTokenOutSecondHopsHaveTheirTopN=true;for(const secondHopPools of topByTVLUsingTokenOutSecondHopsMap.values()){if(!secondHopPools.hasEnoughPools()){allTokenOutSecondHopsHaveTheirTopN=false;break}}if(allTokenInSecondHopsHaveTheirTopN&&allTokenOutSecondHopsHaveTheirTopN){break}if(poolAddressesSoFar.has(subgraphPool.id)){continue}if(blockedTokenListProvider){const[token0InBlocklist,token1InBlocklist]=await Promise.all([blockedTokenListProvider.hasTokenByAddress(subgraphPool.token0.id),blockedTokenListProvider.hasTokenByAddress(subgraphPool.token1.id)]);if(token0InBlocklist||token1InBlocklist){continue}}const tokenInToken0SecondHop=topByTVLUsingTokenInSecondHopsMap.get(subgraphPool.token0.id);if(tokenInToken0SecondHop&&!tokenInToken0SecondHop.hasEnoughPools()){poolAddressesSoFar.add(subgraphPool.id);tokenInToken0SecondHop.pools.push(subgraphPool);continue}const tokenInToken1SecondHop=topByTVLUsingTokenInSecondHopsMap.get(subgraphPool.token1.id);if(tokenInToken1SecondHop&&!tokenInToken1SecondHop.hasEnoughPools()){poolAddressesSoFar.add(subgraphPool.id);tokenInToken1SecondHop.pools.push(subgraphPool);continue}const tokenOutToken0SecondHop=topByTVLUsingTokenOutSecondHopsMap.get(subgraphPool.token0.id);if(tokenOutToken0SecondHop&&!tokenOutToken0SecondHop.hasEnoughPools()){poolAddressesSoFar.add(subgraphPool.id);tokenOutToken0SecondHop.pools.push(subgraphPool);continue}const tokenOutToken1SecondHop=topByTVLUsingTokenOutSecondHopsMap.get(subgraphPool.token1.id);if(tokenOutToken1SecondHop&&!tokenOutToken1SecondHop.hasEnoughPools()){poolAddressesSoFar.add(subgraphPool.id);tokenOutToken1SecondHop.pools.push(subgraphPool);continue}}}metric.putMetric("V2SubgraphLoopsInSecondIteration",loopsInSecondIteration,MetricLoggerUnit.Count);const topByTVLUsingTokenInSecondHops=[];for(const secondHopPools of topByTVLUsingTokenInSecondHopsMap.values()){topByTVLUsingTokenInSecondHops.push(...secondHopPools.pools)}const topByTVLUsingTokenOutSecondHops=[];for(const secondHopPools of topByTVLUsingTokenOutSecondHopsMap.values()){topByTVLUsingTokenOutSecondHops.push(...secondHopPools.pools)}const subgraphPools=_([...topByBaseWithTokenIn,...topByBaseWithTokenOut,...topByDirectSwapPool,...topByEthQuoteTokenPool,...topByTVL,...topByTVLUsingTokenIn,...topByTVLUsingTokenOut,...topByTVLUsingTokenInSecondHops,...topByTVLUsingTokenOutSecondHops]).uniqBy(pool=>pool.id).value();const tokenAddressesSet=new Set;for(const pool of subgraphPools){tokenAddressesSet.add(pool.token0.id);tokenAddressesSet.add(pool.token1.id)}const tokenAddresses=Array.from(tokenAddressesSet);log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V2 pools we are considering`);const tokenAccessor=await tokenProvider.getTokens(tokenAddresses,{blockNumber:blockNumber});const printV2SubgraphPool=s=>{var _a,_b,_c,_d;return`${(_b=(_a=tokenAccessor.getTokenByAddress(s.token0.id))===null||_a===void 0?void 0:_a.symbol)!==null&&_b!==void 0?_b:s.token0.id}/${(_d=(_c=tokenAccessor.getTokenByAddress(s.token1.id))===null||_c===void 0?void 0:_c.symbol)!==null&&_d!==void 0?_d:s.token1.id}`};log.info({topByBaseWithTokenIn:topByBaseWithTokenIn.map(printV2SubgraphPool),topByBaseWithTokenOut:topByBaseWithTokenOut.map(printV2SubgraphPool),topByTVL:topByTVL.map(printV2SubgraphPool),topByTVLUsingTokenIn:topByTVLUsingTokenIn.map(printV2SubgraphPool),topByTVLUsingTokenOut:topByTVLUsingTokenOut.map(printV2SubgraphPool),topByTVLUsingTokenInSecondHops:topByTVLUsingTokenInSecondHops.map(printV2SubgraphPool),topByTVLUsingTokenOutSecondHops:topByTVLUsingTokenOutSecondHops.map(printV2SubgraphPool),top2DirectSwap:topByDirectSwapPool.map(printV2SubgraphPool),top2EthQuotePool:topByEthQuoteTokenPool.map(printV2SubgraphPool)},`V2 Candidate pools`);const tokenPairsRaw=_.map(subgraphPools,subgraphPool=>{const tokenA=tokenAccessor.getTokenByAddress(subgraphPool.token0.id);const tokenB=tokenAccessor.getTokenByAddress(subgraphPool.token1.id);if(!tokenA||!tokenB){log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}`);return undefined}return[tokenA,tokenB]});const tokenPairs=_.compact(tokenPairsRaw);metric.putMetric("V2PoolsFilterLoad",Date.now()-beforePoolsFiltered,MetricLoggerUnit.Milliseconds);const beforePoolsLoad=Date.now();const poolAccessor=await poolProvider.getPools(tokenPairs,routingConfig);metric.putMetric("V2PoolsLoad",Date.now()-beforePoolsLoad,MetricLoggerUnit.Milliseconds);const poolsBySelection={protocol:Protocol.V2,selections:{topByBaseWithTokenIn:topByBaseWithTokenIn,topByBaseWithTokenOut:topByBaseWithTokenOut,topByDirectSwapPool:topByDirectSwapPool,topByEthQuoteTokenPool:topByEthQuoteTokenPool,topByTVL:topByTVL,topByTVLUsingTokenIn:topByTVLUsingTokenIn,topByTVLUsingTokenOut:topByTVLUsingTokenOut,topByTVLUsingTokenInSecondHops:topByTVLUsingTokenInSecondHops,topByTVLUsingTokenOutSecondHops:topByTVLUsingTokenOutSecondHops}};return{poolAccessor:poolAccessor,candidatePools:poolsBySelection,subgraphPools:subgraphPools}}async function getMixedRouteCandidatePools({v3CandidatePools,v2CandidatePools,routingConfig,tokenProvider,v3poolProvider,v2poolProvider}){const beforeSubgraphPools=Date.now();const[{subgraphPools:V3subgraphPools,candidatePools:V3candidatePools},{subgraphPools:V2subgraphPools,candidatePools:V2candidatePools}]=[v3CandidatePools,v2CandidatePools];metric.putMetric("MixedSubgraphPoolsLoad",Date.now()-beforeSubgraphPools,MetricLoggerUnit.Milliseconds);const beforePoolsFiltered=Date.now();const V2topByTVLPoolIds=new Set([...V2candidatePools.selections.topByTVLUsingTokenIn,...V2candidatePools.selections.topByBaseWithTokenIn,...V2candidatePools.selections.topByTVLUsingTokenOut,...V2candidatePools.selections.topByBaseWithTokenOut,...V2candidatePools.selections.topByDirectSwapPool].map(poolId=>poolId.id));const V2topByTVLSortedPools=_(V2subgraphPools).filter(pool=>V2topByTVLPoolIds.has(pool.id)).sortBy(pool=>-pool.reserveUSD).value();const V3sortedPools=_(V3subgraphPools).sortBy(pool=>-pool.tvlUSD).value();const buildV2Pools=[];V2topByTVLSortedPools.forEach(V2subgraphPool=>{const V3subgraphPool=V3sortedPools.find(pool=>pool.token0.id==V2subgraphPool.token0.id&&pool.token1.id==V2subgraphPool.token1.id||pool.token0.id==V2subgraphPool.token1.id&&pool.token1.id==V2subgraphPool.token0.id);if(V3subgraphPool){if(V2subgraphPool.reserveUSD>V3subgraphPool.tvlUSD){log.info({token0:V2subgraphPool.token0.id,token1:V2subgraphPool.token1.id,v2reserveUSD:V2subgraphPool.reserveUSD,v3tvlUSD:V3subgraphPool.tvlUSD},`MixedRoute heuristic, found a V2 pool with higher liquidity than its V3 counterpart`);buildV2Pools.push(V2subgraphPool)}}else{log.info({token0:V2subgraphPool.token0.id,token1:V2subgraphPool.token1.id,v2reserveUSD:V2subgraphPool.reserveUSD},`MixedRoute heuristic, found a V2 pool with no V3 counterpart`);buildV2Pools.push(V2subgraphPool)}});log.info(buildV2Pools.length,`Number of V2 candidate pools that fit first heuristic`);const subgraphPools=[...buildV2Pools,...V3sortedPools];const tokenAddresses=_(subgraphPools).flatMap(subgraphPool=>[subgraphPool.token0.id,subgraphPool.token1.id]).compact().uniq().value();log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} pools we are considering`);const tokenAccessor=await tokenProvider.getTokens(tokenAddresses,routingConfig);const V3tokenPairsRaw=_.map(V3sortedPools,subgraphPool=>{const tokenA=tokenAccessor.getTokenByAddress(subgraphPool.token0.id);const tokenB=tokenAccessor.getTokenByAddress(subgraphPool.token1.id);let fee;try{fee=parseFeeAmount(subgraphPool.feeTier)}catch(err){log.info({subgraphPool:subgraphPool},`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${subgraphPool.feeTier} because fee tier not supported`);return undefined}if(!tokenA||!tokenB){log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}/${fee} because ${tokenA?subgraphPool.token1.id:subgraphPool.token0.id} not found by token provider`);return undefined}return[tokenA,tokenB,fee]});const V3tokenPairs=_.compact(V3tokenPairsRaw);const V2tokenPairsRaw=_.map(buildV2Pools,subgraphPool=>{const tokenA=tokenAccessor.getTokenByAddress(subgraphPool.token0.id);const tokenB=tokenAccessor.getTokenByAddress(subgraphPool.token1.id);if(!tokenA||!tokenB){log.info(`Dropping candidate pool for ${subgraphPool.token0.id}/${subgraphPool.token1.id}`);return undefined}return[tokenA,tokenB]});const V2tokenPairs=_.compact(V2tokenPairsRaw);metric.putMetric("MixedPoolsFilterLoad",Date.now()-beforePoolsFiltered,MetricLoggerUnit.Milliseconds);const beforePoolsLoad=Date.now();const[V2poolAccessor,V3poolAccessor]=await Promise.all([v2poolProvider.getPools(V2tokenPairs,routingConfig),v3poolProvider.getPools(V3tokenPairs,routingConfig)]);metric.putMetric("MixedPoolsLoad",Date.now()-beforePoolsLoad,MetricLoggerUnit.Milliseconds);const buildPoolsBySelection=key=>{return[...buildV2Pools.filter(pool=>V2candidatePools.selections[key].map(p=>p.id).includes(pool.id)),...V3candidatePools.selections[key]]};const poolsBySelection={protocol:Protocol.MIXED,selections:{topByBaseWithTokenIn:buildPoolsBySelection("topByBaseWithTokenIn"),topByBaseWithTokenOut:buildPoolsBySelection("topByBaseWithTokenOut"),topByDirectSwapPool:buildPoolsBySelection("topByDirectSwapPool"),topByEthQuoteTokenPool:buildPoolsBySelection("topByEthQuoteTokenPool"),topByTVL:buildPoolsBySelection("topByTVL"),topByTVLUsingTokenIn:buildPoolsBySelection("topByTVLUsingTokenIn"),topByTVLUsingTokenOut:buildPoolsBySelection("topByTVLUsingTokenOut"),topByTVLUsingTokenInSecondHops:buildPoolsBySelection("topByTVLUsingTokenInSecondHops"),topByTVLUsingTokenOutSecondHops:buildPoolsBySelection("topByTVLUsingTokenOutSecondHops")}};return{V2poolAccessor:V2poolAccessor,V3poolAccessor:V3poolAccessor,candidatePools:poolsBySelection,subgraphPools:subgraphPools}}const BASE_SWAP_COST=BigNumber$1.from(135e3);const COST_PER_EXTRA_HOP=BigNumber$1.from(5e4);class V2HeuristicGasModelFactory extends IV2GasModelFactory{constructor(provider){super();this.provider=provider}async buildGasModel({chainId,gasPriceWei,poolProvider,token,l2GasDataProvider,providerConfig}){const l2GasData=l2GasDataProvider?await l2GasDataProvider.getGasData(providerConfig):undefined;const usdPoolPromise=this.getHighestLiquidityUSDPool(chainId,poolProvider,providerConfig);const nativeAndSpecifiedGasTokenPoolPromise=(providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken)&&!(providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken.equals(WRAPPED_NATIVE_CURRENCY[chainId]))?this.getEthPool(chainId,providerConfig.gasToken,poolProvider,providerConfig):Promise.resolve(null);const[usdPool,nativeAndSpecifiedGasTokenPool]=await Promise.all([usdPoolPromise,nativeAndSpecifiedGasTokenPoolPromise]);let ethPool=null;if(!token.equals(WRAPPED_NATIVE_CURRENCY[chainId])){ethPool=await this.getEthPool(chainId,token,poolProvider,providerConfig)}const usdToken=usdPool.token0.address==WRAPPED_NATIVE_CURRENCY[chainId].address?usdPool.token1:usdPool.token0;const calculateL1GasFees=async route=>{const nativePool=!token.equals(WRAPPED_NATIVE_CURRENCY[chainId])?await getV2NativePool(token,poolProvider,providerConfig):null;return await calculateL1GasFeesHelper(route,chainId,usdPool,token,nativePool,this.provider,l2GasData)};return{estimateGasCost:routeWithValidQuote=>{var _a;const{gasCostInEth,gasUse}=this.estimateGas(routeWithValidQuote,gasPriceWei,chainId,providerConfig);const gasCostInTermsOfUSD=getQuoteThroughNativePool(chainId,gasCostInEth,usdPool);let gasCostInTermsOfGasToken=undefined;if(nativeAndSpecifiedGasTokenPool){gasCostInTermsOfGasToken=getQuoteThroughNativePool(chainId,gasCostInEth,nativeAndSpecifiedGasTokenPool)}else if((_a=providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken)===null||_a===void 0?void 0:_a.equals(WRAPPED_NATIVE_CURRENCY[chainId])){gasCostInTermsOfGasToken=gasCostInEth}if(token.equals(WRAPPED_NATIVE_CURRENCY[chainId])){return{gasEstimate:gasUse,gasCostInToken:gasCostInEth,gasCostInUSD:gasCostInTermsOfUSD,gasCostInGasToken:gasCostInTermsOfGasToken}}if(!ethPool){log.info("Unable to find ETH pool with the quote token to produce gas adjusted costs. Route will not account for gas.");return{gasEstimate:gasUse,gasCostInToken:CurrencyAmount.fromRawAmount(token,0),gasCostInUSD:CurrencyAmount.fromRawAmount(usdToken,0)}}const gasCostInTermsOfQuoteToken=getQuoteThroughNativePool(chainId,gasCostInEth,ethPool);return{gasEstimate:gasUse,gasCostInToken:gasCostInTermsOfQuoteToken,gasCostInUSD:gasCostInTermsOfUSD,gasCostInGasToken:gasCostInTermsOfGasToken}},calculateL1GasFees:calculateL1GasFees}}estimateGas(routeWithValidQuote,gasPriceWei,chainId,providerConfig){const hops=routeWithValidQuote.route.pairs.length;let gasUse=BASE_SWAP_COST.add(COST_PER_EXTRA_HOP.mul(hops-1));if(providerConfig===null||providerConfig===void 0?void 0:providerConfig.additionalGasOverhead){gasUse=gasUse.add(providerConfig.additionalGasOverhead)}const totalGasCostWei=gasPriceWei.mul(gasUse);const weth=WRAPPED_NATIVE_CURRENCY[chainId];const gasCostInEth=CurrencyAmount.fromRawAmount(weth,totalGasCostWei.toString());return{gasCostInEth:gasCostInEth,gasUse:gasUse}}async getEthPool(chainId,token,poolProvider,providerConfig){const weth=WRAPPED_NATIVE_CURRENCY[chainId];const poolAccessor=await poolProvider.getPools([[weth,token]],providerConfig);const pool=poolAccessor.getPool(weth,token);if(!pool||pool.reserve0.equalTo(0)||pool.reserve1.equalTo(0)){log.error({weth:weth,token:token,reserve0:pool===null||pool===void 0?void 0:pool.reserve0.toExact(),reserve1:pool===null||pool===void 0?void 0:pool.reserve1.toExact()},`Could not find a valid WETH pool with ${token.symbol} for computing gas costs.`);return null}return pool}async getHighestLiquidityUSDPool(chainId,poolProvider,providerConfig){const usdTokens=usdGasTokensByChain[chainId];if(!usdTokens){throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`)}const usdPools=_.map(usdTokens,usdToken=>[usdToken,WRAPPED_NATIVE_CURRENCY[chainId]]);const poolAccessor=await poolProvider.getPools(usdPools,providerConfig);const poolsRaw=poolAccessor.getAllPools();const pools=_.filter(poolsRaw,pool=>pool.reserve0.greaterThan(0)&&pool.reserve1.greaterThan(0)&&(pool.token0.equals(WRAPPED_NATIVE_CURRENCY[chainId])||pool.token1.equals(WRAPPED_NATIVE_CURRENCY[chainId])));if(pools.length==0){log.error({pools:pools},`Could not find a USD/WETH pool for computing gas costs.`);throw new Error(`Can't find USD/WETH pool for computing gas costs.`)}const maxPool=_.maxBy(pools,pool=>{if(pool.token0.equals(WRAPPED_NATIVE_CURRENCY[chainId])){return parseFloat(pool.reserve0.toSignificant(2))}else{return parseFloat(pool.reserve1.toSignificant(2))}});return maxPool}}class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory{constructor(){super()}async buildGasModel({chainId,gasPriceWei,pools,quoteToken,v2poolProvider:V2poolProvider,providerConfig}){const nativeCurrency=WRAPPED_NATIVE_CURRENCY[chainId];const usdPool=pools.usdPool;const usdToken=usdPool.token0.equals(nativeCurrency)?usdPool.token1:usdPool.token0;let nativeV2Pool;if(!quoteToken.equals(nativeCurrency)&&V2poolProvider){nativeV2Pool=await getV2NativePool(quoteToken,V2poolProvider,providerConfig)}const estimateGasCost=routeWithValidQuote=>{var _a;const{totalGasCostNativeCurrency,baseGasUse}=this.estimateGas(routeWithValidQuote,gasPriceWei,chainId,providerConfig);const gasCostInTermsOfUSD=getQuoteThroughNativePool(chainId,totalGasCostNativeCurrency,usdPool);const nativeAndSpecifiedGasTokenPool=pools.nativeAndSpecifiedGasTokenV3Pool;let gasCostInTermsOfGasToken=undefined;if(nativeAndSpecifiedGasTokenPool){gasCostInTermsOfGasToken=getQuoteThroughNativePool(chainId,totalGasCostNativeCurrency,nativeAndSpecifiedGasTokenPool)}else if((_a=providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken)===null||_a===void 0?void 0:_a.equals(nativeCurrency)){gasCostInTermsOfGasToken=totalGasCostNativeCurrency}if(quoteToken.equals(nativeCurrency)){return{gasEstimate:baseGasUse,gasCostInToken:totalGasCostNativeCurrency,gasCostInUSD:gasCostInTermsOfUSD,gasCostInGasToken:gasCostInTermsOfGasToken}}const nativeV3Pool=pools.nativeAndQuoteTokenV3Pool;if(!nativeV3Pool&&!nativeV2Pool){log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);return{gasEstimate:baseGasUse,gasCostInToken:CurrencyAmount.fromRawAmount(quoteToken,0),gasCostInUSD:CurrencyAmount.fromRawAmount(usdToken,0)}}const nativePool=(!nativeV3Pool||JSBI.equal(nativeV3Pool.liquidity,JSBI.BigInt(0)))&&nativeV2Pool?nativeV2Pool:nativeV3Pool;const gasCostInTermsOfQuoteToken=getQuoteThroughNativePool(chainId,totalGasCostNativeCurrency,nativePool);return{gasEstimate:baseGasUse,gasCostInToken:gasCostInTermsOfQuoteToken,gasCostInUSD:gasCostInTermsOfUSD,gasCostInGasToken:gasCostInTermsOfGasToken}};return{estimateGasCost:estimateGasCost.bind(this)}}estimateGas(routeWithValidQuote,gasPriceWei,chainId,providerConfig){const totalInitializedTicksCrossed=BigNumber$1.from(Math.max(1,_.sum(routeWithValidQuote.initializedTicksCrossedList)));let baseGasUse=BigNumber$1.from(0);const route=routeWithValidQuote.route;const res=partitionMixedRouteByProtocol(route);res.map(section=>{if(section.every(pool=>pool instanceof Pool)){baseGasUse=baseGasUse.add(BASE_SWAP_COST$1(chainId));baseGasUse=baseGasUse.add(COST_PER_HOP(chainId).mul(section.length))}else if(section.every(pool=>pool instanceof Pair)){baseGasUse=baseGasUse.add(BASE_SWAP_COST);baseGasUse=baseGasUse.add(COST_PER_EXTRA_HOP.mul(section.length-1))}});const tickGasUse=COST_PER_INIT_TICK(chainId).mul(totalInitializedTicksCrossed);const uninitializedTickGasUse=COST_PER_UNINIT_TICK.mul(0);baseGasUse=baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);if(providerConfig===null||providerConfig===void 0?void 0:providerConfig.additionalGasOverhead){baseGasUse=baseGasUse.add(providerConfig.additionalGasOverhead)}const baseGasCostWei=gasPriceWei.mul(baseGasUse);const wrappedCurrency=WRAPPED_NATIVE_CURRENCY[chainId];const totalGasCostNativeCurrency=CurrencyAmount.fromRawAmount(wrappedCurrency,baseGasCostWei.toString());return{totalGasCostNativeCurrency:totalGasCostNativeCurrency,totalInitializedTicksCrossed:totalInitializedTicksCrossed,baseGasUse:baseGasUse}}}class BaseQuoter{constructor(tokenProvider,chainId,protocol,blockedTokenListProvider,tokenValidatorProvider){this.tokenProvider=tokenProvider;this.chainId=chainId;this.protocol=protocol;this.blockedTokenListProvider=blockedTokenListProvider;this.tokenValidatorProvider=tokenValidatorProvider}getRoutesThenQuotes(tokenIn,tokenOut,amount,amounts,percents,quoteToken,candidatePools,tradeType,routingConfig,gasModel,gasPriceWei){return this.getRoutes(tokenIn,tokenOut,candidatePools,tradeType,routingConfig).then(routesResult=>{if(routesResult.routes.length==1){metric.putMetric(`${this.protocol}QuoterSingleRoute`,1,MetricLoggerUnit.Count);percents=[100];amounts=[amount]}if(routesResult.routes.length>0){metric.putMetric(`${this.protocol}QuoterRoutesFound`,routesResult.routes.length,MetricLoggerUnit.Count)}else{metric.putMetric(`${this.protocol}QuoterNoRoutesFound`,routesResult.routes.length,MetricLoggerUnit.Count)}return this.getQuotes(routesResult.routes,amounts,percents,quoteToken,tradeType,routingConfig,routesResult.candidatePools,gasModel,gasPriceWei)})}async applyTokenValidatorToPools(pools,isInvalidFn){if(!this.tokenValidatorProvider){return pools}log.info(`Running token validator on ${pools.length} pools`);const tokens=_.flatMap(pools,pool=>[pool.token0,pool.token1]);const tokenValidationResults=await this.tokenValidatorProvider.validateTokens(tokens);const poolsFiltered=_.filter(pools,pool=>{const token0Validation=tokenValidationResults.getValidationByToken(pool.token0);const token1Validation=tokenValidationResults.getValidationByToken(pool.token1);const token0Invalid=isInvalidFn(pool.token0,token0Validation);const token1Invalid=isInvalidFn(pool.token1,token1Validation);if(token0Invalid||token1Invalid){log.info(`Dropping pool ${poolToString(pool)} because token is invalid. ${pool.token0.symbol}: ${token0Validation}, ${pool.token1.symbol}: ${token1Validation}`)}return!token0Invalid&&!token1Invalid});return poolsFiltered}}class V2RouteWithValidQuote{constructor({amount,rawQuote,percent,route,gasModel,quoteToken,tradeType,v2PoolProvider}){this.protocol=Protocol.V2;this.amount=amount;this.rawQuote=rawQuote;this.quote=CurrencyAmount.fromRawAmount(quoteToken,rawQuote.toString());this.percent=percent;this.route=route;this.gasModel=gasModel;this.quoteToken=quoteToken;this.tradeType=tradeType;const{gasEstimate,gasCostInToken,gasCostInUSD,gasCostInGasToken}=this.gasModel.estimateGasCost(this);this.gasCostInToken=gasCostInToken;this.gasCostInUSD=gasCostInUSD;this.gasEstimate=gasEstimate;this.gasCostInGasToken=gasCostInGasToken;if(this.tradeType==TradeType$2.EXACT_INPUT){const quoteGasAdjusted=this.quote.subtract(gasCostInToken);this.quoteAdjustedForGas=quoteGasAdjusted}else{const quoteGasAdjusted=this.quote.add(gasCostInToken);this.quoteAdjustedForGas=quoteGasAdjusted}this.poolAddresses=_.map(route.pairs,p=>v2PoolProvider.getPoolAddress(p.token0,p.token1).poolAddress);this.tokenPath=this.route.path}toString(){return`${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`}}class V3RouteWithValidQuote{constructor({amount,rawQuote,sqrtPriceX96AfterList,initializedTicksCrossedList,quoterGasEstimate,percent,route,gasModel,quoteToken,tradeType,v3PoolProvider}){this.protocol=Protocol.V3;this.amount=amount;this.rawQuote=rawQuote;this.sqrtPriceX96AfterList=sqrtPriceX96AfterList;this.initializedTicksCrossedList=initializedTicksCrossedList;this.quoterGasEstimate=quoterGasEstimate;this.quote=CurrencyAmount.fromRawAmount(quoteToken,rawQuote.toString());this.percent=percent;this.route=route;this.gasModel=gasModel;this.quoteToken=quoteToken;this.tradeType=tradeType;const{gasEstimate,gasCostInToken,gasCostInUSD,gasCostInGasToken}=this.gasModel.estimateGasCost(this);this.gasCostInToken=gasCostInToken;this.gasCostInUSD=gasCostInUSD;this.gasEstimate=gasEstimate;this.gasCostInGasToken=gasCostInGasToken;if(this.tradeType==TradeType$2.EXACT_INPUT){const quoteGasAdjusted=this.quote.subtract(gasCostInToken);this.quoteAdjustedForGas=quoteGasAdjusted}else{const quoteGasAdjusted=this.quote.add(gasCostInToken);this.quoteAdjustedForGas=quoteGasAdjusted}this.poolAddresses=_.map(route.pools,p=>v3PoolProvider.getPoolAddress(p.token0,p.token1,p.fee).poolAddress);this.tokenPath=this.route.tokenPath}toString(){return`${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`}}class MixedRouteWithValidQuote{constructor({amount,rawQuote,sqrtPriceX96AfterList,initializedTicksCrossedList,quoterGasEstimate,percent,route,mixedRouteGasModel,quoteToken,tradeType,v3PoolProvider,v2PoolProvider}){this.protocol=Protocol.MIXED;this.amount=amount;this.rawQuote=rawQuote;this.sqrtPriceX96AfterList=sqrtPriceX96AfterList;this.initializedTicksCrossedList=initializedTicksCrossedList;this.quoterGasEstimate=quoterGasEstimate;this.quote=CurrencyAmount.fromRawAmount(quoteToken,rawQuote.toString());this.percent=percent;this.route=route;this.gasModel=mixedRouteGasModel;this.quoteToken=quoteToken;this.tradeType=tradeType;const{gasEstimate,gasCostInToken,gasCostInUSD,gasCostInGasToken}=this.gasModel.estimateGasCost(this);this.gasCostInToken=gasCostInToken;this.gasCostInUSD=gasCostInUSD;this.gasEstimate=gasEstimate;this.gasCostInGasToken=gasCostInGasToken;if(this.tradeType==TradeType$2.EXACT_INPUT){const quoteGasAdjusted=this.quote.subtract(gasCostInToken);this.quoteAdjustedForGas=quoteGasAdjusted}else{const quoteGasAdjusted=this.quote.add(gasCostInToken);this.quoteAdjustedForGas=quoteGasAdjusted}this.poolAddresses=_.map(route.pools,p=>{return p instanceof Pool?v3PoolProvider.getPoolAddress(p.token0,p.token1,p.fee).poolAddress:v2PoolProvider.getPoolAddress(p.token0,p.token1).poolAddress});this.tokenPath=this.route.path}toString(){return`${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${routeToString(this.route)}`}}function computeAllV3Routes(tokenIn,tokenOut,pools,maxHops){return computeAllRoutes(tokenIn,tokenOut,(route,tokenIn,tokenOut)=>{return new V3Route(route,tokenIn,tokenOut)},pools,maxHops)}function computeAllV2Routes(tokenIn,tokenOut,pools,maxHops){return computeAllRoutes(tokenIn,tokenOut,(route,tokenIn,tokenOut)=>{return new V2Route(route,tokenIn,tokenOut)},pools,maxHops)}function computeAllMixedRoutes(tokenIn,tokenOut,parts,maxHops){const routesRaw=computeAllRoutes(tokenIn,tokenOut,(route,tokenIn,tokenOut)=>{return new MixedRoute(route,tokenIn,tokenOut)},parts,maxHops);return routesRaw.filter(route=>{return!route.pools.every(pool=>pool instanceof Pool)&&!route.pools.every(pool=>pool instanceof Pair)})}function computeAllRoutes(tokenIn,tokenOut,buildRoute,pools,maxHops){var _a;const poolsUsed=Array(pools.length).fill(false);const routes=[];const computeRoutes=(tokenIn,tokenOut,currentRoute,poolsUsed,tokensVisited,_previousTokenOut)=>{if(currentRoute.length>maxHops){return}if(currentRoute.length>0&&currentRoute[currentRoute.length-1].involvesToken(tokenOut)){routes.push(buildRoute([...currentRoute],tokenIn,tokenOut));return}for(let i=0;i<pools.length;i++){if(poolsUsed[i]){continue}const curPool=pools[i];const previousTokenOut=_previousTokenOut?_previousTokenOut:tokenIn;if(!curPool.involvesToken(previousTokenOut)){continue}const currentTokenOut=curPool.token0.equals(previousTokenOut)?curPool.token1:curPool.token0;if(tokensVisited.has(currentTokenOut.address.toLowerCase())){continue}tokensVisited.add(currentTokenOut.address.toLowerCase());currentRoute.push(curPool);poolsUsed[i]=true;computeRoutes(tokenIn,tokenOut,currentRoute,poolsUsed,tokensVisited,currentTokenOut);poolsUsed[i]=false;currentRoute.pop();tokensVisited.delete(currentTokenOut.address.toLowerCase())}};computeRoutes(tokenIn,tokenOut,[],poolsUsed,new Set([tokenIn.address.toLowerCase()]));log.info({routes:routes.map(routeToString),pools:pools.map(poolToString)},`Computed ${routes.length} possible routes for type ${(_a=routes[0])===null||_a===void 0?void 0:_a.protocol}.`);return routes}class MixedQuoter extends BaseQuoter{constructor(v3SubgraphProvider,v3PoolProvider,v2SubgraphProvider,v2PoolProvider,onChainQuoteProvider,tokenProvider,chainId,blockedTokenListProvider,tokenValidatorProvider){super(tokenProvider,chainId,Protocol.MIXED,blockedTokenListProvider,tokenValidatorProvider);this.v3SubgraphProvider=v3SubgraphProvider;this.v3PoolProvider=v3PoolProvider;this.v2SubgraphProvider=v2SubgraphProvider;this.v2PoolProvider=v2PoolProvider;this.onChainQuoteProvider=onChainQuoteProvider}async getRoutes(tokenIn,tokenOut,v3v2candidatePools,tradeType,routingConfig){const beforeGetRoutes=Date.now();if(tradeType!=TradeType$2.EXACT_INPUT){throw new Error("Mixed route quotes are not supported for EXACT_OUTPUT")}const[v3CandidatePools,v2CandidatePools]=v3v2candidatePools;const{V2poolAccessor,V3poolAccessor,candidatePools:mixedRouteCandidatePools}=await getMixedRouteCandidatePools({v3CandidatePools:v3CandidatePools,v2CandidatePools:v2CandidatePools,tokenProvider:this.tokenProvider,v3poolProvider:this.v3PoolProvider,v2poolProvider:this.v2PoolProvider,routingConfig:routingConfig,chainId:this.chainId});const V3poolsRaw=V3poolAccessor.getAllPools();const V2poolsRaw=V2poolAccessor.getAllPools();const poolsRaw=[...V3poolsRaw,...V2poolsRaw];const candidatePools=mixedRouteCandidatePools;const pools=await this.applyTokenValidatorToPools(poolsRaw,(token,tokenValidation)=>{if(!tokenValidation){return false}if(tokenValidation==TokenValidationResult.STF&&(token.equals(tokenIn)||token.equals(tokenOut))){return false}return tokenValidation==TokenValidationResult.FOT||tokenValidation==TokenValidationResult.STF});const{maxSwapsPerPath}=routingConfig;const routes=computeAllMixedRoutes(tokenIn,tokenOut,pools,maxSwapsPerPath);metric.putMetric("MixedGetRoutesLoad",Date.now()-beforeGetRoutes,MetricLoggerUnit.Milliseconds);return{routes:routes,candidatePools:candidatePools}}async getQuotes(routes,amounts,percents,quoteToken,tradeType,routingConfig,candidatePools,gasModel){const beforeGetQuotes=Date.now();log.info("Starting to get mixed quotes");if(gasModel===undefined){throw new Error("GasModel for MixedRouteWithValidQuote is required to getQuotes")}if(routes.length==0){return{routesWithValidQuotes:[],candidatePools:candidatePools}}const quoteFn=this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider);const beforeQuotes=Date.now();log.info(`Getting quotes for mixed for ${routes.length} routes with ${amounts.length} amounts per route.`);const{routesWithQuotes}=await quoteFn(amounts,routes,{blockNumber:routingConfig.blockNumber});metric.putMetric("MixedQuotesLoad",Date.now()-beforeQuotes,MetricLoggerUnit.Milliseconds);metric.putMetric("MixedQuotesFetched",_(routesWithQuotes).map(([,quotes])=>quotes.length).sum(),MetricLoggerUnit.Count);const routesWithValidQuotes=[];for(const routeWithQuote of routesWithQuotes){const[route,quotes]=routeWithQuote;for(let i=0;i<quotes.length;i++){const percent=percents[i];const amountQuote=quotes[i];const{quote,amount,sqrtPriceX96AfterList,initializedTicksCrossedList,gasEstimate}=amountQuote;if(!quote||!sqrtPriceX96AfterList||!initializedTicksCrossedList||!gasEstimate){log.debug({route:routeToString(route),amountQuote:amountQuote},"Dropping a null mixed quote for route.");continue}const routeWithValidQuote=new MixedRouteWithValidQuote({route:route,rawQuote:quote,amount:amount,percent:percent,sqrtPriceX96AfterList:sqrtPriceX96AfterList,initializedTicksCrossedList:initializedTicksCrossedList,quoterGasEstimate:gasEstimate,mixedRouteGasModel:gasModel,quoteToken:quoteToken,tradeType:tradeType,v3PoolProvider:this.v3PoolProvider,v2PoolProvider:this.v2PoolProvider});routesWithValidQuotes.push(routeWithValidQuote)}}metric.putMetric("MixedGetQuotesLoad",Date.now()-beforeGetQuotes,MetricLoggerUnit.Milliseconds);return{routesWithValidQuotes:routesWithValidQuotes,candidatePools:candidatePools}}}class V2Quoter extends BaseQuoter{constructor(v2SubgraphProvider,v2PoolProvider,v2QuoteProvider,v2GasModelFactory,tokenProvider,chainId,blockedTokenListProvider,tokenValidatorProvider,l2GasDataProvider){super(tokenProvider,chainId,Protocol.V2,blockedTokenListProvider,tokenValidatorProvider);this.v2SubgraphProvider=v2SubgraphProvider;this.v2PoolProvider=v2PoolProvider;this.v2QuoteProvider=v2QuoteProvider;this.v2GasModelFactory=v2GasModelFactory;this.l2GasDataProvider=l2GasDataProvider}async getRoutes(tokenIn,tokenOut,v2CandidatePools,_tradeType,routingConfig){const beforeGetRoutes=Date.now();const{poolAccessor,candidatePools}=v2CandidatePools;const poolsRaw=poolAccessor.getAllPools();const pools=await this.applyTokenValidatorToPools(poolsRaw,(token,tokenValidation)=>{if(!tokenValidation){return false}if(tokenValidation==TokenValidationResult.STF&&(token.equals(tokenIn)||token.equals(tokenOut))){return false}return tokenValidation==TokenValidationResult.STF});const{maxSwapsPerPath}=routingConfig;const routes=computeAllV2Routes(tokenIn,tokenOut,pools,maxSwapsPerPath);metric.putMetric("V2GetRoutesLoad",Date.now()-beforeGetRoutes,MetricLoggerUnit.Milliseconds);return{routes:routes,candidatePools:candidatePools}}async getQuotes(routes,amounts,percents,quoteToken,tradeType,_routingConfig,candidatePools,_gasModel,gasPriceWei){const beforeGetQuotes=Date.now();log.info("Starting to get V2 quotes");if(gasPriceWei===undefined){throw new Error("GasPriceWei for V2Routes is required to getQuotes")}if(amounts.length==0||!amounts.every(amount=>amount.currency.equals(amounts[0].currency))){throw new Error("Amounts must have at least one amount and must be same token")}const amountToken=amounts[0].currency;const gasToken=_routingConfig.gasToken?(await this.tokenProvider.getTokens([_routingConfig.gasToken])).getTokenByAddress(_routingConfig.gasToken):undefined;if(routes.length==0){return{routesWithValidQuotes:[],candidatePools:candidatePools}}const quoteFn=tradeType==TradeType$2.EXACT_INPUT?this.v2QuoteProvider.getQuotesManyExactIn.bind(this.v2QuoteProvider):this.v2QuoteProvider.getQuotesManyExactOut.bind(this.v2QuoteProvider);const beforeQuotes=Date.now();log.info(`Getting quotes for V2 for ${routes.length} routes with ${amounts.length} amounts per route.`);const{routesWithQuotes}=await quoteFn(amounts,routes,_routingConfig);const v2GasModel=await this.v2GasModelFactory.buildGasModel({chainId:this.chainId,gasPriceWei:gasPriceWei,poolProvider:this.v2PoolProvider,token:quoteToken,l2GasDataProvider:this.l2GasDataProvider,providerConfig:{..._routingConfig,additionalGasOverhead:NATIVE_OVERHEAD(this.chainId,amountToken,quoteToken),gasToken:gasToken}});metric.putMetric("V2QuotesLoad",Date.now()-beforeQuotes,MetricLoggerUnit.Milliseconds);metric.putMetric("V2QuotesFetched",_(routesWithQuotes).map(([,quotes])=>quotes.length).sum(),MetricLoggerUnit.Count);const routesWithValidQuotes=[];for(const routeWithQuote of routesWithQuotes){const[route,quotes]=routeWithQuote;for(let i=0;i<quotes.length;i++){const percent=percents[i];const amountQuote=quotes[i];const{quote,amount}=amountQuote;if(!quote){log.debug({route:routeToString(route),amountQuote:amountQuote},"Dropping a null V2 quote for route.");continue}const routeWithValidQuote=new V2RouteWithValidQuote({route:route,rawQuote:quote,amount:amount,percent:percent,gasModel:v2GasModel,quoteToken:quoteToken,tradeType:tradeType,v2PoolProvider:this.v2PoolProvider});routesWithValidQuotes.push(routeWithValidQuote)}}metric.putMetric("V2GetQuotesLoad",Date.now()-beforeGetQuotes,MetricLoggerUnit.Milliseconds);return{routesWithValidQuotes:routesWithValidQuotes,candidatePools:candidatePools}}async refreshRoutesThenGetQuotes(tokenIn,tokenOut,routes,amounts,percents,quoteToken,tradeType,routingConfig,gasPriceWei){const tokenPairs=[];routes.forEach(route=>route.pairs.forEach(pair=>tokenPairs.push([pair.token0,pair.token1])));return this.v2PoolProvider.getPools(tokenPairs,routingConfig).then(poolAccesor=>{const routes=computeAllV2Routes(tokenIn,tokenOut,poolAccesor.getAllPools(),routingConfig.maxSwapsPerPath);return this.getQuotes(routes,amounts,percents,quoteToken,tradeType,routingConfig,undefined,undefined,gasPriceWei)})}}class V3Quoter extends BaseQuoter{constructor(v3SubgraphProvider,v3PoolProvider,onChainQuoteProvider,tokenProvider,chainId,blockedTokenListProvider,tokenValidatorProvider){super(tokenProvider,chainId,Protocol.V3,blockedTokenListProvider,tokenValidatorProvider);this.v3SubgraphProvider=v3SubgraphProvider;this.v3PoolProvider=v3PoolProvider;this.onChainQuoteProvider=onChainQuoteProvider}async getRoutes(tokenIn,tokenOut,v3CandidatePools,_tradeType,routingConfig){const beforeGetRoutes=Date.now();const{poolAccessor,candidatePools}=v3CandidatePools;const poolsRaw=poolAccessor.getAllPools();const pools=await this.applyTokenValidatorToPools(poolsRaw,(token,tokenValidation)=>{if(!tokenValidation){return false}if(tokenValidation==TokenValidationResult.STF&&(token.equals(tokenIn)||token.equals(tokenOut))){return false}return tokenValidation==TokenValidationResult.FOT||tokenValidation==TokenValidationResult.STF});const{maxSwapsPerPath}=routingConfig;const routes=computeAllV3Routes(tokenIn,tokenOut,pools,maxSwapsPerPath);metric.putMetric("V3GetRoutesLoad",Date.now()-beforeGetRoutes,MetricLoggerUnit.Milliseconds);return{routes:routes,candidatePools:candidatePools}}async getQuotes(routes,amounts,percents,quoteToken,tradeType,routingConfig,candidatePools,gasModel){const beforeGetQuotes=Date.now();log.info("Starting to get V3 quotes");if(gasModel===undefined){throw new Error("GasModel for V3RouteWithValidQuote is required to getQuotes")}if(routes.length==0){return{routesWithValidQuotes:[],candidatePools:candidatePools}}const quoteFn=tradeType==TradeType$2.EXACT_INPUT?this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider):this.onChainQuoteProvider.getQuotesManyExactOut.bind(this.onChainQuoteProvider);const beforeQuotes=Date.now();log.info(`Getting quotes for V3 for ${routes.length} routes with ${amounts.length} amounts per route.`);const{routesWithQuotes}=await quoteFn(amounts,routes,{blockNumber:routingConfig.blockNumber});metric.putMetric("V3QuotesLoad",Date.now()-beforeQuotes,MetricLoggerUnit.Milliseconds);metric.putMetric("V3QuotesFetched",_(routesWithQuotes).map(([,quotes])=>quotes.length).sum(),MetricLoggerUnit.Count);const routesWithValidQuotes=[];for(const routeWithQuote of routesWithQuotes){const[route,quotes]=routeWithQuote;for(let i=0;i<quotes.length;i++){const percent=percents[i];const amountQuote=quotes[i];const{quote,amount,sqrtPriceX96AfterList,initializedTicksCrossedList,gasEstimate}=amountQuote;if(!quote||!sqrtPriceX96AfterList||!initializedTicksCrossedList||!gasEstimate){log.debug({route:routeToString(route),amountQuote:amountQuote},"Dropping a null V3 quote for route.");continue}const routeWithValidQuote=new V3RouteWithValidQuote({route:route,rawQuote:quote,amount:amount,percent:percent,sqrtPriceX96AfterList:sqrtPriceX96AfterList,initializedTicksCrossedList:initializedTicksCrossedList,quoterGasEstimate:gasEstimate,gasModel:gasModel,quoteToken:quoteToken,tradeType:tradeType,v3PoolProvider:this.v3PoolProvider});routesWithValidQuotes.push(routeWithValidQuote)}}metric.putMetric("V3GetQuotesLoad",Date.now()-beforeGetQuotes,MetricLoggerUnit.Milliseconds);return{routesWithValidQuotes:routesWithValidQuotes,candidatePools:candidatePools}}}class LowerCaseStringArray extends Array{constructor(...items){super(...items.map(item=>item.toLowerCase()))}}class AlphaRouter{constructor({chainId,provider,multicall2Provider,v3PoolProvider,onChainQuoteProvider,v2PoolProvider,v2QuoteProvider,v2SubgraphProvider,tokenProvider,blockedTokenListProvider,v3SubgraphProvider,gasPriceProvider,v3GasModelFactory,v2GasModelFactory,mixedRouteGasModelFactory,swapRouterProvider,tokenValidatorProvider,arbitrumGasDataProvider,simulator,routeCachingProvider,tokenPropertiesProvider,portionProvider,v2Supported}){this.chainId=chainId;this.provider=provider;this.multicall2Provider=multicall2Provider!==null&&multicall2Provider!==void 0?multicall2Provider:new UniswapMulticallProvider(chainId,provider,375e3);this.v3PoolProvider=v3PoolProvider!==null&&v3PoolProvider!==void 0?v3PoolProvider:new CachingV3PoolProvider(this.chainId,new V3PoolProvider(ID_TO_CHAIN_ID(chainId),this.multicall2Provider),new NodeJSCache(new NodeCache({stdTTL:360,useClones:false})));this.simulator=simulator;this.routeCachingProvider=routeCachingProvider;if(onChainQuoteProvider){this.onChainQuoteProvider=onChainQuoteProvider}else{switch(chainId){case ChainId$1.OPTIMISM:case ChainId$1.OPTIMISM_GOERLI:case ChainId$1.OPTIMISM_SEPOLIA:this.onChainQuoteProvider=new OnChainQuoteProvider(chainId,provider,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:110,gasLimitPerCall:12e5,quoteMinSuccessRate:.1},{gasLimitOverride:3e6,multicallChunk:45},{gasLimitOverride:3e6,multicallChunk:45},{baseBlockOffset:-10,rollback:{enabled:true,attemptsBeforeRollback:1,rollbackBlockOffset:-10}});break;case ChainId$1.BASE:case ChainId$1.BLAST:case ChainId$1.BASE_GOERLI:this.onChainQuoteProvider=new OnChainQuoteProvider(chainId,provider,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:80,gasLimitPerCall:12e5,quoteMinSuccessRate:.1},{gasLimitOverride:3e6,multicallChunk:45},{gasLimitOverride:3e6,multicallChunk:45},{baseBlockOffset:-10,rollback:{enabled:true,attemptsBeforeRollback:1,rollbackBlockOffset:-10}});break;case ChainId$1.ARBITRUM_ONE:case ChainId$1.ARBITRUM_GOERLI:case ChainId$1.ARBITRUM_SEPOLIA:this.onChainQuoteProvider=new OnChainQuoteProvider(chainId,provider,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:10,gasLimitPerCall:12e6,quoteMinSuccessRate:.1},{gasLimitOverride:3e7,multicallChunk:6},{gasLimitOverride:3e7,multicallChunk:6});break;case ChainId$1.CELO:case ChainId$1.CELO_ALFAJORES:this.onChainQuoteProvider=new OnChainQuoteProvider(chainId,provider,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:10,gasLimitPerCall:5e6,quoteMinSuccessRate:.1},{gasLimitOverride:5e6,multicallChunk:5},{gasLimitOverride:625e4,multicallChunk:4});break;default:this.onChainQuoteProvider=new OnChainQuoteProvider(chainId,provider,this.multicall2Provider,{retries:2,minTimeout:100,maxTimeout:1e3},{multicallChunk:210,gasLimitPerCall:705e3,quoteMinSuccessRate:.15},{gasLimitOverride:2e6,multicallChunk:70});break}}if(tokenValidatorProvider){this.tokenValidatorProvider=tokenValidatorProvider}else if(this.chainId===ChainId$1.MAINNET){this.tokenValidatorProvider=new TokenValidatorProvider(this.chainId,this.multicall2Provider,new NodeJSCache(new NodeCache({stdTTL:3e4,useClones:false})))}if(tokenPropertiesProvider){this.tokenPropertiesProvider=tokenPropertiesProvider}else{this.tokenPropertiesProvider=new TokenPropertiesProvider(this.chainId,new NodeJSCache(new NodeCache({stdTTL:86400,useClones:false})),new OnChainTokenFeeFetcher(this.chainId,provider))}this.v2PoolProvider=v2PoolProvider!==null&&v2PoolProvider!==void 0?v2PoolProvider:new CachingV2PoolProvider(chainId,new V2PoolProvider(chainId,this.multicall2Provider,this.tokenPropertiesProvider),new NodeJSCache(new NodeCache({stdTTL:60,useClones:false})));this.v2QuoteProvider=v2QuoteProvider!==null&&v2QuoteProvider!==void 0?v2QuoteProvider:new V2QuoteProvider;this.blockedTokenListProvider=blockedTokenListProvider!==null&&blockedTokenListProvider!==void 0?blockedTokenListProvider:new CachingTokenListProvider(chainId,UNSUPPORTED_TOKENS,new NodeJSCache(new NodeCache({stdTTL:3600,useClones:false})));this.tokenProvider=tokenProvider!==null&&tokenProvider!==void 0?tokenProvider:new CachingTokenProviderWithFallback(chainId,new NodeJSCache(new NodeCache({stdTTL:3600,useClones:false})),new CachingTokenListProvider(chainId,DEFAULT_TOKEN_LIST,new NodeJSCache(new NodeCache({stdTTL:3600,useClones:false}))),new TokenProvider(chainId,this.multicall2Provider));this.portionProvider=portionProvider!==null&&portionProvider!==void 0?portionProvider:new PortionProvider;const chainName=ID_TO_NETWORK_NAME(chainId);if(v2SubgraphProvider){this.v2SubgraphProvider=v2SubgraphProvider}else{this.v2SubgraphProvider=new V2SubgraphProviderWithFallBacks([new CachingV2SubgraphProvider(chainId,new URISubgraphProvider(chainId,`https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v2/${chainName}.json`,undefined,0),new NodeJSCache(new NodeCache({stdTTL:300,useClones:false}))),new StaticV2SubgraphProvider(chainId)])}if(v3SubgraphProvider){this.v3SubgraphProvider=v3SubgraphProvider}else{this.v3SubgraphProvider=new V3SubgraphProviderWithFallBacks([new CachingV3SubgraphProvider(chainId,new URISubgraphProvider(chainId,`https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v3/${chainName}.json`,undefined,0),new NodeJSCache(new NodeCache({stdTTL:300,useClones:false}))),new StaticV3SubgraphProvider(chainId,this.v3PoolProvider)])}let gasPriceProviderInstance;if(JsonRpcProvider.isProvider(this.provider)){gasPriceProviderInstance=new OnChainGasPriceProvider(chainId,new EIP1559GasPriceProvider(this.provider),new LegacyGasPriceProvider(this.provider))}else{gasPriceProviderInstance=new ETHGasStationInfoProvider(ETH_GAS_STATION_API_URL)}this.gasPriceProvider=gasPriceProvider!==null&&gasPriceProvider!==void 0?gasPriceProvider:new CachingGasStationProvider(chainId,gasPriceProviderInstance,new NodeJSCache(new NodeCache({stdTTL:7,useClones:false})));this.v3GasModelFactory=v3GasModelFactory!==null&&v3GasModelFactory!==void 0?v3GasModelFactory:new V3HeuristicGasModelFactory(this.provider);this.v2GasModelFactory=v2GasModelFactory!==null&&v2GasModelFactory!==void 0?v2GasModelFactory:new V2HeuristicGasModelFactory(this.provider);this.mixedRouteGasModelFactory=mixedRouteGasModelFactory!==null&&mixedRouteGasModelFactory!==void 0?mixedRouteGasModelFactory:new MixedRouteHeuristicGasModelFactory;this.swapRouterProvider=swapRouterProvider!==null&&swapRouterProvider!==void 0?swapRouterProvider:new SwapRouterProvider(this.multicall2Provider,this.chainId);if(chainId===ChainId$1.ARBITRUM_ONE||chainId===ChainId$1.ARBITRUM_GOERLI){this.l2GasDataProvider=arbitrumGasDataProvider!==null&&arbitrumGasDataProvider!==void 0?arbitrumGasDataProvider:new ArbitrumGasDataProvider(chainId,this.provider)}this.v2Quoter=new V2Quoter(this.v2SubgraphProvider,this.v2PoolProvider,this.v2QuoteProvider,this.v2GasModelFactory,this.tokenProvider,this.chainId,this.blockedTokenListProvider,this.tokenValidatorProvider,this.l2GasDataProvider);this.v3Quoter=new V3Quoter(this.v3SubgraphProvider,this.v3PoolProvider,this.onChainQuoteProvider,this.tokenProvider,this.chainId,this.blockedTokenListProvider,this.tokenValidatorProvider);this.mixedQuoter=new MixedQuoter(this.v3SubgraphProvider,this.v3PoolProvider,this.v2SubgraphProvider,this.v2PoolProvider,this.onChainQuoteProvider,this.tokenProvider,this.chainId,this.blockedTokenListProvider,this.tokenValidatorProvider);this.v2Supported=v2Supported!==null&&v2Supported!==void 0?v2Supported:V2_SUPPORTED}async routeToRatio(token0Balance,token1Balance,position,swapAndAddConfig,swapAndAddOptions,routingConfig=DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId)){if(token1Balance.currency.wrapped.sortsBefore(token0Balance.currency.wrapped)){[token0Balance,token1Balance]=[token1Balance,token0Balance]}let preSwapOptimalRatio=this.calculateOptimalRatio(position,position.pool.sqrtRatioX96,true);let zeroForOne;if(position.pool.tickCurrent>position.tickUpper){zeroForOne=true}else if(position.pool.tickCurrent<position.tickLower){zeroForOne=false}else{zeroForOne=new Fraction$1(token0Balance.quotient,token1Balance.quotient).greaterThan(preSwapOptimalRatio);if(!zeroForOne)preSwapOptimalRatio=preSwapOptimalRatio.invert()}const[inputBalance,outputBalance]=zeroForOne?[token0Balance,token1Balance]:[token1Balance,token0Balance];let optimalRatio=preSwapOptimalRatio;let postSwapTargetPool=position.pool;let exchangeRate=zeroForOne?position.pool.token0Price:position.pool.token1Price;let swap=null;let ratioAchieved=false;let n=0;while(!ratioAchieved){n++;if(n>swapAndAddConfig.maxIterations){log.info("max iterations exceeded");return{status:SwapToRatioStatus.NO_ROUTE_FOUND,error:"max iterations exceeded"}}const amountToSwap=calculateRatioAmountIn(optimalRatio,exchangeRate,inputBalance,outputBalance);if(amountToSwap.equalTo(0)){log.info(`no swap needed: amountToSwap = 0`);return{status:SwapToRatioStatus.NO_SWAP_NEEDED}}swap=await this.route(amountToSwap,outputBalance.currency,TradeType$2.EXACT_INPUT,undefined,{...DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId),...routingConfig,protocols:[Protocol.V3,Protocol.V2]});if(!swap){log.info("no route found from this.route()");return{status:SwapToRatioStatus.NO_ROUTE_FOUND,error:"no route found"}}const inputBalanceUpdated=inputBalance.subtract(swap.trade.inputAmount);const outputBalanceUpdated=outputBalance.add(swap.trade.outputAmount);const newRatio=inputBalanceUpdated.divide(outputBalanceUpdated);let targetPoolPriceUpdate;swap.route.forEach(route=>{if(route.protocol===Protocol.V3){const v3Route=route;v3Route.route.pools.forEach((pool,i)=>{if(pool.token0.equals(position.pool.token0)&&pool.token1.equals(position.pool.token1)&&pool.fee===position.pool.fee){targetPoolPriceUpdate=JSBI.BigInt(v3Route.sqrtPriceX96AfterList[i].toString());optimalRatio=this.calculateOptimalRatio(position,JSBI.BigInt(targetPoolPriceUpdate.toString()),zeroForOne)}})}});if(!targetPoolPriceUpdate){optimalRatio=preSwapOptimalRatio}ratioAchieved=newRatio.equalTo(optimalRatio)||this.absoluteValue(newRatio.asFraction.divide(optimalRatio).subtract(1)).lessThan(swapAndAddConfig.ratioErrorTolerance);if(ratioAchieved&&targetPoolPriceUpdate){postSwapTargetPool=new Pool(position.pool.token0,position.pool.token1,position.pool.fee,targetPoolPriceUpdate,position.pool.liquidity,TickMath.getTickAtSqrtRatio(targetPoolPriceUpdate),position.pool.tickDataProvider)}exchangeRate=swap.trade.outputAmount.divide(swap.trade.inputAmount);log.info({exchangeRate:exchangeRate.asFraction.toFixed(18),optimalRatio:optimalRatio.asFraction.toFixed(18),newRatio:newRatio.asFraction.toFixed(18),inputBalanceUpdated:inputBalanceUpdated.asFraction.toFixed(18),outputBalanceUpdated:outputBalanceUpdated.asFraction.toFixed(18),ratioErrorTolerance:swapAndAddConfig.ratioErrorTolerance.toFixed(18),iterationN:n.toString()},"QuoteToRatio Iteration Parameters");if(exchangeRate.equalTo(0)){log.info("exchangeRate to 0");return{status:SwapToRatioStatus.NO_ROUTE_FOUND,error:"insufficient liquidity to swap to optimal ratio"}}}if(!swap){return{status:SwapToRatioStatus.NO_ROUTE_FOUND,error:"no route found"}}let methodParameters;if(swapAndAddOptions){methodParameters=await this.buildSwapAndAddMethodParameters(swap.trade,swapAndAddOptions,{initialBalanceTokenIn:inputBalance,initialBalanceTokenOut:outputBalance,preLiquidityPosition:position})}return{status:SwapToRatioStatus.SUCCESS,result:{...swap,methodParameters:methodParameters,optimalRatio:optimalRatio,postSwapTargetPool:postSwapTargetPool}}}async route(amount,quoteCurrency,tradeType,swapConfig,partialRoutingConfig={}){var _a,_c,_d,_e;const originalAmount=amount;if(tradeType===TradeType$2.EXACT_OUTPUT){const portionAmount=this.portionProvider.getPortionAmount(amount,tradeType,swapConfig);if(portionAmount&&portionAmount.greaterThan(ZERO$3)){amount=amount.add(portionAmount)}}const{currencyIn,currencyOut}=this.determineCurrencyInOutFromTradeType(tradeType,amount,quoteCurrency);const tokenIn=currencyIn.wrapped;const tokenOut=currencyOut.wrapped;metric.setProperty("chainId",this.chainId);metric.setProperty("pair",`${tokenIn.symbol}/${tokenOut.symbol}`);metric.setProperty("tokenIn",tokenIn.address);metric.setProperty("tokenOut",tokenOut.address);metric.setProperty("tradeType",tradeType===TradeType$2.EXACT_INPUT?"ExactIn":"ExactOut");metric.putMetric(`QuoteRequestedForChain${this.chainId}`,1,MetricLoggerUnit.Count);const blockNumber=(_a=partialRoutingConfig.blockNumber)!==null&&_a!==void 0?_a:this.getBlockNumberPromise();const routingConfig=_.merge({useCachedRoutes:true,writeToCachedRoutes:true,optimisticCachedRoutes:false},DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId),partialRoutingConfig,{blockNumber:blockNumber});if(routingConfig.debugRouting){log.warn(`Finalized routing config is ${JSON.stringify(routingConfig)}`)}const gasPriceWei=await this.getGasPriceWei(await blockNumber,await partialRoutingConfig.blockNumber);const quoteToken=quoteCurrency.wrapped;const gasToken=routingConfig.gasToken?(await this.tokenProvider.getTokens([routingConfig.gasToken])).getTokenByAddress(routingConfig.gasToken):undefined;const providerConfig={...routingConfig,blockNumber:blockNumber,additionalGasOverhead:NATIVE_OVERHEAD(this.chainId,amount.currency,quoteCurrency),gasToken:gasToken};const{v2GasModel,v3GasModel,mixedRouteGasModel}=await this.getGasModels(gasPriceWei,amount.currency.wrapped,quoteToken,providerConfig);const protocols=Array.from(new Set(routingConfig.protocols).values());const cacheMode=(_c=routingConfig.overwriteCacheMode)!==null&&_c!==void 0?_c:await((_d=this.routeCachingProvider)===null||_d===void 0?void 0:_d.getCacheMode(this.chainId,amount,quoteToken,tradeType,protocols));let cachedRoutes;if(routingConfig.useCachedRoutes&&cacheMode!==CacheMode.Darkmode){cachedRoutes=await((_e=this.routeCachingProvider)===null||_e===void 0?void 0:_e.getCachedRoute(this.chainId,amount,quoteToken,tradeType,protocols,await blockNumber,routingConfig.optimisticCachedRoutes))}metric.putMetric(routingConfig.useCachedRoutes?"GetQuoteUsingCachedRoutes":"GetQuoteNotUsingCachedRoutes",1,MetricLoggerUnit.Count);if(cacheMode&&routingConfig.useCachedRoutes&&cacheMode!==CacheMode.Darkmode&&!cachedRoutes){metric.putMetric(`GetCachedRoute_miss_${cacheMode}`,1,MetricLoggerUnit.Count);log.info({tokenIn:tokenIn.symbol,tokenInAddress:tokenIn.address,tokenOut:tokenOut.symbol,tokenOutAddress:tokenOut.address,cacheMode:cacheMode,amount:amount.toExact(),chainId:this.chainId,tradeType:this.tradeTypeStr(tradeType)},`GetCachedRoute miss ${cacheMode} for ${this.tokenPairSymbolTradeTypeChainId(tokenIn,tokenOut,tradeType)}`)}else if(cachedRoutes&&routingConfig.useCachedRoutes){metric.putMetric(`GetCachedRoute_hit_${cacheMode}`,1,MetricLoggerUnit.Count);log.info({tokenIn:tokenIn.symbol,tokenInAddress:tokenIn.address,tokenOut:tokenOut.symbol,tokenOutAddress:tokenOut.address,cacheMode:cacheMode,amount:amount.toExact(),chainId:this.chainId,tradeType:this.tradeTypeStr(tradeType)},`GetCachedRoute hit ${cacheMode} for ${this.tokenPairSymbolTradeTypeChainId(tokenIn,tokenOut,tradeType)}`)}let swapRouteFromCachePromise=Promise.resolve(null);if(cachedRoutes){swapRouteFromCachePromise=this.getSwapRouteFromCache(cachedRoutes,await blockNumber,amount,quoteToken,tradeType,routingConfig,v3GasModel,mixedRouteGasModel,gasPriceWei,v2GasModel,swapConfig)}let swapRouteFromChainPromise=Promise.resolve(null);if(!cachedRoutes||cacheMode!==CacheMode.Livemode){swapRouteFromChainPromise=this.getSwapRouteFromChain(amount,tokenIn,tokenOut,protocols,quoteToken,tradeType,routingConfig,v3GasModel,mixedRouteGasModel,gasPriceWei,v2GasModel,swapConfig)}const[swapRouteFromCache,swapRouteFromChain]=await Promise.all([swapRouteFromCachePromise,swapRouteFromChainPromise]);let swapRouteRaw;let hitsCachedRoute=false;if(cacheMode===CacheMode.Livemode&&swapRouteFromCache){log.info(`CacheMode is ${cacheMode}, and we are using swapRoute from cache`);hitsCachedRoute=true;swapRouteRaw=swapRouteFromCache}else{log.info(`CacheMode is ${cacheMode}, and we are using materialized swapRoute`);swapRouteRaw=swapRouteFromChain}if(cacheMode===CacheMode.Tapcompare&&swapRouteFromCache&&swapRouteFromChain){const quoteDiff=swapRouteFromChain.quote.subtract(swapRouteFromCache.quote);const quoteGasAdjustedDiff=swapRouteFromChain.quoteGasAdjusted.subtract(swapRouteFromCache.quoteGasAdjusted);const gasUsedDiff=swapRouteFromChain.estimatedGasUsed.sub(swapRouteFromCache.estimatedGasUsed);if(!quoteDiff.equalTo(0)||!(quoteGasAdjustedDiff.equalTo(0)||gasUsedDiff.eq(0))){const misquotePercent=quoteGasAdjustedDiff.divide(swapRouteFromChain.quoteGasAdjusted).multiply(100);metric.putMetric(`TapcompareCachedRoute_quoteGasAdjustedDiffPercent`,Number(misquotePercent.toExact()),MetricLoggerUnit.Percent);log.warn({quoteFromChain:swapRouteFromChain.quote.toExact(),quoteFromCache:swapRouteFromCache.quote.toExact(),quoteDiff:quoteDiff.toExact(),quoteGasAdjustedFromChain:swapRouteFromChain.quoteGasAdjusted.toExact(),quoteGasAdjustedFromCache:swapRouteFromCache.quoteGasAdjusted.toExact(),quoteGasAdjustedDiff:quoteGasAdjustedDiff.toExact(),gasUsedFromChain:swapRouteFromChain.estimatedGasUsed.toString(),gasUsedFromCache:swapRouteFromCache.estimatedGasUsed.toString(),gasUsedDiff:gasUsedDiff.toString(),routesFromChain:swapRouteFromChain.routes.toString(),routesFromCache:swapRouteFromCache.routes.toString(),amount:amount.toExact(),originalAmount:cachedRoutes===null||cachedRoutes===void 0?void 0:cachedRoutes.originalAmount,pair:this.tokenPairSymbolTradeTypeChainId(tokenIn,tokenOut,tradeType),blockNumber:blockNumber},`Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(tokenIn,tokenOut,tradeType)}`)}}if(!swapRouteRaw){return null}const{quote,quoteGasAdjusted,estimatedGasUsed,routes:routeAmounts,estimatedGasUsedQuoteToken,estimatedGasUsedUSD,estimatedGasUsedGasToken}=swapRouteRaw;if(this.routeCachingProvider&&routingConfig.writeToCachedRoutes&&cacheMode!==CacheMode.Darkmode&&swapRouteFromChain){const routesToCache=CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes,this.chainId,tokenIn,tokenOut,protocols.sort(),await blockNumber,tradeType,amount.toExact());if(routesToCache){this.routeCachingProvider.setCachedRoute(routesToCache,amount).then(success=>{const status=success?"success":"rejected";metric.putMetric(`SetCachedRoute_${status}`,1,MetricLoggerUnit.Count)}).catch(reason=>{log.error({reason:reason,tokenPair:this.tokenPairSymbolTradeTypeChainId(tokenIn,tokenOut,tradeType)},`SetCachedRoute failure`);metric.putMetric(`SetCachedRoute_failure`,1,MetricLoggerUnit.Count)})}else{metric.putMetric(`SetCachedRoute_unnecessary`,1,MetricLoggerUnit.Count)}}metric.putMetric(`QuoteFoundForChain${this.chainId}`,1,MetricLoggerUnit.Count);const trade=buildTrade(currencyIn,currencyOut,tradeType,routeAmounts);let methodParameters;if(swapConfig){methodParameters=buildSwapMethodParameters(trade,swapConfig,this.chainId)}const tokenOutAmount=tradeType===TradeType$2.EXACT_OUTPUT?originalAmount:quote;const portionAmount=this.portionProvider.getPortionAmount(tokenOutAmount,tradeType,swapConfig);const portionQuoteAmount=this.portionProvider.getPortionQuoteAmount(tradeType,quote,amount,portionAmount);const correctedQuote=this.portionProvider.getQuote(tradeType,quote,portionQuoteAmount);const correctedQuoteGasAdjusted=this.portionProvider.getQuoteGasAdjusted(tradeType,quoteGasAdjusted,portionQuoteAmount);const quoteGasAndPortionAdjusted=this.portionProvider.getQuoteGasAndPortionAdjusted(tradeType,quoteGasAdjusted,portionAmount);const swapRoute={quote:correctedQuote,quoteGasAdjusted:correctedQuoteGasAdjusted,estimatedGasUsed:estimatedGasUsed,estimatedGasUsedQuoteToken:estimatedGasUsedQuoteToken,estimatedGasUsedUSD:estimatedGasUsedUSD,estimatedGasUsedGasToken:estimatedGasUsedGasToken,gasPriceWei:gasPriceWei,route:routeAmounts,trade:trade,methodParameters:methodParameters,blockNumber:BigNumber$1.from(await blockNumber),hitsCachedRoute:hitsCachedRoute,portionAmount:portionAmount,quoteGasAndPortionAdjusted:quoteGasAndPortionAdjusted};if(swapConfig&&swapConfig.simulate&&methodParameters&&methodParameters.calldata){if(!this.simulator){throw new Error("Simulator not initialized!")}log.info(JSON.stringify({swapConfig:swapConfig,methodParameters:methodParameters,providerConfig:providerConfig},null,2),`Starting simulation`);const fromAddress=swapConfig.simulate.fromAddress;const beforeSimulate=Date.now();const swapRouteWithSimulation=await this.simulator.simulate(fromAddress,swapConfig,swapRoute,amount,CurrencyAmount.fromRawAmount(quoteCurrency,quote.quotient.toString()),providerConfig);metric.putMetric("SimulateTransaction",Date.now()-beforeSimulate,MetricLoggerUnit.Milliseconds);return swapRouteWithSimulation}return swapRoute}async getSwapRouteFromCache(cachedRoutes,blockNumber,amount,quoteToken,tradeType,routingConfig,v3GasModel,mixedRouteGasModel,gasPriceWei,v2GasModel,swapConfig){log.info({protocols:cachedRoutes.protocolsCovered,tradeType:cachedRoutes.tradeType,cachedBlockNumber:cachedRoutes.blockNumber,quoteBlockNumber:blockNumber},"Routing across CachedRoute");const quotePromises=[];const v3Routes=cachedRoutes.routes.filter(route=>route.protocol===Protocol.V3);const v2Routes=cachedRoutes.routes.filter(route=>route.protocol===Protocol.V2);const mixedRoutes=cachedRoutes.routes.filter(route=>route.protocol===Protocol.MIXED);let percents;let amounts;if(cachedRoutes.routes.length>1){[percents,amounts]=this.getAmountDistribution(amount,routingConfig)}else if(cachedRoutes.routes.length==1){[percents,amounts]=[[100],[amount]]}else{return Promise.resolve(null)}if(v3Routes.length>0){const v3RoutesFromCache=v3Routes.map(cachedRoute=>cachedRoute.route);metric.putMetric("SwapRouteFromCache_V3_GetQuotes_Request",1,MetricLoggerUnit.Count);const beforeGetQuotes=Date.now();quotePromises.push(this.v3Quoter.getQuotes(v3RoutesFromCache,amounts,percents,quoteToken,tradeType,routingConfig,undefined,v3GasModel).then(result=>{metric.putMetric(`SwapRouteFromCache_V3_GetQuotes_Load`,Date.now()-beforeGetQuotes,MetricLoggerUnit.Milliseconds);return result}))}if(v2Routes.length>0){const v2RoutesFromCache=v2Routes.map(cachedRoute=>cachedRoute.route);metric.putMetric("SwapRouteFromCache_V2_GetQuotes_Request",1,MetricLoggerUnit.Count);const beforeGetQuotes=Date.now();quotePromises.push(this.v2Quoter.refreshRoutesThenGetQuotes(cachedRoutes.tokenIn,cachedRoutes.tokenOut,v2RoutesFromCache,amounts,percents,quoteToken,tradeType,routingConfig,gasPriceWei).then(result=>{metric.putMetric(`SwapRouteFromCache_V2_GetQuotes_Load`,Date.now()-beforeGetQuotes,MetricLoggerUnit.Milliseconds);return result}))}if(mixedRoutes.length>0){const mixedRoutesFromCache=mixedRoutes.map(cachedRoute=>cachedRoute.route);metric.putMetric("SwapRouteFromCache_Mixed_GetQuotes_Request",1,MetricLoggerUnit.Count);const beforeGetQuotes=Date.now();quotePromises.push(this.mixedQuoter.getQuotes(mixedRoutesFromCache,amounts,percents,quoteToken,tradeType,routingConfig,undefined,mixedRouteGasModel).then(result=>{metric.putMetric(`SwapRouteFromCache_Mixed_GetQuotes_Load`,Date.now()-beforeGetQuotes,MetricLoggerUnit.Milliseconds);return result}))}const getQuotesResults=await Promise.all(quotePromises);const allRoutesWithValidQuotes=_.flatMap(getQuotesResults,quoteResult=>quoteResult.routesWithValidQuotes);return getBestSwapRoute(amount,percents,allRoutesWithValidQuotes,tradeType,this.chainId,routingConfig,this.portionProvider,v2GasModel,v3GasModel,swapConfig)}async getSwapRouteFromChain(amount,tokenIn,tokenOut,protocols,quoteToken,tradeType,routingConfig,v3GasModel,mixedRouteGasModel,gasPriceWei,v2GasModel,swapConfig){var _a;const[percents,amounts]=this.getAmountDistribution(amount,routingConfig);const noProtocolsSpecified=protocols.length===0;const v3ProtocolSpecified=protocols.includes(Protocol.V3);const v2ProtocolSpecified=protocols.includes(Protocol.V2);const v2SupportedInChain=(_a=this.v2Supported)===null||_a===void 0?void 0:_a.includes(this.chainId);const shouldQueryMixedProtocol=protocols.includes(Protocol.MIXED)||noProtocolsSpecified&&v2SupportedInChain;const mixedProtocolAllowed=[ChainId$1.MAINNET,ChainId$1.GOERLI].includes(this.chainId)&&tradeType===TradeType$2.EXACT_INPUT;const beforeGetCandidates=Date.now();let v3CandidatePoolsPromise=Promise.resolve(undefined);if(v3ProtocolSpecified||noProtocolsSpecified||shouldQueryMixedProtocol&&mixedProtocolAllowed){v3CandidatePoolsPromise=getV3CandidatePools({tokenIn:tokenIn,tokenOut:tokenOut,tokenProvider:this.tokenProvider,blockedTokenListProvider:this.blockedTokenListProvider,poolProvider:this.v3PoolProvider,routeType:tradeType,subgraphProvider:this.v3SubgraphProvider,routingConfig:routingConfig,chainId:this.chainId}).then(candidatePools=>{metric.putMetric("GetV3CandidatePools",Date.now()-beforeGetCandidates,MetricLoggerUnit.Milliseconds);return candidatePools})}let v2CandidatePoolsPromise=Promise.resolve(undefined);if(v2SupportedInChain&&(v2ProtocolSpecified||noProtocolsSpecified)||shouldQueryMixedProtocol&&mixedProtocolAllowed){v2CandidatePoolsPromise=getV2CandidatePools({tokenIn:tokenIn,tokenOut:tokenOut,tokenProvider:this.tokenProvider,blockedTokenListProvider:this.blockedTokenListProvider,poolProvider:this.v2PoolProvider,routeType:tradeType,subgraphProvider:this.v2SubgraphProvider,routingConfig:routingConfig,chainId:this.chainId}).then(candidatePools=>{metric.putMetric("GetV2CandidatePools",Date.now()-beforeGetCandidates,MetricLoggerUnit.Milliseconds);return candidatePools})}const quotePromises=[];if(v3ProtocolSpecified||noProtocolsSpecified){log.info({protocols:protocols,tradeType:tradeType},"Routing across V3");metric.putMetric("SwapRouteFromChain_V3_GetRoutesThenQuotes_Request",1,MetricLoggerUnit.Count);const beforeGetRoutesThenQuotes=Date.now();quotePromises.push(v3CandidatePoolsPromise.then(v3CandidatePools=>this.v3Quoter.getRoutesThenQuotes(tokenIn,tokenOut,amount,amounts,percents,quoteToken,v3CandidatePools,tradeType,routingConfig,v3GasModel).then(result=>{metric.putMetric(`SwapRouteFromChain_V3_GetRoutesThenQuotes_Load`,Date.now()-beforeGetRoutesThenQuotes,MetricLoggerUnit.Milliseconds);return result})))}if(v2SupportedInChain&&(v2ProtocolSpecified||noProtocolsSpecified)){log.info({protocols:protocols,tradeType:tradeType},"Routing across V2");metric.putMetric("SwapRouteFromChain_V2_GetRoutesThenQuotes_Request",1,MetricLoggerUnit.Count);const beforeGetRoutesThenQuotes=Date.now();quotePromises.push(v2CandidatePoolsPromise.then(v2CandidatePools=>this.v2Quoter.getRoutesThenQuotes(tokenIn,tokenOut,amount,amounts,percents,quoteToken,v2CandidatePools,tradeType,routingConfig,v2GasModel,gasPriceWei).then(result=>{metric.putMetric(`SwapRouteFromChain_V2_GetRoutesThenQuotes_Load`,Date.now()-beforeGetRoutesThenQuotes,MetricLoggerUnit.Milliseconds);return result})))}if(shouldQueryMixedProtocol&&mixedProtocolAllowed){log.info({protocols:protocols,tradeType:tradeType},"Routing across MixedRoutes");metric.putMetric("SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request",1,MetricLoggerUnit.Count);const beforeGetRoutesThenQuotes=Date.now();quotePromises.push(Promise.all([v3CandidatePoolsPromise,v2CandidatePoolsPromise]).then(([v3CandidatePools,v2CandidatePools])=>this.mixedQuoter.getRoutesThenQuotes(tokenIn,tokenOut,amount,amounts,percents,quoteToken,[v3CandidatePools,v2CandidatePools],tradeType,routingConfig,mixedRouteGasModel).then(result=>{metric.putMetric(`SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load`,Date.now()-beforeGetRoutesThenQuotes,MetricLoggerUnit.Milliseconds);return result})))}const getQuotesResults=await Promise.all(quotePromises);const allRoutesWithValidQuotes=[];const allCandidatePools=[];getQuotesResults.forEach(getQuoteResult=>{allRoutesWithValidQuotes.push(...getQuoteResult.routesWithValidQuotes);if(getQuoteResult.candidatePools){allCandidatePools.push(getQuoteResult.candidatePools)}});if(allRoutesWithValidQuotes.length===0){log.info({allRoutesWithValidQuotes:allRoutesWithValidQuotes},"Received no valid quotes");return null}const bestSwapRoute=await getBestSwapRoute(amount,percents,allRoutesWithValidQuotes,tradeType,this.chainId,routingConfig,this.portionProvider,v2GasModel,v3GasModel,swapConfig);if(bestSwapRoute){this.emitPoolSelectionMetrics(bestSwapRoute,allCandidatePools)}return bestSwapRoute}tradeTypeStr(tradeType){return tradeType===TradeType$2.EXACT_INPUT?"ExactIn":"ExactOut"}tokenPairSymbolTradeTypeChainId(tokenIn,tokenOut,tradeType){return`${tokenIn.symbol}/${tokenOut.symbol}/${this.tradeTypeStr(tradeType)}/${this.chainId}`}determineCurrencyInOutFromTradeType(tradeType,amount,quoteCurrency){if(tradeType===TradeType$2.EXACT_INPUT){return{currencyIn:amount.currency,currencyOut:quoteCurrency}}else{return{currencyIn:quoteCurrency,currencyOut:amount.currency}}}async getGasPriceWei(latestBlockNumber,requestBlockNumber){const beforeGasTimestamp=Date.now();const{gasPriceWei}=await this.gasPriceProvider.getGasPrice(latestBlockNumber,requestBlockNumber);metric.putMetric("GasPriceLoad",Date.now()-beforeGasTimestamp,MetricLoggerUnit.Milliseconds);return gasPriceWei}async getGasModels(gasPriceWei,amountToken,quoteToken,providerConfig){var _a;const beforeGasModel=Date.now();const usdPoolPromise=getHighestLiquidityV3USDPool(this.chainId,this.v3PoolProvider,providerConfig);const nativeCurrency=WRAPPED_NATIVE_CURRENCY[this.chainId];const nativeAndQuoteTokenV3PoolPromise=!quoteToken.equals(nativeCurrency)?getHighestLiquidityV3NativePool(quoteToken,this.v3PoolProvider,providerConfig):Promise.resolve(null);const nativeAndAmountTokenV3PoolPromise=!amountToken.equals(nativeCurrency)?getHighestLiquidityV3NativePool(amountToken,this.v3PoolProvider,providerConfig):Promise.resolve(null);const nativeAndSpecifiedGasTokenV3PoolPromise=(providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken)&&!(providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken.equals(nativeCurrency))?getHighestLiquidityV3NativePool(providerConfig===null||providerConfig===void 0?void 0:providerConfig.gasToken,this.v3PoolProvider,providerConfig):Promise.resolve(null);const[usdPool,nativeAndQuoteTokenV3Pool,nativeAndAmountTokenV3Pool,nativeAndSpecifiedGasTokenV3Pool]=await Promise.all([usdPoolPromise,nativeAndQuoteTokenV3PoolPromise,nativeAndAmountTokenV3PoolPromise,nativeAndSpecifiedGasTokenV3PoolPromise]);const pools={usdPool:usdPool,nativeAndQuoteTokenV3Pool:nativeAndQuoteTokenV3Pool,nativeAndAmountTokenV3Pool:nativeAndAmountTokenV3Pool,nativeAndSpecifiedGasTokenV3Pool:nativeAndSpecifiedGasTokenV3Pool};const v2GasModelPromise=((_a=this.v2Supported)===null||_a===void 0?void 0:_a.includes(this.chainId))?this.v2GasModelFactory.buildGasModel({chainId:this.chainId,gasPriceWei:gasPriceWei,poolProvider:this.v2PoolProvider,token:quoteToken,l2GasDataProvider:this.l2GasDataProvider,providerConfig:providerConfig}).catch(_=>undefined):Promise.resolve(undefined);const v3GasModelPromise=this.v3GasModelFactory.buildGasModel({chainId:this.chainId,gasPriceWei:gasPriceWei,pools:pools,amountToken:amountToken,quoteToken:quoteToken,v2poolProvider:this.v2PoolProvider,l2GasDataProvider:this.l2GasDataProvider,providerConfig:providerConfig});const mixedRouteGasModelPromise=this.mixedRouteGasModelFactory.buildGasModel({chainId:this.chainId,gasPriceWei:gasPriceWei,pools:pools,amountToken:amountToken,quoteToken:quoteToken,v2poolProvider:this.v2PoolProvider,providerConfig:providerConfig});const[v2GasModel,v3GasModel,mixedRouteGasModel]=await Promise.all([v2GasModelPromise,v3GasModelPromise,mixedRouteGasModelPromise]);metric.putMetric("GasModelCreation",Date.now()-beforeGasModel,MetricLoggerUnit.Milliseconds);return{v2GasModel:v2GasModel,v3GasModel:v3GasModel,mixedRouteGasModel:mixedRouteGasModel}}getAmountDistribution(amount,routingConfig){const{distributionPercent}=routingConfig;const percents=[];const amounts=[];for(let i=1;i<=100/distributionPercent;i++){percents.push(i*distributionPercent);amounts.push(amount.multiply(new Fraction$1(i*distributionPercent,100)))}return[percents,amounts]}async buildSwapAndAddMethodParameters(trade,swapAndAddOptions,swapAndAddParameters){const{swapOptions:{recipient,slippageTolerance,deadline,inputTokenPermit},addLiquidityOptions:addLiquidityConfig}=swapAndAddOptions;const preLiquidityPosition=swapAndAddParameters.preLiquidityPosition;const finalBalanceTokenIn=swapAndAddParameters.initialBalanceTokenIn.subtract(trade.inputAmount);const finalBalanceTokenOut=swapAndAddParameters.initialBalanceTokenOut.add(trade.outputAmount);const approvalTypes=await this.swapRouterProvider.getApprovalType(finalBalanceTokenIn,finalBalanceTokenOut);const zeroForOne=finalBalanceTokenIn.currency.wrapped.sortsBefore(finalBalanceTokenOut.currency.wrapped);return{...SwapRouter$1.swapAndAddCallParameters(trade,{recipient:recipient,slippageTolerance:slippageTolerance,deadlineOrPreviousBlockhash:deadline,inputTokenPermit:inputTokenPermit},Position$1.fromAmounts({pool:preLiquidityPosition.pool,tickLower:preLiquidityPosition.tickLower,tickUpper:preLiquidityPosition.tickUpper,amount0:zeroForOne?finalBalanceTokenIn.quotient.toString():finalBalanceTokenOut.quotient.toString(),amount1:zeroForOne?finalBalanceTokenOut.quotient.toString():finalBalanceTokenIn.quotient.toString(),useFullPrecision:false}),addLiquidityConfig,approvalTypes.approvalTokenIn,approvalTypes.approvalTokenOut),to:SWAP_ROUTER_02_ADDRESSES(this.chainId)}}emitPoolSelectionMetrics(swapRouteRaw,allPoolsBySelection){const poolAddressesUsed=new Set;const{routes:routeAmounts}=swapRouteRaw;_(routeAmounts).flatMap(routeAmount=>{const{poolAddresses}=routeAmount;return poolAddresses}).forEach(address=>{poolAddressesUsed.add(address.toLowerCase())});for(const poolsBySelection of allPoolsBySelection){const{protocol}=poolsBySelection;_.forIn(poolsBySelection.selections,(pools,topNSelection)=>{const topNUsed=_.findLastIndex(pools,pool=>poolAddressesUsed.has(pool.id.toLowerCase()))+1;metric.putMetric(_.capitalize(`${protocol}${topNSelection}`),topNUsed,MetricLoggerUnit.Count)})}let hasV3Route=false;let hasV2Route=false;let hasMixedRoute=false;for(const routeAmount of routeAmounts){if(routeAmount.protocol===Protocol.V3){hasV3Route=true}if(routeAmount.protocol===Protocol.V2){hasV2Route=true}if(routeAmount.protocol===Protocol.MIXED){hasMixedRoute=true}}if(hasMixedRoute&&(hasV3Route||hasV2Route)){if(hasV3Route&&hasV2Route){metric.putMetric(`MixedAndV3AndV2SplitRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`MixedAndV3AndV2SplitRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}else if(hasV3Route){metric.putMetric(`MixedAndV3SplitRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`MixedAndV3SplitRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}else if(hasV2Route){metric.putMetric(`MixedAndV2SplitRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`MixedAndV2SplitRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}}else if(hasV3Route&&hasV2Route){metric.putMetric(`V3AndV2SplitRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`V3AndV2SplitRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}else if(hasMixedRoute){if(routeAmounts.length>1){metric.putMetric(`MixedSplitRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`MixedSplitRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}else{metric.putMetric(`MixedRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`MixedRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}}else if(hasV3Route){if(routeAmounts.length>1){metric.putMetric(`V3SplitRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`V3SplitRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}else{metric.putMetric(`V3Route`,1,MetricLoggerUnit.Count);metric.putMetric(`V3RouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}}else if(hasV2Route){if(routeAmounts.length>1){metric.putMetric(`V2SplitRoute`,1,MetricLoggerUnit.Count);metric.putMetric(`V2SplitRouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}else{metric.putMetric(`V2Route`,1,MetricLoggerUnit.Count);metric.putMetric(`V2RouteForChain${this.chainId}`,1,MetricLoggerUnit.Count)}}}calculateOptimalRatio(position,sqrtRatioX96,zeroForOne){const upperSqrtRatioX96=TickMath.getSqrtRatioAtTick(position.tickUpper);const lowerSqrtRatioX96=TickMath.getSqrtRatioAtTick(position.tickLower);if(JSBI.greaterThan(sqrtRatioX96,upperSqrtRatioX96)||JSBI.lessThan(sqrtRatioX96,lowerSqrtRatioX96)){return new Fraction$1(0,1)}const precision=JSBI.BigInt("1"+"0".repeat(18));let optimalRatio=new Fraction$1(SqrtPriceMath.getAmount0Delta(sqrtRatioX96,upperSqrtRatioX96,precision,true),SqrtPriceMath.getAmount1Delta(sqrtRatioX96,lowerSqrtRatioX96,precision,true));if(!zeroForOne)optimalRatio=optimalRatio.invert();return optimalRatio}async userHasSufficientBalance(fromAddress,tradeType,amount,quote){try{const neededBalance=tradeType===TradeType$2.EXACT_INPUT?amount:quote;let balance;if(neededBalance.currency.isNative){balance=await this.provider.getBalance(fromAddress)}else{const tokenContract=Erc20__factory.connect(neededBalance.currency.address,this.provider);balance=await tokenContract.balanceOf(fromAddress)}return balance.gte(BigNumber$1.from(neededBalance.quotient.toString()))}catch(e){log.error(e,"Error while checking user balance");return false}}absoluteValue(fraction){const numeratorAbs=JSBI.lessThan(fraction.numerator,JSBI.BigInt(0))?JSBI.unaryMinus(fraction.numerator):fraction.numerator;const denominatorAbs=JSBI.lessThan(fraction.denominator,JSBI.BigInt(0))?JSBI.unaryMinus(fraction.denominator):fraction.denominator;return new Fraction$1(numeratorAbs,denominatorAbs)}getBlockNumberPromise(){return retry(async(_b,attempt)=>{if(attempt>1){log.info(`Get block number attempt ${attempt}`)}return this.provider.getBlockNumber()},{retries:2,minTimeout:100,maxTimeout:1e3})}}const _abi$4=[{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"}],name:"AllowanceExpired",type:"error"},{inputs:[],name:"ExcessiveInvalidation",type:"error"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"InsufficientAllowance",type:"error"},{inputs:[{internalType:"uint256",name:"maxAmount",type:"uint256"}],name:"InvalidAmount",type:"error"},{inputs:[],name:"InvalidContractSignature",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidSignature",type:"error"},{inputs:[],name:"InvalidSignatureLength",type:"error"},{inputs:[],name:"InvalidSigner",type:"error"},{inputs:[],name:"LengthMismatch",type:"error"},{inputs:[{internalType:"uint256",name:"signatureDeadline",type:"uint256"}],name:"SignatureExpired",type:"error"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:true,internalType:"address",name:"token",type:"address"},{indexed:true,internalType:"address",name:"spender",type:"address"},{indexed:false,internalType:"uint160",name:"amount",type:"uint160"},{indexed:false,internalType:"uint48",name:"expiration",type:"uint48"}],name:"Approval",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:false,internalType:"address",name:"token",type:"address"},{indexed:false,internalType:"address",name:"spender",type:"address"}],name:"Lockdown",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:true,internalType:"address",name:"token",type:"address"},{indexed:true,internalType:"address",name:"spender",type:"address"},{indexed:false,internalType:"uint48",name:"newNonce",type:"uint48"},{indexed:false,internalType:"uint48",name:"oldNonce",type:"uint48"}],name:"NonceInvalidation",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:true,internalType:"address",name:"token",type:"address"},{indexed:true,internalType:"address",name:"spender",type:"address"},{indexed:false,internalType:"uint160",name:"amount",type:"uint160"},{indexed:false,internalType:"uint48",name:"expiration",type:"uint48"},{indexed:false,internalType:"uint48",name:"nonce",type:"uint48"}],name:"Permit",type:"event"},{anonymous:false,inputs:[{indexed:true,internalType:"address",name:"owner",type:"address"},{indexed:false,internalType:"uint256",name:"word",type:"uint256"},{indexed:false,internalType:"uint256",name:"mask",type:"uint256"}],name:"UnorderedNonceInvalidation",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint48",name:"newNonce",type:"uint48"}],name:"invalidateNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"wordPos",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"invalidateUnorderedNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"}],internalType:"struct IAllowanceTransfer.TokenSpenderPair[]",name:"approvals",type:"tuple[]"}],name:"lockdown",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"nonceBitmap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails[]",name:"details",type:"tuple[]"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitBatch",name:"permitBatch",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails",name:"details",type:"tuple"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitSingle",name:"permitSingle",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],internalType:"struct IAllowanceTransfer.AllowanceTransferDetails[]",name:"transferDetails",type:"tuple[]"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}];const _bytecode$2="0x60c0346100bb574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a557826040525190206080526123c090816100c1823960805181611a90015260a05181611a6a0152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630d58b1db1461126c578063137c29fe146110755780632a2d80d114610db75780632b67b57014610bde57806330f28b7a14610ade5780633644e51514610a9d57806336c7851614610a285780633ff9dcb1146109a85780634fe02b441461093f57806365d9723c146107ac57806387517c451461067a578063927da105146105c3578063cc53287f146104a3578063edd9444b1461033a5763fe8ec1a7146100c657600080fd5b346103365760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff833581811161033257610114903690860161164b565b60243582811161032e5761012b903690870161161a565b6101336114e6565b9160843585811161032a5761014b9036908a016115c1565b98909560a43590811161032657610164913691016115c1565b969095815190610173826113ff565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301527f3620646561646c696e652c000000000000000000000000000000000000000000608083015282519a8b9181610222602085018096611edc565b918237018a8152039961025b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c8101835282611437565b5190209085515161026b81611e04565b908a5b8181106102f95750506102f6999a6102ed9183516102a081610294602082018095611eaf565b03848101835282611437565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282611437565b51902093611c40565b80f35b8061031161030b610321938c5161175e565b51611f9d565b61031b828661175e565b52611e53565b61026e565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff9080358281116103325761038b903690830161164b565b60243583811161032e576103a2903690840161161a565b9390926103ad6114e6565b9160643590811161049f576103c4913691016115c1565b949093835151976103d489611e04565b98885b81811061047d5750506102f697988151610425816103f9602082018095611eaf565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611437565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a081526102ed8161141b565b808b61031b8261049461030b61049a968d5161175e565b9261175e565b6103d7565b8680fd5b5082346105bf57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103325780359067ffffffffffffffff821161032e576104f49136910161161a565b929091845b848110610504578580f35b8061051a61051560019388886118b5565b6118c5565b61052f84610529848a8a6118b5565b016118c5565b3389528385528589209173ffffffffffffffffffffffffffffffffffffffff80911692838b528652868a20911690818a5285528589207fffffffffffffffffffffffff000000000000000000000000000000000000000081541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a2016104f9565b8280fd5b50346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610676816105ff6114a0565b936106086114c3565b6106106114e6565b73ffffffffffffffffffffffffffffffffffffffff968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336576106b26114a0565b906106bb6114c3565b916106c46114e6565b65ffffffffffff926064358481169081810361032a5779ffffffffffff0000000000000000000000000000000000000000947fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b94338a5260016020527fffffffffffff0000000000000000000000000000000000000000000000000000858b209873ffffffffffffffffffffffffffffffffffffffff809416998a8d5260205283878d209b169a8b8d52602052868c209486156000146107a457504216925b8454921697889360a01b16911617179055815193845260208401523392a480f35b905092610783565b5082346105bf5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576107e56114a0565b906107ee6114c3565b9265ffffffffffff604435818116939084810361032a57338852602091600183528489209673ffffffffffffffffffffffffffffffffffffffff80911697888b528452858a20981697888a5283528489205460d01c93848711156109175761ffff9085840316116108f05750907f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f393929133895260018252838920878a528252838920888a5282528389209079ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffff000000000000000000000000000000000000000000000000000083549260d01b16911617905582519485528401523392a480f35b84517f24d35a26000000000000000000000000000000000000000000000000000000008152fd5b5084517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b503461033657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336578060209273ffffffffffffffffffffffffffffffffffffffff61098f6114a0565b1681528084528181206024358252845220549051908152f35b5082346105bf57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b8234610a9a5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a9a57610a606114a0565b610a686114c3565b610a706114e6565b6064359173ffffffffffffffffffffffffffffffffffffffff8316830361032e576102f6936117a1565b80fd5b503461033657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657602090610ad7611a67565b9051908152f35b508290346105bf576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf57610b1a3661152a565b90807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c36011261033257610b4c611478565b9160e43567ffffffffffffffff8111610bda576102f694610b6f913691016115c1565b939092610b7c8351611f9d565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a08152610bd18161141b565b51902091611b6e565b8580fd5b509134610336576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610c186114a0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc360160c08112610332576080855191610c51836113e3565b1261033257845190610c6282611398565b73ffffffffffffffffffffffffffffffffffffffff91602435838116810361049f578152604435838116810361049f57602082015265ffffffffffff606435818116810361032a5788830152608435908116810361049f576060820152815260a435938285168503610bda576020820194855260c4359087830182815260e43567ffffffffffffffff811161032657610cfe90369084016115c1565b929093804211610d88575050918591610d786102f6999a610d7e95610d238851611f07565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610d70816113ff565b519020611b22565b91612010565b51925116916118e6565b602492508a51917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b5091346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc93818536011261033257610df36114a0565b9260249081359267ffffffffffffffff9788851161032a578590853603011261049f578051978589018981108282111761104a578252848301358181116103265785019036602383011215610326578382013591610e50836115ef565b90610e5d85519283611437565b838252602093878584019160071b83010191368311611046578801905b828210610fe9575050508a526044610e93868801611509565b96838c01978852013594838b0191868352604435908111610fe557610ebb90369087016115c1565b959096804211610fba575050508998995151610ed681611e04565b908b5b818110610f9757505092889492610d7892610f6497958351610f02816103f98682018095611eaf565b5190209073ffffffffffffffffffffffffffffffffffffffff9a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610d70816113ff565b51169082515192845b848110610f78578580f35b80610f918585610f8b600195875161175e565b516118e6565b01610f6d565b80610311610fac8e9f9e93610fb2945161175e565b51611f07565b9b9a9b610ed9565b8551917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b8a80fd5b6080823603126110465785608091885161100281611398565b61100b85611509565b8152611018838601611509565b838201526110278a8601611607565b8a8201528d611037818701611607565b90820152815201910190610e7a565b8c80fd5b84896041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5082346105bf576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576110b03661152a565b91807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c360112610332576110e2611478565b67ffffffffffffffff93906101043585811161049f5761110590369086016115c1565b90936101243596871161032a57611125610bd1966102f6983691016115c1565b969095825190611134826113ff565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c60608301527f696e652c0000000000000000000000000000000000000000000000000000000060808301528351948591816111e3602085018096611edc565b918237018b8152039361121c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282611437565b5190209261122a8651611f9d565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e081016102e1565b5082346105bf576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033257813567ffffffffffffffff92838211610bda5736602383011215610bda5781013592831161032e576024906007368386831b8401011161049f57865b8581106112e5578780f35b80821b83019060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc83360301126103265761139288876001946060835161132c81611398565b611368608461133c8d8601611509565b9485845261134c60448201611509565b809785015261135d60648201611509565b809885015201611509565b918291015273ffffffffffffffffffffffffffffffffffffffff80808093169516931691166117a1565b016112da565b6080810190811067ffffffffffffffff8211176113b457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176113b457604052565b60a0810190811067ffffffffffffffff8211176113b457604052565b60c0810190811067ffffffffffffffff8211176113b457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176113b457604052565b60c4359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01906080821261149b576040805190611563826113e3565b8082941261149b57805181810181811067ffffffffffffffff8211176113b457825260043573ffffffffffffffffffffffffffffffffffffffff8116810361149b578152602435602082015282526044356020830152606435910152565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020838186019501011161149b57565b67ffffffffffffffff81116113b45760051b60200190565b359065ffffffffffff8216820361149b57565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020808501948460061b01011161149b57565b91909160608184031261149b576040805191611666836113e3565b8294813567ffffffffffffffff9081811161149b57830182601f8201121561149b578035611693816115ef565b926116a087519485611437565b818452602094858086019360061b8501019381851161149b579086899897969594939201925b8484106116e3575050505050855280820135908501520135910152565b90919293949596978483031261149b578851908982019082821085831117611730578a928992845261171487611509565b81528287013583820152815201930191908897969594936116c6565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b80518210156117725760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b92919273ffffffffffffffffffffffffffffffffffffffff604060008284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c16804211611884575082871696838803611812575b5050611810955016926122fc565b565b878484161160001461184f57602488604051907ff96fb0710000000000000000000000000000000000000000000000000000000082526004820152fd5b7fffffffffffffffffffffffff000000000000000000000000000000000000000084846118109a031691161790553880611802565b602490604051907fd81b2f2e0000000000000000000000000000000000000000000000000000000082526004820152fd5b91908110156117725760061b0190565b3573ffffffffffffffffffffffffffffffffffffffff8116810361149b5790565b9065ffffffffffff908160608401511673ffffffffffffffffffffffffffffffffffffffff908185511694826020820151169280866040809401511695169560009187835260016020528383208984526020528383209916988983526020528282209184835460d01c03611a3e579185611a1794927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec98979694508715600014611a1c5779ffffffffffff00000000000000000000000000000000000000009042165b60a01b167fffffffffffff00000000000000000000000000000000000000000000000000006001860160d01b1617179055519384938491604091949373ffffffffffffffffffffffffffffffffffffffff606085019616845265ffffffffffff809216602085015216910152565b0390a4565b5079ffffffffffff0000000000000000000000000000000000000000876119a9565b600484517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b467f000000000000000000000000000000000000000000000000000000000000000003611ab2577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a604082015246606082015230608082015260808152611b1c816113ff565b51902090565b611b2a611a67565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152611b1c81611398565b9192909360a435936040840151804211611c0f5750602084510151808611611bde5750918591610d78611bae94611ba9602088015186611d90565b611b22565b73ffffffffffffffffffffffffffffffffffffffff809151511692608435918216820361149b57611810936122fc565b602490604051907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b959093958051519560409283830151804211611d605750848803611d3757611c77918691610d7860209b611ba98d88015186611d90565b60005b868110611c8b575050505050505050565b611c9681835161175e565b5188611ca383878a6118b5565b01359089810151808311611d07575091818888886001968596611ccd575b50505050505001611c7a565b611cfc95611cf69273ffffffffffffffffffffffffffffffffffffffff610515935116956118b5565b916122fc565b803888888883611cc1565b6024908651907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b600484517fff633a38000000000000000000000000000000000000000000000000000000008152fd5b6024908551907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b9073ffffffffffffffffffffffffffffffffffffffff600160ff83161b9216600052600060205260406000209060081c6000526020526040600020818154188091551615611dda57565b60046040517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b90611e0e826115ef565b611e1b6040519182611437565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611e4982946115ef565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611e805760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b805160208092019160005b828110611ec8575050505090565b835185529381019392810192600101611eba565b9081519160005b838110611ef4575050016000815290565b8060208092840101518185015201611ee3565b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678835273ffffffffffffffffffffffffffffffffffffffff8082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c0810181811067ffffffffffffffff8211176113b45760405251902090565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845273ffffffffffffffffffffffffffffffffffffffff81511660408401520151606082015260608152611b1c81611398565b919082604091031261149b576020823592013590565b6000843b6121775750604182036120f55761202d82820182611ffa565b939092604010156117725760209360009360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa156120e95773ffffffffffffffffffffffffffffffffffffffff80600051169182156120bf57160361209557565b60046040517f815e1d64000000000000000000000000000000000000000000000000000000008152fd5b60046040517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b6040513d6000823e3d90fd5b6040820361214d5761210991810190611ffa565b91601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169360ff1c019060ff8211611e805760209360009360ff60809461204b565b60046040517f4be6321b000000000000000000000000000000000000000000000000000000008152fd5b929391601f928173ffffffffffffffffffffffffffffffffffffffff60646020957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0604051988997889687947f1626ba7e000000000000000000000000000000000000000000000000000000009e8f8752600487015260406024870152816044870152868601378b85828601015201168101030192165afa9081156122f1578291612273575b507fffffffff000000000000000000000000000000000000000000000000000000009150160361224957565b60046040517fb0669cbc000000000000000000000000000000000000000000000000000000008152fd5b90506020813d82116122e9575b8161228d60209383611437565b810103126103365751907fffffffff0000000000000000000000000000000000000000000000000000000082168203610a9a57507fffffffff00000000000000000000000000000000000000000000000000000000903861221d565b3d9150612280565b6040513d84823e3d90fd5b9060006064926020958295604051947f23b872dd0000000000000000000000000000000000000000000000000000000086526004860152602485015260448401525af13d15601f3d116001600051141617161561235557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fdfea164736f6c6343000811000a";class Permit2__factory extends ContractFactory{constructor(signer){super(_abi$4,_bytecode$2,signer)}deploy(overrides){return super.deploy(overrides||{})}getDeployTransaction(overrides){return super.getDeployTransaction(overrides||{})}attach(address){return super.attach(address)}connect(signer){return super.connect(signer)}static createInterface(){return new Interface(_abi$4)}static connect(address,signerOrProvider){return new Contract(address,_abi$4,signerOrProvider)}}Permit2__factory.bytecode=_bytecode$2;Permit2__factory.abi=_abi$4;var SimulationStatus;(function(SimulationStatus){SimulationStatus[SimulationStatus["NotSupported"]=0]="NotSupported";SimulationStatus[SimulationStatus["Failed"]=1]="Failed";SimulationStatus[SimulationStatus["Succeeded"]=2]="Succeeded";SimulationStatus[SimulationStatus["InsufficientBalance"]=3]="InsufficientBalance";SimulationStatus[SimulationStatus["NotApproved"]=4]="NotApproved"})(SimulationStatus||(SimulationStatus={}));class ETHGasStationInfoProvider extends IGasPriceProvider{constructor(url){super();this.url=url}async getGasPrice(_latestBlockNumber,_requestBlockNumber){const response=await retry(async()=>{return axios.get(this.url)},{retries:1});const{data:gasPriceResponse,status}=response;if(status!=200){log.error({response:response},`Unabled to get gas price from ${this.url}.`);throw new Error(`Unable to get gas price from ${this.url}`)}log.info({gasPriceResponse:gasPriceResponse},'Gas price response from API. About to parse "fast" to big number');const gasPriceWei=BigNumber$1.from(gasPriceResponse.fast).div(BigNumber$1.from(10)).mul(BigNumber$1.from(10).pow(9));log.info(`Gas price in wei: ${gasPriceWei} as of block ${gasPriceResponse.blockNum}`);return{gasPriceWei:gasPriceWei}}}class LegacyGasPriceProvider extends IGasPriceProvider{constructor(provider){super();this.provider=provider}async getGasPrice(_latestBlockNumber,_requestBlockNumber){const gasPriceWei=await this.provider.getGasPrice();return{gasPriceWei:gasPriceWei}}}class IMulticallProvider{}const _abi$3=[{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"gasLimit",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct UniswapInterfaceMulticall.Call[]",name:"calls",type:"tuple[]"}],name:"multicall",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"uint256",name:"gasUsed",type:"uint256"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct UniswapInterfaceMulticall.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"}];const _bytecode$1="0x608060405234801561001057600080fd5b50610567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610085575b600080fd5b61004e610098565b60405161005b919061041f565b60405180910390f35b6100776100723660046102a7565b61009c565b60405161005b929190610428565b61004e610093366004610286565b610220565b4290565b8051439060609067ffffffffffffffff811180156100b957600080fd5b506040519080825280602002602001820160405280156100f357816020015b6100e061023a565b8152602001906001900390816100d85790505b50905060005b835181101561021a57600080600086848151811061011357fe5b60200260200101516000015187858151811061012b57fe5b60200260200101516020015188868151811061014357fe5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101839190610403565b60006040518083038160008787f1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b509150915060005a8403905060405180606001604052808415158152602001828152602001838152508989815181106101fb57fe5b60200260200101819052505050505050505080806001019150506100f9565b50915091565b73ffffffffffffffffffffffffffffffffffffffff163190565b604051806060016040528060001515815260200160008152602001606081525090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461028157600080fd5b919050565b600060208284031215610297578081fd5b6102a08261025d565b9392505050565b600060208083850312156102b9578182fd5b823567ffffffffffffffff808211156102d0578384fd5b818501915085601f8301126102e3578384fd5b8135818111156102ef57fe5b6102fc8485830201610506565b81815284810190848601875b848110156103f457813587017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838f03011215610346578a8bfd5b60408051606081018181108b8211171561035c57fe5b8252610369848d0161025d565b8152818401358c82015260608401358a811115610384578d8efd5b8085019450508e603f850112610398578c8dfd5b8b8401358a8111156103a657fe5b6103b68d85601f84011601610506565b93508084528f838287010111156103cb578d8efd5b808386018e86013783018c018d9052908101919091528552509287019290870190600101610308565b50909998505050505050505050565b6000825161041581846020870161052a565b9190910192915050565b90815260200190565b600060408083018584526020828186015281865180845260609350838701915083838202880101838901875b838110156104f6578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa001855281518051151584528681015187850152880151888401889052805188850181905260806104b582828801858c0161052a565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01694909401909301925090850190600101610454565b50909a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561052257fe5b604052919050565b60005b8381101561054557818101518382015260200161052d565b83811115610554576000848401525b5050505056fea164736f6c6343000706000a";class UniswapInterfaceMulticall__factory extends ContractFactory{constructor(signer){super(_abi$3,_bytecode$1,signer)}deploy(overrides){return super.deploy(overrides||{})}getDeployTransaction(overrides){return super.getDeployTransaction(overrides||{})}attach(address){return super.attach(address)}connect(signer){return super.connect(signer)}static createInterface(){return new Interface(_abi$3)}static connect(address,signerOrProvider){return new Contract(address,_abi$3,signerOrProvider)}}UniswapInterfaceMulticall__factory.bytecode=_bytecode$1;UniswapInterfaceMulticall__factory.abi=_abi$3;class UniswapMulticallProvider extends IMulticallProvider{constructor(chainId,provider,gasLimitPerCall=1e6){super();this.chainId=chainId;this.provider=provider;this.gasLimitPerCall=gasLimitPerCall;const multicallAddress=UNISWAP_MULTICALL_ADDRESSES[this.chainId];if(!multicallAddress){throw new Error(`No address for Uniswap Multicall Contract on chain id: ${chainId}`)}this.multicallContract=UniswapInterfaceMulticall__factory.connect(multicallAddress,this.provider)}async callSameFunctionOnMultipleContracts(params){var _a;const{addresses,contractInterface,functionName,functionParams,providerConfig}=params;const blockNumberOverride=(_a=providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber)!==null&&_a!==void 0?_a:undefined;const fragment=contractInterface.getFunction(functionName);const callData=contractInterface.encodeFunctionData(fragment,functionParams);const calls=_.map(addresses,address=>{return{target:address,callData:callData,gasLimit:this.gasLimitPerCall}});log.debug({calls:calls},`About to multicall for ${functionName} across ${addresses.length} addresses`);const{blockNumber,returnData:aggregateResults}=await this.multicallContract.callStatic.multicall(calls,{blockTag:blockNumberOverride});const results=[];for(let i=0;i<aggregateResults.length;i++){const{success,returnData}=aggregateResults[i];if(!success||returnData.length<=2){log.debug({result:aggregateResults[i]},`Invalid result calling ${functionName} on address ${addresses[i]}`);results.push({success:false,returnData:returnData});continue}results.push({success:true,result:contractInterface.decodeFunctionResult(fragment,returnData)})}log.debug({results:results},`Results for multicall on ${functionName} across ${addresses.length} addresses as of block ${blockNumber}`);return{blockNumber:blockNumber,results:results}}async callSameFunctionOnContractWithMultipleParams(params){var _a,_b;const{address,contractInterface,functionName,functionParams,additionalConfig,providerConfig}=params;const fragment=contractInterface.getFunction(functionName);const gasLimitPerCall=(_a=additionalConfig===null||additionalConfig===void 0?void 0:additionalConfig.gasLimitPerCallOverride)!==null&&_a!==void 0?_a:this.gasLimitPerCall;const blockNumberOverride=(_b=providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber)!==null&&_b!==void 0?_b:undefined;const calls=_.map(functionParams,functionParam=>{const callData=contractInterface.encodeFunctionData(fragment,functionParam);return{target:address,callData:callData,gasLimit:gasLimitPerCall}});log.debug({calls:calls},`About to multicall for ${functionName} at address ${address} with ${functionParams.length} different sets of params`);const{blockNumber,returnData:aggregateResults}=await this.multicallContract.callStatic.multicall(calls,{blockTag:blockNumberOverride});const results=[];const gasUsedForSuccess=[];for(let i=0;i<aggregateResults.length;i++){const{success,returnData,gasUsed}=aggregateResults[i];if(!success||returnData.length<=2){log.debug({result:aggregateResults[i]},`Invalid result calling ${functionName} with params ${functionParams[i]}`);results.push({success:false,returnData:returnData});continue}gasUsedForSuccess.push(gasUsed.toNumber());results.push({success:true,result:contractInterface.decodeFunctionResult(fragment,returnData)})}log.debug({results:results,functionName:functionName,address:address},`Results for multicall for ${functionName} at address ${address} with ${functionParams.length} different sets of params. Results as of block ${blockNumber}`);return{blockNumber:blockNumber,results:results,approxGasUsedPerSuccessCall:stats.percentile(gasUsedForSuccess,99)}}async callMultipleFunctionsOnSameContract(params){var _a,_b;const{address,contractInterface,functionNames,functionParams,additionalConfig,providerConfig}=params;const gasLimitPerCall=(_a=additionalConfig===null||additionalConfig===void 0?void 0:additionalConfig.gasLimitPerCallOverride)!==null&&_a!==void 0?_a:this.gasLimitPerCall;const blockNumberOverride=(_b=providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber)!==null&&_b!==void 0?_b:undefined;const calls=_.map(functionNames,(functionName,i)=>{const fragment=contractInterface.getFunction(functionName);const param=functionParams?functionParams[i]:[];const callData=contractInterface.encodeFunctionData(fragment,param);return{target:address,callData:callData,gasLimit:gasLimitPerCall}});log.debug({calls:calls},`About to multicall for ${functionNames.length} functions at address ${address} with ${functionParams===null||functionParams===void 0?void 0:functionParams.length} different sets of params`);const{blockNumber,returnData:aggregateResults}=await this.multicallContract.callStatic.multicall(calls,{blockTag:blockNumberOverride});const results=[];const gasUsedForSuccess=[];for(let i=0;i<aggregateResults.length;i++){const fragment=contractInterface.getFunction(functionNames[i]);const{success,returnData,gasUsed}=aggregateResults[i];if(!success||returnData.length<=2){log.debug({result:aggregateResults[i]},`Invalid result calling ${functionNames[i]} with ${functionParams?functionParams[i]:"0"} params`);results.push({success:false,returnData:returnData});continue}gasUsedForSuccess.push(gasUsed.toNumber());results.push({success:true,result:contractInterface.decodeFunctionResult(fragment,returnData)})}log.debug({results:results,functionNames:functionNames,address:address},`Results for multicall for ${functionNames.length} functions at address ${address} with ${functionParams?functionParams.length:" 0"} different sets of params. Results as of block ${blockNumber}`);return{blockNumber:blockNumber,results:results,approxGasUsedPerSuccessCall:stats.percentile(gasUsedForSuccess,99)}}}const DEFAULT_EIP_1559_SUPPORTED_CHAINS=[ChainId$1.MAINNET,ChainId$1.GOERLI,ChainId$1.POLYGON_MUMBAI];class OnChainGasPriceProvider extends IGasPriceProvider{constructor(chainId,eip1559GasPriceProvider,legacyGasPriceProvider,eipChains=DEFAULT_EIP_1559_SUPPORTED_CHAINS){super();this.chainId=chainId;this.eip1559GasPriceProvider=eip1559GasPriceProvider;this.legacyGasPriceProvider=legacyGasPriceProvider;this.eipChains=eipChains}async getGasPrice(latestBlockNumber,requestBlockNumber){if(this.eipChains.includes(this.chainId)){return this.eip1559GasPriceProvider.getGasPrice(latestBlockNumber,requestBlockNumber)}return this.legacyGasPriceProvider.getGasPrice(latestBlockNumber,requestBlockNumber)}}const _abi$2=[{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160[]",name:"v3SqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"v3InitializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"v3SwapGasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"}],internalType:"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params",name:"params",type:"tuple"}],name:"quoteExactInputSingleV2",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params",name:"params",type:"tuple"}],name:"quoteExactInputSingleV3",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];class IMixedRouteQuoterV1__factory{static createInterface(){return new Interface(_abi$2)}static connect(address,signerOrProvider){return new Contract(address,_abi$2,signerOrProvider)}}IMixedRouteQuoterV1__factory.abi=_abi$2;const _abi$1=[{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160[]",name:"sqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactInputSingleParams",name:"params",type:"tuple"}],name:"quoteExactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountOut",type:"uint256"}],name:"quoteExactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160[]",name:"sqrtPriceX96AfterList",type:"uint160[]"},{internalType:"uint32[]",name:"initializedTicksCrossedList",type:"uint32[]"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IQuoterV2.QuoteExactOutputSingleParams",name:"params",type:"tuple"}],name:"quoteExactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160",name:"sqrtPriceX96After",type:"uint160"},{internalType:"uint32",name:"initializedTicksCrossed",type:"uint32"},{internalType:"uint256",name:"gasEstimate",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];class IQuoterV2__factory{static createInterface(){return new Interface(_abi$1)}static connect(address,signerOrProvider){return new Contract(address,_abi$1,signerOrProvider)}}IQuoterV2__factory.abi=_abi$1;class BlockConflictError extends Error{constructor(){super(...arguments);this.name="BlockConflictError"}}class SuccessRateError extends Error{constructor(){super(...arguments);this.name="SuccessRateError"}}class ProviderBlockHeaderError extends Error{constructor(){super(...arguments);this.name="ProviderBlockHeaderError"}}class ProviderTimeoutError extends Error{constructor(){super(...arguments);this.name="ProviderTimeoutError"}}class ProviderGasError extends Error{constructor(){super(...arguments);this.name="ProviderGasError"}}const DEFAULT_BATCH_RETRIES=2;class OnChainQuoteProvider{constructor(chainId,provider,multicall2Provider,retryOptions={retries:DEFAULT_BATCH_RETRIES,minTimeout:25,maxTimeout:250},batchParams={multicallChunk:150,gasLimitPerCall:1e6,quoteMinSuccessRate:.2},gasErrorFailureOverride={gasLimitOverride:15e5,multicallChunk:100},successRateFailureOverrides={gasLimitOverride:13e5,multicallChunk:110},blockNumberConfig={baseBlockOffset:0,rollback:{enabled:false}},quoterAddressOverride){this.chainId=chainId;this.provider=provider;this.multicall2Provider=multicall2Provider;this.retryOptions=retryOptions;this.batchParams=batchParams;this.gasErrorFailureOverride=gasErrorFailureOverride;this.successRateFailureOverrides=successRateFailureOverrides;this.blockNumberConfig=blockNumberConfig;this.quoterAddressOverride=quoterAddressOverride}getQuoterAddress(useMixedRouteQuoter){if(this.quoterAddressOverride){return this.quoterAddressOverride}const quoterAddress=useMixedRouteQuoter?MIXED_ROUTE_QUOTER_V1_ADDRESSES[this.chainId]:QUOTER_V2_ADDRESSES[this.chainId];if(!quoterAddress){throw new Error(`No address for the quoter contract on chain id: ${this.chainId}`)}return quoterAddress}async getQuotesManyExactIn(amountIns,routes,providerConfig){return this.getQuotesManyData(amountIns,routes,"quoteExactInput",providerConfig)}async getQuotesManyExactOut(amountOuts,routes,providerConfig){return this.getQuotesManyData(amountOuts,routes,"quoteExactOutput",providerConfig)}async getQuotesManyData(amounts,routes,functionName,_providerConfig){var _a;const useMixedRouteQuoter=routes.some(route=>route.protocol===Protocol.V2)||routes.some(route=>route.protocol===Protocol.MIXED);this.validateRoutes(routes,functionName,useMixedRouteQuoter);let multicallChunk=this.batchParams.multicallChunk;let gasLimitOverride=this.batchParams.gasLimitPerCall;const{baseBlockOffset,rollback}=this.blockNumberConfig;const originalBlockNumber=await this.provider.getBlockNumber();const providerConfig={..._providerConfig,blockNumber:(_a=_providerConfig===null||_providerConfig===void 0?void 0:_providerConfig.blockNumber)!==null&&_a!==void 0?_a:originalBlockNumber+baseBlockOffset};const inputs=_(routes).flatMap(route=>{const encodedRoute=route.protocol===Protocol.V3?encodeRouteToPath(route,functionName=="quoteExactOutput"):encodeMixedRouteToPath(route instanceof V2Route?new MixedRouteSDK(route.pairs,route.input,route.output):route);const routeInputs=amounts.map(amount=>[encodedRoute,`0x${amount.quotient.toString(16)}`]);return routeInputs}).value();const normalizedChunk=Math.ceil(inputs.length/Math.ceil(inputs.length/multicallChunk));const inputsChunked=_.chunk(inputs,normalizedChunk);let quoteStates=_.map(inputsChunked,inputChunk=>{return{status:"pending",inputs:inputChunk}});log.info(`About to get ${inputs.length} quotes in chunks of ${normalizedChunk} [${_.map(inputsChunked,i=>i.length).join(",")}] ${gasLimitOverride?`with a gas limit override of ${gasLimitOverride}`:""} and block number: ${await providerConfig.blockNumber} [Original before offset: ${originalBlockNumber}].`);metric.putMetric("QuoteBatchSize",inputs.length,MetricLoggerUnit.Count);metric.putMetric(`QuoteBatchSize_${ID_TO_NETWORK_NAME(this.chainId)}`,inputs.length,MetricLoggerUnit.Count);let haveRetriedForSuccessRate=false;let haveRetriedForBlockHeader=false;let blockHeaderRetryAttemptNumber=0;let haveIncrementedBlockHeaderFailureCounter=false;let blockHeaderRolledBack=false;let haveRetriedForBlockConflictError=false;let haveRetriedForOutOfGas=false;let haveRetriedForTimeout=false;let haveRetriedForUnknownReason=false;let finalAttemptNumber=1;const expectedCallsMade=quoteStates.length;let totalCallsMade=0;const{results:quoteResults,blockNumber,approxGasUsedPerSuccessCall}=await retry(async(_bail,attemptNumber)=>{haveIncrementedBlockHeaderFailureCounter=false;finalAttemptNumber=attemptNumber;const[success,failed,pending]=this.partitionQuotes(quoteStates);log.info(`Starting attempt: ${attemptNumber}.
          Currently ${success.length} success, ${failed.length} failed, ${pending.length} pending.
          Gas limit override: ${gasLimitOverride} Block number override: ${providerConfig.blockNumber}.`);quoteStates=await Promise.all(_.map(quoteStates,async(quoteState,idx)=>{if(quoteState.status=="success"){return quoteState}const{inputs}=quoteState;try{totalCallsMade=totalCallsMade+1;const results=await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({address:this.getQuoterAddress(useMixedRouteQuoter),contractInterface:useMixedRouteQuoter?IMixedRouteQuoterV1__factory.createInterface():IQuoterV2__factory.createInterface(),functionName:functionName,functionParams:inputs,providerConfig:providerConfig,additionalConfig:{gasLimitPerCallOverride:gasLimitOverride}});const successRateError=this.validateSuccessRate(results.results,haveRetriedForSuccessRate);if(successRateError){return{status:"failed",inputs:inputs,reason:successRateError,results:results}}return{status:"success",inputs:inputs,results:results}}catch(err){if(err.message.includes("header not found")){return{status:"failed",inputs:inputs,reason:new ProviderBlockHeaderError(err.message.slice(0,500))}}if(err.message.includes("timeout")){return{status:"failed",inputs:inputs,reason:new ProviderTimeoutError(`Req ${idx}/${quoteStates.length}. Request had ${inputs.length} inputs. ${err.message.slice(0,500)}`)}}if(err.message.includes("out of gas")){return{status:"failed",inputs:inputs,reason:new ProviderGasError(err.message.slice(0,500))}}return{status:"failed",inputs:inputs,reason:new Error(`Unknown error from provider: ${err.message.slice(0,500)}`)}}}));const[successfulQuoteStates,failedQuoteStates,pendingQuoteStates]=this.partitionQuotes(quoteStates);if(pendingQuoteStates.length>0){throw new Error("Pending quote after waiting for all promises.")}let retryAll=false;const blockNumberError=this.validateBlockNumbers(successfulQuoteStates,inputsChunked.length,gasLimitOverride);if(blockNumberError){retryAll=true}const reasonForFailureStr=_.map(failedQuoteStates,failedQuoteState=>failedQuoteState.reason.name).join(", ");if(failedQuoteStates.length>0){log.info(`On attempt ${attemptNumber}: ${failedQuoteStates.length}/${quoteStates.length} quotes failed. Reasons: ${reasonForFailureStr}`);for(const failedQuoteState of failedQuoteStates){const{reason:error}=failedQuoteState;log.info({error:error},`[QuoteFetchError] Attempt ${attemptNumber}. ${error.message}`);if(error instanceof BlockConflictError){if(!haveRetriedForBlockConflictError){metric.putMetric("QuoteBlockConflictErrorRetry",1,MetricLoggerUnit.Count);haveRetriedForBlockConflictError=true}retryAll=true}else if(error instanceof ProviderBlockHeaderError){if(!haveRetriedForBlockHeader){metric.putMetric("QuoteBlockHeaderNotFoundRetry",1,MetricLoggerUnit.Count);haveRetriedForBlockHeader=true}if(!haveIncrementedBlockHeaderFailureCounter){blockHeaderRetryAttemptNumber=blockHeaderRetryAttemptNumber+1;haveIncrementedBlockHeaderFailureCounter=true}if(rollback.enabled){const{rollbackBlockOffset,attemptsBeforeRollback}=rollback;if(blockHeaderRetryAttemptNumber>=attemptsBeforeRollback&&!blockHeaderRolledBack){log.info(`Attempt ${attemptNumber}. Have failed due to block header ${blockHeaderRetryAttemptNumber-1} times. Rolling back block number by ${rollbackBlockOffset} for next retry`);providerConfig.blockNumber=providerConfig.blockNumber?await providerConfig.blockNumber+rollbackBlockOffset:await this.provider.getBlockNumber()+rollbackBlockOffset;retryAll=true;blockHeaderRolledBack=true}}}else if(error instanceof ProviderTimeoutError){if(!haveRetriedForTimeout){metric.putMetric("QuoteTimeoutRetry",1,MetricLoggerUnit.Count);haveRetriedForTimeout=true}}else if(error instanceof ProviderGasError){if(!haveRetriedForOutOfGas){metric.putMetric("QuoteOutOfGasExceptionRetry",1,MetricLoggerUnit.Count);haveRetriedForOutOfGas=true}gasLimitOverride=this.gasErrorFailureOverride.gasLimitOverride;multicallChunk=this.gasErrorFailureOverride.multicallChunk;retryAll=true}else if(error instanceof SuccessRateError){if(!haveRetriedForSuccessRate){metric.putMetric("QuoteSuccessRateRetry",1,MetricLoggerUnit.Count);haveRetriedForSuccessRate=true;gasLimitOverride=this.successRateFailureOverrides.gasLimitOverride;multicallChunk=this.successRateFailureOverrides.multicallChunk;retryAll=true}}else{if(!haveRetriedForUnknownReason){metric.putMetric("QuoteUnknownReasonRetry",1,MetricLoggerUnit.Count);haveRetriedForUnknownReason=true}}}}if(retryAll){log.info(`Attempt ${attemptNumber}. Resetting all requests to pending for next attempt.`);const normalizedChunk=Math.ceil(inputs.length/Math.ceil(inputs.length/multicallChunk));const inputsChunked=_.chunk(inputs,normalizedChunk);quoteStates=_.map(inputsChunked,inputChunk=>{return{status:"pending",inputs:inputChunk}})}if(failedQuoteStates.length>0){if((this.chainId==ChainId$1.ARBITRUM_ONE||this.chainId==ChainId$1.ARBITRUM_GOERLI)&&_.every(failedQuoteStates,failedQuoteState=>failedQuoteState.reason instanceof ProviderGasError)&&attemptNumber==this.retryOptions.retries){log.error(`Failed to get quotes on Arbitrum due to provider gas error issue. Overriding error to return 0 quotes.`);return{results:[],blockNumber:BigNumber$1.from(0),approxGasUsedPerSuccessCall:0}}throw new Error(`Failed to get ${failedQuoteStates.length} quotes. Reasons: ${reasonForFailureStr}`)}const callResults=_.map(successfulQuoteStates,quoteState=>quoteState.results);return{results:_.flatMap(callResults,result=>result.results),blockNumber:BigNumber$1.from(callResults[0].blockNumber),approxGasUsedPerSuccessCall:stats.percentile(_.map(callResults,result=>result.approxGasUsedPerSuccessCall),100)}},{retries:DEFAULT_BATCH_RETRIES,...this.retryOptions});const routesQuotes=this.processQuoteResults(quoteResults,routes,amounts);metric.putMetric("QuoteApproxGasUsedPerSuccessfulCall",approxGasUsedPerSuccessCall,MetricLoggerUnit.Count);metric.putMetric("QuoteNumRetryLoops",finalAttemptNumber-1,MetricLoggerUnit.Count);metric.putMetric("QuoteTotalCallsToProvider",totalCallsMade,MetricLoggerUnit.Count);metric.putMetric("QuoteExpectedCallsToProvider",expectedCallsMade,MetricLoggerUnit.Count);metric.putMetric("QuoteNumRetriedCalls",totalCallsMade-expectedCallsMade,MetricLoggerUnit.Count);const[successfulQuotes,failedQuotes]=_(routesQuotes).flatMap(routeWithQuotes=>routeWithQuotes[1]).partition(quote=>quote.quote!=null).value();log.info(`Got ${successfulQuotes.length} successful quotes, ${failedQuotes.length} failed quotes. Took ${finalAttemptNumber-1} attempt loops. Total calls made to provider: ${totalCallsMade}. Have retried for timeout: ${haveRetriedForTimeout}`);return{routesWithQuotes:routesQuotes,blockNumber:blockNumber}}partitionQuotes(quoteStates){const successfulQuoteStates=_.filter(quoteStates,quoteState=>quoteState.status=="success");const failedQuoteStates=_.filter(quoteStates,quoteState=>quoteState.status=="failed");const pendingQuoteStates=_.filter(quoteStates,quoteState=>quoteState.status=="pending");return[successfulQuoteStates,failedQuoteStates,pendingQuoteStates]}processQuoteResults(quoteResults,routes,amounts){const routesQuotes=[];const quotesResultsByRoute=_.chunk(quoteResults,amounts.length);const debugFailedQuotes=[];for(let i=0;i<quotesResultsByRoute.length;i++){const route=routes[i];const quoteResults=quotesResultsByRoute[i];const quotes=_.map(quoteResults,(quoteResult,index)=>{const amount=amounts[index];if(!quoteResult.success){const percent=100/amounts.length*(index+1);const amountStr=amount.toFixed(Math.min(amount.currency.decimals,2));const routeStr=routeToString(route);debugFailedQuotes.push({route:routeStr,percent:percent,amount:amountStr});return{amount:amount,quote:null,sqrtPriceX96AfterList:null,gasEstimate:null,initializedTicksCrossedList:null}}return{amount:amount,quote:quoteResult.result[0],sqrtPriceX96AfterList:quoteResult.result[1],initializedTicksCrossedList:quoteResult.result[2],gasEstimate:quoteResult.result[3]}});routesQuotes.push([route,quotes])}const debugChunk=80;_.forEach(_.chunk(debugFailedQuotes,debugChunk),(quotes,idx)=>{const failedQuotesByRoute=_.groupBy(quotes,q=>q.route);const failedFlat=_.mapValues(failedQuotesByRoute,f=>_(f).map(f=>`${f.percent}%[${f.amount}]`).join(","));log.info({failedQuotes:_.map(failedFlat,(amounts,routeStr)=>`${routeStr} : ${amounts}`)},`Failed on chain quotes for routes Part ${idx}/${Math.ceil(debugFailedQuotes.length/debugChunk)}`)});return routesQuotes}validateBlockNumbers(successfulQuoteStates,totalCalls,gasLimitOverride){if(successfulQuoteStates.length<=1){return null}const results=_.map(successfulQuoteStates,quoteState=>quoteState.results);const blockNumbers=_.map(results,result=>result.blockNumber);const uniqBlocks=_(blockNumbers).map(blockNumber=>blockNumber.toNumber()).uniq().value();if(uniqBlocks.length==1){return null}return new BlockConflictError(`Quotes returned from different blocks. ${uniqBlocks}. ${totalCalls} calls were made with gas limit ${gasLimitOverride}`)}validateSuccessRate(allResults,haveRetriedForSuccessRate){const numResults=allResults.length;const numSuccessResults=allResults.filter(result=>result.success).length;const successRate=1*numSuccessResults/numResults;const{quoteMinSuccessRate}=this.batchParams;if(successRate<quoteMinSuccessRate){if(haveRetriedForSuccessRate){log.info(`Quote success rate still below threshold despite retry. Continuing. ${quoteMinSuccessRate}: ${successRate}`);return}return new SuccessRateError(`Quote success rate below threshold of ${quoteMinSuccessRate}: ${successRate}`)}}validateRoutes(routes,functionName,useMixedRouteQuoter){if(routes.some(route=>route.protocol===Protocol.V3)&&useMixedRouteQuoter){throw new Error(`Cannot use mixed route quoter with V3 routes`)}if(functionName==="quoteExactOutput"&&useMixedRouteQuoter){throw new Error("Cannot call quoteExactOutput with V2 or Mixed routes")}}}const _abi=[{inputs:[{internalType:"address",name:"_factoryV2",type:"address"},{internalType:"address",name:"factoryV3",type:"address"},{internalType:"address",name:"_positionManager",type:"address"},{internalType:"address",name:"_WETH9",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"WETH9",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveMax",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveMaxMinusOne",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveZeroThenMax",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveZeroThenMaxMinusOne",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"}],name:"callPositionManager",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"paths",type:"bytes[]"},{internalType:"uint128[]",name:"amounts",type:"uint128[]"},{internalType:"uint24",name:"maximumTickDivergence",type:"uint24"},{internalType:"uint32",name:"secondsAgo",type:"uint32"}],name:"checkOracleSlippage",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint24",name:"maximumTickDivergence",type:"uint24"},{internalType:"uint32",name:"secondsAgo",type:"uint32"}],name:"checkOracleSlippage",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"}],internalType:"struct IV3SwapRouter.ExactInputParams",name:"params",type:"tuple"}],name:"exactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IV3SwapRouter.ExactInputSingleParams",name:"params",type:"tuple"}],name:"exactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"}],internalType:"struct IV3SwapRouter.ExactOutputParams",name:"params",type:"tuple"}],name:"exactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IV3SwapRouter.ExactOutputSingleParams",name:"params",type:"tuple"}],name:"exactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"factoryV2",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getApprovalType",outputs:[{internalType:"enum IApproveAndCall.ApprovalType",name:"",type:"uint8"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"}],internalType:"struct IApproveAndCall.IncreaseLiquidityParams",name:"params",type:"tuple"}],name:"increaseLiquidity",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],internalType:"struct IApproveAndCall.MintParams",name:"params",type:"tuple"}],name:"mint",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"previousBlockhash",type:"bytes32"},{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"positionManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"pull",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"refundETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitAllowed",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitAllowedIfNecessary",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitIfNecessary",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"}],name:"swapTokensForExactTokens",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"sweepToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"}],name:"sweepToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"sweepTokenWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"sweepTokenWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"unwrapWETH9",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"}],name:"unwrapWETH9",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"unwrapWETH9WithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"unwrapWETH9WithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"wrapETH",outputs:[],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];const _bytecode="";class SwapRouter02__factory extends ContractFactory{constructor(signer){super(_abi,_bytecode,signer)}deploy(_factoryV2,factoryV3,_positionManager,_WETH9,overrides){return super.deploy(_factoryV2,factoryV3,_positionManager,_WETH9,overrides||{})}getDeployTransaction(_factoryV2,factoryV3,_positionManager,_WETH9,overrides){return super.getDeployTransaction(_factoryV2,factoryV3,_positionManager,_WETH9,overrides||{})}attach(address){return super.attach(address)}connect(signer){return super.connect(signer)}static createInterface(){return new Interface(_abi)}static connect(address,signerOrProvider){return new Contract(address,_abi,signerOrProvider)}}SwapRouter02__factory.bytecode=_bytecode;SwapRouter02__factory.abi=_abi;class SwapRouterProvider{constructor(multicall2Provider,chainId){this.multicall2Provider=multicall2Provider;this.chainId=chainId}async getApprovalType(tokenInAmount,tokenOutAmount){var _a,_b;const functionParams=[[tokenInAmount.currency.wrapped.address,tokenInAmount.quotient.toString()],[tokenOutAmount.currency.wrapped.address,tokenOutAmount.quotient.toString()]];const tx=await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({address:SWAP_ROUTER_02_ADDRESSES(this.chainId),contractInterface:SwapRouter02__factory.createInterface(),functionName:"getApprovalType",functionParams:functionParams});if(!((_a=tx.results[0])===null||_a===void 0?void 0:_a.success)||!((_b=tx.results[1])===null||_b===void 0?void 0:_b.success)){log.info({results:tx.results},"Failed to get approval type from swap router for token in or token out");throw new Error("Failed to get approval type from swap router for token in or token out")}const{result:approvalTokenIn}=tx.results[0];const{result:approvalTokenOut}=tx.results[1];return{approvalTokenIn:approvalTokenIn[0],approvalTokenOut:approvalTokenOut[0]}}}var TenderlySimulationType;(function(TenderlySimulationType){TenderlySimulationType["QUICK"]="quick";TenderlySimulationType["FULL"]="full";TenderlySimulationType["ABI"]="abi"})(TenderlySimulationType||(TenderlySimulationType={}));const POSITIVE_CACHE_ENTRY_TTL=600;const NEGATIVE_CACHE_ENTRY_TTL=600;class TokenPropertiesProvider{constructor(chainId,tokenPropertiesCache,tokenFeeFetcher,allowList=DEFAULT_ALLOWLIST,positiveCacheEntryTTL=POSITIVE_CACHE_ENTRY_TTL,negativeCacheEntryTTL=NEGATIVE_CACHE_ENTRY_TTL){this.chainId=chainId;this.tokenPropertiesCache=tokenPropertiesCache;this.tokenFeeFetcher=tokenFeeFetcher;this.allowList=allowList;this.positiveCacheEntryTTL=positiveCacheEntryTTL;this.negativeCacheEntryTTL=negativeCacheEntryTTL;this.CACHE_KEY=(chainId,address)=>`token-properties-${chainId}-${address}`}async getTokensProperties(tokens,providerConfig){const tokenToResult={};if(!(providerConfig===null||providerConfig===void 0?void 0:providerConfig.enableFeeOnTransferFeeFetching)||this.chainId!==ChainId$1.MAINNET){return tokenToResult}const addressesToFetchFeesOnchain=[];const addressesRaw=this.buildAddressesRaw(tokens);const tokenProperties=await this.tokenPropertiesCache.batchGet(addressesRaw);for(const address of addressesRaw){const cachedValue=tokenProperties[address];if(cachedValue){metric.putMetric("TokenPropertiesProviderBatchGetCacheHit",1,MetricLoggerUnit.Count);const tokenFee=cachedValue.tokenFeeResult;const tokenFeeResultExists=tokenFee&&(tokenFee.buyFeeBps||tokenFee.sellFeeBps);if(tokenFeeResultExists){metric.putMetric(`TokenPropertiesProviderCacheHitTokenFeeResultExists${tokenFeeResultExists}`,1,MetricLoggerUnit.Count)}else{metric.putMetric(`TokenPropertiesProviderCacheHitTokenFeeResultNotExists`,1,MetricLoggerUnit.Count)}tokenToResult[address]=cachedValue}else if(this.allowList.has(address)){tokenToResult[address]={tokenValidationResult:TokenValidationResult.UNKN}}else{addressesToFetchFeesOnchain.push(address)}}if(addressesToFetchFeesOnchain.length>0){let tokenFeeMap={};try{tokenFeeMap=await this.tokenFeeFetcher.fetchFees(addressesToFetchFeesOnchain,providerConfig)}catch(err){log.error({err:err},`Error fetching fees for tokens ${addressesToFetchFeesOnchain}`)}await Promise.all(addressesToFetchFeesOnchain.map(address=>{const tokenFee=tokenFeeMap[address];const tokenFeeResultExists=tokenFee&&(tokenFee.buyFeeBps||tokenFee.sellFeeBps);if(tokenFeeResultExists){metric.putMetric(`TokenPropertiesProviderTokenFeeResultCacheMissExists${tokenFeeResultExists}`,1,MetricLoggerUnit.Count);const tokenPropertiesResult={tokenFeeResult:tokenFee,tokenValidationResult:TokenValidationResult.FOT};tokenToResult[address]=tokenPropertiesResult;metric.putMetric("TokenPropertiesProviderBatchGetCacheMiss",1,MetricLoggerUnit.Count);return this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId,address),tokenPropertiesResult,this.positiveCacheEntryTTL)}else{metric.putMetric(`TokenPropertiesProviderTokenFeeResultCacheMissNotExists`,1,MetricLoggerUnit.Count);const tokenPropertiesResult={tokenFeeResult:undefined,tokenValidationResult:undefined};tokenToResult[address]=tokenPropertiesResult;return this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId,address),tokenPropertiesResult,this.negativeCacheEntryTTL)}}))}return tokenToResult}buildAddressesRaw(tokens){const addressesRaw=new Set;for(const token of tokens){const address=token.address.toLowerCase();if(!addressesRaw.has(address)){addressesRaw.add(address)}}return addressesRaw}}class URISubgraphProvider{constructor(chainId,uri,timeout=6e3,retries=2){this.chainId=chainId;this.uri=uri;this.timeout=timeout;this.retries=retries}async getPools(){log.info({uri:this.uri},`About to get subgraph pools from URI ${this.uri}`);let allPools=[];await retry(async()=>{const timeout=new Timeout;const timerPromise=timeout.set(this.timeout).then(()=>{throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`)});let response;try{response=await Promise.race([axios.get(this.uri),timerPromise])}catch(err){throw err}finally{timeout.clear()}const{data:poolsBuffer,status}=response;if(status!=200){log.error({response:response},`Unabled to get pools from ${this.uri}.`);throw new Error(`Unable to get pools from ${this.uri}`)}const pools=poolsBuffer;log.info({uri:this.uri,chain:this.chainId},`Got subgraph pools from uri. Num: ${pools.length}`);allPools=pools},{retries:this.retries,onRetry:(err,retry)=>{log.info({err:err},`Failed to get pools from uri ${this.uri}. Retry attempt: ${retry}`)}});return allPools}}class CachingV2PoolProvider{constructor(chainId,poolProvider,cache){this.chainId=chainId;this.poolProvider=poolProvider;this.cache=cache;this.POOL_KEY=(chainId,address)=>`pool-${chainId}-${address}`}async getPools(tokenPairs,providerConfig){const poolAddressSet=new Set;const poolsToGetTokenPairs=[];const poolsToGetAddresses=[];const poolAddressToPool={};const blockNumber=await(providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber);for(const[tokenA,tokenB]of tokenPairs){const{poolAddress,token0,token1}=this.getPoolAddress(tokenA,tokenB);if(poolAddressSet.has(poolAddress)){continue}poolAddressSet.add(poolAddress);const cachedPool=await this.cache.get(this.POOL_KEY(this.chainId,poolAddress));if(cachedPool){if(!blockNumber||blockNumber&&cachedPool.block==blockNumber){poolAddressToPool[poolAddress]=cachedPool.pair;continue}}poolsToGetTokenPairs.push([token0,token1]);poolsToGetAddresses.push(poolAddress)}log.info({poolsFound:_.map(Object.values(poolAddressToPool),p=>p.token0.symbol+" "+p.token1.symbol),poolsToGetTokenPairs:_.map(poolsToGetTokenPairs,t=>t[0].symbol+" "+t[1].symbol)},`Found ${Object.keys(poolAddressToPool).length} V2 pools already in local cache for block ${blockNumber}. About to get reserves for ${poolsToGetTokenPairs.length} pools.`);if(poolsToGetAddresses.length>0){const poolAccessor=await this.poolProvider.getPools(poolsToGetTokenPairs,{...providerConfig,enableFeeOnTransferFeeFetching:true});for(const address of poolsToGetAddresses){const pool=poolAccessor.getPoolByAddress(address);if(pool){poolAddressToPool[address]=pool;this.cache.set(this.POOL_KEY(this.chainId,address),{pair:pool,block:blockNumber})}}}return{getPool:(tokenA,tokenB)=>{const{poolAddress}=this.getPoolAddress(tokenA,tokenB);return poolAddressToPool[poolAddress]},getPoolByAddress:address=>poolAddressToPool[address],getAllPools:()=>Object.values(poolAddressToPool)}}getPoolAddress(tokenA,tokenB){return this.poolProvider.getPoolAddress(tokenA,tokenB)}}class CachingV2SubgraphProvider{constructor(chainId,subgraphProvider,cache){this.chainId=chainId;this.subgraphProvider=subgraphProvider;this.cache=cache;this.SUBGRAPH_KEY=chainId=>`subgraph-pools-v2-${chainId}`}async getPools(){const cachedPools=await this.cache.get(this.SUBGRAPH_KEY(this.chainId));if(cachedPools){return cachedPools}const pools=await this.subgraphProvider.getPools();await this.cache.set(this.SUBGRAPH_KEY(this.chainId),pools);return pools}}class V2QuoteProvider{constructor(){}async getQuotesManyExactIn(amountIns,routes,providerConfig){return this.getQuotes(amountIns,routes,TradeType$2.EXACT_INPUT,providerConfig)}async getQuotesManyExactOut(amountOuts,routes,providerConfig){return this.getQuotes(amountOuts,routes,TradeType$2.EXACT_OUTPUT,providerConfig)}async getQuotes(amounts,routes,tradeType,providerConfig){const routesWithQuotes=[];const debugStrs=[];for(const route of routes){const amountQuotes=[];let insufficientInputAmountErrorCount=0;let insufficientReservesErrorCount=0;for(const amount of amounts){try{if(tradeType==TradeType$2.EXACT_INPUT){let outputAmount=amount.wrapped;for(const pair of route.pairs){[outputAmount]=pair.getOutputAmount(outputAmount,providerConfig.enableFeeOnTransferFeeFetching===true)}amountQuotes.push({amount:amount,quote:BigNumber$1.from(outputAmount.quotient.toString())})}else{let inputAmount=amount.wrapped;for(let i=route.pairs.length-1;i>=0;i--){const pair=route.pairs[i];[inputAmount]=pair.getInputAmount(inputAmount,providerConfig.enableFeeOnTransferFeeFetching===true)}amountQuotes.push({amount:amount,quote:BigNumber$1.from(inputAmount.quotient.toString())})}}catch(err){if(err instanceof InsufficientInputAmountError){insufficientInputAmountErrorCount=insufficientInputAmountErrorCount+1;amountQuotes.push({amount:amount,quote:null})}else if(err instanceof InsufficientReservesError){insufficientReservesErrorCount=insufficientReservesErrorCount+1;amountQuotes.push({amount:amount,quote:null})}else{throw err}}}if(insufficientInputAmountErrorCount>0||insufficientReservesErrorCount>0){debugStrs.push(`${[routeToString(route)]} Input: ${insufficientInputAmountErrorCount} Reserves: ${insufficientReservesErrorCount} }`)}routesWithQuotes.push([route,amountQuotes])}if(debugStrs.length>0){log.info({debugStrs:debugStrs},`Failed quotes for V2 routes`)}return{routesWithQuotes:routesWithQuotes}}}const BASES_TO_CHECK_TRADES_AGAINST$1={[ChainId$1.MAINNET]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.MAINNET],DAI_MAINNET,USDC_MAINNET,USDT_MAINNET,WBTC_MAINNET],[ChainId$1.GOERLI]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.GOERLI]],[ChainId$1.SEPOLIA]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.SEPOLIA]],[ChainId$1.OPTIMISM]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.OPTIMISM],USDC_OPTIMISM,DAI_OPTIMISM,USDT_OPTIMISM,WBTC_OPTIMISM,OP_OPTIMISM],[ChainId$1.ARBITRUM_ONE]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ARBITRUM_ONE],WBTC_ARBITRUM,DAI_ARBITRUM,USDC_ARBITRUM,USDC_NATIVE_ARBITRUM,USDT_ARBITRUM,ARB_ARBITRUM],[ChainId$1.ARBITRUM_GOERLI]:[],[ChainId$1.ARBITRUM_SEPOLIA]:[],[ChainId$1.OPTIMISM_GOERLI]:[],[ChainId$1.OPTIMISM_SEPOLIA]:[],[ChainId$1.POLYGON]:[USDC_POLYGON,WETH_POLYGON,WMATIC_POLYGON],[ChainId$1.POLYGON_MUMBAI]:[],[ChainId$1.CELO]:[CELO,CUSD_CELO,CEUR_CELO,DAI_CELO],[ChainId$1.CELO_ALFAJORES]:[],[ChainId$1.GNOSIS]:[],[ChainId$1.MOONBEAM]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.MOONBEAM],DAI_MOONBEAM,USDC_MOONBEAM,WBTC_MOONBEAM],[ChainId$1.BNB]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BNB],BUSD_BNB,DAI_BNB,USDC_BNB,USDT_BNB,BTC_BNB,ETH_BNB],[ChainId$1.AVALANCHE]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.AVALANCHE],USDC_AVAX,DAI_AVAX],[ChainId$1.BASE_GOERLI]:[],[ChainId$1.BASE]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BASE],USDC_BASE],[ChainId$1.ZORA]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ZORA]],[ChainId$1.ZORA_SEPOLIA]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ZORA_SEPOLIA]],[ChainId$1.ROOTSTOCK]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ROOTSTOCK]],[ChainId$1.BLAST]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BLAST],USDB_BLAST]};class StaticV2SubgraphProvider{constructor(chainId){this.chainId=chainId}async getPools(tokenIn,tokenOut){log.info("In static subgraph provider for V2");const bases=BASES_TO_CHECK_TRADES_AGAINST$1[this.chainId];const basePairs=_.flatMap(bases,base=>bases.map(otherBase=>[base,otherBase]));if(tokenIn&&tokenOut){basePairs.push([tokenIn,tokenOut],...bases.map(base=>[tokenIn,base]),...bases.map(base=>[tokenOut,base]))}const pairs=_(basePairs).filter(tokens=>Boolean(tokens[0]&&tokens[1])).filter(([tokenA,tokenB])=>tokenA.address!==tokenB.address&&!tokenA.equals(tokenB)).value();const poolAddressSet=new Set;const subgraphPools=_(pairs).map(([tokenA,tokenB])=>{const poolAddress=Pair.getAddress(tokenA,tokenB);if(poolAddressSet.has(poolAddress)){return undefined}poolAddressSet.add(poolAddress);const[token0,token1]=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA];return{id:poolAddress,liquidity:"100",token0:{id:token0.address},token1:{id:token1.address},supply:100,reserve:100,reserveUSD:100}}).compact().value();return subgraphPools}}({[ChainId$1.MAINNET]:"https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v2-dev"});class V2SubgraphProviderWithFallBacks{constructor(fallbacks){this.fallbacks=fallbacks}async getPools(tokenIn,tokenOut,providerConfig){for(let i=0;i<this.fallbacks.length;i++){const provider=this.fallbacks[i];try{const pools=await provider.getPools(tokenIn,tokenOut,providerConfig);return pools}catch(err){log.info(`Failed to get subgraph pools for V2 from fallback #${i}`)}}throw new Error("Failed to get subgraph pools from any providers")}}class CachingV3PoolProvider{constructor(chainId,poolProvider,cache){this.chainId=chainId;this.poolProvider=poolProvider;this.cache=cache;this.POOL_KEY=(chainId,address,blockNumber)=>blockNumber?`pool-${chainId}-${address}-${blockNumber}`:`pool-${chainId}-${address}`}async getPools(tokenPairs,providerConfig){const poolAddressSet=new Set;const poolsToGetTokenPairs=[];const poolsToGetAddresses=[];const poolAddressToPool={};const blockNumber=await(providerConfig===null||providerConfig===void 0?void 0:providerConfig.blockNumber);for(const[tokenA,tokenB,feeAmount]of tokenPairs){const{poolAddress,token0,token1}=this.getPoolAddress(tokenA,tokenB,feeAmount);if(poolAddressSet.has(poolAddress)){continue}poolAddressSet.add(poolAddress);const cachedPool=await this.cache.get(this.POOL_KEY(this.chainId,poolAddress,blockNumber));if(cachedPool){metric.putMetric("V3_INMEMORY_CACHING_POOL_HIT_IN_MEMORY",1,MetricLoggerUnit.None);poolAddressToPool[poolAddress]=cachedPool;continue}metric.putMetric("V3_INMEMORY_CACHING_POOL_MISS_NOT_IN_MEMORY",1,MetricLoggerUnit.None);poolsToGetTokenPairs.push([token0,token1,feeAmount]);poolsToGetAddresses.push(poolAddress)}log.info({poolsFound:_.map(Object.values(poolAddressToPool),p=>`${p.token0.symbol} ${p.token1.symbol} ${p.fee}`),poolsToGetTokenPairs:_.map(poolsToGetTokenPairs,t=>`${t[0].symbol} ${t[1].symbol} ${t[2]}`)},`Found ${Object.keys(poolAddressToPool).length} V3 pools already in local cache. About to get liquidity and slot0s for ${poolsToGetTokenPairs.length} pools.`);if(poolsToGetAddresses.length>0){const poolAccessor=await this.poolProvider.getPools(poolsToGetTokenPairs,providerConfig);for(const address of poolsToGetAddresses){const pool=poolAccessor.getPoolByAddress(address);if(pool){poolAddressToPool[address]=pool;this.cache.set(this.POOL_KEY(this.chainId,address,blockNumber),pool)}}}return{getPool:(tokenA,tokenB,feeAmount)=>{const{poolAddress}=this.getPoolAddress(tokenA,tokenB,feeAmount);return poolAddressToPool[poolAddress]},getPoolByAddress:address=>poolAddressToPool[address],getAllPools:()=>Object.values(poolAddressToPool)}}getPoolAddress(tokenA,tokenB,feeAmount){return this.poolProvider.getPoolAddress(tokenA,tokenB,feeAmount)}}class CachingV3SubgraphProvider{constructor(chainId,subgraphProvider,cache){this.chainId=chainId;this.subgraphProvider=subgraphProvider;this.cache=cache;this.SUBGRAPH_KEY=chainId=>`subgraph-pools-${chainId}`}async getPools(){const cachedPools=await this.cache.get(this.SUBGRAPH_KEY(this.chainId));if(cachedPools){return cachedPools}const pools=await this.subgraphProvider.getPools();await this.cache.set(this.SUBGRAPH_KEY(this.chainId),pools);return pools}}const BASES_TO_CHECK_TRADES_AGAINST={[ChainId$1.MAINNET]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.MAINNET],DAI_MAINNET,USDC_MAINNET,USDT_MAINNET,WBTC_MAINNET],[ChainId$1.GOERLI]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.GOERLI],USDT_GOERLI,USDC_GOERLI,WBTC_GOERLI,DAI_GOERLI],[ChainId$1.SEPOLIA]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.SEPOLIA],USDC_SEPOLIA],[ChainId$1.OPTIMISM]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.OPTIMISM],USDC_OPTIMISM,DAI_OPTIMISM,USDT_OPTIMISM,WBTC_OPTIMISM,OP_OPTIMISM],[ChainId$1.OPTIMISM_SEPOLIA]:[],[ChainId$1.ARBITRUM_ONE]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ARBITRUM_ONE],WBTC_ARBITRUM,DAI_ARBITRUM,USDC_ARBITRUM,USDT_ARBITRUM,ARB_ARBITRUM],[ChainId$1.ARBITRUM_GOERLI]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ARBITRUM_GOERLI],USDC_ARBITRUM_GOERLI],[ChainId$1.ARBITRUM_SEPOLIA]:[],[ChainId$1.OPTIMISM_GOERLI]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.OPTIMISM_GOERLI],USDC_OPTIMISM_GOERLI,DAI_OPTIMISM_GOERLI,USDT_OPTIMISM_GOERLI,WBTC_OPTIMISM_GOERLI],[ChainId$1.POLYGON]:[USDC_POLYGON,WETH_POLYGON,WMATIC_POLYGON],[ChainId$1.POLYGON_MUMBAI]:[DAI_POLYGON_MUMBAI,WRAPPED_NATIVE_CURRENCY[ChainId$1.POLYGON_MUMBAI],WMATIC_POLYGON_MUMBAI],[ChainId$1.CELO]:[CELO,CUSD_CELO,CEUR_CELO,DAI_CELO],[ChainId$1.CELO_ALFAJORES]:[CELO_ALFAJORES,CUSD_CELO_ALFAJORES,CEUR_CELO_ALFAJORES,DAI_CELO_ALFAJORES],[ChainId$1.GNOSIS]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.GNOSIS],WBTC_GNOSIS,WXDAI_GNOSIS,USDC_ETHEREUM_GNOSIS],[ChainId$1.BNB]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BNB],BUSD_BNB,DAI_BNB,USDC_BNB,USDT_BNB,BTC_BNB,ETH_BNB],[ChainId$1.AVALANCHE]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.AVALANCHE],USDC_AVAX,DAI_AVAX],[ChainId$1.MOONBEAM]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.MOONBEAM],DAI_MOONBEAM,USDC_MOONBEAM,WBTC_MOONBEAM],[ChainId$1.BASE_GOERLI]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BASE_GOERLI]],[ChainId$1.BASE]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BASE],USDC_BASE],[ChainId$1.ZORA]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ZORA]],[ChainId$1.ZORA_SEPOLIA]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ZORA_SEPOLIA]],[ChainId$1.ROOTSTOCK]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.ROOTSTOCK]],[ChainId$1.BLAST]:[WRAPPED_NATIVE_CURRENCY[ChainId$1.BLAST],USDB_BLAST]};class StaticV3SubgraphProvider{constructor(chainId,poolProvider){this.chainId=chainId;this.poolProvider=poolProvider}async getPools(tokenIn,tokenOut,providerConfig){log.info("In static subgraph provider for V3");const bases=BASES_TO_CHECK_TRADES_AGAINST[this.chainId];const basePairs=_.flatMap(bases,base=>bases.map(otherBase=>[base,otherBase]));if(tokenIn&&tokenOut){basePairs.push([tokenIn,tokenOut],...bases.map(base=>[tokenIn,base]),...bases.map(base=>[tokenOut,base]))}const pairs=_(basePairs).filter(tokens=>Boolean(tokens[0]&&tokens[1])).filter(([tokenA,tokenB])=>tokenA.address!==tokenB.address&&!tokenA.equals(tokenB)).flatMap(([tokenA,tokenB])=>{return[[tokenA,tokenB,FeeAmount.LOWEST],[tokenA,tokenB,FeeAmount.LOW],[tokenA,tokenB,FeeAmount.MEDIUM],[tokenA,tokenB,FeeAmount.HIGH]]}).value();log.info(`V3 Static subgraph provider about to get ${pairs.length} pools on-chain`);const poolAccessor=await this.poolProvider.getPools(pairs,providerConfig);const pools=poolAccessor.getAllPools();const poolAddressSet=new Set;const subgraphPools=_(pools).map(pool=>{const{token0,token1,fee,liquidity}=pool;const poolAddress=Pool.getAddress(pool.token0,pool.token1,pool.fee);if(poolAddressSet.has(poolAddress)){return undefined}poolAddressSet.add(poolAddress);const liquidityNumber=JSBI.toNumber(liquidity);return{id:poolAddress,feeTier:unparseFeeAmount(fee),liquidity:liquidity.toString(),token0:{id:token0.address},token1:{id:token1.address},tvlETH:liquidityNumber,tvlUSD:liquidityNumber}}).compact().value();return subgraphPools}}({[ChainId$1.MAINNET]:"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3",[ChainId$1.OPTIMISM]:"https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis",[ChainId$1.OPTIMISM_SEPOLIA]:"",[ChainId$1.ARBITRUM_ONE]:"https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal",[ChainId$1.ARBITRUM_SEPOLIA]:"",[ChainId$1.POLYGON]:"https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon",[ChainId$1.CELO]:"https://api.thegraph.com/subgraphs/name/jesse-sawa/uniswap-celo",[ChainId$1.GOERLI]:"https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-gorli",[ChainId$1.BNB]:"https://api.thegraph.com/subgraphs/name/ilyamk/uniswap-v3---bnb-chain",[ChainId$1.AVALANCHE]:"https://api.thegraph.com/subgraphs/name/lynnshaoyu/uniswap-v3-avax",[ChainId$1.BASE]:"https://api.studio.thegraph.com/query/48211/uniswap-v3-base/version/latest",[ChainId$1.BLAST]:"https://gateway-arbitrum.network.thegraph.com/api/0ae45f0bf40ae2e73119b44ccd755967/subgraphs/id/2LHovKznvo8YmKC9ZprPjsYAZDCc4K5q4AYz8s3cnQn1"});class V3SubgraphProviderWithFallBacks{constructor(fallbacks){this.fallbacks=fallbacks}async getPools(tokenIn,tokenOut,providerConfig){for(let i=0;i<this.fallbacks.length;i++){const provider=this.fallbacks[i];try{const pools=await provider.getPools(tokenIn,tokenOut,providerConfig);return pools}catch(err){log.info(`Failed to get subgraph pools for V3 from fallback #${i}`)}}throw new Error("Failed to get subgraph pools from any providers")}}var __values=undefined&&undefined.__values||function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};function transformSwapRouteToGetQuoteResult(type,amount,_a){var e_1,_b;var quote=_a.quote,quoteGasAdjusted=_a.quoteGasAdjusted,route=_a.route,estimatedGasUsed=_a.estimatedGasUsed,estimatedGasUsedQuoteToken=_a.estimatedGasUsedQuoteToken,estimatedGasUsedUSD=_a.estimatedGasUsedUSD,gasPriceWei=_a.gasPriceWei,methodParameters=_a.methodParameters,blockNumber=_a.blockNumber;var routeResponse=[];try{for(var route_1=__values(route),route_1_1=route_1.next();!route_1_1.done;route_1_1=route_1.next()){var subRoute=route_1_1.value;var amount_1=subRoute.amount,quote_1=subRoute.quote,tokenPath=subRoute.tokenPath;if(subRoute.protocol===Protocol.V3){var pools=subRoute.route.pools;var curRoute=[];for(var i=0;i<pools.length;i++){var nextPool=pools[i];var tokenIn=tokenPath[i];var tokenOut=tokenPath[i+1];var edgeAmountIn=undefined;if(i===0){edgeAmountIn=type==="exactIn"?amount_1.quotient.toString():quote_1.quotient.toString()}var edgeAmountOut=undefined;if(i===pools.length-1){edgeAmountOut=type==="exactIn"?quote_1.quotient.toString():amount_1.quotient.toString()}curRoute.push({type:"v3-pool",tokenIn:{chainId:tokenIn.chainId,decimals:tokenIn.decimals,address:tokenIn.address,symbol:tokenIn.symbol},tokenOut:{chainId:tokenOut.chainId,decimals:tokenOut.decimals,address:tokenOut.address,symbol:tokenOut.symbol},fee:nextPool.fee.toString(),liquidity:nextPool.liquidity.toString(),sqrtRatioX96:nextPool.sqrtRatioX96.toString(),tickCurrent:nextPool.tickCurrent.toString(),amountIn:edgeAmountIn,amountOut:edgeAmountOut})}routeResponse.push(curRoute)}else if(subRoute.protocol===Protocol.V2){var pools=subRoute.route.pairs;var curRoute=[];for(var i=0;i<pools.length;i++){var nextPool=pools[i];var tokenIn=tokenPath[i];var tokenOut=tokenPath[i+1];var edgeAmountIn=undefined;if(i===0){edgeAmountIn=type==="exactIn"?amount_1.quotient.toString():quote_1.quotient.toString()}var edgeAmountOut=undefined;if(i===pools.length-1){edgeAmountOut=type==="exactIn"?quote_1.quotient.toString():amount_1.quotient.toString()}var reserve0=nextPool.reserve0;var reserve1=nextPool.reserve1;curRoute.push({type:"v2-pool",tokenIn:{chainId:tokenIn.chainId,decimals:tokenIn.decimals,address:tokenIn.address,symbol:tokenIn.symbol},tokenOut:{chainId:tokenOut.chainId,decimals:tokenOut.decimals,address:tokenOut.address,symbol:tokenOut.symbol},reserve0:{token:{chainId:reserve0.currency.wrapped.chainId,decimals:reserve0.currency.wrapped.decimals,address:reserve0.currency.wrapped.address,symbol:reserve0.currency.wrapped.symbol},quotient:reserve0.quotient.toString()},reserve1:{token:{chainId:reserve1.currency.wrapped.chainId,decimals:reserve1.currency.wrapped.decimals,address:reserve1.currency.wrapped.address,symbol:reserve1.currency.wrapped.symbol},quotient:reserve1.quotient.toString()},amountIn:edgeAmountIn,amountOut:edgeAmountOut})}routeResponse.push(curRoute)}}}catch(e_1_1){e_1={error:e_1_1}}finally{try{if(route_1_1&&!route_1_1.done&&(_b=route_1.return))_b.call(route_1)}finally{if(e_1)throw e_1.error}}var result={methodParameters:methodParameters,blockNumber:blockNumber.toString(),amount:amount.quotient.toString(),amountDecimals:amount.toExact(),quote:quote.quotient.toString(),quoteDecimals:quote.toExact(),quoteGasAdjusted:quoteGasAdjusted.quotient.toString(),quoteGasAdjustedDecimals:quoteGasAdjusted.toExact(),gasUseEstimateQuote:estimatedGasUsedQuoteToken.quotient.toString(),gasUseEstimateQuoteDecimals:estimatedGasUsedQuoteToken.toExact(),gasUseEstimate:estimatedGasUsed.toString(),gasUseEstimateUSD:estimatedGasUsedUSD.toExact(),gasPriceWei:gasPriceWei.toString(),route:routeResponse,routeString:routeAmountsToString(route)};return result}var __awaiter=undefined&&undefined.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __generator=undefined&&undefined.__generator||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};var AUTO_ROUTER_SUPPORTED_CHAINS=Object.values(ChainId$1).filter(function(chainId){return Number.isInteger(chainId)});function getQuote(_a,routerParams_1,routerConfig_1){return __awaiter(this,arguments,void 0,function(_b,routerParams,routerConfig){var router,currencyIn,currencyOut,baseCurrency,quoteCurrency,amount,swapRoute;var type=_b.type;_b.chainId;var tokenIn=_b.tokenIn,tokenOut=_b.tokenOut,amountRaw=_b.amount;return __generator(this,function(_c){switch(_c.label){case 0:router=new AlphaRouter(routerParams);currencyIn=new Token$1(tokenIn.chainId,tokenIn.address,tokenIn.decimals,tokenIn.symbol);currencyOut=new Token$1(tokenOut.chainId,tokenOut.address,tokenOut.decimals,tokenOut.symbol);baseCurrency=type==="exactIn"?currencyIn:currencyOut;quoteCurrency=type==="exactIn"?currencyOut:currencyIn;amount=CurrencyAmount$2.fromRawAmount(baseCurrency,JSBI.BigInt(amountRaw));return[4,router.route(amount,quoteCurrency,type==="exactIn"?TradeType$2.EXACT_INPUT:TradeType$2.EXACT_OUTPUT,undefined,routerConfig)];case 1:swapRoute=_c.sent();if(!swapRoute)throw new Error("Failed to generate client side quote");return[2,{data:transformSwapRouteToGetQuoteResult(type,amount,swapRoute)}]}})})}function getClientSideQuote(_a,routerParams_1,routerConfig_1){return __awaiter(this,arguments,void 0,function(_b,routerParams,routerConfig){var tokenInAddress=_b.tokenInAddress,tokenInChainId=_b.tokenInChainId,tokenInDecimals=_b.tokenInDecimals,tokenInSymbol=_b.tokenInSymbol,tokenOutAddress=_b.tokenOutAddress,tokenOutChainId=_b.tokenOutChainId,tokenOutDecimals=_b.tokenOutDecimals,tokenOutSymbol=_b.tokenOutSymbol,amount=_b.amount,type=_b.type;return __generator(this,function(_c){return[2,getQuote({type:type,chainId:tokenInChainId,tokenIn:{address:tokenInAddress,chainId:tokenInChainId,decimals:tokenInDecimals,symbol:tokenInSymbol},tokenOut:{address:tokenOutAddress,chainId:tokenOutChainId,decimals:tokenOutDecimals,symbol:tokenOutSymbol},amount:amount},routerParams,routerConfig)]})})}var clientSideSmartOrderRouter=Object.freeze({__proto__:null,AUTO_ROUTER_SUPPORTED_CHAINS:AUTO_ROUTER_SUPPORTED_CHAINS,getClientSideQuote:getClientSideQuote});export{AaveHelper,AaveV2,AaveV3,BatchMultiSigCall,ChainLink,ChainLinkHelper,CompoundV2,CompoundV3,ComputedVariable,Curve,ERC1155,ERC20,ERC721,ERRORS,Erc20Airdrop,Erc20Approvals,Erc20MonoTransfers,Erc20Transfers,EthTransfers,FCT_UNISWAP,FctAddress,FctAddressList,FctBoolean,FctBps,FctBytes,FctBytes32,FctBytes32List,FctBytes4,FctBytesList,FctCustom,FctCustomArray,FctDecimals,FctInt256,FctInteger128,FctInteger24,FctInteger32,FctInteger64,FctParam,FctPercent,FctString,FctTimestamp,FctTupleArray,FctUInt80,FctUinteger32,FctUinteger32Bps,FctUinteger64,FctValue,FctValue128,FctValue128_27,FctValue16,FctValue160,FctValue18,FctValue24,FctValue27,FctValue40,FctValue8,FctValueList,FctValueListN,GMX,Inch,OneInchHelper as InchHelper,KIROBO_MULTICALL_CSV,Lido,Magic,MultiAdd,MultiBalance,MultiDivider,MultiMultiplier,MultiSubtract,Multicall,Paraswap,ParaswapHelper,PluginsModule,RadiantV2,RocketPool,SIMPLE_ADD_LIQUIDITY_METHOD,SWAP_WITHOUT_SLIPPAGE_METHOD,SecureStorage,SingersValidator,Sushiswap$1 as Sushiswap,Sushiswap as SushiswapHelper,TokenValidator,Tokens,TokensMath,Uniswap$1 as Uniswap,Uniswap as UniswapHelper,UniswapV3,UniswapV3$1 as UniswapV3Helper,Utility,Utils,ValidationVariable,Yearn,cBridge,index$2 as constants,createApprovalsPlugin,createMulticallPlugin,ethers,getMethodInterface$1 as getMethodInterface,getMulticallPlugin,getOutputValues,getOutputVariable$1 as getOutputVariable,getOutputVariableOnChain,getPlugin$1 as getPlugin,getPluginInstanceFrom,getPlugins,getPluginsFromABI,getSwapPath,getTokenDecimals,isConnectable,isVariable,maxValue,paramsSchemas,Utils$1 as pluginUtils,tokenTypes,useChainId,index as utils,index$1 as variables};