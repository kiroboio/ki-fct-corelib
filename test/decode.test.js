const util = require("util");
const { ethers } = require("ethers");
const { artifacts, web3 } = require("hardhat");
const FCT_ActuatorABI = require("../src/abi/FCT_Actuator.abi.json");
const FCT_BatchMultiSigCall = require("../src/abi/factoryProxy_.abi.json");

describe("Decode test", () => {
  it("Should decode", async () => {
    const ActuatorInterface = new ethers.utils.Interface(FCT_ActuatorABI);
    const BatchMultiSigCallInterface = new ethers.utils.Interface(FCT_BatchMultiSigCall);

    const data =
      "0x84f3f17f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000464a7973c1f0101010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000004400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002094a773a3d540ebcda3b2e604583a5ce324e667de404b4bcf811db7479444ff0f092d2e0001010100000000000000632b193a006321deba000000174876e8000cc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002027fd2787f8367e3c9f841dfe2e3b5dbde2bc66f6becf325ff777e0f54f405c23c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47000000000000000000000000000000000000000000000000000d529ae9e860000000000000000000000000000000000000000000000000000010001000000000000000000000000000000000027422b75008cb79cf0d094f81de854608eea36b70000000000000000000000004f631612941f710db646b8290db097bfb8657dc20000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c94804227ae3b0502921585d305c4a6cea27a2bb496fdae896bd2ed69f65306b7a80015af4404c7fefb7beaacd2c4baff0486f411c5e9fdd89c8ad572e3e921f000000000000000000000000000000000000000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    const decoded = ActuatorInterface.decodeFunctionData("activate", data);

    // const FCTData = decoded.data

    const FCTData =
      "0xa7973c1f0101010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000004400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002094a773a3d540ebcda3b2e604583a5ce324e667de404b4bcf811db7479444ff0f092d2e0001010100000000000000632b193a006321deba000000174876e8000cc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002027fd2787f8367e3c9f841dfe2e3b5dbde2bc66f6becf325ff777e0f54f405c23c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47000000000000000000000000000000000000000000000000000d529ae9e860000000000000000000000000000000000000000000000000000010001000000000000000000000000000000000027422b75008cb79cf0d094f81de854608eea36b70000000000000000000000004f631612941f710db646b8290db097bfb8657dc20000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c94804227ae3b0502921585d305c4a6cea27a2bb496fdae896bd2ed69f65306b7a80015af4404c7fefb7beaacd2c4baff0486f411c5e9fdd89c8ad572e3e921f000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    const decodedFCT = BatchMultiSigCallInterface.decodeFunctionData("batchMultiSigCall", FCTData);

    console.log(decoded);
    console.log(util.inspect(decodedFCT, false, null, true));
  });
});
